#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2021
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2021-12-07 03:22:43 PM
   **        *   FROM COBOL PGM   :  SWEXLE90
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                              COOL:GEN
               COPYRIGHT 2000, STERLING SOFTWARE, INC.
       NAME: LE_EAB_PROCESS_FDSO_RECON_FILE   DATE: 2000/10/03
       TARGET OS:   MVS                       TIME: 16:28:07
       TARGET DBMS: DB2                       USER: SWSCBRS
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
       HIGH PERFORMANCE VIEW PASSING SELECTED
       LAST-STATEMENT-NUM EXECUTION SELECTED
       ENFORCE DEFAULT VALUES WITH DBMS NOT SELECTED
       INIT UNSPECIFIED OPTIONAL FIELDS TO NULL NOT SELECTED
   **************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.IO.Common;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
using MDSY.Framework.IO.Common;
#endregion

namespace GOV.KS.DCF.CSS.Common.BL
{
    #region File Section Class
    internal class SWEXLE90_fd : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string FileSection = "SWEXLE90_fd_FileSection";
            internal const string EXTFILE1 = "EXTFILE1";
            internal const string EXTFILE1_RECORD = "EXTFILE1_RECORD";
            internal const string EXTFILE2 = "EXTFILE2";
            internal const string EXTFILE2_RECORD = "EXTFILE2_RECORD";
        }
        #endregion

        #region Direct-access element properties
        public IFileLink EXTFILE1 { get; set; }
        public IField EXTFILE1_RECORD { get { return GetElementByName<IField>(Names.EXTFILE1_RECORD); } }
        public IFileLink EXTFILE2 { get; set; }
        public IField EXTFILE2_RECORD { get { return GetElementByName<IField>(Names.EXTFILE2_RECORD); } }


        internal SWEXLE90_ws WS;
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the FileSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.EXTFILE1_RECORD, FieldType.String, 245);
            recordDef.CreateNewField(Names.EXTFILE2_RECORD, FieldType.String, 245);

        }

        protected override string GetRecordName()
        {
            return Names.FileSection;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            IFileHandler FileHandler = InversionContainer.GetImplementingObject<IFileHandler>();

            EXTFILE1 = FileHandler.GetFile("EXTFILE1");
            EXTFILE1.StatusField = WS.EXTFILE1_STAT;
            EXTFILE1.AssociatedBuffer = EXTFILE1_RECORD;

            EXTFILE2 = FileHandler.GetFile("EXTFILE2");
            EXTFILE2.StatusField = WS.EXTFILE2_STAT;
            EXTFILE2.AssociatedBuffer = EXTFILE2_RECORD;
        }
        #endregion

        #region Constructors
        public SWEXLE90_fd(SWEXLE90_ws ws)
            : base()
        {
            this.WS = ws;
            Initialize();

        }
        #endregion
    }
    #endregion File Section Class
    #region Working Storage Class
    internal class SWEXLE90_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXLE90_ws_WorkingStorage";
            internal const string EXTFILE1_STAT = "EXTFILE1_STAT";
            internal const string EXTFILE2_STAT = "EXTFILE2_STAT";
            internal const string WS_MISC = "WS_MISC";
            internal const string WS_ENTRY = "WS_ENTRY";
            internal const string WS_RECORD_COUNT = "WS_RECORD_COUNT";
            internal const string WS_FDSO_SNAPSHOT_DETAIL = "WS_FDSO_SNAPSHOT_DETAIL";
            internal const string SPACES_1 = "SPACES_1";
            internal const string SUBMITTING_STATE_2 = "SUBMITTING_STATE_2";
            internal const string LOCAL_CODE_2 = "LOCAL_CODE_2";
            internal const string SSN_2 = "SSN_2";
            internal const string CASE_NUMBER_2 = "CASE_NUMBER_2";
            internal const string LAST_NAME_2 = "LAST_NAME_2";
            internal const string FIRST_NAME_2 = "FIRST_NAME_2";
            internal const string CURRENT_ARREARAGE_AMT_2 = "CURRENT_ARREARAGE_AMT_2";
            internal const string CASE_TYPE_2 = "CASE_TYPE_2";
            internal const string SPACES_2 = "SPACES_2";
            internal const string ADMINISTRATIVE_OFFSET_2 = "ADMINISTRATIVE_OFFSET_2";
            internal const string FED_RETIREMENT_OFFSET_2 = "FED_RETIREMENT_OFFSET_2";
            internal const string VENDOR_PAYMENTS_OFFSET_2 = "VENDOR_PAYMENTS_OFFSET_2";
            internal const string FEDERAL_SALARY_OFFSET_2 = "FEDERAL_SALARY_OFFSET_2";
            internal const string TAX_REFUND_OFFSET_2 = "TAX_REFUND_OFFSET_2";
            internal const string PASSPORT_DENIAL_OFFSET_2 = "PASSPORT_DENIAL_OFFSET_2";
            internal const string FIDM_OFFSET_2 = "FIDM_OFFSET_2";
            internal const string TRANSACTION_TYPE_2 = "TRANSACTION_TYPE_2";
            internal const string SPACES_3 = "SPACES_3";
            internal const string WS_FDSO_RECON_DETAIL = "WS_FDSO_RECON_DETAIL";
            internal const string RECORD_IDENTIFIER = "RECORD_IDENTIFIER";
            internal const string SUBMITTING_STATE = "SUBMITTING_STATE";
            internal const string LOCAL_CODE = "LOCAL_CODE";
            internal const string SSN = "SSN";
            internal const string CASE_NUMBER = "CASE_NUMBER";
            internal const string LAST_NAME = "LAST_NAME";
            internal const string FIRST_NAME = "FIRST_NAME";
            internal const string CURRENT_ARREARAGE_AMT = "CURRENT_ARREARAGE_AMT";
            internal const string CASE_TYPE = "CASE_TYPE";
            internal const string PREOFFSET_NOTICE_DATE = "PREOFFSET_NOTICE_DATE";
            internal const string PREOFFSET_HOLD_IND = "PREOFFSET_HOLD_IND";
            internal const string SPACES_4 = "SPACES_4";
            internal const string ADMINISTRATIVE_OFFSET = "ADMINISTRATIVE_OFFSET";
            internal const string FED_RETIREMENT_OFFSET = "FED_RETIREMENT_OFFSET";
            internal const string VENDOR_PAYMENTS_OFFSET = "VENDOR_PAYMENTS_OFFSET";
            internal const string FEDERAL_SALARY_OFFSET = "FEDERAL_SALARY_OFFSET";
            internal const string TAX_REFUND_OFFSET = "TAX_REFUND_OFFSET";
            internal const string PASSPORT_DENIAL_OFFSET = "PASSPORT_DENIAL_OFFSET";
            internal const string FIDM_OFFSET = "FIDM_OFFSET";
            internal const string SPACES_5 = "SPACES_5";
        }
        #endregion

        #region Direct-access element properties
        public IField EXTFILE1_STAT { get { return GetExternalElementByName<IField>(Names.EXTFILE1_STAT); } }
        public IField EXTFILE2_STAT { get { return GetExternalElementByName<IField>(Names.EXTFILE2_STAT); } }
        public IGroup WS_MISC { get { return GetElementByName<IGroup>(Names.WS_MISC); } }
        public IField WS_ENTRY { get { return GetElementByName<IField>(Names.WS_ENTRY); } }
        public IField WS_RECORD_COUNT { get { return GetElementByName<IField>(Names.WS_RECORD_COUNT); } }
        public IGroup WS_FDSO_SNAPSHOT_DETAIL { get { return GetElementByName<IGroup>(Names.WS_FDSO_SNAPSHOT_DETAIL); } }
        public IField SPACES_1 { get { return GetElementByName<IField>(Names.SPACES_1); } }
        public IField SUBMITTING_STATE_2 { get { return GetElementByName<IField>(Names.SUBMITTING_STATE_2); } }
        public IField LOCAL_CODE_2 { get { return GetElementByName<IField>(Names.LOCAL_CODE_2); } }
        public IField SSN_2 { get { return GetElementByName<IField>(Names.SSN_2); } }
        public IField CASE_NUMBER_2 { get { return GetElementByName<IField>(Names.CASE_NUMBER_2); } }
        public IField LAST_NAME_2 { get { return GetElementByName<IField>(Names.LAST_NAME_2); } }
        public IField FIRST_NAME_2 { get { return GetElementByName<IField>(Names.FIRST_NAME_2); } }
        public IField CURRENT_ARREARAGE_AMT_2 { get { return GetElementByName<IField>(Names.CURRENT_ARREARAGE_AMT_2); } }
        public IField CASE_TYPE_2 { get { return GetElementByName<IField>(Names.CASE_TYPE_2); } }
        public IField SPACES_2 { get { return GetElementByName<IField>(Names.SPACES_2); } }
        public IField ADMINISTRATIVE_OFFSET_2 { get { return GetElementByName<IField>(Names.ADMINISTRATIVE_OFFSET_2); } }
        public IField FED_RETIREMENT_OFFSET_2 { get { return GetElementByName<IField>(Names.FED_RETIREMENT_OFFSET_2); } }
        public IField VENDOR_PAYMENTS_OFFSET_2 { get { return GetElementByName<IField>(Names.VENDOR_PAYMENTS_OFFSET_2); } }
        public IField FEDERAL_SALARY_OFFSET_2 { get { return GetElementByName<IField>(Names.FEDERAL_SALARY_OFFSET_2); } }
        public IField TAX_REFUND_OFFSET_2 { get { return GetElementByName<IField>(Names.TAX_REFUND_OFFSET_2); } }
        public IField PASSPORT_DENIAL_OFFSET_2 { get { return GetElementByName<IField>(Names.PASSPORT_DENIAL_OFFSET_2); } }
        public IField FIDM_OFFSET_2 { get { return GetElementByName<IField>(Names.FIDM_OFFSET_2); } }
        public IField TRANSACTION_TYPE_2 { get { return GetElementByName<IField>(Names.TRANSACTION_TYPE_2); } }
        public IField SPACES_3 { get { return GetElementByName<IField>(Names.SPACES_3); } }
        public IGroup WS_FDSO_RECON_DETAIL { get { return GetElementByName<IGroup>(Names.WS_FDSO_RECON_DETAIL); } }
        public IField RECORD_IDENTIFIER { get { return GetElementByName<IField>(Names.RECORD_IDENTIFIER); } }
        public IField SUBMITTING_STATE { get { return GetElementByName<IField>(Names.SUBMITTING_STATE); } }
        public IField LOCAL_CODE { get { return GetElementByName<IField>(Names.LOCAL_CODE); } }
        public IField SSN { get { return GetElementByName<IField>(Names.SSN); } }
        public IField CASE_NUMBER { get { return GetElementByName<IField>(Names.CASE_NUMBER); } }
        public IField LAST_NAME { get { return GetElementByName<IField>(Names.LAST_NAME); } }
        public IField FIRST_NAME { get { return GetElementByName<IField>(Names.FIRST_NAME); } }
        public IField CURRENT_ARREARAGE_AMT { get { return GetElementByName<IField>(Names.CURRENT_ARREARAGE_AMT); } }
        public IField CASE_TYPE { get { return GetElementByName<IField>(Names.CASE_TYPE); } }
        public IField PREOFFSET_NOTICE_DATE { get { return GetElementByName<IField>(Names.PREOFFSET_NOTICE_DATE); } }
        public IField PREOFFSET_HOLD_IND { get { return GetElementByName<IField>(Names.PREOFFSET_HOLD_IND); } }
        public IField SPACES_4 { get { return GetElementByName<IField>(Names.SPACES_4); } }
        public IField ADMINISTRATIVE_OFFSET { get { return GetElementByName<IField>(Names.ADMINISTRATIVE_OFFSET); } }
        public IField FED_RETIREMENT_OFFSET { get { return GetElementByName<IField>(Names.FED_RETIREMENT_OFFSET); } }
        public IField VENDOR_PAYMENTS_OFFSET { get { return GetElementByName<IField>(Names.VENDOR_PAYMENTS_OFFSET); } }
        public IField FEDERAL_SALARY_OFFSET { get { return GetElementByName<IField>(Names.FEDERAL_SALARY_OFFSET); } }
        public IField TAX_REFUND_OFFSET { get { return GetElementByName<IField>(Names.TAX_REFUND_OFFSET); } }
        public IField PASSPORT_DENIAL_OFFSET { get { return GetElementByName<IField>(Names.PASSPORT_DENIAL_OFFSET); } }
        public IField FIDM_OFFSET { get { return GetElementByName<IField>(Names.FIDM_OFFSET); } }
        public IField SPACES_5 { get { return GetElementByName<IField>(Names.SPACES_5); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            WsExternals.Instance.CreateNewField(Names.EXTFILE1_STAT, FieldType.UnsignedNumeric, 2);
            WsExternals.Instance.CreateNewField(Names.EXTFILE2_STAT, FieldType.UnsignedNumeric, 2);

            recordDef.CreateNewGroup(Names.WS_MISC, (WS_MISC) =>
           {
               WS_MISC.CreateNewField(Names.WS_ENTRY, FieldType.String, 40, "SWEXLE90 WORKING STORAGE STARTS HERE");
               WS_MISC.CreateNewField(Names.WS_RECORD_COUNT, FieldType.UnsignedNumeric, 7, ZEROES);
           });

            recordDef.CreateNewGroup(Names.WS_FDSO_SNAPSHOT_DETAIL, (WS_FDSO_SNAPSHOT_DETAIL) =>
           {
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.SPACES_1, FieldType.String, 3);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.SUBMITTING_STATE_2, FieldType.String, 2);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.LOCAL_CODE_2, FieldType.String, 3);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.SSN_2, FieldType.UnsignedNumeric, 9);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.CASE_NUMBER_2, FieldType.String, 15);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.LAST_NAME_2, FieldType.String, 20);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.FIRST_NAME_2, FieldType.String, 15);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.CURRENT_ARREARAGE_AMT_2, FieldType.UnsignedNumeric, 8);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.CASE_TYPE_2, FieldType.String, 1);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.SPACES_2, FieldType.String, 10);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.ADMINISTRATIVE_OFFSET_2, FieldType.String, 3);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.FED_RETIREMENT_OFFSET_2, FieldType.String, 3);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.VENDOR_PAYMENTS_OFFSET_2, FieldType.String, 3);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.FEDERAL_SALARY_OFFSET_2, FieldType.String, 3);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.TAX_REFUND_OFFSET_2, FieldType.String, 3);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.PASSPORT_DENIAL_OFFSET_2, FieldType.String, 3);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.FIDM_OFFSET_2, FieldType.String, 3);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.TRANSACTION_TYPE_2, FieldType.String, 1);
               WS_FDSO_SNAPSHOT_DETAIL.CreateNewField(Names.SPACES_3, FieldType.String, 137);
           });

            recordDef.CreateNewGroup(Names.WS_FDSO_RECON_DETAIL, (WS_FDSO_RECON_DETAIL) =>
           {
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.RECORD_IDENTIFIER, FieldType.String, 3);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.SUBMITTING_STATE, FieldType.String, 2);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.LOCAL_CODE, FieldType.String, 3);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.SSN, FieldType.UnsignedNumeric, 9);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.CASE_NUMBER, FieldType.String, 15);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.LAST_NAME, FieldType.String, 20);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.FIRST_NAME, FieldType.String, 10);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.CURRENT_ARREARAGE_AMT, FieldType.SignedNumeric, 8);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.CASE_TYPE, FieldType.String, 1);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.PREOFFSET_NOTICE_DATE, FieldType.String, 8);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.PREOFFSET_HOLD_IND, FieldType.String, 1);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.SPACES_4, FieldType.String, 1);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.ADMINISTRATIVE_OFFSET, FieldType.String, 3);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.FED_RETIREMENT_OFFSET, FieldType.String, 3);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.VENDOR_PAYMENTS_OFFSET, FieldType.String, 3);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.FEDERAL_SALARY_OFFSET, FieldType.String, 3);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.TAX_REFUND_OFFSET, FieldType.String, 3);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.PASSPORT_DENIAL_OFFSET, FieldType.String, 3);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.FIDM_OFFSET, FieldType.String, 3);
               WS_FDSO_RECON_DETAIL.CreateNewField(Names.SPACES_5, FieldType.String, 143);
           });

        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXLE90_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXLE90_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string GLOBDATA = "GLOBDATA";
            internal const string PSMGR_IEF_COMMAND = "PSMGR_IEF_COMMAND";
            internal const string PSMGR_IEF_COMMAND_1 = "PSMGR_IEF_COMMAND_1";
            internal const string PSMGR_IEF_COMMAND_2 = "PSMGR_IEF_COMMAND_2";
            internal const string PSMGR_IEF_TRANCODE = "PSMGR_IEF_TRANCODE";
            internal const string PSMGR_EXIT_STATE = "PSMGR_EXIT_STATE";
            internal const string PSMGR_EXIT_INFOMSG = "PSMGR_EXIT_INFOMSG";
            internal const string PSMGR_USER_ID = "PSMGR_USER_ID";
            internal const string PSMGR_TERMINAL_ID = "PSMGR_TERMINAL_ID";
            internal const string PSMGR_PRINTER_ID = "PSMGR_PRINTER_ID";
            internal const string PSMGR_CURRENT_DATE = "PSMGR_CURRENT_DATE";
            internal const string PSMGR_CURRENT_TIME = "PSMGR_CURRENT_TIME";
            internal const string PSMGR_RUNTIME_TYPE = "PSMGR_RUNTIME_TYPE";
            internal const string PSMGR_FUNCTION_DATA = "PSMGR_FUNCTION_DATA";
            internal const string PSMGR_FUNC_ERRMSG = "PSMGR_FUNC_ERRMSG";
            internal const string PSMGR_FUNC_NAME = "PSMGR_FUNC_NAME";
            internal const string PSMGR_FUNC_IN_DATE = "PSMGR_FUNC_IN_DATE";
            internal const string PSMGR_FUNC_IN_DDURA = "PSMGR_FUNC_IN_DDURA";
            internal const string DDURA_YEAR = "DDURA_YEAR";
            internal const string DDURA_Y_MISS = "DDURA_Y_MISS";
            internal const string DDURA_YYYY = "DDURA_YYYY";
            internal const string DDURA_MONTH = "DDURA_MONTH";
            internal const string DDURA_M_MISS = "DDURA_M_MISS";
            internal const string DDURA_MM = "DDURA_MM";
            internal const string DDURA_DAY = "DDURA_DAY";
            internal const string DDURA_D_MISS = "DDURA_D_MISS";
            internal const string DDURA_DD = "DDURA_DD";
            internal const string PSMGR_FUNC_OUT_DATE = "PSMGR_FUNC_OUT_DATE";
            internal const string PSMGR_FUNC_IN_TIME = "PSMGR_FUNC_IN_TIME";
            internal const string PSMGR_FUNC_IN_TDURA = "PSMGR_FUNC_IN_TDURA";
            internal const string TDURA_HOUR = "TDURA_HOUR";
            internal const string TDURA_H_MISS = "TDURA_H_MISS";
            internal const string TDURA_HH = "TDURA_HH";
            internal const string TDURA_MINUTE = "TDURA_MINUTE";
            internal const string TDURA_M_MISS = "TDURA_M_MISS";
            internal const string TDURA_MM = "TDURA_MM";
            internal const string TDURA_SECOND = "TDURA_SECOND";
            internal const string TDURA_S_MISS = "TDURA_S_MISS";
            internal const string TDURA_SS = "TDURA_SS";
            internal const string PSMGR_FUNC_OUT_TIME = "PSMGR_FUNC_OUT_TIME";
            internal const string PSMGR_IEF_NEXTTRAN = "PSMGR_IEF_NEXTTRAN";
            internal const string PSMGR_EXIT_MSGTYPE = "PSMGR_EXIT_MSGTYPE";
            internal const string PSMGR_IEF_DEBUG_FLAGS = "PSMGR_IEF_DEBUG_FLAGS";
            internal const string PSMGR_IEF_DEBUG = "PSMGR_IEF_DEBUG";
            internal const string PSMGR_DEBUG_ON = "PSMGR_DEBUG_ON";
            internal const string PSMGR_ENVIRONMENT_DATA = "PSMGR_ENVIRONMENT_DATA";
            internal const string PSMGR_PCB_CNT = "PSMGR_PCB_CNT";
            internal const string PSMGR_PCB_ENTRY = "PSMGR_PCB_ENTRY";
            internal const string PSMGR_PCB_ADR = "PSMGR_PCB_ADR";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string PSMGR_ERROR_DATA = "PSMGR_ERROR_DATA";
            internal const string ERROR_ACTION_NAME = "ERROR_ACTION_NAME";
            internal const string ERROR_ENCOUNTERED_SW = "ERROR_ENCOUNTERED_SW";
            internal const string VIEW_OVERFLOW_SW = "VIEW_OVERFLOW_SW";
            internal const string PSMGR_DASG_DATA = "PSMGR_DASG_DATA";
            internal const string ACTION_ID_X = "ACTION_ID_X";
            internal const string ACTION_ID = "ACTION_ID";
            internal const string ATTRIBUTE_ID_X = "ATTRIBUTE_ID_X";
            internal const string ATTRIBUTE_ID = "ATTRIBUTE_ID";
            internal const string STATUS_FLAG = "STATUS_FLAG";
            internal const string FATAL_ERROR_SF = "FATAL_ERROR_SF";
            internal const string DB_ERROR_SF = "DB_ERROR_SF";
            internal const string ABORT_SHOW_DBMS_MSG_SF = "ABORT_SHOW_DBMS_MSG_SF";
            internal const string ABORT_SHOW_USER_MSG_SF = "ABORT_SHOW_USER_MSG_SF";
            internal const string RETRY_TRAN_REQUESTED_SF = "RETRY_TRAN_REQUESTED_SF";
            internal const string PSTEP_USE_FAILURE = "PSTEP_USE_FAILURE";
            internal const string LAST_STATUS = "LAST_STATUS";
            internal const string DB_ERROR_FL_LS = "DB_ERROR_FL_LS";
            internal const string DB_DEADLOCK_TIMOUT_FL_LS = "DB_DEADLOCK_TIMOUT_FL_LS";
            internal const string DUPLICATE_FOUND_FL_LS = "DUPLICATE_FOUND_FL_LS";
            internal const string INVALID_DATAA_FL_LS = "INVALID_DATAA_FL_LS";
            internal const string INVALID_DATAB_TYPE_FL_LS = "INVALID_DATAB_TYPE_FL_LS";
            internal const string INVALID_DATAB_PERM_FL_LS = "INVALID_DATAB_PERM_FL_LS";
            internal const string FATAL_ERROR_FL_LS = "FATAL_ERROR_FL_LS";
            internal const string NOT_FOUND_FL_LS = "NOT_FOUND_FL_LS";
            internal const string NOT_UNIQUE_FL_LS = "NOT_UNIQUE_FL_LS";
            internal const string IEF_FUNCTION_ERROR_FL_LS = "IEF_FUNCTION_ERROR_FL_LS";
            internal const string IEF_DURATION_ERROR_FL_LS = "IEF_DURATION_ERROR_FL_LS";
            internal const string USED_PSTEP_NOT_FOUND = "USED_PSTEP_NOT_FOUND";
            internal const string USED_PSTEP_ROUTING_ERR = "USED_PSTEP_ROUTING_ERR";
            internal const string USED_PSTEP_SND_FMT_ERR = "USED_PSTEP_SND_FMT_ERR";
            internal const string USED_PSTEP_ENCRYPT_ERR = "USED_PSTEP_ENCRYPT_ERR";
            internal const string USED_PSTEP_SND_BFR_ERR = "USED_PSTEP_SND_BFR_ERR";
            internal const string USED_PSTEP_RCV_BFR_ERR = "USED_PSTEP_RCV_BFR_ERR";
            internal const string USED_PSTEP_RCV_FMT_ERR = "USED_PSTEP_RCV_FMT_ERR";
            internal const string USED_PSTEP_TIRSECR_ERR = "USED_PSTEP_TIRSECR_ERR";
            internal const string USED_PSTEP_TOKEN_ERR = "USED_PSTEP_TOKEN_ERR";
            internal const string USED_PSTEP_SEND_MAX_SIZE = "USED_PSTEP_SEND_MAX_SIZE";
            internal const string USED_PSTEP_SECG_ERR = "USED_PSTEP_SECG_ERR";
            internal const string USED_PSTEP_ALLOC_ERR = "USED_PSTEP_ALLOC_ERR";
            internal const string USED_PSTEP_CONNECT_ERR = "USED_PSTEP_CONNECT_ERR";
            internal const string USED_PSTEP_XERR = "USED_PSTEP_XERR";
            internal const string USED_PSTEP_RCV_UA_ERR = "USED_PSTEP_RCV_UA_ERR";
            internal const string USED_PSTEP_RCV_ES_ERR = "USED_PSTEP_RCV_ES_ERR";
            internal const string USED_PSTEP_XFAL = "USED_PSTEP_XFAL";
            internal const string USED_PSTEP_SETOA_ERR = "USED_PSTEP_SETOA_ERR";
            internal const string USED_PSTEP_RCV_VIEW_ERR = "USED_PSTEP_RCV_VIEW_ERR";
            internal const string USED_PSTEP_DECRYPT_ERR = "USED_PSTEP_DECRYPT_ERR";
            internal const string SAVE_SQLCA = "SAVE_SQLCA";
            internal const string PSMGR_DEBUG_DATA = "PSMGR_DEBUG_DATA";
            internal const string PSMGR_TRACE_ADR = "PSMGR_TRACE_ADR";
            internal const string LAST_STATEMENT_X = "LAST_STATEMENT_X";
            internal const string LAST_STATEMENT_NUM = "LAST_STATEMENT_NUM";
            internal const string CUR_AB_ID = "CUR_AB_ID";
            internal const string CUR_AB_NAME = "CUR_AB_NAME";
            internal const string PSMGR_TIRDATE_SAVEAREA = "PSMGR_TIRDATE_SAVEAREA";
            internal const string PSMGR_TIRDATE_CMCB = "PSMGR_TIRDATE_CMCB";
            internal const string PSMGR_TIRDATE_DATE = "PSMGR_TIRDATE_DATE";
            internal const string PSMGR_TIRDATE_TIME = "PSMGR_TIRDATE_TIME";
            internal const string PSMGR_TIRDATE_INC = "PSMGR_TIRDATE_INC";
            internal const string PSMGR_TIRDATE_RC = "PSMGR_TIRDATE_RC";
            internal const string PSMGR_TIRDATE_OK = "PSMGR_TIRDATE_OK";
            internal const string PSMGR_TIRDATE_WARNING = "PSMGR_TIRDATE_WARNING";
            internal const string PSMGR_TIRDATE_ERROR = "PSMGR_TIRDATE_ERROR";
            internal const string PSMGR_TIRDATE_REQ = "PSMGR_TIRDATE_REQ";
            internal const string PSMGR_TIRDATE_DATEF = "PSMGR_TIRDATE_DATEF";
            internal const string PSMGR_TIRDATE_TIMEF = "PSMGR_TIRDATE_TIMEF";
            internal const string PSMGR_TIRDATE_RETMSG = "PSMGR_TIRDATE_RETMSG";
            internal const string PSMGR_TIRDATE_TSTAMP = "PSMGR_TIRDATE_TSTAMP";
            internal const string PSMGR_TIRDATE_DATE_Z = "PSMGR_TIRDATE_DATE_Z";
            internal const string PSMGR_TIRDATE_TIME_Z = "PSMGR_TIRDATE_TIME_Z";
            internal const string PSMGR_TIRDATE_SKIP_VAL = "PSMGR_TIRDATE_SKIP_VAL";
            internal const string PSMGR_ROLLBACK_RQSTED = "PSMGR_ROLLBACK_RQSTED";
            internal const string ROLLBACK_RQSTED = "ROLLBACK_RQSTED";
            internal const string ABEND_RQSTED = "ABEND_RQSTED";
            internal const string TERMINATE_RQSTED = "TERMINATE_RQSTED";
            internal const string TIRTRCE_SAVE_AREA = "TIRTRCE_SAVE_AREA";
            internal const string TOP_INDX = "TOP_INDX";
            internal const string BOTTOM_INDX = "BOTTOM_INDX";
            internal const string END_INDX = "END_INDX";
            internal const string LAST_STMT = "LAST_STMT";
            internal const string TOP_OF_CALL = "TOP_OF_CALL";
            internal const string TRACE_BREAK_POINT = "TRACE_BREAK_POINT";
            internal const string TRACE_BREAK_POINT_STATUS = "TRACE_BREAK_POINT_STATUS";
            internal const string LAST_AB_NAME = "LAST_AB_NAME";
            internal const string COLOR = "COLOR";
            internal const string COLORT = "COLORT";
            internal const string HILITE = "HILITE";
            internal const string TRACE_ON_OFF = "TRACE_ON_OFF";
            internal const string CASCADE_DELETE_FLAGS = "CASCADE_DELETE_FLAGS";
            internal const string V1PRESENT = "V1PRESENT";
            internal const string V2PRESENT = "V2PRESENT";
            internal const string CASCADE1 = "CASCADE1";
            internal const string CASCADE2 = "CASCADE2";
            internal const string PROCESSQ_FLAG = "PROCESSQ_FLAG";
            internal const string PSMGR_ACTIVE_DIALECT = "PSMGR_ACTIVE_DIALECT";
            internal const string DIALECT_NAME = "DIALECT_NAME";
            internal const string MESSAGE_TABLE_NAME = "MESSAGE_TABLE_NAME";
            internal const string TRANSLATE_TABLE_NAME = "TRANSLATE_TABLE_NAME";
            internal const string PSMGR_FUNCTION_DATA_EXT = "PSMGR_FUNCTION_DATA_EXT";
            internal const string PSMGR_FUNC_IN_TIMESTAMP = "PSMGR_FUNC_IN_TIMESTAMP";
            internal const string PSMGR_FUNC_IN_TSDURA = "PSMGR_FUNC_IN_TSDURA";
            internal const string TSDURA_MICROSECOND = "TSDURA_MICROSECOND";
            internal const string TSDURA_M_MISS = "TSDURA_M_MISS";
            internal const string TSDURA_MS = "TSDURA_MS";
            internal const string PSMGR_FUNC_OUT_TIMESTAMP = "PSMGR_FUNC_OUT_TIMESTAMP";
            internal const string PSMGR_CICS_FAIL_SW = "PSMGR_CICS_FAIL_SW";
            internal const string INHIBIT_CICS_RECEIVE = "INHIBIT_CICS_RECEIVE";
            internal const string CLIENT_USERID = "CLIENT_USERID";
            internal const string CLIENT_PASSWORD = "CLIENT_PASSWORD";
            internal const string LOAD_MODULE_NAME = "LOAD_MODULE_NAME";
            internal const string INSTRUMENT_CODE = "INSTRUMENT_CODE";
            internal const string TX_RETRY_LIMIT = "TX_RETRY_LIMIT";
            internal const string TX_TIMEOUT = "TX_TIMEOUT";
            internal const string PSMGR_EXTRA_ERRINFO = "PSMGR_EXTRA_ERRINFO";
            internal const string ERRINFO_BUF_SIZE = "ERRINFO_BUF_SIZE";
            internal const string ERRINFO_MSG_SIZE = "ERRINFO_MSG_SIZE";
            internal const string ERRINFO_BUF_ADDR = "ERRINFO_BUF_ADDR";
            internal const string TX_RETRY_COUNT = "TX_RETRY_COUNT";
            internal const string TX_USER_RETRY_ALLOWED = "TX_USER_RETRY_ALLOWED";
            internal const string PSMGR_PSTEP_USE_PTRS = "PSMGR_PSTEP_USE_PTRS";
            internal const string PSTEP_FAIL_MSG_PTR = "PSTEP_FAIL_MSG_PTR";
            internal const string PSTEP_GURB_REST_PTR = "PSTEP_GURB_REST_PTR";
            internal const string PSTEP_LIPS_PTR = "PSTEP_LIPS_PTR";
            internal const string PSTEP_TBL_PTR = "PSTEP_TBL_PTR";
            internal const string PSTEP_DDF_PTR = "PSTEP_DDF_PTR";
            internal const string PSTEP_COMM_ID = "PSTEP_COMM_ID";
            internal const string PSTEP_APPL_LIST_PTR = "PSTEP_APPL_LIST_PTR";
            internal const string PSTEP_CURR_PST_PTR = "PSTEP_CURR_PST_PTR";
            internal const string PSMGR_PSTEP_USE_SYSFLDS = "PSMGR_PSTEP_USE_SYSFLDS";
            internal const string PSMGR_EIBERRCD = "PSMGR_EIBERRCD";
            internal const string PSMGR_EIBFN = "PSMGR_EIBFN";
            internal const string PSMGR_EIBRESP = "PSMGR_EIBRESP";
            internal const string PSMGR_EIBRESP2 = "PSMGR_EIBRESP2";
            internal const string IMPORT_0001EV = "IMPORT_0001EV";
            internal const string EXTERNAL_0001ET = "EXTERNAL_0001ET";
            internal const string FILE_INSTRUCTION_0001AS = "FILE_INSTRUCTION_0001AS";
            internal const string FILE_INSTRUCTION_0001 = "FILE_INSTRUCTION_0001";
            internal const string FILE_INSTRUCTION_0001XX = "FILE_INSTRUCTION_0001XX";
            internal const string EXPORT_0002EV = "EXPORT_0002EV";
            internal const string FDSO_RECONCILIATION_FIL_0002ET = "FDSO_RECONCILIATION_FIL_0002ET";
            internal const string RECORD_IDENTIFIER_0002AS = "RECORD_IDENTIFIER_0002AS";
            internal const string RECORD_IDENTIFIER_0002 = "RECORD_IDENTIFIER_0002";
            internal const string RECORD_IDENTIFIER_0002XX = "RECORD_IDENTIFIER_0002XX";
            internal const string SUBMITTING_STATE_0002AS = "SUBMITTING_STATE_0002AS";
            internal const string SUBMITTING_STATE_0002 = "SUBMITTING_STATE_0002";
            internal const string SUBMITTING_STATE_0002XX = "SUBMITTING_STATE_0002XX";
            internal const string LOCAL_CODE_0002AS = "LOCAL_CODE_0002AS";
            internal const string LOCAL_CODE_0002 = "LOCAL_CODE_0002";
            internal const string LOCAL_CODE_0002XX = "LOCAL_CODE_0002XX";
            internal const string SSN_0002AS = "SSN_0002AS";
            internal const string SSN_0002 = "SSN_0002";
            internal const string SSN_0002XX = "SSN_0002XX";
            internal const string CASE_NUMBER_0002AS = "CASE_NUMBER_0002AS";
            internal const string CASE_NUMBER_0002 = "CASE_NUMBER_0002";
            internal const string CASE_NUMBER_0002XX = "CASE_NUMBER_0002XX";
            internal const string LAST_NAME_0002AS = "LAST_NAME_0002AS";
            internal const string LAST_NAME_0002 = "LAST_NAME_0002";
            internal const string LAST_NAME_0002XX = "LAST_NAME_0002XX";
            internal const string FIRST_NAME_0002AS = "FIRST_NAME_0002AS";
            internal const string FIRST_NAME_0002 = "FIRST_NAME_0002";
            internal const string FIRST_NAME_0002XX = "FIRST_NAME_0002XX";
            internal const string CURRENT_ARREARAGE_AMOUN_0003AS = "CURRENT_ARREARAGE_AMOUN_0003AS";
            internal const string CURRENT_ARREARAGE_AMOUNT_0003 = "CURRENT_ARREARAGE_AMOUNT_0003";
            internal const string CURRENT_ARREARAGE_AMOUN_0003XX = "CURRENT_ARREARAGE_AMOUN_0003XX";
            internal const string CASE_TYPE_0003AS = "CASE_TYPE_0003AS";
            internal const string CASE_TYPE_0003 = "CASE_TYPE_0003";
            internal const string CASE_TYPE_0003XX = "CASE_TYPE_0003XX";
            internal const string PREOFFSET_NOTICE_DATE_0003AS = "PREOFFSET_NOTICE_DATE_0003AS";
            internal const string PREOFFSET_NOTICE_DATE_0003 = "PREOFFSET_NOTICE_DATE_0003";
            internal const string PREOFFSET_NOTICE_DATE_0003XX = "PREOFFSET_NOTICE_DATE_0003XX";
            internal const string PREOFFSET_HOLD_IND_0003AS = "PREOFFSET_HOLD_IND_0003AS";
            internal const string PREOFFSET_HOLD_IND_0003 = "PREOFFSET_HOLD_IND_0003";
            internal const string PREOFFSET_HOLD_IND_0003XX = "PREOFFSET_HOLD_IND_0003XX";
            internal const string ETYPE_ADMINISTRATIVE_OF_0004AS = "ETYPE_ADMINISTRATIVE_OF_0004AS";
            internal const string ETYPE_ADMINISTRATIVE_OFFS_0004 = "ETYPE_ADMINISTRATIVE_OFFS_0004";
            internal const string ETYPE_ADMINISTRATIVE_OF_0004XX = "ETYPE_ADMINISTRATIVE_OF_0004XX";
            internal const string ETYPE_FEDERAL_RETIREMEN_0005AS = "ETYPE_FEDERAL_RETIREMEN_0005AS";
            internal const string ETYPE_FEDERAL_RETIREMENT_0005 = "ETYPE_FEDERAL_RETIREMENT_0005";
            internal const string ETYPE_FEDERAL_RETIREMEN_0005XX = "ETYPE_FEDERAL_RETIREMEN_0005XX";
            internal const string ETYPE_VENDOR_PAYMENT_OR_0006AS = "ETYPE_VENDOR_PAYMENT_OR_0006AS";
            internal const string ETYPE_VENDOR_PAYMENT_OR_M_0006 = "ETYPE_VENDOR_PAYMENT_OR_M_0006";
            internal const string ETYPE_VENDOR_PAYMENT_OR_0006XX = "ETYPE_VENDOR_PAYMENT_OR_0006XX";
            internal const string ETYPE_FEDERAL_SALARY_0006AS = "ETYPE_FEDERAL_SALARY_0006AS";
            internal const string ETYPE_FEDERAL_SALARY_0006 = "ETYPE_FEDERAL_SALARY_0006";
            internal const string ETYPE_FEDERAL_SALARY_0006XX = "ETYPE_FEDERAL_SALARY_0006XX";
            internal const string ETYPE_TAX_REFUND_0006AS = "ETYPE_TAX_REFUND_0006AS";
            internal const string ETYPE_TAX_REFUND_0006 = "ETYPE_TAX_REFUND_0006";
            internal const string ETYPE_TAX_REFUND_0006XX = "ETYPE_TAX_REFUND_0006XX";
            internal const string ETYPE_PASSPORT_DENIAL_0006AS = "ETYPE_PASSPORT_DENIAL_0006AS";
            internal const string ETYPE_PASSPORT_DENIAL_0006 = "ETYPE_PASSPORT_DENIAL_0006";
            internal const string ETYPE_PASSPORT_DENIAL_0006XX = "ETYPE_PASSPORT_DENIAL_0006XX";
            internal const string ETYPE_FINANCIAL_INSTITU_0007AS = "ETYPE_FINANCIAL_INSTITU_0007AS";
            internal const string ETYPE_FINANCIAL_INSTITUTI_0007 = "ETYPE_FINANCIAL_INSTITUTI_0007";
            internal const string ETYPE_FINANCIAL_INSTITU_0007XX = "ETYPE_FINANCIAL_INSTITU_0007XX";
            internal const string EXPORT_0008EV = "EXPORT_0008EV";
            internal const string FDSO_SNAPSHOT_FILE_RECO_0008ET = "FDSO_SNAPSHOT_FILE_RECO_0008ET";
            internal const string SUBMITTING_STATE_0008AS = "SUBMITTING_STATE_0008AS";
            internal const string SUBMITTING_STATE_0008 = "SUBMITTING_STATE_0008";
            internal const string SUBMITTING_STATE_0008XX = "SUBMITTING_STATE_0008XX";
            internal const string LOCAL_CODE_0008AS = "LOCAL_CODE_0008AS";
            internal const string LOCAL_CODE_0008 = "LOCAL_CODE_0008";
            internal const string LOCAL_CODE_0008XX = "LOCAL_CODE_0008XX";
            internal const string SSN_0008AS = "SSN_0008AS";
            internal const string SSN_0008 = "SSN_0008";
            internal const string SSN_0008XX = "SSN_0008XX";
            internal const string CASE_NUMBER_0008AS = "CASE_NUMBER_0008AS";
            internal const string CASE_NUMBER_0008 = "CASE_NUMBER_0008";
            internal const string CASE_NUMBER_0008XX = "CASE_NUMBER_0008XX";
            internal const string LAST_NAME_0008AS = "LAST_NAME_0008AS";
            internal const string LAST_NAME_0008 = "LAST_NAME_0008";
            internal const string LAST_NAME_0008XX = "LAST_NAME_0008XX";
            internal const string FIRST_NAME_0008AS = "FIRST_NAME_0008AS";
            internal const string FIRST_NAME_0008 = "FIRST_NAME_0008";
            internal const string FIRST_NAME_0008XX = "FIRST_NAME_0008XX";
            internal const string CURRENT_ARREARAGE_AMOUN_0009AS = "CURRENT_ARREARAGE_AMOUN_0009AS";
            internal const string CURRENT_ARREARAGE_AMOUNT_0009 = "CURRENT_ARREARAGE_AMOUNT_0009";
            internal const string CURRENT_ARREARAGE_AMOUN_0009XX = "CURRENT_ARREARAGE_AMOUN_0009XX";
            internal const string CASE_TYPE_0009AS = "CASE_TYPE_0009AS";
            internal const string CASE_TYPE_0009 = "CASE_TYPE_0009";
            internal const string CASE_TYPE_0009XX = "CASE_TYPE_0009XX";
            internal const string ETYPE_ADMINISTRATIVE_OF_0010AS = "ETYPE_ADMINISTRATIVE_OF_0010AS";
            internal const string ETYPE_ADMINISTRATIVE_OFFS_0010 = "ETYPE_ADMINISTRATIVE_OFFS_0010";
            internal const string ETYPE_ADMINISTRATIVE_OF_0010XX = "ETYPE_ADMINISTRATIVE_OF_0010XX";
            internal const string ETYPE_FEDERAL_RETIREMEN_0011AS = "ETYPE_FEDERAL_RETIREMEN_0011AS";
            internal const string ETYPE_FEDERAL_RETIREMENT_0011 = "ETYPE_FEDERAL_RETIREMENT_0011";
            internal const string ETYPE_FEDERAL_RETIREMEN_0011XX = "ETYPE_FEDERAL_RETIREMEN_0011XX";
            internal const string ETYPE_VENDOR_PAYMENT_OR_0012AS = "ETYPE_VENDOR_PAYMENT_OR_0012AS";
            internal const string ETYPE_VENDOR_PAYMENT_OR_M_0012 = "ETYPE_VENDOR_PAYMENT_OR_M_0012";
            internal const string ETYPE_VENDOR_PAYMENT_OR_0012XX = "ETYPE_VENDOR_PAYMENT_OR_0012XX";
            internal const string ETYPE_FEDERAL_SALARY_0012AS = "ETYPE_FEDERAL_SALARY_0012AS";
            internal const string ETYPE_FEDERAL_SALARY_0012 = "ETYPE_FEDERAL_SALARY_0012";
            internal const string ETYPE_FEDERAL_SALARY_0012XX = "ETYPE_FEDERAL_SALARY_0012XX";
            internal const string ETYPE_TAX_REFUND_0012AS = "ETYPE_TAX_REFUND_0012AS";
            internal const string ETYPE_TAX_REFUND_0012 = "ETYPE_TAX_REFUND_0012";
            internal const string ETYPE_TAX_REFUND_0012XX = "ETYPE_TAX_REFUND_0012XX";
            internal const string ETYPE_PASSPORT_DENIAL_0012AS = "ETYPE_PASSPORT_DENIAL_0012AS";
            internal const string ETYPE_PASSPORT_DENIAL_0012 = "ETYPE_PASSPORT_DENIAL_0012";
            internal const string ETYPE_PASSPORT_DENIAL_0012XX = "ETYPE_PASSPORT_DENIAL_0012XX";
            internal const string ETYPE_FINANCIAL_INSTITU_0013AS = "ETYPE_FINANCIAL_INSTITU_0013AS";
            internal const string ETYPE_FINANCIAL_INSTITUTI_0013 = "ETYPE_FINANCIAL_INSTITUTI_0013";
            internal const string ETYPE_FINANCIAL_INSTITU_0013XX = "ETYPE_FINANCIAL_INSTITU_0013XX";
            internal const string TRANSACTION_TYPE_0013AS = "TRANSACTION_TYPE_0013AS";
            internal const string TRANSACTION_TYPE_0013 = "TRANSACTION_TYPE_0013";
            internal const string TRANSACTION_TYPE_0013XX = "TRANSACTION_TYPE_0013XX";
            internal const string EXPORT_0014EV = "EXPORT_0014EV";
            internal const string EXTERNAL_0014ET = "EXTERNAL_0014ET";
            internal const string FILE_INSTRUCTION_0014AS = "FILE_INSTRUCTION_0014AS";
            internal const string FILE_INSTRUCTION_0014 = "FILE_INSTRUCTION_0014";
            internal const string FILE_INSTRUCTION_0014XX = "FILE_INSTRUCTION_0014XX";
            internal const string NUMERIC_RETURN_CODE_0014AS = "NUMERIC_RETURN_CODE_0014AS";
            internal const string NUMERIC_RETURN_CODE_0014 = "NUMERIC_RETURN_CODE_0014";
            internal const string NUMERIC_RETURN_CODE_0014XX = "NUMERIC_RETURN_CODE_0014XX";
            internal const string TEXT_RETURN_CODE_0014AS = "TEXT_RETURN_CODE_0014AS";
            internal const string TEXT_RETURN_CODE_0014 = "TEXT_RETURN_CODE_0014";
            internal const string TEXT_RETURN_CODE_0014XX = "TEXT_RETURN_CODE_0014XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup GLOBDATA { get { return GetElementByName<IGroup>(Names.GLOBDATA); } }
        public IGroup PSMGR_IEF_COMMAND { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_COMMAND); } }
        public IField PSMGR_IEF_COMMAND_1 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_1); } }
        public IField PSMGR_IEF_COMMAND_2 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_2); } }
        public IField PSMGR_IEF_TRANCODE { get { return GetElementByName<IField>(Names.PSMGR_IEF_TRANCODE); } }
        public IField PSMGR_EXIT_STATE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_STATE); } }
        public IField PSMGR_EXIT_INFOMSG { get { return GetElementByName<IField>(Names.PSMGR_EXIT_INFOMSG); } }
        public IField PSMGR_USER_ID { get { return GetElementByName<IField>(Names.PSMGR_USER_ID); } }
        public IField PSMGR_TERMINAL_ID { get { return GetElementByName<IField>(Names.PSMGR_TERMINAL_ID); } }
        public IField PSMGR_PRINTER_ID { get { return GetElementByName<IField>(Names.PSMGR_PRINTER_ID); } }
        public IField PSMGR_CURRENT_DATE { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_DATE); } }
        public IField PSMGR_CURRENT_TIME { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_TIME); } }
        public IField PSMGR_RUNTIME_TYPE { get { return GetElementByName<IField>(Names.PSMGR_RUNTIME_TYPE); } }
        public IGroup PSMGR_FUNCTION_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA); } }
        public IField PSMGR_FUNC_ERRMSG { get { return GetElementByName<IField>(Names.PSMGR_FUNC_ERRMSG); } }
        public IField PSMGR_FUNC_NAME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_NAME); } }
        public IField PSMGR_FUNC_IN_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_DATE); } }
        public IGroup PSMGR_FUNC_IN_DDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_DDURA); } }
        public IGroup DDURA_YEAR { get { return GetElementByName<IGroup>(Names.DDURA_YEAR); } }
        public IField DDURA_Y_MISS { get { return GetElementByName<IField>(Names.DDURA_Y_MISS); } }
        public IField DDURA_YYYY { get { return GetElementByName<IField>(Names.DDURA_YYYY); } }
        public IGroup DDURA_MONTH { get { return GetElementByName<IGroup>(Names.DDURA_MONTH); } }
        public IField DDURA_M_MISS { get { return GetElementByName<IField>(Names.DDURA_M_MISS); } }
        public IField DDURA_MM { get { return GetElementByName<IField>(Names.DDURA_MM); } }
        public IGroup DDURA_DAY { get { return GetElementByName<IGroup>(Names.DDURA_DAY); } }
        public IField DDURA_D_MISS { get { return GetElementByName<IField>(Names.DDURA_D_MISS); } }
        public IField DDURA_DD { get { return GetElementByName<IField>(Names.DDURA_DD); } }
        public IField PSMGR_FUNC_OUT_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_DATE); } }
        public IField PSMGR_FUNC_IN_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIME); } }
        public IGroup PSMGR_FUNC_IN_TDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TDURA); } }
        public IGroup TDURA_HOUR { get { return GetElementByName<IGroup>(Names.TDURA_HOUR); } }
        public IField TDURA_H_MISS { get { return GetElementByName<IField>(Names.TDURA_H_MISS); } }
        public IField TDURA_HH { get { return GetElementByName<IField>(Names.TDURA_HH); } }
        public IGroup TDURA_MINUTE { get { return GetElementByName<IGroup>(Names.TDURA_MINUTE); } }
        public IField TDURA_M_MISS { get { return GetElementByName<IField>(Names.TDURA_M_MISS); } }
        public IField TDURA_MM { get { return GetElementByName<IField>(Names.TDURA_MM); } }
        public IGroup TDURA_SECOND { get { return GetElementByName<IGroup>(Names.TDURA_SECOND); } }
        public IField TDURA_S_MISS { get { return GetElementByName<IField>(Names.TDURA_S_MISS); } }
        public IField TDURA_SS { get { return GetElementByName<IField>(Names.TDURA_SS); } }
        public IField PSMGR_FUNC_OUT_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIME); } }
        public IField PSMGR_IEF_NEXTTRAN { get { return GetElementByName<IField>(Names.PSMGR_IEF_NEXTTRAN); } }
        public IField PSMGR_EXIT_MSGTYPE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_MSGTYPE); } }
        public IGroup PSMGR_IEF_DEBUG_FLAGS { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_DEBUG_FLAGS); } }
        public IField PSMGR_IEF_DEBUG { get { return GetElementByName<IField>(Names.PSMGR_IEF_DEBUG); } }
        public ICheckField PSMGR_DEBUG_ON { get { return GetElementByName<ICheckField>(Names.PSMGR_DEBUG_ON); } }
        public IGroup PSMGR_ENVIRONMENT_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ENVIRONMENT_DATA); } }
        public IField PSMGR_PCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_PCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_PCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_PCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_PCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_PCB_ADR); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup PSMGR_ERROR_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ERROR_DATA); } }
        public IField ERROR_ACTION_NAME { get { return GetElementByName<IField>(Names.ERROR_ACTION_NAME); } }
        public IField ERROR_ENCOUNTERED_SW { get { return GetElementByName<IField>(Names.ERROR_ENCOUNTERED_SW); } }
        public IField VIEW_OVERFLOW_SW { get { return GetElementByName<IField>(Names.VIEW_OVERFLOW_SW); } }
        public IGroup PSMGR_DASG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DASG_DATA); } }
        public IGroup ACTION_ID_X { get { return GetElementByName<IGroup>(Names.ACTION_ID_X); } }
        public IField ACTION_ID { get { return GetElementByName<IField>(Names.ACTION_ID); } }
        public IGroup ATTRIBUTE_ID_X { get { return GetElementByName<IGroup>(Names.ATTRIBUTE_ID_X); } }
        public IField ATTRIBUTE_ID { get { return GetElementByName<IField>(Names.ATTRIBUTE_ID); } }
        public IField STATUS_FLAG { get { return GetElementByName<IField>(Names.STATUS_FLAG); } }
        public ICheckField FATAL_ERROR_SF { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_SF); } }
        public ICheckField DB_ERROR_SF { get { return GetElementByName<ICheckField>(Names.DB_ERROR_SF); } }
        public ICheckField ABORT_SHOW_DBMS_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_DBMS_MSG_SF); } }
        public ICheckField ABORT_SHOW_USER_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_USER_MSG_SF); } }
        public ICheckField RETRY_TRAN_REQUESTED_SF { get { return GetElementByName<ICheckField>(Names.RETRY_TRAN_REQUESTED_SF); } }
        public ICheckField PSTEP_USE_FAILURE { get { return GetElementByName<ICheckField>(Names.PSTEP_USE_FAILURE); } }
        public IField LAST_STATUS { get { return GetElementByName<IField>(Names.LAST_STATUS); } }
        public ICheckField DB_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_ERROR_FL_LS); } }
        public ICheckField DB_DEADLOCK_TIMOUT_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_DEADLOCK_TIMOUT_FL_LS); } }
        public ICheckField DUPLICATE_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.DUPLICATE_FOUND_FL_LS); } }
        public ICheckField INVALID_DATAA_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAA_FL_LS); } }
        public ICheckField INVALID_DATAB_TYPE_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_TYPE_FL_LS); } }
        public ICheckField INVALID_DATAB_PERM_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_PERM_FL_LS); } }
        public ICheckField FATAL_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_FL_LS); } }
        public ICheckField NOT_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_FOUND_FL_LS); } }
        public ICheckField NOT_UNIQUE_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_UNIQUE_FL_LS); } }
        public ICheckField IEF_FUNCTION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_FUNCTION_ERROR_FL_LS); } }
        public ICheckField IEF_DURATION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_DURATION_ERROR_FL_LS); } }
        public ICheckField USED_PSTEP_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_NOT_FOUND); } }
        public ICheckField USED_PSTEP_ROUTING_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ROUTING_ERR); } }
        public ICheckField USED_PSTEP_SND_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_FMT_ERR); } }
        public ICheckField USED_PSTEP_ENCRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ENCRYPT_ERR); } }
        public ICheckField USED_PSTEP_SND_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_FMT_ERR); } }
        public ICheckField USED_PSTEP_TIRSECR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TIRSECR_ERR); } }
        public ICheckField USED_PSTEP_TOKEN_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TOKEN_ERR); } }
        public ICheckField USED_PSTEP_SEND_MAX_SIZE { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SEND_MAX_SIZE); } }
        public ICheckField USED_PSTEP_SECG_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SECG_ERR); } }
        public ICheckField USED_PSTEP_ALLOC_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ALLOC_ERR); } }
        public ICheckField USED_PSTEP_CONNECT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_CONNECT_ERR); } }
        public ICheckField USED_PSTEP_XERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XERR); } }
        public ICheckField USED_PSTEP_RCV_UA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_UA_ERR); } }
        public ICheckField USED_PSTEP_RCV_ES_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_ES_ERR); } }
        public ICheckField USED_PSTEP_XFAL { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XFAL); } }
        public ICheckField USED_PSTEP_SETOA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SETOA_ERR); } }
        public ICheckField USED_PSTEP_RCV_VIEW_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_VIEW_ERR); } }
        public ICheckField USED_PSTEP_DECRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_DECRYPT_ERR); } }
        public IField SAVE_SQLCA { get { return GetElementByName<IField>(Names.SAVE_SQLCA); } }
        public IGroup PSMGR_DEBUG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DEBUG_DATA); } }
        public IField PSMGR_TRACE_ADR { get { return GetElementByName<IField>(Names.PSMGR_TRACE_ADR); } }
        public IGroup LAST_STATEMENT_X { get { return GetElementByName<IGroup>(Names.LAST_STATEMENT_X); } }
        public IField LAST_STATEMENT_NUM { get { return GetElementByName<IField>(Names.LAST_STATEMENT_NUM); } }
        public IField CUR_AB_ID { get { return GetElementByName<IField>(Names.CUR_AB_ID); } }
        public IField CUR_AB_NAME { get { return GetElementByName<IField>(Names.CUR_AB_NAME); } }
        public IField PSMGR_TIRDATE_SAVEAREA { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SAVEAREA); } }
        public IGroup PSMGR_TIRDATE_CMCB { get { return GetElementByName<IGroup>(Names.PSMGR_TIRDATE_CMCB); } }
        public IField PSMGR_TIRDATE_DATE { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE); } }
        public IField PSMGR_TIRDATE_TIME { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME); } }
        public IField PSMGR_TIRDATE_INC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_INC); } }
        public IField PSMGR_TIRDATE_RC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RC); } }
        public ICheckField PSMGR_TIRDATE_OK { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_OK); } }
        public ICheckField PSMGR_TIRDATE_WARNING { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_WARNING); } }
        public ICheckField PSMGR_TIRDATE_ERROR { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_ERROR); } }
        public IField PSMGR_TIRDATE_REQ { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_REQ); } }
        public IField PSMGR_TIRDATE_DATEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATEF); } }
        public IField PSMGR_TIRDATE_TIMEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIMEF); } }
        public IField PSMGR_TIRDATE_RETMSG { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RETMSG); } }
        public IField PSMGR_TIRDATE_TSTAMP { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TSTAMP); } }
        public IField PSMGR_TIRDATE_DATE_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE_Z); } }
        public IField PSMGR_TIRDATE_TIME_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME_Z); } }
        public IField PSMGR_TIRDATE_SKIP_VAL { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SKIP_VAL); } }
        public IField PSMGR_ROLLBACK_RQSTED { get { return GetElementByName<IField>(Names.PSMGR_ROLLBACK_RQSTED); } }
        public ICheckField ROLLBACK_RQSTED { get { return GetElementByName<ICheckField>(Names.ROLLBACK_RQSTED); } }
        public ICheckField ABEND_RQSTED { get { return GetElementByName<ICheckField>(Names.ABEND_RQSTED); } }
        public ICheckField TERMINATE_RQSTED { get { return GetElementByName<ICheckField>(Names.TERMINATE_RQSTED); } }
        public IGroup TIRTRCE_SAVE_AREA { get { return GetElementByName<IGroup>(Names.TIRTRCE_SAVE_AREA); } }
        public IField TOP_INDX { get { return GetElementByName<IField>(Names.TOP_INDX); } }
        public IField BOTTOM_INDX { get { return GetElementByName<IField>(Names.BOTTOM_INDX); } }
        public IField END_INDX { get { return GetElementByName<IField>(Names.END_INDX); } }
        public IField LAST_STMT { get { return GetElementByName<IField>(Names.LAST_STMT); } }
        public IField TOP_OF_CALL { get { return GetElementByName<IField>(Names.TOP_OF_CALL); } }
        public IField TRACE_BREAK_POINT { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT); } }
        public IField TRACE_BREAK_POINT_STATUS { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT_STATUS); } }
        public IField LAST_AB_NAME { get { return GetElementByName<IField>(Names.LAST_AB_NAME); } }
        public IField COLOR { get { return GetElementByName<IField>(Names.COLOR); } }
        public IField COLORT { get { return GetElementByName<IField>(Names.COLORT); } }
        public IField HILITE { get { return GetElementByName<IField>(Names.HILITE); } }
        public IField TRACE_ON_OFF { get { return GetElementByName<IField>(Names.TRACE_ON_OFF); } }
        public IGroup CASCADE_DELETE_FLAGS { get { return GetElementByName<IGroup>(Names.CASCADE_DELETE_FLAGS); } }
        public IField V1PRESENT { get { return GetElementByName<IField>(Names.V1PRESENT); } }
        public IField V2PRESENT { get { return GetElementByName<IField>(Names.V2PRESENT); } }
        public IField CASCADE1 { get { return GetElementByName<IField>(Names.CASCADE1); } }
        public IField CASCADE2 { get { return GetElementByName<IField>(Names.CASCADE2); } }
        public IField PROCESSQ_FLAG { get { return GetElementByName<IField>(Names.PROCESSQ_FLAG); } }
        public IGroup PSMGR_ACTIVE_DIALECT { get { return GetElementByName<IGroup>(Names.PSMGR_ACTIVE_DIALECT); } }
        public IField DIALECT_NAME { get { return GetElementByName<IField>(Names.DIALECT_NAME); } }
        public IField MESSAGE_TABLE_NAME { get { return GetElementByName<IField>(Names.MESSAGE_TABLE_NAME); } }
        public IField TRANSLATE_TABLE_NAME { get { return GetElementByName<IField>(Names.TRANSLATE_TABLE_NAME); } }
        public IGroup PSMGR_FUNCTION_DATA_EXT { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA_EXT); } }
        public IField PSMGR_FUNC_IN_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIMESTAMP); } }
        public IGroup PSMGR_FUNC_IN_TSDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TSDURA); } }
        public IGroup TSDURA_MICROSECOND { get { return GetElementByName<IGroup>(Names.TSDURA_MICROSECOND); } }
        public IField TSDURA_M_MISS { get { return GetElementByName<IField>(Names.TSDURA_M_MISS); } }
        public IField TSDURA_MS { get { return GetElementByName<IField>(Names.TSDURA_MS); } }
        public IField PSMGR_FUNC_OUT_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIMESTAMP); } }
        public IField PSMGR_CICS_FAIL_SW { get { return GetElementByName<IField>(Names.PSMGR_CICS_FAIL_SW); } }
        public ICheckField INHIBIT_CICS_RECEIVE { get { return GetElementByName<ICheckField>(Names.INHIBIT_CICS_RECEIVE); } }
        public IField CLIENT_USERID { get { return GetElementByName<IField>(Names.CLIENT_USERID); } }
        public IField CLIENT_PASSWORD { get { return GetElementByName<IField>(Names.CLIENT_PASSWORD); } }
        public IField LOAD_MODULE_NAME { get { return GetElementByName<IField>(Names.LOAD_MODULE_NAME); } }
        public IField INSTRUMENT_CODE { get { return GetElementByName<IField>(Names.INSTRUMENT_CODE); } }
        public IField TX_RETRY_LIMIT { get { return GetElementByName<IField>(Names.TX_RETRY_LIMIT); } }
        public IField TX_TIMEOUT { get { return GetElementByName<IField>(Names.TX_TIMEOUT); } }
        public IGroup PSMGR_EXTRA_ERRINFO { get { return GetElementByName<IGroup>(Names.PSMGR_EXTRA_ERRINFO); } }
        public IField ERRINFO_BUF_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_BUF_SIZE); } }
        public IField ERRINFO_MSG_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_MSG_SIZE); } }
        public IField ERRINFO_BUF_ADDR { get { return GetElementByName<IField>(Names.ERRINFO_BUF_ADDR); } }
        public IField TX_RETRY_COUNT { get { return GetElementByName<IField>(Names.TX_RETRY_COUNT); } }
        public IField TX_USER_RETRY_ALLOWED { get { return GetElementByName<IField>(Names.TX_USER_RETRY_ALLOWED); } }
        public IGroup PSMGR_PSTEP_USE_PTRS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_PTRS); } }
        public IField PSTEP_FAIL_MSG_PTR { get { return GetElementByName<IField>(Names.PSTEP_FAIL_MSG_PTR); } }
        public IField PSTEP_GURB_REST_PTR { get { return GetElementByName<IField>(Names.PSTEP_GURB_REST_PTR); } }
        public IField PSTEP_LIPS_PTR { get { return GetElementByName<IField>(Names.PSTEP_LIPS_PTR); } }
        public IField PSTEP_TBL_PTR { get { return GetElementByName<IField>(Names.PSTEP_TBL_PTR); } }
        public IField PSTEP_DDF_PTR { get { return GetElementByName<IField>(Names.PSTEP_DDF_PTR); } }
        public IField PSTEP_COMM_ID { get { return GetElementByName<IField>(Names.PSTEP_COMM_ID); } }
        public IField PSTEP_APPL_LIST_PTR { get { return GetElementByName<IField>(Names.PSTEP_APPL_LIST_PTR); } }
        public IField PSTEP_CURR_PST_PTR { get { return GetElementByName<IField>(Names.PSTEP_CURR_PST_PTR); } }
        public IGroup PSMGR_PSTEP_USE_SYSFLDS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_SYSFLDS); } }
        public IField PSMGR_EIBERRCD { get { return GetElementByName<IField>(Names.PSMGR_EIBERRCD); } }
        public IField PSMGR_EIBFN { get { return GetElementByName<IField>(Names.PSMGR_EIBFN); } }
        public IField PSMGR_EIBRESP { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP); } }
        public IField PSMGR_EIBRESP2 { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP2); } }
        public IGroup IMPORT_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_0001EV); } }
        public IGroup EXTERNAL_0001ET { get { return GetElementByName<IGroup>(Names.EXTERNAL_0001ET); } }
        public IField FILE_INSTRUCTION_0001AS { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0001AS); } }
        public IField FILE_INSTRUCTION_0001 { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0001); } }
        public IField FILE_INSTRUCTION_0001XX { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0001XX); } }
        public IGroup EXPORT_0002EV { get { return GetElementByName<IGroup>(Names.EXPORT_0002EV); } }
        public IGroup FDSO_RECONCILIATION_FIL_0002ET { get { return GetElementByName<IGroup>(Names.FDSO_RECONCILIATION_FIL_0002ET); } }
        public IField RECORD_IDENTIFIER_0002AS { get { return GetElementByName<IField>(Names.RECORD_IDENTIFIER_0002AS); } }
        public IField RECORD_IDENTIFIER_0002 { get { return GetElementByName<IField>(Names.RECORD_IDENTIFIER_0002); } }
        public IField RECORD_IDENTIFIER_0002XX { get { return GetElementByName<IField>(Names.RECORD_IDENTIFIER_0002XX); } }
        public IField SUBMITTING_STATE_0002AS { get { return GetElementByName<IField>(Names.SUBMITTING_STATE_0002AS); } }
        public IField SUBMITTING_STATE_0002 { get { return GetElementByName<IField>(Names.SUBMITTING_STATE_0002); } }
        public IField SUBMITTING_STATE_0002XX { get { return GetElementByName<IField>(Names.SUBMITTING_STATE_0002XX); } }
        public IField LOCAL_CODE_0002AS { get { return GetElementByName<IField>(Names.LOCAL_CODE_0002AS); } }
        public IField LOCAL_CODE_0002 { get { return GetElementByName<IField>(Names.LOCAL_CODE_0002); } }
        public IField LOCAL_CODE_0002XX { get { return GetElementByName<IField>(Names.LOCAL_CODE_0002XX); } }
        public IField SSN_0002AS { get { return GetElementByName<IField>(Names.SSN_0002AS); } }
        public IField SSN_0002 { get { return GetElementByName<IField>(Names.SSN_0002); } }
        public IField SSN_0002XX { get { return GetElementByName<IField>(Names.SSN_0002XX); } }
        public IField CASE_NUMBER_0002AS { get { return GetElementByName<IField>(Names.CASE_NUMBER_0002AS); } }
        public IField CASE_NUMBER_0002 { get { return GetElementByName<IField>(Names.CASE_NUMBER_0002); } }
        public IField CASE_NUMBER_0002XX { get { return GetElementByName<IField>(Names.CASE_NUMBER_0002XX); } }
        public IField LAST_NAME_0002AS { get { return GetElementByName<IField>(Names.LAST_NAME_0002AS); } }
        public IField LAST_NAME_0002 { get { return GetElementByName<IField>(Names.LAST_NAME_0002); } }
        public IField LAST_NAME_0002XX { get { return GetElementByName<IField>(Names.LAST_NAME_0002XX); } }
        public IField FIRST_NAME_0002AS { get { return GetElementByName<IField>(Names.FIRST_NAME_0002AS); } }
        public IField FIRST_NAME_0002 { get { return GetElementByName<IField>(Names.FIRST_NAME_0002); } }
        public IField FIRST_NAME_0002XX { get { return GetElementByName<IField>(Names.FIRST_NAME_0002XX); } }
        public IField CURRENT_ARREARAGE_AMOUN_0003AS { get { return GetElementByName<IField>(Names.CURRENT_ARREARAGE_AMOUN_0003AS); } }
        public IField CURRENT_ARREARAGE_AMOUNT_0003 { get { return GetElementByName<IField>(Names.CURRENT_ARREARAGE_AMOUNT_0003); } }
        public IField CURRENT_ARREARAGE_AMOUN_0003XX { get { return GetElementByName<IField>(Names.CURRENT_ARREARAGE_AMOUN_0003XX); } }
        public IField CASE_TYPE_0003AS { get { return GetElementByName<IField>(Names.CASE_TYPE_0003AS); } }
        public IField CASE_TYPE_0003 { get { return GetElementByName<IField>(Names.CASE_TYPE_0003); } }
        public IField CASE_TYPE_0003XX { get { return GetElementByName<IField>(Names.CASE_TYPE_0003XX); } }
        public IField PREOFFSET_NOTICE_DATE_0003AS { get { return GetElementByName<IField>(Names.PREOFFSET_NOTICE_DATE_0003AS); } }
        public IField PREOFFSET_NOTICE_DATE_0003 { get { return GetElementByName<IField>(Names.PREOFFSET_NOTICE_DATE_0003); } }
        public IField PREOFFSET_NOTICE_DATE_0003XX { get { return GetElementByName<IField>(Names.PREOFFSET_NOTICE_DATE_0003XX); } }
        public IField PREOFFSET_HOLD_IND_0003AS { get { return GetElementByName<IField>(Names.PREOFFSET_HOLD_IND_0003AS); } }
        public IField PREOFFSET_HOLD_IND_0003 { get { return GetElementByName<IField>(Names.PREOFFSET_HOLD_IND_0003); } }
        public IField PREOFFSET_HOLD_IND_0003XX { get { return GetElementByName<IField>(Names.PREOFFSET_HOLD_IND_0003XX); } }
        public IField ETYPE_ADMINISTRATIVE_OF_0004AS { get { return GetElementByName<IField>(Names.ETYPE_ADMINISTRATIVE_OF_0004AS); } }
        public IField ETYPE_ADMINISTRATIVE_OFFS_0004 { get { return GetElementByName<IField>(Names.ETYPE_ADMINISTRATIVE_OFFS_0004); } }
        public IField ETYPE_ADMINISTRATIVE_OF_0004XX { get { return GetElementByName<IField>(Names.ETYPE_ADMINISTRATIVE_OF_0004XX); } }
        public IField ETYPE_FEDERAL_RETIREMEN_0005AS { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_RETIREMEN_0005AS); } }
        public IField ETYPE_FEDERAL_RETIREMENT_0005 { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_RETIREMENT_0005); } }
        public IField ETYPE_FEDERAL_RETIREMEN_0005XX { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_RETIREMEN_0005XX); } }
        public IField ETYPE_VENDOR_PAYMENT_OR_0006AS { get { return GetElementByName<IField>(Names.ETYPE_VENDOR_PAYMENT_OR_0006AS); } }
        public IField ETYPE_VENDOR_PAYMENT_OR_M_0006 { get { return GetElementByName<IField>(Names.ETYPE_VENDOR_PAYMENT_OR_M_0006); } }
        public IField ETYPE_VENDOR_PAYMENT_OR_0006XX { get { return GetElementByName<IField>(Names.ETYPE_VENDOR_PAYMENT_OR_0006XX); } }
        public IField ETYPE_FEDERAL_SALARY_0006AS { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_SALARY_0006AS); } }
        public IField ETYPE_FEDERAL_SALARY_0006 { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_SALARY_0006); } }
        public IField ETYPE_FEDERAL_SALARY_0006XX { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_SALARY_0006XX); } }
        public IField ETYPE_TAX_REFUND_0006AS { get { return GetElementByName<IField>(Names.ETYPE_TAX_REFUND_0006AS); } }
        public IField ETYPE_TAX_REFUND_0006 { get { return GetElementByName<IField>(Names.ETYPE_TAX_REFUND_0006); } }
        public IField ETYPE_TAX_REFUND_0006XX { get { return GetElementByName<IField>(Names.ETYPE_TAX_REFUND_0006XX); } }
        public IField ETYPE_PASSPORT_DENIAL_0006AS { get { return GetElementByName<IField>(Names.ETYPE_PASSPORT_DENIAL_0006AS); } }
        public IField ETYPE_PASSPORT_DENIAL_0006 { get { return GetElementByName<IField>(Names.ETYPE_PASSPORT_DENIAL_0006); } }
        public IField ETYPE_PASSPORT_DENIAL_0006XX { get { return GetElementByName<IField>(Names.ETYPE_PASSPORT_DENIAL_0006XX); } }
        public IField ETYPE_FINANCIAL_INSTITU_0007AS { get { return GetElementByName<IField>(Names.ETYPE_FINANCIAL_INSTITU_0007AS); } }
        public IField ETYPE_FINANCIAL_INSTITUTI_0007 { get { return GetElementByName<IField>(Names.ETYPE_FINANCIAL_INSTITUTI_0007); } }
        public IField ETYPE_FINANCIAL_INSTITU_0007XX { get { return GetElementByName<IField>(Names.ETYPE_FINANCIAL_INSTITU_0007XX); } }
        public IGroup EXPORT_0008EV { get { return GetElementByName<IGroup>(Names.EXPORT_0008EV); } }
        public IGroup FDSO_SNAPSHOT_FILE_RECO_0008ET { get { return GetElementByName<IGroup>(Names.FDSO_SNAPSHOT_FILE_RECO_0008ET); } }
        public IField SUBMITTING_STATE_0008AS { get { return GetElementByName<IField>(Names.SUBMITTING_STATE_0008AS); } }
        public IField SUBMITTING_STATE_0008 { get { return GetElementByName<IField>(Names.SUBMITTING_STATE_0008); } }
        public IField SUBMITTING_STATE_0008XX { get { return GetElementByName<IField>(Names.SUBMITTING_STATE_0008XX); } }
        public IField LOCAL_CODE_0008AS { get { return GetElementByName<IField>(Names.LOCAL_CODE_0008AS); } }
        public IField LOCAL_CODE_0008 { get { return GetElementByName<IField>(Names.LOCAL_CODE_0008); } }
        public IField LOCAL_CODE_0008XX { get { return GetElementByName<IField>(Names.LOCAL_CODE_0008XX); } }
        public IField SSN_0008AS { get { return GetElementByName<IField>(Names.SSN_0008AS); } }
        public IField SSN_0008 { get { return GetElementByName<IField>(Names.SSN_0008); } }
        public IField SSN_0008XX { get { return GetElementByName<IField>(Names.SSN_0008XX); } }
        public IField CASE_NUMBER_0008AS { get { return GetElementByName<IField>(Names.CASE_NUMBER_0008AS); } }
        public IField CASE_NUMBER_0008 { get { return GetElementByName<IField>(Names.CASE_NUMBER_0008); } }
        public IField CASE_NUMBER_0008XX { get { return GetElementByName<IField>(Names.CASE_NUMBER_0008XX); } }
        public IField LAST_NAME_0008AS { get { return GetElementByName<IField>(Names.LAST_NAME_0008AS); } }
        public IField LAST_NAME_0008 { get { return GetElementByName<IField>(Names.LAST_NAME_0008); } }
        public IField LAST_NAME_0008XX { get { return GetElementByName<IField>(Names.LAST_NAME_0008XX); } }
        public IField FIRST_NAME_0008AS { get { return GetElementByName<IField>(Names.FIRST_NAME_0008AS); } }
        public IField FIRST_NAME_0008 { get { return GetElementByName<IField>(Names.FIRST_NAME_0008); } }
        public IField FIRST_NAME_0008XX { get { return GetElementByName<IField>(Names.FIRST_NAME_0008XX); } }
        public IField CURRENT_ARREARAGE_AMOUN_0009AS { get { return GetElementByName<IField>(Names.CURRENT_ARREARAGE_AMOUN_0009AS); } }
        public IField CURRENT_ARREARAGE_AMOUNT_0009 { get { return GetElementByName<IField>(Names.CURRENT_ARREARAGE_AMOUNT_0009); } }
        public IField CURRENT_ARREARAGE_AMOUN_0009XX { get { return GetElementByName<IField>(Names.CURRENT_ARREARAGE_AMOUN_0009XX); } }
        public IField CASE_TYPE_0009AS { get { return GetElementByName<IField>(Names.CASE_TYPE_0009AS); } }
        public IField CASE_TYPE_0009 { get { return GetElementByName<IField>(Names.CASE_TYPE_0009); } }
        public IField CASE_TYPE_0009XX { get { return GetElementByName<IField>(Names.CASE_TYPE_0009XX); } }
        public IField ETYPE_ADMINISTRATIVE_OF_0010AS { get { return GetElementByName<IField>(Names.ETYPE_ADMINISTRATIVE_OF_0010AS); } }
        public IField ETYPE_ADMINISTRATIVE_OFFS_0010 { get { return GetElementByName<IField>(Names.ETYPE_ADMINISTRATIVE_OFFS_0010); } }
        public IField ETYPE_ADMINISTRATIVE_OF_0010XX { get { return GetElementByName<IField>(Names.ETYPE_ADMINISTRATIVE_OF_0010XX); } }
        public IField ETYPE_FEDERAL_RETIREMEN_0011AS { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_RETIREMEN_0011AS); } }
        public IField ETYPE_FEDERAL_RETIREMENT_0011 { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_RETIREMENT_0011); } }
        public IField ETYPE_FEDERAL_RETIREMEN_0011XX { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_RETIREMEN_0011XX); } }
        public IField ETYPE_VENDOR_PAYMENT_OR_0012AS { get { return GetElementByName<IField>(Names.ETYPE_VENDOR_PAYMENT_OR_0012AS); } }
        public IField ETYPE_VENDOR_PAYMENT_OR_M_0012 { get { return GetElementByName<IField>(Names.ETYPE_VENDOR_PAYMENT_OR_M_0012); } }
        public IField ETYPE_VENDOR_PAYMENT_OR_0012XX { get { return GetElementByName<IField>(Names.ETYPE_VENDOR_PAYMENT_OR_0012XX); } }
        public IField ETYPE_FEDERAL_SALARY_0012AS { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_SALARY_0012AS); } }
        public IField ETYPE_FEDERAL_SALARY_0012 { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_SALARY_0012); } }
        public IField ETYPE_FEDERAL_SALARY_0012XX { get { return GetElementByName<IField>(Names.ETYPE_FEDERAL_SALARY_0012XX); } }
        public IField ETYPE_TAX_REFUND_0012AS { get { return GetElementByName<IField>(Names.ETYPE_TAX_REFUND_0012AS); } }
        public IField ETYPE_TAX_REFUND_0012 { get { return GetElementByName<IField>(Names.ETYPE_TAX_REFUND_0012); } }
        public IField ETYPE_TAX_REFUND_0012XX { get { return GetElementByName<IField>(Names.ETYPE_TAX_REFUND_0012XX); } }
        public IField ETYPE_PASSPORT_DENIAL_0012AS { get { return GetElementByName<IField>(Names.ETYPE_PASSPORT_DENIAL_0012AS); } }
        public IField ETYPE_PASSPORT_DENIAL_0012 { get { return GetElementByName<IField>(Names.ETYPE_PASSPORT_DENIAL_0012); } }
        public IField ETYPE_PASSPORT_DENIAL_0012XX { get { return GetElementByName<IField>(Names.ETYPE_PASSPORT_DENIAL_0012XX); } }
        public IField ETYPE_FINANCIAL_INSTITU_0013AS { get { return GetElementByName<IField>(Names.ETYPE_FINANCIAL_INSTITU_0013AS); } }
        public IField ETYPE_FINANCIAL_INSTITUTI_0013 { get { return GetElementByName<IField>(Names.ETYPE_FINANCIAL_INSTITUTI_0013); } }
        public IField ETYPE_FINANCIAL_INSTITU_0013XX { get { return GetElementByName<IField>(Names.ETYPE_FINANCIAL_INSTITU_0013XX); } }
        public IField TRANSACTION_TYPE_0013AS { get { return GetElementByName<IField>(Names.TRANSACTION_TYPE_0013AS); } }
        public IField TRANSACTION_TYPE_0013 { get { return GetElementByName<IField>(Names.TRANSACTION_TYPE_0013); } }
        public IField TRANSACTION_TYPE_0013XX { get { return GetElementByName<IField>(Names.TRANSACTION_TYPE_0013XX); } }
        public IGroup EXPORT_0014EV { get { return GetElementByName<IGroup>(Names.EXPORT_0014EV); } }
        public IGroup EXTERNAL_0014ET { get { return GetElementByName<IGroup>(Names.EXTERNAL_0014ET); } }
        public IField FILE_INSTRUCTION_0014AS { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0014AS); } }
        public IField FILE_INSTRUCTION_0014 { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0014); } }
        public IField FILE_INSTRUCTION_0014XX { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0014XX); } }
        public IField NUMERIC_RETURN_CODE_0014AS { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0014AS); } }
        public IField NUMERIC_RETURN_CODE_0014 { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0014); } }
        public IField NUMERIC_RETURN_CODE_0014XX { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0014XX); } }
        public IField TEXT_RETURN_CODE_0014AS { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0014AS); } }
        public IField TEXT_RETURN_CODE_0014 { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0014); } }
        public IField TEXT_RETURN_CODE_0014XX { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0014XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.GLOBDATA, (GLOBDATA) =>
           {
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_COMMAND, (PSMGR_IEF_COMMAND) =>
               {
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_1, FieldType.String, 8);
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_2, FieldType.String, 72);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_TRANCODE, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_STATE, FieldType.PackedDecimal, 11);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_INFOMSG, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_USER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_TERMINAL_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_PRINTER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_DATE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_TIME, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_RUNTIME_TYPE, FieldType.String, 4);
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA, (PSMGR_FUNCTION_DATA) =>
               {
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_ERRMSG, FieldType.String, 4);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_NAME, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_DDURA, (PSMGR_FUNC_IN_DDURA) =>
                   {
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_YEAR, (DDURA_YEAR) =>
                       {
                           DDURA_YEAR.CreateNewField(Names.DDURA_Y_MISS, FieldType.String, 1);
                           DDURA_YEAR.CreateNewField(Names.DDURA_YYYY, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_MONTH, (DDURA_MONTH) =>
                       {
                           DDURA_MONTH.CreateNewField(Names.DDURA_M_MISS, FieldType.String, 1);
                           DDURA_MONTH.CreateNewField(Names.DDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_DAY, (DDURA_DAY) =>
                       {
                           DDURA_DAY.CreateNewField(Names.DDURA_D_MISS, FieldType.String, 1);
                           DDURA_DAY.CreateNewField(Names.DDURA_DD, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_TIME, FieldType.String, 6);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_TDURA, (PSMGR_FUNC_IN_TDURA) =>
                   {
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_HOUR, (TDURA_HOUR) =>
                       {
                           TDURA_HOUR.CreateNewField(Names.TDURA_H_MISS, FieldType.String, 1);
                           TDURA_HOUR.CreateNewField(Names.TDURA_HH, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_MINUTE, (TDURA_MINUTE) =>
                       {
                           TDURA_MINUTE.CreateNewField(Names.TDURA_M_MISS, FieldType.String, 1);
                           TDURA_MINUTE.CreateNewField(Names.TDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_SECOND, (TDURA_SECOND) =>
                       {
                           TDURA_SECOND.CreateNewField(Names.TDURA_S_MISS, FieldType.String, 1);
                           TDURA_SECOND.CreateNewField(Names.TDURA_SS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_TIME, FieldType.String, 6);
               });
               GLOBDATA.CreateNewFillerField(2, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_NEXTTRAN, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_MSGTYPE, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(11, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_DEBUG_FLAGS, (PSMGR_IEF_DEBUG_FLAGS) =>
               {
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewField(Names.PSMGR_IEF_DEBUG, FieldType.String, 1)
                       .NewCheckField(Names.PSMGR_DEBUG_ON, "Y")
                       ;
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewFillerField(15, FillWith.Hashes);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ENVIRONMENT_DATA, (PSMGR_ENVIRONMENT_DATA) =>
               {
                   PSMGR_ENVIRONMENT_DATA.CreateNewField(Names.PSMGR_PCB_CNT, FieldType.CompInt, 9);
                   PSMGR_ENVIRONMENT_DATA.CreateNewGroupArray(Names.PSMGR_PCB_ENTRY, 255, (PSMGR_PCB_ENTRY) =>
                   {
                       PSMGR_PCB_ENTRY.CreateNewField(Names.PSMGR_PCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
               {
                   PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
                   PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
                   {
                       PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ERROR_DATA, (PSMGR_ERROR_DATA) =>
               {
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ACTION_NAME, FieldType.String, 32);
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ENCOUNTERED_SW, FieldType.String, 1);
                   PSMGR_ERROR_DATA.CreateNewField(Names.VIEW_OVERFLOW_SW, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DASG_DATA, (PSMGR_DASG_DATA) =>
               {
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ACTION_ID_X, (ACTION_ID_X) =>
                   {
                       ACTION_ID_X.CreateNewField(Names.ACTION_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ATTRIBUTE_ID_X, (ATTRIBUTE_ID_X) =>
                   {
                       ATTRIBUTE_ID_X.CreateNewField(Names.ATTRIBUTE_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewField(Names.STATUS_FLAG, FieldType.String, 2)
                       .NewCheckField(Names.FATAL_ERROR_SF, "FE")
                       .NewCheckField(Names.DB_ERROR_SF, "DB")
                       .NewCheckField(Names.ABORT_SHOW_DBMS_MSG_SF, "AB")
                       .NewCheckField(Names.ABORT_SHOW_USER_MSG_SF, "AM")
                       .NewCheckField(Names.RETRY_TRAN_REQUESTED_SF, "RT")
                       .NewCheckField(Names.PSTEP_USE_FAILURE, "PU")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.LAST_STATUS, FieldType.String, 2)
                       .NewCheckField(Names.DB_ERROR_FL_LS, "DB")
                       .NewCheckField(Names.DB_DEADLOCK_TIMOUT_FL_LS, "DT")
                       .NewCheckField(Names.DUPLICATE_FOUND_FL_LS, "DF")
                       .NewCheckField(Names.INVALID_DATAA_FL_LS, "IA")
                       .NewCheckField(Names.INVALID_DATAB_TYPE_FL_LS, "BT")
                       .NewCheckField(Names.INVALID_DATAB_PERM_FL_LS, "BP")
                       .NewCheckField(Names.FATAL_ERROR_FL_LS, "FE")
                       .NewCheckField(Names.NOT_FOUND_FL_LS, "NF")
                       .NewCheckField(Names.NOT_UNIQUE_FL_LS, "NU")
                       .NewCheckField(Names.IEF_FUNCTION_ERROR_FL_LS, "IE")
                       .NewCheckField(Names.IEF_DURATION_ERROR_FL_LS, "DE")
                       .NewCheckField(Names.USED_PSTEP_NOT_FOUND, "PO")
                       .NewCheckField(Names.USED_PSTEP_ROUTING_ERR, "PX")
                       .NewCheckField(Names.USED_PSTEP_SND_FMT_ERR, "PF")
                       .NewCheckField(Names.USED_PSTEP_ENCRYPT_ERR, "PN")
                       .NewCheckField(Names.USED_PSTEP_SND_BFR_ERR, "PS")
                       .NewCheckField(Names.USED_PSTEP_RCV_BFR_ERR, "PR")
                       .NewCheckField(Names.USED_PSTEP_RCV_FMT_ERR, "PU")
                       .NewCheckField(Names.USED_PSTEP_TIRSECR_ERR, "PE")
                       .NewCheckField(Names.USED_PSTEP_TOKEN_ERR, "PT")
                       .NewCheckField(Names.USED_PSTEP_SEND_MAX_SIZE, "PM")
                       .NewCheckField(Names.USED_PSTEP_SECG_ERR, "PB")
                       .NewCheckField(Names.USED_PSTEP_ALLOC_ERR, "PA")
                       .NewCheckField(Names.USED_PSTEP_CONNECT_ERR, "PC")
                       .NewCheckField(Names.USED_PSTEP_XERR, "PD")
                       .NewCheckField(Names.USED_PSTEP_RCV_UA_ERR, "PH")
                       .NewCheckField(Names.USED_PSTEP_RCV_ES_ERR, "PI")
                       .NewCheckField(Names.USED_PSTEP_XFAL, "PJ")
                       .NewCheckField(Names.USED_PSTEP_SETOA_ERR, "PK")
                       .NewCheckField(Names.USED_PSTEP_RCV_VIEW_ERR, "PL")
                       .NewCheckField(Names.USED_PSTEP_DECRYPT_ERR, "PP")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.SAVE_SQLCA, FieldType.String, 255);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DEBUG_DATA, (PSMGR_DEBUG_DATA) =>
               {
                   PSMGR_DEBUG_DATA.CreateNewField(Names.PSMGR_TRACE_ADR, FieldType.CompInt, 9);
                   PSMGR_DEBUG_DATA.CreateNewGroup(Names.LAST_STATEMENT_X, (LAST_STATEMENT_X) =>
                   {
                       LAST_STATEMENT_X.CreateNewField(Names.LAST_STATEMENT_NUM, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_ID, FieldType.String, 10);
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_NAME, FieldType.String, 32);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_TIRDATE_SAVEAREA, FieldType.String, 12);
               GLOBDATA.CreateNewGroup(Names.PSMGR_TIRDATE_CMCB, (PSMGR_TIRDATE_CMCB) =>
               {
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATE, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIME, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(8, FillWith.Hashes);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_INC, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RC, FieldType.CompShort, 4)
                       .NewCheckField(Names.PSMGR_TIRDATE_OK, +0)
                       .NewCheckField(Names.PSMGR_TIRDATE_WARNING, +4)
                       .NewCheckField(Names.PSMGR_TIRDATE_ERROR, +8)
                       ;
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_REQ, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIMEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RETMSG, FieldType.String, 60);

                   IField PSMGR_TIRDATE_TSTAMP_local = PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TSTAMP, FieldType.String, 20);
                   PSMGR_TIRDATE_CMCB.CreateNewGroupRedefine("FILLER_d5", PSMGR_TIRDATE_TSTAMP_local, (FILLER_d5) =>
                   {
                       FILLER_d5.CreateNewField(Names.PSMGR_TIRDATE_DATE_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d5.CreateNewField(Names.PSMGR_TIRDATE_TIME_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d5.CreateNewFillerField(4, FillWith.Hashes);
                   });
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_SKIP_VAL, FieldType.String, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(95, FillWith.Hashes);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_ROLLBACK_RQSTED, FieldType.String, 1)
                   .NewCheckField(Names.ROLLBACK_RQSTED, "R")
                   .NewCheckField(Names.ABEND_RQSTED, "A")
                   .NewCheckField(Names.TERMINATE_RQSTED, "T")
                   ;
               GLOBDATA.CreateNewGroup(Names.TIRTRCE_SAVE_AREA, (TIRTRCE_SAVE_AREA) =>
               {
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.BOTTOM_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.END_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_STMT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_OF_CALL, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT_STATUS, FieldType.String, 3);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_AB_NAME, FieldType.String, 32);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLOR, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLORT, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.HILITE, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_ON_OFF, FieldType.String, 3);
               });
               GLOBDATA.CreateNewGroup(Names.CASCADE_DELETE_FLAGS, (CASCADE_DELETE_FLAGS) =>
               {
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V1PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V2PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE1, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE2, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.PROCESSQ_FLAG, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ACTIVE_DIALECT, (PSMGR_ACTIVE_DIALECT) =>
               {
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.DIALECT_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.MESSAGE_TABLE_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.TRANSLATE_TABLE_NAME, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA_EXT, (PSMGR_FUNCTION_DATA_EXT) =>
               {
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_IN_TIMESTAMP, FieldType.String, 20);
                   PSMGR_FUNCTION_DATA_EXT.CreateNewGroup(Names.PSMGR_FUNC_IN_TSDURA, (PSMGR_FUNC_IN_TSDURA) =>
                   {
                       PSMGR_FUNC_IN_TSDURA.CreateNewGroup(Names.TSDURA_MICROSECOND, (TSDURA_MICROSECOND) =>
                       {
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_M_MISS, FieldType.String, 1);
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_MS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_OUT_TIMESTAMP, FieldType.String, 20);
               });
               GLOBDATA.CreateNewFillerField(8, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_CICS_FAIL_SW, FieldType.String, 1)
                   .NewCheckField(Names.INHIBIT_CICS_RECEIVE, "I")
                   ;
               GLOBDATA.CreateNewField(Names.CLIENT_USERID, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.CLIENT_PASSWORD, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.LOAD_MODULE_NAME, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.INSTRUMENT_CODE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_RETRY_LIMIT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_TIMEOUT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewGroup(Names.PSMGR_EXTRA_ERRINFO, (PSMGR_EXTRA_ERRINFO) =>
               {
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_MSG_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_ADDR, FieldType.String, 8);
               });
               GLOBDATA.CreateNewField(Names.TX_RETRY_COUNT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_USER_RETRY_ALLOWED, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(3, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_PTRS, (PSMGR_PSTEP_USE_PTRS) =>
               {
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_FAIL_MSG_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_GURB_REST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_LIPS_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_TBL_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_DDF_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_COMM_ID, FieldType.String, 8);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_APPL_LIST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_CURR_PST_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_SYSFLDS, (PSMGR_PSTEP_USE_SYSFLDS) =>
               {
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBERRCD, FieldType.String, 4);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBFN, FieldType.String, 2);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP, FieldType.String, 8);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP2, FieldType.String, 8);
               });
               GLOBDATA.CreateNewFillerField(199, FillWith.Hashes);
           });

            recordDef.CreateNewGroup(Names.IMPORT_0001EV, (IMPORT_0001EV) =>
           {
               IMPORT_0001EV.CreateNewGroup(Names.EXTERNAL_0001ET, (EXTERNAL_0001ET) =>
               {
                   EXTERNAL_0001ET.CreateNewField(Names.FILE_INSTRUCTION_0001AS, FieldType.String, 1);

                   IField FILE_INSTRUCTION_0001_local = EXTERNAL_0001ET.CreateNewField(Names.FILE_INSTRUCTION_0001, FieldType.String, 10);
                   EXTERNAL_0001ET.CreateNewFieldRedefine(Names.FILE_INSTRUCTION_0001XX, FieldType.String, FILE_INSTRUCTION_0001_local, 10);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0002EV, (EXPORT_0002EV) =>
           {
               EXPORT_0002EV.CreateNewGroup(Names.FDSO_RECONCILIATION_FIL_0002ET, (FDSO_RECONCILIATION_FIL_0002ET) =>
               {
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.RECORD_IDENTIFIER_0002AS, FieldType.String, 1);

                   IField RECORD_IDENTIFIER_0002_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.RECORD_IDENTIFIER_0002, FieldType.String, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.RECORD_IDENTIFIER_0002XX, FieldType.String, RECORD_IDENTIFIER_0002_local, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.SUBMITTING_STATE_0002AS, FieldType.String, 1);

                   IField SUBMITTING_STATE_0002_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.SUBMITTING_STATE_0002, FieldType.String, 2);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.SUBMITTING_STATE_0002XX, FieldType.String, SUBMITTING_STATE_0002_local, 2);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.LOCAL_CODE_0002AS, FieldType.String, 1);

                   IField LOCAL_CODE_0002_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.LOCAL_CODE_0002, FieldType.String, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.LOCAL_CODE_0002XX, FieldType.String, LOCAL_CODE_0002_local, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.SSN_0002AS, FieldType.String, 1);

                   IField SSN_0002_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.SSN_0002, FieldType.SignedNumeric, 9);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.SSN_0002XX, FieldType.String, SSN_0002_local, 9);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.CASE_NUMBER_0002AS, FieldType.String, 1);

                   IField CASE_NUMBER_0002_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.CASE_NUMBER_0002, FieldType.String, 15);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.CASE_NUMBER_0002XX, FieldType.String, CASE_NUMBER_0002_local, 15);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.LAST_NAME_0002AS, FieldType.String, 1);

                   IField LAST_NAME_0002_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.LAST_NAME_0002, FieldType.String, 20);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.LAST_NAME_0002XX, FieldType.String, LAST_NAME_0002_local, 20);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.FIRST_NAME_0002AS, FieldType.String, 1);

                   IField FIRST_NAME_0002_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.FIRST_NAME_0002, FieldType.String, 15);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.FIRST_NAME_0002XX, FieldType.String, FIRST_NAME_0002_local, 15);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.CURRENT_ARREARAGE_AMOUN_0003AS, FieldType.String, 1);

                   IField CURRENT_ARREARAGE_AMOUNT_0003_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.CURRENT_ARREARAGE_AMOUNT_0003, FieldType.SignedNumeric, 8);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.CURRENT_ARREARAGE_AMOUN_0003XX, FieldType.String, CURRENT_ARREARAGE_AMOUNT_0003_local, 8);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.CASE_TYPE_0003AS, FieldType.String, 1);

                   IField CASE_TYPE_0003_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.CASE_TYPE_0003, FieldType.String, 1);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.CASE_TYPE_0003XX, FieldType.String, CASE_TYPE_0003_local, 1);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.PREOFFSET_NOTICE_DATE_0003AS, FieldType.String, 1);

                   IField PREOFFSET_NOTICE_DATE_0003_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.PREOFFSET_NOTICE_DATE_0003, FieldType.String, 8);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.PREOFFSET_NOTICE_DATE_0003XX, FieldType.String, PREOFFSET_NOTICE_DATE_0003_local, 8);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.PREOFFSET_HOLD_IND_0003AS, FieldType.String, 1);

                   IField PREOFFSET_HOLD_IND_0003_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.PREOFFSET_HOLD_IND_0003, FieldType.String, 1);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.PREOFFSET_HOLD_IND_0003XX, FieldType.String, PREOFFSET_HOLD_IND_0003_local, 1);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_ADMINISTRATIVE_OF_0004AS, FieldType.String, 1);

                   IField ETYPE_ADMINISTRATIVE_OFFS_0004_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_ADMINISTRATIVE_OFFS_0004, FieldType.String, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.ETYPE_ADMINISTRATIVE_OF_0004XX, FieldType.String, ETYPE_ADMINISTRATIVE_OFFS_0004_local, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_FEDERAL_RETIREMEN_0005AS, FieldType.String, 1);

                   IField ETYPE_FEDERAL_RETIREMENT_0005_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_FEDERAL_RETIREMENT_0005, FieldType.String, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.ETYPE_FEDERAL_RETIREMEN_0005XX, FieldType.String, ETYPE_FEDERAL_RETIREMENT_0005_local, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_VENDOR_PAYMENT_OR_0006AS, FieldType.String, 1);

                   IField ETYPE_VENDOR_PAYMENT_OR_M_0006_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_VENDOR_PAYMENT_OR_M_0006, FieldType.String, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.ETYPE_VENDOR_PAYMENT_OR_0006XX, FieldType.String, ETYPE_VENDOR_PAYMENT_OR_M_0006_local, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_FEDERAL_SALARY_0006AS, FieldType.String, 1);

                   IField ETYPE_FEDERAL_SALARY_0006_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_FEDERAL_SALARY_0006, FieldType.String, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.ETYPE_FEDERAL_SALARY_0006XX, FieldType.String, ETYPE_FEDERAL_SALARY_0006_local, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_TAX_REFUND_0006AS, FieldType.String, 1);

                   IField ETYPE_TAX_REFUND_0006_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_TAX_REFUND_0006, FieldType.String, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.ETYPE_TAX_REFUND_0006XX, FieldType.String, ETYPE_TAX_REFUND_0006_local, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_PASSPORT_DENIAL_0006AS, FieldType.String, 1);

                   IField ETYPE_PASSPORT_DENIAL_0006_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_PASSPORT_DENIAL_0006, FieldType.String, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.ETYPE_PASSPORT_DENIAL_0006XX, FieldType.String, ETYPE_PASSPORT_DENIAL_0006_local, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_FINANCIAL_INSTITU_0007AS, FieldType.String, 1);

                   IField ETYPE_FINANCIAL_INSTITUTI_0007_local = FDSO_RECONCILIATION_FIL_0002ET.CreateNewField(Names.ETYPE_FINANCIAL_INSTITUTI_0007, FieldType.String, 3);
                   FDSO_RECONCILIATION_FIL_0002ET.CreateNewFieldRedefine(Names.ETYPE_FINANCIAL_INSTITU_0007XX, FieldType.String, ETYPE_FINANCIAL_INSTITUTI_0007_local, 3);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0008EV, (EXPORT_0008EV) =>
           {
               EXPORT_0008EV.CreateNewGroup(Names.FDSO_SNAPSHOT_FILE_RECO_0008ET, (FDSO_SNAPSHOT_FILE_RECO_0008ET) =>
               {
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.SUBMITTING_STATE_0008AS, FieldType.String, 1);

                   IField SUBMITTING_STATE_0008_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.SUBMITTING_STATE_0008, FieldType.String, 2);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.SUBMITTING_STATE_0008XX, FieldType.String, SUBMITTING_STATE_0008_local, 2);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.LOCAL_CODE_0008AS, FieldType.String, 1);

                   IField LOCAL_CODE_0008_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.LOCAL_CODE_0008, FieldType.String, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.LOCAL_CODE_0008XX, FieldType.String, LOCAL_CODE_0008_local, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.SSN_0008AS, FieldType.String, 1);

                   IField SSN_0008_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.SSN_0008, FieldType.SignedNumeric, 9);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.SSN_0008XX, FieldType.String, SSN_0008_local, 9);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.CASE_NUMBER_0008AS, FieldType.String, 1);

                   IField CASE_NUMBER_0008_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.CASE_NUMBER_0008, FieldType.String, 15);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.CASE_NUMBER_0008XX, FieldType.String, CASE_NUMBER_0008_local, 15);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.LAST_NAME_0008AS, FieldType.String, 1);

                   IField LAST_NAME_0008_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.LAST_NAME_0008, FieldType.String, 20);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.LAST_NAME_0008XX, FieldType.String, LAST_NAME_0008_local, 20);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.FIRST_NAME_0008AS, FieldType.String, 1);

                   IField FIRST_NAME_0008_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.FIRST_NAME_0008, FieldType.String, 15);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.FIRST_NAME_0008XX, FieldType.String, FIRST_NAME_0008_local, 15);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.CURRENT_ARREARAGE_AMOUN_0009AS, FieldType.String, 1);

                   IField CURRENT_ARREARAGE_AMOUNT_0009_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.CURRENT_ARREARAGE_AMOUNT_0009, FieldType.SignedNumeric, 8);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.CURRENT_ARREARAGE_AMOUN_0009XX, FieldType.String, CURRENT_ARREARAGE_AMOUNT_0009_local, 8);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.CASE_TYPE_0009AS, FieldType.String, 1);

                   IField CASE_TYPE_0009_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.CASE_TYPE_0009, FieldType.String, 1);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.CASE_TYPE_0009XX, FieldType.String, CASE_TYPE_0009_local, 1);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_ADMINISTRATIVE_OF_0010AS, FieldType.String, 1);

                   IField ETYPE_ADMINISTRATIVE_OFFS_0010_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_ADMINISTRATIVE_OFFS_0010, FieldType.String, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.ETYPE_ADMINISTRATIVE_OF_0010XX, FieldType.String, ETYPE_ADMINISTRATIVE_OFFS_0010_local, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_FEDERAL_RETIREMEN_0011AS, FieldType.String, 1);

                   IField ETYPE_FEDERAL_RETIREMENT_0011_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_FEDERAL_RETIREMENT_0011, FieldType.String, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.ETYPE_FEDERAL_RETIREMEN_0011XX, FieldType.String, ETYPE_FEDERAL_RETIREMENT_0011_local, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_VENDOR_PAYMENT_OR_0012AS, FieldType.String, 1);

                   IField ETYPE_VENDOR_PAYMENT_OR_M_0012_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_VENDOR_PAYMENT_OR_M_0012, FieldType.String, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.ETYPE_VENDOR_PAYMENT_OR_0012XX, FieldType.String, ETYPE_VENDOR_PAYMENT_OR_M_0012_local, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_FEDERAL_SALARY_0012AS, FieldType.String, 1);

                   IField ETYPE_FEDERAL_SALARY_0012_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_FEDERAL_SALARY_0012, FieldType.String, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.ETYPE_FEDERAL_SALARY_0012XX, FieldType.String, ETYPE_FEDERAL_SALARY_0012_local, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_TAX_REFUND_0012AS, FieldType.String, 1);

                   IField ETYPE_TAX_REFUND_0012_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_TAX_REFUND_0012, FieldType.String, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.ETYPE_TAX_REFUND_0012XX, FieldType.String, ETYPE_TAX_REFUND_0012_local, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_PASSPORT_DENIAL_0012AS, FieldType.String, 1);

                   IField ETYPE_PASSPORT_DENIAL_0012_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_PASSPORT_DENIAL_0012, FieldType.String, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.ETYPE_PASSPORT_DENIAL_0012XX, FieldType.String, ETYPE_PASSPORT_DENIAL_0012_local, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_FINANCIAL_INSTITU_0013AS, FieldType.String, 1);

                   IField ETYPE_FINANCIAL_INSTITUTI_0013_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.ETYPE_FINANCIAL_INSTITUTI_0013, FieldType.String, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.ETYPE_FINANCIAL_INSTITU_0013XX, FieldType.String, ETYPE_FINANCIAL_INSTITUTI_0013_local, 3);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.TRANSACTION_TYPE_0013AS, FieldType.String, 1);

                   IField TRANSACTION_TYPE_0013_local = FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewField(Names.TRANSACTION_TYPE_0013, FieldType.String, 1);
                   FDSO_SNAPSHOT_FILE_RECO_0008ET.CreateNewFieldRedefine(Names.TRANSACTION_TYPE_0013XX, FieldType.String, TRANSACTION_TYPE_0013_local, 1);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0014EV, (EXPORT_0014EV) =>
           {
               EXPORT_0014EV.CreateNewGroup(Names.EXTERNAL_0014ET, (EXTERNAL_0014ET) =>
               {
                   EXTERNAL_0014ET.CreateNewField(Names.FILE_INSTRUCTION_0014AS, FieldType.String, 1);

                   IField FILE_INSTRUCTION_0014_local = EXTERNAL_0014ET.CreateNewField(Names.FILE_INSTRUCTION_0014, FieldType.String, 10);
                   EXTERNAL_0014ET.CreateNewFieldRedefine(Names.FILE_INSTRUCTION_0014XX, FieldType.String, FILE_INSTRUCTION_0014_local, 10);
                   EXTERNAL_0014ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0014AS, FieldType.String, 1);

                   IField NUMERIC_RETURN_CODE_0014_local = EXTERNAL_0014ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0014, FieldType.SignedNumeric, 2);
                   EXTERNAL_0014ET.CreateNewFieldRedefine(Names.NUMERIC_RETURN_CODE_0014XX, FieldType.String, NUMERIC_RETURN_CODE_0014_local, 2);
                   EXTERNAL_0014ET.CreateNewField(Names.TEXT_RETURN_CODE_0014AS, FieldType.String, 1);

                   IField TEXT_RETURN_CODE_0014_local = EXTERNAL_0014ET.CreateNewField(Names.TEXT_RETURN_CODE_0014, FieldType.String, 2);
                   EXTERNAL_0014ET.CreateNewFieldRedefine(Names.TEXT_RETURN_CODE_0014XX, FieldType.String, TEXT_RETURN_CODE_0014_local, 2);
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(IEF_RUNTIME_PARM1, args, 0);
            SetPassedParm(IEF_RUNTIME_PARM2, args, 1);
            SetPassedParm(GLOBDATA, args, 2);
            SetPassedParm(IMPORT_0001EV, args, 3);
            SetPassedParm(EXPORT_0002EV, args, 4);
            SetPassedParm(EXPORT_0008EV, args, 5);
            SetPassedParm(EXPORT_0014EV, args, 6);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(IEF_RUNTIME_PARM1, args, 0);
            SetReturnParm(IEF_RUNTIME_PARM2, args, 1);
            SetReturnParm(GLOBDATA, args, 2);
            SetReturnParm(IMPORT_0001EV, args, 3);
            SetReturnParm(EXPORT_0002EV, args, 4);
            SetReturnParm(EXPORT_0008EV, args, 5);
            SetReturnParm(EXPORT_0014EV, args, 6);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXLE90 : EABBase
    {

        #region Public Constructors
        public SWEXLE90()
            : base()
        {
            this.ProgramName.SetValue("SWEXLE90");

            WS = new SWEXLE90_ws();
            FD = new SWEXLE90_fd(WS);
            LS = new SWEXLE90_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXLE90_ws WS;

        //==== File Data Class ========================================
        private SWEXLE90_fd FD;

        //==== Linkage Section Data Class ========================================
        private SWEXLE90_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING IEF-RUNTIME-PARM1 , IEF-RUNTIME-PARM2 , GLOBDATA , IMPORT-0001EV , EXPORT-0002EV , EXPORT-0008EV , EXPORT-0014EV.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0988809236(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0988809236
        /// </summary>
        private void M_MAIN_0988809236(string returnMethod = "")
        {
            M_PARA_0988809236_INIT("M_PARA_0988809236_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0988809236-INIT THRU PARA-0988809236-INIT-EXIT
            M_PARA_0988809236("M_PARA_0988809236_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0988809236 THRU PARA-0988809236-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0988809236
        /// </summary>
        private void M_PARA_0988809236(string returnMethod = "")
        {
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            //COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            LS.TEXT_RETURN_CODE_0014.SetValueWithSpaces();                                                      //COBOL==> MOVE SPACES TO TEXT-RETURN-CODE-0014.
            LS.NUMERIC_RETURN_CODE_0014.SetValue(ZEROES);                                                       //COBOL==> MOVE ZEROES TO NUMERIC-RETURN-CODE-0014.
            LS.FILE_INSTRUCTION_0014.SetValue(LS.FILE_INSTRUCTION_0001);                                        //COBOL==> MOVE FILE-INSTRUCTION-0001 TO FILE-INSTRUCTION-0014.
            if (LS.FILE_INSTRUCTION_0001.IsEqualTo("OPEN"))                                                     //COBOL==> IF FILE-INSTRUCTION-0001 = 'OPEN'
            {
                M_1100_OPEN_FILE("M_1100_EXIT"); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM 1100-OPEN-FILE THRU 1100-EXIT
                M_PARA_0988809236_EXIT(CheckGotoReturn(returnMethod)); return;                                      //COBOL==> GO TO PARA-0988809236-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (LS.FILE_INSTRUCTION_0001.IsEqualTo("READ1"))                                                    //COBOL==> IF FILE-INSTRUCTION-0001 = 'READ1'
            {
                M_1300_READ_FILE("M_1300_EXIT"); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM 1300-READ-FILE THRU 1300-EXIT
                M_PARA_0988809236_EXIT(CheckGotoReturn(returnMethod)); return;                                      //COBOL==> GO TO PARA-0988809236-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (LS.FILE_INSTRUCTION_0001.IsEqualTo("READ2"))                                                    //COBOL==> IF FILE-INSTRUCTION-0001 = 'READ2'
            {
                M_1302_READ_FILE("M_1302_EXIT"); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM 1302-READ-FILE THRU 1302-EXIT
                M_PARA_0988809236_EXIT(CheckGotoReturn(returnMethod)); return;                                      //COBOL==> GO TO PARA-0988809236-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (LS.FILE_INSTRUCTION_0001.IsEqualTo("CLOSE1"))                                                   //COBOL==> IF FILE-INSTRUCTION-0001 = 'CLOSE1'
            {
                M_1401_CLOSE_FILE("M_1401_EXIT"); if (Control.ExitProgram) { return; }                                //COBOL==> PERFORM 1401-CLOSE-FILE THRU 1401-EXIT
                M_PARA_0988809236_EXIT(CheckGotoReturn(returnMethod)); return;                                      //COBOL==> GO TO PARA-0988809236-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (LS.FILE_INSTRUCTION_0001.IsEqualTo("CLOSE2"))                                                   //COBOL==> IF FILE-INSTRUCTION-0001 = 'CLOSE2'
            {
                M_1402_CLOSE_FILE("M_1402_EXIT"); if (Control.ExitProgram) { return; }                                //COBOL==> PERFORM 1402-CLOSE-FILE THRU 1402-EXIT
                M_PARA_0988809236_EXIT(CheckGotoReturn(returnMethod)); return;                                      //COBOL==> GO TO PARA-0988809236-EXIT
            }                                                                                                   //COBOL==> END-IF.
            LS.TEXT_RETURN_CODE_0014.SetValue("FN");                                                            //COBOL==> MOVE 'FN' TO TEXT-RETURN-CODE-0014.
            LS.NUMERIC_RETURN_CODE_0014.SetValue(1);                                                            //COBOL==> MOVE 1 TO NUMERIC-RETURN-CODE-0014.
            if (returnMethod != "" && returnMethod != "M_PARA_0988809236") { M_PARA_0988809236_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0988809236_EXIT
        /// </summary>
        private void M_PARA_0988809236_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0988809236_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0988809236_EXIT") { M_1100_OPEN_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1100_OPEN_FILE
        /// </summary>
        private void M_1100_OPEN_FILE(string returnMethod = "")
        {
            //COMMENT:     DISPLAY 'OPEN FILE NOW : ' FILE-INSTRUCTION-0001.
            FD.EXTFILE1.OpenFile(FileAccessMode.Read);                                                          //COBOL==> OPEN INPUT EXTFILE1.
                                                                                                                //COMMENT:     DISPLAY 'FILE STATUS: ' EXTFILE1-STAT.
            if (!(WS.EXTFILE1_STAT.IsEqualTo(0)))                                                               //COBOL==> IF EXTFILE1-STAT NOT = 0
            {
                //COMMENT:        DISPLAY 'NOT ZERO ' EXTFILE1-STAT
                LS.TEXT_RETURN_CODE_0014.SetValue("OP");                                                            //COBOL==> MOVE 'OP' TO TEXT-RETURN-CODE-0014
                LS.NUMERIC_RETURN_CODE_0014.SetValue(WS.EXTFILE1_STAT);                                             //COBOL==> MOVE EXTFILE1-STAT TO NUMERIC-RETURN-CODE-0014
            }                                                                                                   //COBOL==> END-IF.
            FD.EXTFILE2.OpenFile(FileAccessMode.Read);                                                          //COBOL==> OPEN INPUT EXTFILE2.
                                                                                                                //COMMENT:     DISPLAY 'FILE STATUS: ' EXTFILE2-STAT.
            if (!(WS.EXTFILE2_STAT.IsEqualTo(0)))                                                               //COBOL==> IF EXTFILE2-STAT NOT = 0
            {
                //COMMENT:        DISPLAY 'NOT ZERO ' EXTFILE2-STAT
                LS.TEXT_RETURN_CODE_0014.SetValue("OP");                                                            //COBOL==> MOVE 'OP' TO TEXT-RETURN-CODE-0014
                LS.NUMERIC_RETURN_CODE_0014.SetValue(WS.EXTFILE2_STAT);                                             //COBOL==> MOVE EXTFILE2-STAT TO NUMERIC-RETURN-CODE-0014
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_1100_OPEN_FILE") { M_1100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1100_EXIT
        /// </summary>
        private void M_1100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1100_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1100_EXIT") { M_1300_READ_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1300_READ_FILE
        /// </summary>
        private void M_1300_READ_FILE(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '1300-READ-FILE'.
            WS.WS_FDSO_RECON_DETAIL.SetValue(FD.EXTFILE1.ReadLineInto());                                       //COBOL==> READ EXTFILE1 INTO WS-FDSO-RECON-DETAIL.
                                                                                                                //COMMENT:     DISPLAY 'FILE STATUS :' EXTFILE1-STAT.
            if (WS.EXTFILE1_STAT.IsEqualTo("10"))                                                               //COBOL==> IF EXTFILE1-STAT = '10'
            {
                LS.TEXT_RETURN_CODE_0014.SetValue("E1");                                                            //COBOL==> MOVE 'E1' TO TEXT-RETURN-CODE-0014
                LS.NUMERIC_RETURN_CODE_0014.SetValue(WS.EXTFILE1_STAT);                                             //COBOL==> MOVE EXTFILE1-STAT TO NUMERIC-RETURN-CODE-0014
                M_1401_CLOSE_FILE("M_1401_EXIT"); if (Control.ExitProgram) { return; }                                //COBOL==> PERFORM 1401-CLOSE-FILE THRU 1401-EXIT
                M_1300_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1300-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (!(WS.EXTFILE1_STAT.IsEqualTo("00")))                                                            //COBOL==> IF EXTFILE1-STAT NOT = '00'
            {
                LS.TEXT_RETURN_CODE_0014.SetValue("XX");                                                            //COBOL==> MOVE 'XX' TO TEXT-RETURN-CODE-0014
                LS.NUMERIC_RETURN_CODE_0014.SetValue(WS.EXTFILE1_STAT);                                             //COBOL==> MOVE EXTFILE1-STAT TO NUMERIC-RETURN-CODE-0014
                M_1401_CLOSE_FILE("M_1401_EXIT"); if (Control.ExitProgram) { return; }                                //COBOL==> PERFORM 1401-CLOSE-FILE THRU 1401-EXIT
                M_1300_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1300-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (!(WS.SSN.IsNumericValue()))                                                                    //COBOL==> IF SSN NOT NUMERIC
            {
                WS.SSN.SetValue(ZEROES);                                                                            //COBOL==> MOVE ZEROES TO SSN
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT:     DISPLAY 'CURRENT-ARREARAGE-AMT :' CURRENT-ARREARAGE-AMT
            if (!(WS.CURRENT_ARREARAGE_AMT.IsNumericValue()))                                                  //COBOL==> IF CURRENT-ARREARAGE-AMT NOT NUMERIC
            {
                WS.CURRENT_ARREARAGE_AMT.SetValue(ZEROES);                                                          //COBOL==> MOVE ZEROES TO CURRENT-ARREARAGE-AMT
            }                                                                                                   //COBOL==> END-IF.
            LS.RECORD_IDENTIFIER_0002.SetValue(WS.RECORD_IDENTIFIER);                                           //COBOL==> MOVE RECORD-IDENTIFIER TO RECORD-IDENTIFIER-0002
            LS.SUBMITTING_STATE_0002.SetValue(WS.SUBMITTING_STATE);                                             //COBOL==> MOVE SUBMITTING-STATE TO SUBMITTING-STATE-0002
            LS.LOCAL_CODE_0002.SetValue(WS.LOCAL_CODE);                                                         //COBOL==> MOVE LOCAL-CODE TO LOCAL-CODE-0002
            LS.SSN_0002.SetValue(WS.SSN);                                                                       //COBOL==> MOVE SSN TO SSN-0002
            LS.CASE_NUMBER_0002.SetValue(WS.CASE_NUMBER);                                                       //COBOL==> MOVE CASE-NUMBER TO CASE-NUMBER-0002
            LS.LAST_NAME_0002.SetValue(WS.LAST_NAME);                                                           //COBOL==> MOVE LAST-NAME TO LAST-NAME-0002
            LS.FIRST_NAME_0002.SetValue(WS.FIRST_NAME);                                                         //COBOL==> MOVE FIRST-NAME TO FIRST-NAME-0002
            LS.CURRENT_ARREARAGE_AMOUNT_0003.SetValue(WS.CURRENT_ARREARAGE_AMT);                                //COBOL==> MOVE CURRENT-ARREARAGE-AMT TO CURRENT-ARREARAGE-AMOUNT-0003
            LS.CASE_TYPE_0003.SetValue(WS.CASE_TYPE);                                                           //COBOL==> MOVE CASE-TYPE TO CASE-TYPE-0003
            LS.PREOFFSET_NOTICE_DATE_0003.SetValue(WS.PREOFFSET_NOTICE_DATE);                                   //COBOL==> MOVE PREOFFSET-NOTICE-DATE TO PREOFFSET-NOTICE-DATE-0003
            LS.PREOFFSET_HOLD_IND_0003.SetValue(WS.PREOFFSET_HOLD_IND);                                         //COBOL==> MOVE PREOFFSET-HOLD-IND TO PREOFFSET-HOLD-IND-0003
            LS.ETYPE_ADMINISTRATIVE_OFFS_0004.SetValue(WS.ADMINISTRATIVE_OFFSET);                               //COBOL==> MOVE ADMINISTRATIVE-OFFSET TO ETYPE-ADMINISTRATIVE-OFFS-0004
            LS.ETYPE_FEDERAL_RETIREMENT_0005.SetValue(WS.FED_RETIREMENT_OFFSET);                                //COBOL==> MOVE FED-RETIREMENT-OFFSET TO ETYPE-FEDERAL-RETIREMENT-0005
            LS.ETYPE_VENDOR_PAYMENT_OR_M_0006.SetValue(WS.VENDOR_PAYMENTS_OFFSET);                              //COBOL==> MOVE VENDOR-PAYMENTS-OFFSET TO ETYPE-VENDOR-PAYMENT-OR-M-0006
            LS.ETYPE_FEDERAL_SALARY_0006.SetValue(WS.FEDERAL_SALARY_OFFSET);                                    //COBOL==> MOVE FEDERAL-SALARY-OFFSET TO ETYPE-FEDERAL-SALARY-0006
            LS.ETYPE_TAX_REFUND_0006.SetValue(WS.TAX_REFUND_OFFSET);                                            //COBOL==> MOVE TAX-REFUND-OFFSET TO ETYPE-TAX-REFUND-0006
            LS.ETYPE_PASSPORT_DENIAL_0006.SetValue(WS.PASSPORT_DENIAL_OFFSET);                                  //COBOL==> MOVE PASSPORT-DENIAL-OFFSET TO ETYPE-PASSPORT-DENIAL-0006
            LS.ETYPE_FINANCIAL_INSTITUTI_0007.SetValue(WS.FIDM_OFFSET);                                         //COBOL==> MOVE FIDM-OFFSET TO ETYPE-FINANCIAL-INSTITUTI-0007 .
            if (returnMethod != "" && returnMethod != "M_1300_READ_FILE") { M_1300_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1300_EXIT
        /// </summary>
        private void M_1300_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1300_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1300_EXIT") { M_1302_READ_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1302_READ_FILE
        /// </summary>
        private void M_1302_READ_FILE(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '1302-READ-FILE'.
            WS.WS_FDSO_SNAPSHOT_DETAIL.SetValue(FD.EXTFILE2.ReadLineInto());                                    //COBOL==> READ EXTFILE2 INTO WS-FDSO-SNAPSHOT-DETAIL.
                                                                                                                //COMMENT:     DISPLAY 'FILE STATUS :' EXTFILE2-STAT.
            if (WS.EXTFILE2_STAT.IsEqualTo("10"))                                                               //COBOL==> IF EXTFILE2-STAT = '10'
            {
                LS.TEXT_RETURN_CODE_0014.SetValue("E2");                                                            //COBOL==> MOVE 'E2' TO TEXT-RETURN-CODE-0014
                LS.NUMERIC_RETURN_CODE_0014.SetValue(WS.EXTFILE2_STAT);                                             //COBOL==> MOVE EXTFILE2-STAT TO NUMERIC-RETURN-CODE-0014
                M_1402_CLOSE_FILE("M_1402_EXIT"); if (Control.ExitProgram) { return; }                                //COBOL==> PERFORM 1402-CLOSE-FILE THRU 1402-EXIT
                M_1302_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1302-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (!(WS.EXTFILE2_STAT.IsEqualTo("00")))                                                            //COBOL==> IF EXTFILE2-STAT NOT = '00'
            {
                LS.TEXT_RETURN_CODE_0014.SetValue("XX");                                                            //COBOL==> MOVE 'XX' TO TEXT-RETURN-CODE-0014
                LS.NUMERIC_RETURN_CODE_0014.SetValue(WS.EXTFILE2_STAT);                                             //COBOL==> MOVE EXTFILE2-STAT TO NUMERIC-RETURN-CODE-0014
                M_1402_CLOSE_FILE("M_1402_EXIT"); if (Control.ExitProgram) { return; }                                //COBOL==> PERFORM 1402-CLOSE-FILE THRU 1402-EXIT
                M_1302_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1302-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (!(WS.SSN_2.IsNumericValue()))                                                                  //COBOL==> IF SSN-2 NOT NUMERIC
            {
                WS.SSN_2.SetValue(ZEROES);                                                                          //COBOL==> MOVE ZEROES TO SSN-2
            }                                                                                                   //COBOL==> END-IF.
            if (!(WS.CURRENT_ARREARAGE_AMT_2.IsNumericValue()))                                                //COBOL==> IF CURRENT-ARREARAGE-AMT-2 NOT NUMERIC
            {
                WS.CURRENT_ARREARAGE_AMT_2.SetValue(ZEROES);                                                        //COBOL==> MOVE ZEROES TO CURRENT-ARREARAGE-AMT-2
            }                                                                                                   //COBOL==> END-IF.
            LS.SUBMITTING_STATE_0008.SetValue(WS.SUBMITTING_STATE_2);                                           //COBOL==> MOVE SUBMITTING-STATE-2 TO SUBMITTING-STATE-0008
            LS.LOCAL_CODE_0008.SetValue(WS.LOCAL_CODE_2);                                                       //COBOL==> MOVE LOCAL-CODE-2 TO LOCAL-CODE-0008
            LS.SSN_0008.SetValue(WS.SSN_2);                                                                     //COBOL==> MOVE SSN-2 TO SSN-0008
            LS.CASE_NUMBER_0008.SetValue(WS.CASE_NUMBER_2);                                                     //COBOL==> MOVE CASE-NUMBER-2 TO CASE-NUMBER-0008
            LS.LAST_NAME_0008.SetValue(WS.LAST_NAME_2);                                                         //COBOL==> MOVE LAST-NAME-2 TO LAST-NAME-0008
            LS.FIRST_NAME_0008.SetValue(WS.FIRST_NAME_2);                                                       //COBOL==> MOVE FIRST-NAME-2 TO FIRST-NAME-0008
            LS.CURRENT_ARREARAGE_AMOUNT_0009.SetValue(WS.CURRENT_ARREARAGE_AMT_2);                              //COBOL==> MOVE CURRENT-ARREARAGE-AMT-2 TO CURRENT-ARREARAGE-AMOUNT-0009
            LS.CASE_TYPE_0009.SetValue(WS.CASE_TYPE_2);                                                         //COBOL==> MOVE CASE-TYPE-2 TO CASE-TYPE-0009
            LS.ETYPE_ADMINISTRATIVE_OFFS_0010.SetValue(WS.ADMINISTRATIVE_OFFSET_2);                             //COBOL==> MOVE ADMINISTRATIVE-OFFSET-2 TO ETYPE-ADMINISTRATIVE-OFFS-0010
            LS.ETYPE_FEDERAL_RETIREMENT_0011.SetValue(WS.FED_RETIREMENT_OFFSET_2);                              //COBOL==> MOVE FED-RETIREMENT-OFFSET-2 TO ETYPE-FEDERAL-RETIREMENT-0011
            LS.ETYPE_VENDOR_PAYMENT_OR_M_0012.SetValue(WS.VENDOR_PAYMENTS_OFFSET_2);                            //COBOL==> MOVE VENDOR-PAYMENTS-OFFSET-2 TO ETYPE-VENDOR-PAYMENT-OR-M-0012
            LS.ETYPE_FEDERAL_SALARY_0012.SetValue(WS.FEDERAL_SALARY_OFFSET_2);                                  //COBOL==> MOVE FEDERAL-SALARY-OFFSET-2 TO ETYPE-FEDERAL-SALARY-0012
            LS.ETYPE_TAX_REFUND_0012.SetValue(WS.TAX_REFUND_OFFSET_2);                                          //COBOL==> MOVE TAX-REFUND-OFFSET-2 TO ETYPE-TAX-REFUND-0012
            LS.ETYPE_PASSPORT_DENIAL_0012.SetValue(WS.PASSPORT_DENIAL_OFFSET_2);                                //COBOL==> MOVE PASSPORT-DENIAL-OFFSET-2 TO ETYPE-PASSPORT-DENIAL-0012
            LS.ETYPE_FINANCIAL_INSTITUTI_0013.SetValue(WS.FIDM_OFFSET_2);                                       //COBOL==> MOVE FIDM-OFFSET-2 TO ETYPE-FINANCIAL-INSTITUTI-0013
            LS.TRANSACTION_TYPE_0013.SetValue(WS.TRANSACTION_TYPE_2);                                           //COBOL==> MOVE TRANSACTION-TYPE-2 TO TRANSACTION-TYPE-0013 .
            if (returnMethod != "" && returnMethod != "M_1302_READ_FILE") { M_1302_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1302_EXIT
        /// </summary>
        private void M_1302_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1302_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1302_EXIT") { M_1401_CLOSE_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1401_CLOSE_FILE
        /// </summary>
        private void M_1401_CLOSE_FILE(string returnMethod = "")
        {
            FD.EXTFILE1.CloseFile();                                                                            //COBOL==> CLOSE EXTFILE1.
            if (!(WS.EXTFILE1_STAT.IsEqualTo(0)))                                                               //COBOL==> IF EXTFILE1-STAT NOT = 0
            {
                LS.TEXT_RETURN_CODE_0014.SetValue("CL");                                                            //COBOL==> MOVE 'CL' TO TEXT-RETURN-CODE-0014
                LS.NUMERIC_RETURN_CODE_0014.SetValue(WS.EXTFILE1_STAT);                                             //COBOL==> MOVE EXTFILE1-STAT TO NUMERIC-RETURN-CODE-0014
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_1401_CLOSE_FILE") { M_1401_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1401_EXIT
        /// </summary>
        private void M_1401_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1401_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1401_EXIT") { M_1402_CLOSE_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1402_CLOSE_FILE
        /// </summary>
        private void M_1402_CLOSE_FILE(string returnMethod = "")
        {
            FD.EXTFILE2.CloseFile();                                                                            //COBOL==> CLOSE EXTFILE2.
            if (!(WS.EXTFILE2_STAT.IsEqualTo(0)))                                                               //COBOL==> IF EXTFILE2-STAT NOT = 0
            {
                LS.TEXT_RETURN_CODE_0014.SetValue("CL");                                                            //COBOL==> MOVE 'CL' TO TEXT-RETURN-CODE-0014
                LS.NUMERIC_RETURN_CODE_0014.SetValue(WS.EXTFILE2_STAT);                                             //COBOL==> MOVE EXTFILE2-STAT TO NUMERIC-RETURN-CODE-0014
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_1402_CLOSE_FILE") { M_1402_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1402_EXIT
        /// </summary>
        private void M_1402_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1402_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1402_EXIT") { M_PARA_0988809236_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0988809236_INIT
        /// </summary>
        private void M_PARA_0988809236_INIT(string returnMethod = "")
        {
            LS.EXPORT_0002EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0002EV
            LS.EXPORT_0008EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0008EV
            LS.EXPORT_0014EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0014EV .
            if (returnMethod != "" && returnMethod != "M_PARA_0988809236_INIT") { M_PARA_0988809236_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0988809236_INIT_EXIT
        /// </summary>
        private void M_PARA_0988809236_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0988809236_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
