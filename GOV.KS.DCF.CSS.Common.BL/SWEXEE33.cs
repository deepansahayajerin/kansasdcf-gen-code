#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2021
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2021-12-07 03:04:10 PM
   **        *   FROM COBOL PGM   :  SWEXEE33
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                              COOL:GEN
               COPYRIGHT 1999, STERLING SOFTWARE, INC.
       NAME: EAB_WRITE_HINS_COVERAGE_CHANGES  DATE: 1999/07/03
       TARGET OS:   MVS                       TIME: 20:03:26
       TARGET DBMS: DB2                       USER: SWSREXL
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
       HIGH PERFORMANCE VIEW PASSING SELECTED
       LAST-STATEMENT-NUM EXECUTION SELECTED
       ENFORCE DEFAULT VALUES WITH DBMS SELECTED
       INIT UNSPECIFIED OPTIONAL FIELDS TO NULL NOT SELECTED
   **************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.IO.Common;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
#endregion

namespace GOV.KS.DCF.CSS.Common.BL
{
    #region File Section Class
    internal class SWEXEE33_fd : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string FileSection = "SWEXEE33_fd_FileSection";
            internal const string HINSOUT = "HINSOUT";
            internal const string DETAIL_REC = "DETAIL_REC";
        }
        #endregion

        #region Direct-access element properties
        public IFileLink HINSOUT { get; set; }
        public IField DETAIL_REC { get { return GetElementByName<IField>(Names.DETAIL_REC); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the FileSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.DETAIL_REC, FieldType.String, 300);

        }

        protected override string GetRecordName()
        {
            return Names.FileSection;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            IFileHandler FileHandler = InversionContainer.GetImplementingObject<IFileHandler>();

            HINSOUT = FileHandler.GetFile("UT_S_FILEOUT");
            HINSOUT.AssociatedBuffer = DETAIL_REC;
            HINSOUT.RecordLength = 300;
        }
        #endregion

        #region Constructors
        public SWEXEE33_fd()
            : base()
        {
            Initialize();

        }
        #endregion
    }
    #endregion File Section Class
    #region Working Storage Class
    internal class SWEXEE33_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXEE33_ws_WorkingStorage";
            internal const string WS_TYPE_PO = "WS_TYPE_PO";
            internal const string WS_PO_RECORD_TYPE = "WS_PO_RECORD_TYPE";
            internal const string WS_PO_POLICY_TYPE = "WS_PO_POLICY_TYPE";
            internal const string WS_PO_BILL_TO = "WS_PO_BILL_TO";
            internal const string WS_PO_BENE_ID = "WS_PO_BENE_ID";
            internal const string WS_PO_CARRIER_CODE = "WS_PO_CARRIER_CODE";
            internal const string WS_PO_EIN = "WS_PO_EIN";
            internal const string WS_PO_EMPLOYER_NAME = "WS_PO_EMPLOYER_NAME";
            internal const string WS_PO_EMPLOYER_STREET1 = "WS_PO_EMPLOYER_STREET1";
            internal const string WS_PO_EMPLOYER_STREET2 = "WS_PO_EMPLOYER_STREET2";
            internal const string WS_PO_EMPLOYER_CITY = "WS_PO_EMPLOYER_CITY";
            internal const string WS_PO_EMPLOYER_STATE = "WS_PO_EMPLOYER_STATE";
            internal const string WS_PO_EMPLOYER_ZIP = "WS_PO_EMPLOYER_ZIP";
            internal const string WS_PO_POLICY_HOLDER_SSN = "WS_PO_POLICY_HOLDER_SSN";
            internal const string WS_PO_POLICY_HOLDER_NUM = "WS_PO_POLICY_HOLDER_NUM";
            internal const string WS_PO_POLICY_HOLDER_LNAME = "WS_PO_POLICY_HOLDER_LNAME";
            internal const string WS_PO_POLICY_HOLDER_FNAME = "WS_PO_POLICY_HOLDER_FNAME";
            internal const string WS_PO_POLICY_NUMBER = "WS_PO_POLICY_NUMBER";
            internal const string WS_PO_GROUP_NUMBER = "WS_PO_GROUP_NUMBER";
            internal const string WS_PO_RELATIONSHIP = "WS_PO_RELATIONSHIP";
            internal const string WS_PO_COURT_ORDER = "WS_PO_COURT_ORDER";
            internal const string WS_PO_VERIFIED = "WS_PO_VERIFIED";
            internal const string WS_PO_VERIFICATION_DATE = "WS_PO_VERIFICATION_DATE";
            internal const string WS_PO_EFFECTIVE_DATE = "WS_PO_EFFECTIVE_DATE";
            internal const string WS_PO_END_DATE = "WS_PO_END_DATE";
            internal const string WS_PO_COVERAGE_1 = "WS_PO_COVERAGE_1";
            internal const string WS_PO_COVERAGE_2 = "WS_PO_COVERAGE_2";
            internal const string WS_PO_COVERAGE_3 = "WS_PO_COVERAGE_3";
            internal const string WS_PO_COVERAGE_4 = "WS_PO_COVERAGE_4";
            internal const string WS_PO_COVERAGE_5 = "WS_PO_COVERAGE_5";
            internal const string WS_PO_COVERAGE_6 = "WS_PO_COVERAGE_6";
            internal const string WS_PO_COVERAGE_7 = "WS_PO_COVERAGE_7";
            internal const string WS_TYPE_AA = "WS_TYPE_AA";
            internal const string WS_AA_RECORD_TYPE = "WS_AA_RECORD_TYPE";
            internal const string WS_AA_CREATION_DATE = "WS_AA_CREATION_DATE";
            internal const string WS_TYPE_ZZ = "WS_TYPE_ZZ";
            internal const string WS_ZZ_RECORD_TYPE = "WS_ZZ_RECORD_TYPE";
            internal const string WS_ZZ_RECORD_COUNT = "WS_ZZ_RECORD_COUNT";
            internal const string WS_TEXT_MAN_WORK_FIELDS = "WS_TEXT_MAN_WORK_FIELDS";
            internal const string WS_SPACE_COUNT = "WS_SPACE_COUNT";
            internal const string WS_SOURCE_LENGTH = "WS_SOURCE_LENGTH";
            internal const string WS_RM_ST = "WS_RM_ST";
            internal const string WS_RM_LNG = "WS_RM_LNG";
        }
        #endregion

        #region Direct-access element properties
        public IGroup WS_TYPE_PO { get { return GetElementByName<IGroup>(Names.WS_TYPE_PO); } }
        public IField WS_PO_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS_PO_RECORD_TYPE); } }
        public IField WS_PO_POLICY_TYPE { get { return GetElementByName<IField>(Names.WS_PO_POLICY_TYPE); } }
        public IField WS_PO_BILL_TO { get { return GetElementByName<IField>(Names.WS_PO_BILL_TO); } }
        public IField WS_PO_BENE_ID { get { return GetElementByName<IField>(Names.WS_PO_BENE_ID); } }
        public IField WS_PO_CARRIER_CODE { get { return GetElementByName<IField>(Names.WS_PO_CARRIER_CODE); } }
        public IField WS_PO_EIN { get { return GetElementByName<IField>(Names.WS_PO_EIN); } }
        public IField WS_PO_EMPLOYER_NAME { get { return GetElementByName<IField>(Names.WS_PO_EMPLOYER_NAME); } }
        public IField WS_PO_EMPLOYER_STREET1 { get { return GetElementByName<IField>(Names.WS_PO_EMPLOYER_STREET1); } }
        public IField WS_PO_EMPLOYER_STREET2 { get { return GetElementByName<IField>(Names.WS_PO_EMPLOYER_STREET2); } }
        public IField WS_PO_EMPLOYER_CITY { get { return GetElementByName<IField>(Names.WS_PO_EMPLOYER_CITY); } }
        public IField WS_PO_EMPLOYER_STATE { get { return GetElementByName<IField>(Names.WS_PO_EMPLOYER_STATE); } }
        public IField WS_PO_EMPLOYER_ZIP { get { return GetElementByName<IField>(Names.WS_PO_EMPLOYER_ZIP); } }
        public IField WS_PO_POLICY_HOLDER_SSN { get { return GetElementByName<IField>(Names.WS_PO_POLICY_HOLDER_SSN); } }
        public IField WS_PO_POLICY_HOLDER_NUM { get { return GetElementByName<IField>(Names.WS_PO_POLICY_HOLDER_NUM); } }
        public IField WS_PO_POLICY_HOLDER_LNAME { get { return GetElementByName<IField>(Names.WS_PO_POLICY_HOLDER_LNAME); } }
        public IField WS_PO_POLICY_HOLDER_FNAME { get { return GetElementByName<IField>(Names.WS_PO_POLICY_HOLDER_FNAME); } }
        public IField WS_PO_POLICY_NUMBER { get { return GetElementByName<IField>(Names.WS_PO_POLICY_NUMBER); } }
        public IField WS_PO_GROUP_NUMBER { get { return GetElementByName<IField>(Names.WS_PO_GROUP_NUMBER); } }
        public IField WS_PO_RELATIONSHIP { get { return GetElementByName<IField>(Names.WS_PO_RELATIONSHIP); } }
        public IField WS_PO_COURT_ORDER { get { return GetElementByName<IField>(Names.WS_PO_COURT_ORDER); } }
        public IField WS_PO_VERIFIED { get { return GetElementByName<IField>(Names.WS_PO_VERIFIED); } }
        public IField WS_PO_VERIFICATION_DATE { get { return GetElementByName<IField>(Names.WS_PO_VERIFICATION_DATE); } }
        public IField WS_PO_EFFECTIVE_DATE { get { return GetElementByName<IField>(Names.WS_PO_EFFECTIVE_DATE); } }
        public IField WS_PO_END_DATE { get { return GetElementByName<IField>(Names.WS_PO_END_DATE); } }
        public IField WS_PO_COVERAGE_1 { get { return GetElementByName<IField>(Names.WS_PO_COVERAGE_1); } }
        public IField WS_PO_COVERAGE_2 { get { return GetElementByName<IField>(Names.WS_PO_COVERAGE_2); } }
        public IField WS_PO_COVERAGE_3 { get { return GetElementByName<IField>(Names.WS_PO_COVERAGE_3); } }
        public IField WS_PO_COVERAGE_4 { get { return GetElementByName<IField>(Names.WS_PO_COVERAGE_4); } }
        public IField WS_PO_COVERAGE_5 { get { return GetElementByName<IField>(Names.WS_PO_COVERAGE_5); } }
        public IField WS_PO_COVERAGE_6 { get { return GetElementByName<IField>(Names.WS_PO_COVERAGE_6); } }
        public IField WS_PO_COVERAGE_7 { get { return GetElementByName<IField>(Names.WS_PO_COVERAGE_7); } }
        public IGroup WS_TYPE_AA { get { return GetElementByName<IGroup>(Names.WS_TYPE_AA); } }
        public IField WS_AA_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS_AA_RECORD_TYPE); } }
        public IField WS_AA_CREATION_DATE { get { return GetElementByName<IField>(Names.WS_AA_CREATION_DATE); } }
        public IGroup WS_TYPE_ZZ { get { return GetElementByName<IGroup>(Names.WS_TYPE_ZZ); } }
        public IField WS_ZZ_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS_ZZ_RECORD_TYPE); } }
        public IField WS_ZZ_RECORD_COUNT { get { return GetElementByName<IField>(Names.WS_ZZ_RECORD_COUNT); } }
        public IGroup WS_TEXT_MAN_WORK_FIELDS { get { return GetElementByName<IGroup>(Names.WS_TEXT_MAN_WORK_FIELDS); } }
        public IField WS_SPACE_COUNT { get { return GetElementByName<IField>(Names.WS_SPACE_COUNT); } }
        public IField WS_SOURCE_LENGTH { get { return GetElementByName<IField>(Names.WS_SOURCE_LENGTH); } }
        public IField WS_RM_ST { get { return GetElementByName<IField>(Names.WS_RM_ST); } }
        public IField WS_RM_LNG { get { return GetElementByName<IField>(Names.WS_RM_LNG); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.WS_TYPE_PO, (WS_TYPE_PO) =>
           {
               WS_TYPE_PO.CreateNewField(Names.WS_PO_RECORD_TYPE, FieldType.String, 2, "PO");
               WS_TYPE_PO.CreateNewField(Names.WS_PO_POLICY_TYPE, FieldType.String, 1, "1");
               WS_TYPE_PO.CreateNewField(Names.WS_PO_BILL_TO, FieldType.String, 1, "C");
               WS_TYPE_PO.CreateNewField(Names.WS_PO_BENE_ID, FieldType.String, 10, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_CARRIER_CODE, FieldType.String, 7, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_EIN, FieldType.UnsignedNumeric, 9, ZERO);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_EMPLOYER_NAME, FieldType.String, 39, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_EMPLOYER_STREET1, FieldType.String, 30, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_EMPLOYER_STREET2, FieldType.String, 30, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_EMPLOYER_CITY, FieldType.String, 15, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_EMPLOYER_STATE, FieldType.String, 2, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_EMPLOYER_ZIP, FieldType.String, 5, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_POLICY_HOLDER_SSN, FieldType.UnsignedNumeric, 9, ZERO);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_POLICY_HOLDER_NUM, FieldType.String, 10, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_POLICY_HOLDER_LNAME, FieldType.String, 17, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_POLICY_HOLDER_FNAME, FieldType.String, 12, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_POLICY_NUMBER, FieldType.String, 16, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_GROUP_NUMBER, FieldType.String, 16, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_RELATIONSHIP, FieldType.String, 1, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_COURT_ORDER, FieldType.String, 1, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_VERIFIED, FieldType.String, 1, "M");
               WS_TYPE_PO.CreateNewField(Names.WS_PO_VERIFICATION_DATE, FieldType.UnsignedNumeric, 8, 00010101);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_EFFECTIVE_DATE, FieldType.UnsignedNumeric, 8, 00010101);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_END_DATE, FieldType.UnsignedNumeric, 8, 00010101);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_COVERAGE_1, FieldType.String, 1, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_COVERAGE_2, FieldType.String, 1, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_COVERAGE_3, FieldType.String, 1, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_COVERAGE_4, FieldType.String, 1, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_COVERAGE_5, FieldType.String, 1, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_COVERAGE_6, FieldType.String, 1, SPACES);
               WS_TYPE_PO.CreateNewField(Names.WS_PO_COVERAGE_7, FieldType.String, 1, SPACES);
               WS_TYPE_PO.CreateNewFillerField(FieldType.String, 36, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE_AA, (WS_TYPE_AA) =>
           {
               WS_TYPE_AA.CreateNewField(Names.WS_AA_RECORD_TYPE, FieldType.String, 2, "AA");
               WS_TYPE_AA.CreateNewField(Names.WS_AA_CREATION_DATE, FieldType.UnsignedNumeric, 8, 00010101);
               WS_TYPE_AA.CreateNewFillerField(FieldType.String, 290, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE_ZZ, (WS_TYPE_ZZ) =>
           {
               WS_TYPE_ZZ.CreateNewField(Names.WS_ZZ_RECORD_TYPE, FieldType.String, 2, "ZZ");
               WS_TYPE_ZZ.CreateNewField(Names.WS_ZZ_RECORD_COUNT, FieldType.UnsignedNumeric, 8, 0);
               WS_TYPE_ZZ.CreateNewFillerField(FieldType.String, 290, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TEXT_MAN_WORK_FIELDS, (WS_TEXT_MAN_WORK_FIELDS) =>
           {
               WS_TEXT_MAN_WORK_FIELDS.CreateNewField(Names.WS_SPACE_COUNT, FieldType.UnsignedNumeric, 2, ZEROES);
               WS_TEXT_MAN_WORK_FIELDS.CreateNewField(Names.WS_SOURCE_LENGTH, FieldType.UnsignedNumeric, 2, 20);
               WS_TEXT_MAN_WORK_FIELDS.CreateNewField(Names.WS_RM_ST, FieldType.UnsignedNumeric, 2, ZEROES);
               WS_TEXT_MAN_WORK_FIELDS.CreateNewField(Names.WS_RM_LNG, FieldType.UnsignedNumeric, 2, ZEROES);
           });

        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXEE33_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXEE33_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string GLOBDATA = "GLOBDATA";
            internal const string PSMGR_IEF_COMMAND = "PSMGR_IEF_COMMAND";
            internal const string PSMGR_IEF_COMMAND_1 = "PSMGR_IEF_COMMAND_1";
            internal const string PSMGR_IEF_COMMAND_2 = "PSMGR_IEF_COMMAND_2";
            internal const string PSMGR_IEF_TRANCODE = "PSMGR_IEF_TRANCODE";
            internal const string PSMGR_EXIT_STATE = "PSMGR_EXIT_STATE";
            internal const string PSMGR_EXIT_INFOMSG = "PSMGR_EXIT_INFOMSG";
            internal const string PSMGR_USER_ID = "PSMGR_USER_ID";
            internal const string PSMGR_TERMINAL_ID = "PSMGR_TERMINAL_ID";
            internal const string PSMGR_PRINTER_ID = "PSMGR_PRINTER_ID";
            internal const string PSMGR_CURRENT_DATE = "PSMGR_CURRENT_DATE";
            internal const string PSMGR_CURRENT_TIME = "PSMGR_CURRENT_TIME";
            internal const string PSMGR_RUNTIME_TYPE = "PSMGR_RUNTIME_TYPE";
            internal const string PSMGR_FUNCTION_DATA = "PSMGR_FUNCTION_DATA";
            internal const string PSMGR_FUNC_ERRMSG = "PSMGR_FUNC_ERRMSG";
            internal const string PSMGR_FUNC_NAME = "PSMGR_FUNC_NAME";
            internal const string PSMGR_FUNC_IN_DATE = "PSMGR_FUNC_IN_DATE";
            internal const string PSMGR_FUNC_IN_DDURA = "PSMGR_FUNC_IN_DDURA";
            internal const string DDURA_YEAR = "DDURA_YEAR";
            internal const string DDURA_Y_MISS = "DDURA_Y_MISS";
            internal const string DDURA_YYYY = "DDURA_YYYY";
            internal const string DDURA_MONTH = "DDURA_MONTH";
            internal const string DDURA_M_MISS = "DDURA_M_MISS";
            internal const string DDURA_MM = "DDURA_MM";
            internal const string DDURA_DAY = "DDURA_DAY";
            internal const string DDURA_D_MISS = "DDURA_D_MISS";
            internal const string DDURA_DD = "DDURA_DD";
            internal const string PSMGR_FUNC_OUT_DATE = "PSMGR_FUNC_OUT_DATE";
            internal const string PSMGR_FUNC_IN_TIME = "PSMGR_FUNC_IN_TIME";
            internal const string PSMGR_FUNC_IN_TDURA = "PSMGR_FUNC_IN_TDURA";
            internal const string TDURA_HOUR = "TDURA_HOUR";
            internal const string TDURA_H_MISS = "TDURA_H_MISS";
            internal const string TDURA_HH = "TDURA_HH";
            internal const string TDURA_MINUTE = "TDURA_MINUTE";
            internal const string TDURA_M_MISS = "TDURA_M_MISS";
            internal const string TDURA_MM = "TDURA_MM";
            internal const string TDURA_SECOND = "TDURA_SECOND";
            internal const string TDURA_S_MISS = "TDURA_S_MISS";
            internal const string TDURA_SS = "TDURA_SS";
            internal const string PSMGR_FUNC_OUT_TIME = "PSMGR_FUNC_OUT_TIME";
            internal const string PSMGR_IEF_NEXTTRAN = "PSMGR_IEF_NEXTTRAN";
            internal const string PSMGR_EXIT_MSGTYPE = "PSMGR_EXIT_MSGTYPE";
            internal const string PSMGR_IEF_DEBUG_FLAGS = "PSMGR_IEF_DEBUG_FLAGS";
            internal const string PSMGR_IEF_DEBUG = "PSMGR_IEF_DEBUG";
            internal const string PSMGR_DEBUG_ON = "PSMGR_DEBUG_ON";
            internal const string PSMGR_ENVIRONMENT_DATA = "PSMGR_ENVIRONMENT_DATA";
            internal const string PSMGR_PCB_CNT = "PSMGR_PCB_CNT";
            internal const string PSMGR_PCB_ENTRY = "PSMGR_PCB_ENTRY";
            internal const string PSMGR_PCB_ADR = "PSMGR_PCB_ADR";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string PSMGR_ERROR_DATA = "PSMGR_ERROR_DATA";
            internal const string ERROR_ACTION_NAME = "ERROR_ACTION_NAME";
            internal const string ERROR_ENCOUNTERED_SW = "ERROR_ENCOUNTERED_SW";
            internal const string VIEW_OVERFLOW_SW = "VIEW_OVERFLOW_SW";
            internal const string PSMGR_DASG_DATA = "PSMGR_DASG_DATA";
            internal const string ACTION_ID_X = "ACTION_ID_X";
            internal const string ACTION_ID = "ACTION_ID";
            internal const string ATTRIBUTE_ID_X = "ATTRIBUTE_ID_X";
            internal const string ATTRIBUTE_ID = "ATTRIBUTE_ID";
            internal const string STATUS_FLAG = "STATUS_FLAG";
            internal const string FATAL_ERROR_SF = "FATAL_ERROR_SF";
            internal const string PSTEP_USE_FAILURE = "PSTEP_USE_FAILURE";
            internal const string LAST_STATUS = "LAST_STATUS";
            internal const string DB_ERROR_FL_LS = "DB_ERROR_FL_LS";
            internal const string DUPLICATE_FOUND_FL_LS = "DUPLICATE_FOUND_FL_LS";
            internal const string INVALID_DATAA_FL_LS = "INVALID_DATAA_FL_LS";
            internal const string INVALID_DATAB_TYPE_FL_LS = "INVALID_DATAB_TYPE_FL_LS";
            internal const string INVALID_DATAB_PERM_FL_LS = "INVALID_DATAB_PERM_FL_LS";
            internal const string FATAL_ERROR_FL_LS = "FATAL_ERROR_FL_LS";
            internal const string NOT_FOUND_FL_LS = "NOT_FOUND_FL_LS";
            internal const string NOT_UNIQUE_FL_LS = "NOT_UNIQUE_FL_LS";
            internal const string IEF_FUNCTION_ERROR_FL_LS = "IEF_FUNCTION_ERROR_FL_LS";
            internal const string IEF_DURATION_ERROR_FL_LS = "IEF_DURATION_ERROR_FL_LS";
            internal const string USED_PSTEP_NOT_FOUND = "USED_PSTEP_NOT_FOUND";
            internal const string USED_PSTEP_ROUTING_ERR = "USED_PSTEP_ROUTING_ERR";
            internal const string USED_PSTEP_SND_FMT_ERR = "USED_PSTEP_SND_FMT_ERR";
            internal const string USED_PSTEP_ENCRYPT_ERR = "USED_PSTEP_ENCRYPT_ERR";
            internal const string USED_PSTEP_SND_BFR_ERR = "USED_PSTEP_SND_BFR_ERR";
            internal const string USED_PSTEP_RCV_BFR_ERR = "USED_PSTEP_RCV_BFR_ERR";
            internal const string USED_PSTEP_RCV_FMT_ERR = "USED_PSTEP_RCV_FMT_ERR";
            internal const string USED_PSTEP_TIRSECR_ERR = "USED_PSTEP_TIRSECR_ERR";
            internal const string USED_PSTEP_TOKEN_ERR = "USED_PSTEP_TOKEN_ERR";
            internal const string USED_PSTEP_SEND_MAX_SIZE = "USED_PSTEP_SEND_MAX_SIZE";
            internal const string USED_PSTEP_SECG_ERR = "USED_PSTEP_SECG_ERR";
            internal const string USED_PSTEP_ALLOC_ERR = "USED_PSTEP_ALLOC_ERR";
            internal const string USED_PSTEP_CONNECT_ERR = "USED_PSTEP_CONNECT_ERR";
            internal const string USED_PSTEP_XERR = "USED_PSTEP_XERR";
            internal const string USED_PSTEP_RCV_UA_ERR = "USED_PSTEP_RCV_UA_ERR";
            internal const string USED_PSTEP_RCV_ES_ERR = "USED_PSTEP_RCV_ES_ERR";
            internal const string USED_PSTEP_XFAL = "USED_PSTEP_XFAL";
            internal const string USED_PSTEP_SETOA_ERR = "USED_PSTEP_SETOA_ERR";
            internal const string USED_PSTEP_RCV_VIEW_ERR = "USED_PSTEP_RCV_VIEW_ERR";
            internal const string USED_PSTEP_DECRYPT_ERR = "USED_PSTEP_DECRYPT_ERR";
            internal const string SAVE_SQLCA = "SAVE_SQLCA";
            internal const string PSMGR_DEBUG_DATA = "PSMGR_DEBUG_DATA";
            internal const string PSMGR_TRACE_ADR = "PSMGR_TRACE_ADR";
            internal const string LAST_STATEMENT_X = "LAST_STATEMENT_X";
            internal const string LAST_STATEMENT_NUM = "LAST_STATEMENT_NUM";
            internal const string CUR_AB_ID = "CUR_AB_ID";
            internal const string CUR_AB_NAME = "CUR_AB_NAME";
            internal const string PSMGR_TIRDATE_SAVEAREA = "PSMGR_TIRDATE_SAVEAREA";
            internal const string PSMGR_TIRDATE_CMCB = "PSMGR_TIRDATE_CMCB";
            internal const string PSMGR_TIRDATE_DATE = "PSMGR_TIRDATE_DATE";
            internal const string PSMGR_TIRDATE_TIME = "PSMGR_TIRDATE_TIME";
            internal const string PSMGR_TIRDATE_INC = "PSMGR_TIRDATE_INC";
            internal const string PSMGR_TIRDATE_RC = "PSMGR_TIRDATE_RC";
            internal const string PSMGR_TIRDATE_OK = "PSMGR_TIRDATE_OK";
            internal const string PSMGR_TIRDATE_WARNING = "PSMGR_TIRDATE_WARNING";
            internal const string PSMGR_TIRDATE_ERROR = "PSMGR_TIRDATE_ERROR";
            internal const string PSMGR_TIRDATE_REQ = "PSMGR_TIRDATE_REQ";
            internal const string PSMGR_TIRDATE_DATEF = "PSMGR_TIRDATE_DATEF";
            internal const string PSMGR_TIRDATE_TIMEF = "PSMGR_TIRDATE_TIMEF";
            internal const string PSMGR_TIRDATE_RETMSG = "PSMGR_TIRDATE_RETMSG";
            internal const string PSMGR_TIRDATE_TSTAMP = "PSMGR_TIRDATE_TSTAMP";
            internal const string PSMGR_TIRDATE_DATE_Z = "PSMGR_TIRDATE_DATE_Z";
            internal const string PSMGR_TIRDATE_TIME_Z = "PSMGR_TIRDATE_TIME_Z";
            internal const string PSMGR_ROLLBACK_RQSTED = "PSMGR_ROLLBACK_RQSTED";
            internal const string ROLLBACK_RQSTED = "ROLLBACK_RQSTED";
            internal const string ABEND_RQSTED = "ABEND_RQSTED";
            internal const string TERMINATE_RQSTED = "TERMINATE_RQSTED";
            internal const string TIRTRCE_SAVE_AREA = "TIRTRCE_SAVE_AREA";
            internal const string TOP_INDX = "TOP_INDX";
            internal const string BOTTOM_INDX = "BOTTOM_INDX";
            internal const string END_INDX = "END_INDX";
            internal const string LAST_STMT = "LAST_STMT";
            internal const string TOP_OF_CALL = "TOP_OF_CALL";
            internal const string TRACE_BREAK_POINT = "TRACE_BREAK_POINT";
            internal const string TRACE_BREAK_POINT_STATUS = "TRACE_BREAK_POINT_STATUS";
            internal const string LAST_AB_NAME = "LAST_AB_NAME";
            internal const string COLOR = "COLOR";
            internal const string COLORT = "COLORT";
            internal const string HILITE = "HILITE";
            internal const string TRACE_ON_OFF = "TRACE_ON_OFF";
            internal const string CASCADE_DELETE_FLAGS = "CASCADE_DELETE_FLAGS";
            internal const string V1PRESENT = "V1PRESENT";
            internal const string V2PRESENT = "V2PRESENT";
            internal const string CASCADE1 = "CASCADE1";
            internal const string CASCADE2 = "CASCADE2";
            internal const string PROCESSQ_FLAG = "PROCESSQ_FLAG";
            internal const string PSMGR_ACTIVE_DIALECT = "PSMGR_ACTIVE_DIALECT";
            internal const string DIALECT_NAME = "DIALECT_NAME";
            internal const string MESSAGE_TABLE_NAME = "MESSAGE_TABLE_NAME";
            internal const string TRANSLATE_TABLE_NAME = "TRANSLATE_TABLE_NAME";
            internal const string PSMGR_FUNCTION_DATA_EXT = "PSMGR_FUNCTION_DATA_EXT";
            internal const string PSMGR_FUNC_IN_TIMESTAMP = "PSMGR_FUNC_IN_TIMESTAMP";
            internal const string PSMGR_FUNC_IN_TSDURA = "PSMGR_FUNC_IN_TSDURA";
            internal const string TSDURA_MICROSECOND = "TSDURA_MICROSECOND";
            internal const string TSDURA_M_MISS = "TSDURA_M_MISS";
            internal const string TSDURA_MS = "TSDURA_MS";
            internal const string PSMGR_FUNC_OUT_TIMESTAMP = "PSMGR_FUNC_OUT_TIMESTAMP";
            internal const string PSMGR_CICS_FAIL_SW = "PSMGR_CICS_FAIL_SW";
            internal const string INHIBIT_CICS_RECEIVE = "INHIBIT_CICS_RECEIVE";
            internal const string CLIENT_USERID = "CLIENT_USERID";
            internal const string CLIENT_PASSWORD = "CLIENT_PASSWORD";
            internal const string LOAD_MODULE_NAME = "LOAD_MODULE_NAME";
            internal const string INSTRUMENT_CODE = "INSTRUMENT_CODE";
            internal const string TX_RETRY_LIMIT = "TX_RETRY_LIMIT";
            internal const string TX_TIMEOUT = "TX_TIMEOUT";
            internal const string PSMGR_EXTRA_ERRINFO = "PSMGR_EXTRA_ERRINFO";
            internal const string ERRINFO_BUF_SIZE = "ERRINFO_BUF_SIZE";
            internal const string ERRINFO_MSG_SIZE = "ERRINFO_MSG_SIZE";
            internal const string ERRINFO_BUF_ADDR = "ERRINFO_BUF_ADDR";
            internal const string PSMGR_PSTEP_USE_PTRS = "PSMGR_PSTEP_USE_PTRS";
            internal const string PSTEP_FAIL_MSG_PTR = "PSTEP_FAIL_MSG_PTR";
            internal const string PSTEP_GURB_REST_PTR = "PSTEP_GURB_REST_PTR";
            internal const string PSTEP_LIPS_PTR = "PSTEP_LIPS_PTR";
            internal const string PSTEP_TBL_PTR = "PSTEP_TBL_PTR";
            internal const string PSTEP_DDF_PTR = "PSTEP_DDF_PTR";
            internal const string PSTEP_COMM_ID = "PSTEP_COMM_ID";
            internal const string PSTEP_APPL_LIST_PTR = "PSTEP_APPL_LIST_PTR";
            internal const string PSTEP_CURR_PST_PTR = "PSTEP_CURR_PST_PTR";
            internal const string PSMGR_PSTEP_USE_SYSFLDS = "PSMGR_PSTEP_USE_SYSFLDS";
            internal const string PSMGR_EIBERRCD = "PSMGR_EIBERRCD";
            internal const string PSMGR_EIBFN = "PSMGR_EIBFN";
            internal const string PSMGR_EIBRESP = "PSMGR_EIBRESP";
            internal const string PSMGR_EIBRESP2 = "PSMGR_EIBRESP2";
            internal const string IMPORT_0001EV = "IMPORT_0001EV";
            internal const string HEALTH_INSURANCE_COMPAN_0001ET = "HEALTH_INSURANCE_COMPAN_0001ET";
            internal const string CARRIER_CODE_0001AS = "CARRIER_CODE_0001AS";
            internal const string CARRIER_CODE_0001 = "CARRIER_CODE_0001";
            internal const string CARRIER_CODE_0001XX = "CARRIER_CODE_0001XX";
            internal const string IMPORT_0002EV = "IMPORT_0002EV";
            internal const string HEALTH_INSURANCE_COVERA_0002ET = "HEALTH_INSURANCE_COVERA_0002ET";
            internal const string POLICY_PAID_BY_CSE_PERS_0003AS = "POLICY_PAID_BY_CSE_PERS_0003AS";
            internal const string POLICY_PAID_BY_CSE_PERSON_0003 = "POLICY_PAID_BY_CSE_PERSON_0003";
            internal const string POLICY_PAID_BY_CSE_PERS_0003XX = "POLICY_PAID_BY_CSE_PERS_0003XX";
            internal const string INSURANCE_GROUP_NUMBER_0003AS = "INSURANCE_GROUP_NUMBER_0003AS";
            internal const string INSURANCE_GROUP_NUMBER_0003 = "INSURANCE_GROUP_NUMBER_0003";
            internal const string INSURANCE_GROUP_NUMBER_0003XX = "INSURANCE_GROUP_NUMBER_0003XX";
            internal const string INSURANCE_POLICY_NUMBER_0004AS = "INSURANCE_POLICY_NUMBER_0004AS";
            internal const string INSURANCE_POLICY_NUMBER_0004 = "INSURANCE_POLICY_NUMBER_0004";
            internal const string INSURANCE_POLICY_NUMBER_0004XX = "INSURANCE_POLICY_NUMBER_0004XX";
            internal const string COVERAGE_CODE_1_0004AS = "COVERAGE_CODE_1_0004AS";
            internal const string COVERAGE_CODE_1_0004 = "COVERAGE_CODE_1_0004";
            internal const string COVERAGE_CODE_1_0004XX = "COVERAGE_CODE_1_0004XX";
            internal const string COVERAGE_CODE_2_0004AS = "COVERAGE_CODE_2_0004AS";
            internal const string COVERAGE_CODE_2_0004 = "COVERAGE_CODE_2_0004";
            internal const string COVERAGE_CODE_2_0004XX = "COVERAGE_CODE_2_0004XX";
            internal const string COVERAGE_CODE_3_0004AS = "COVERAGE_CODE_3_0004AS";
            internal const string COVERAGE_CODE_3_0004 = "COVERAGE_CODE_3_0004";
            internal const string COVERAGE_CODE_3_0004XX = "COVERAGE_CODE_3_0004XX";
            internal const string COVERAGE_CODE_4_0004AS = "COVERAGE_CODE_4_0004AS";
            internal const string COVERAGE_CODE_4_0004 = "COVERAGE_CODE_4_0004";
            internal const string COVERAGE_CODE_4_0004XX = "COVERAGE_CODE_4_0004XX";
            internal const string COVERAGE_CODE_5_0004AS = "COVERAGE_CODE_5_0004AS";
            internal const string COVERAGE_CODE_5_0004 = "COVERAGE_CODE_5_0004";
            internal const string COVERAGE_CODE_5_0004XX = "COVERAGE_CODE_5_0004XX";
            internal const string COVERAGE_CODE_6_0004AS = "COVERAGE_CODE_6_0004AS";
            internal const string COVERAGE_CODE_6_0004 = "COVERAGE_CODE_6_0004";
            internal const string COVERAGE_CODE_6_0004XX = "COVERAGE_CODE_6_0004XX";
            internal const string COVERAGE_CODE_7_0004AS = "COVERAGE_CODE_7_0004AS";
            internal const string COVERAGE_CODE_7_0004 = "COVERAGE_CODE_7_0004";
            internal const string COVERAGE_CODE_7_0004XX = "COVERAGE_CODE_7_0004XX";
            internal const string IMPORT_COVERED_PERSON_0005EV = "IMPORT_COVERED_PERSON_0005EV";
            internal const string CSE_PERSONS_WORK_SET_0005ET = "CSE_PERSONS_WORK_SET_0005ET";
            internal const string NUMBER_0005AS = "NUMBER_0005AS";
            internal const string NUMBER_0005 = "NUMBER_0005";
            internal const string NUMBER_0005XX = "NUMBER_0005XX";
            internal const string IMPORT_POLICY_HOLDER_0006EV = "IMPORT_POLICY_HOLDER_0006EV";
            internal const string CSE_PERSONS_WORK_SET_0006ET = "CSE_PERSONS_WORK_SET_0006ET";
            internal const string NUMBER_0006AS = "NUMBER_0006AS";
            internal const string NUMBER_0006 = "NUMBER_0006";
            internal const string NUMBER_0006XX = "NUMBER_0006XX";
            internal const string SSN_0006AS = "SSN_0006AS";
            internal const string SSN_0006 = "SSN_0006";
            internal const string SSN_0006XX = "SSN_0006XX";
            internal const string FIRST_NAME_0006AS = "FIRST_NAME_0006AS";
            internal const string FIRST_NAME_0006 = "FIRST_NAME_0006";
            internal const string FIRST_NAME_0006XX = "FIRST_NAME_0006XX";
            internal const string LAST_NAME_0006AS = "LAST_NAME_0006AS";
            internal const string LAST_NAME_0006 = "LAST_NAME_0006";
            internal const string LAST_NAME_0006XX = "LAST_NAME_0006XX";
            internal const string IMPORT_RELATION_TO_POLI_0007EV = "IMPORT_RELATION_TO_POLI_0007EV";
            internal const string IEF_SUPPLIED_0007ET = "IEF_SUPPLIED_0007ET";
            internal const string SELECT_CHAR_0007AS = "SELECT_CHAR_0007AS";
            internal const string SELECT_CHAR_0007 = "SELECT_CHAR_0007";
            internal const string SELECT_CHAR_0007XX = "SELECT_CHAR_0007XX";
            internal const string IMPORT_0008EV = "IMPORT_0008EV";
            internal const string PERSONAL_HEALTH_INSURAN_0008ET = "PERSONAL_HEALTH_INSURAN_0008ET";
            internal const string COVERAGE_VERIFIED_DATE_0008AS = "COVERAGE_VERIFIED_DATE_0008AS";
            internal const string COVERAGE_VERIFIED_DATE_0008 = "COVERAGE_VERIFIED_DATE_0008";
            internal const string COVERAGE_VERIFIED_DATE_0008XX = "COVERAGE_VERIFIED_DATE_0008XX";
            internal const string COVERAGE_BEGIN_DATE_0008AS = "COVERAGE_BEGIN_DATE_0008AS";
            internal const string COVERAGE_BEGIN_DATE_0008 = "COVERAGE_BEGIN_DATE_0008";
            internal const string COVERAGE_BEGIN_DATE_0008XX = "COVERAGE_BEGIN_DATE_0008XX";
            internal const string COVERAGE_END_DATE_0008AS = "COVERAGE_END_DATE_0008AS";
            internal const string COVERAGE_END_DATE_0008 = "COVERAGE_END_DATE_0008";
            internal const string COVERAGE_END_DATE_0008XX = "COVERAGE_END_DATE_0008XX";
            internal const string IMPORT_0009EV = "IMPORT_0009EV";
            internal const string EMPLOYER_0009ET = "EMPLOYER_0009ET";
            internal const string EIN_0009AS = "EIN_0009AS";
            internal const string EIN_0009 = "EIN_0009";
            internal const string EIN_0009XX = "EIN_0009XX";
            internal const string NAME_0009AS = "NAME_0009AS";
            internal const string NAME_0009 = "NAME_0009";
            internal const string NAME_0009XX = "NAME_0009XX";
            internal const string IMPORT_0010EV = "IMPORT_0010EV";
            internal const string EMPLOYER_ADDRESS_0010ET = "EMPLOYER_ADDRESS_0010ET";
            internal const string LOCATION_TYPE_0010AS = "LOCATION_TYPE_0010AS";
            internal const string LOCATION_TYPE_0010 = "LOCATION_TYPE_0010";
            internal const string LOCATION_TYPE_0010XX = "LOCATION_TYPE_0010XX";
            internal const string STREET1_0010AS = "STREET1_0010AS";
            internal const string STREET1_0010 = "STREET1_0010";
            internal const string STREET1_0010XX = "STREET1_0010XX";
            internal const string STREET2_0010AS = "STREET2_0010AS";
            internal const string STREET2_0010 = "STREET2_0010";
            internal const string STREET2_0010XX = "STREET2_0010XX";
            internal const string CITY_0010AS = "CITY_0010AS";
            internal const string CITY_0010 = "CITY_0010";
            internal const string CITY_0010XX = "CITY_0010XX";
            internal const string STATE_0010AS = "STATE_0010AS";
            internal const string STATE_0010 = "STATE_0010";
            internal const string STATE_0010XX = "STATE_0010XX";
            internal const string ZIP_CODE_0010AS = "ZIP_CODE_0010AS";
            internal const string ZIP_CODE_0010 = "ZIP_CODE_0010";
            internal const string ZIP_CODE_0010XX = "ZIP_CODE_0010XX";
            internal const string IMPORT_0011EV = "IMPORT_0011EV";
            internal const string DATE_WORK_AREA_0011ET = "DATE_WORK_AREA_0011ET";
            internal const string DATE_0011AS = "DATE_0011AS";
            internal const string DATE_0011 = "DATE_0011";
            internal const string DATE_0011XX = "DATE_0011XX";
            internal const string IMPORT_RECORD_0012EV = "IMPORT_RECORD_0012EV";
            internal const string IEF_SUPPLIED_0012ET = "IEF_SUPPLIED_0012ET";
            internal const string COUNT_0012AS = "COUNT_0012AS";
            internal const string COUNT_0012 = "COUNT_0012";
            internal const string COUNT_0012XX = "COUNT_0012XX";
            internal const string IMPORT_0013EV = "IMPORT_0013EV";
            internal const string EAB_FILE_HANDLING_0013ET = "EAB_FILE_HANDLING_0013ET";
            internal const string ACTION_0013AS = "ACTION_0013AS";
            internal const string ACTION_0013 = "ACTION_0013";
            internal const string ACTION_0013XX = "ACTION_0013XX";
            internal const string EXPORT_0014EV = "EXPORT_0014EV";
            internal const string EAB_FILE_HANDLING_0014ET = "EAB_FILE_HANDLING_0014ET";
            internal const string STATUS_0014AS = "STATUS_0014AS";
            internal const string STATUS_0014 = "STATUS_0014";
            internal const string STATUS_0014XX = "STATUS_0014XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup GLOBDATA { get { return GetElementByName<IGroup>(Names.GLOBDATA); } }
        public IGroup PSMGR_IEF_COMMAND { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_COMMAND); } }
        public IField PSMGR_IEF_COMMAND_1 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_1); } }
        public IField PSMGR_IEF_COMMAND_2 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_2); } }
        public IField PSMGR_IEF_TRANCODE { get { return GetElementByName<IField>(Names.PSMGR_IEF_TRANCODE); } }
        public IField PSMGR_EXIT_STATE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_STATE); } }
        public IField PSMGR_EXIT_INFOMSG { get { return GetElementByName<IField>(Names.PSMGR_EXIT_INFOMSG); } }
        public IField PSMGR_USER_ID { get { return GetElementByName<IField>(Names.PSMGR_USER_ID); } }
        public IField PSMGR_TERMINAL_ID { get { return GetElementByName<IField>(Names.PSMGR_TERMINAL_ID); } }
        public IField PSMGR_PRINTER_ID { get { return GetElementByName<IField>(Names.PSMGR_PRINTER_ID); } }
        public IField PSMGR_CURRENT_DATE { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_DATE); } }
        public IField PSMGR_CURRENT_TIME { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_TIME); } }
        public IField PSMGR_RUNTIME_TYPE { get { return GetElementByName<IField>(Names.PSMGR_RUNTIME_TYPE); } }
        public IGroup PSMGR_FUNCTION_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA); } }
        public IField PSMGR_FUNC_ERRMSG { get { return GetElementByName<IField>(Names.PSMGR_FUNC_ERRMSG); } }
        public IField PSMGR_FUNC_NAME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_NAME); } }
        public IField PSMGR_FUNC_IN_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_DATE); } }
        public IGroup PSMGR_FUNC_IN_DDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_DDURA); } }
        public IGroup DDURA_YEAR { get { return GetElementByName<IGroup>(Names.DDURA_YEAR); } }
        public IField DDURA_Y_MISS { get { return GetElementByName<IField>(Names.DDURA_Y_MISS); } }
        public IField DDURA_YYYY { get { return GetElementByName<IField>(Names.DDURA_YYYY); } }
        public IGroup DDURA_MONTH { get { return GetElementByName<IGroup>(Names.DDURA_MONTH); } }
        public IField DDURA_M_MISS { get { return GetElementByName<IField>(Names.DDURA_M_MISS); } }
        public IField DDURA_MM { get { return GetElementByName<IField>(Names.DDURA_MM); } }
        public IGroup DDURA_DAY { get { return GetElementByName<IGroup>(Names.DDURA_DAY); } }
        public IField DDURA_D_MISS { get { return GetElementByName<IField>(Names.DDURA_D_MISS); } }
        public IField DDURA_DD { get { return GetElementByName<IField>(Names.DDURA_DD); } }
        public IField PSMGR_FUNC_OUT_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_DATE); } }
        public IField PSMGR_FUNC_IN_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIME); } }
        public IGroup PSMGR_FUNC_IN_TDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TDURA); } }
        public IGroup TDURA_HOUR { get { return GetElementByName<IGroup>(Names.TDURA_HOUR); } }
        public IField TDURA_H_MISS { get { return GetElementByName<IField>(Names.TDURA_H_MISS); } }
        public IField TDURA_HH { get { return GetElementByName<IField>(Names.TDURA_HH); } }
        public IGroup TDURA_MINUTE { get { return GetElementByName<IGroup>(Names.TDURA_MINUTE); } }
        public IField TDURA_M_MISS { get { return GetElementByName<IField>(Names.TDURA_M_MISS); } }
        public IField TDURA_MM { get { return GetElementByName<IField>(Names.TDURA_MM); } }
        public IGroup TDURA_SECOND { get { return GetElementByName<IGroup>(Names.TDURA_SECOND); } }
        public IField TDURA_S_MISS { get { return GetElementByName<IField>(Names.TDURA_S_MISS); } }
        public IField TDURA_SS { get { return GetElementByName<IField>(Names.TDURA_SS); } }
        public IField PSMGR_FUNC_OUT_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIME); } }
        public IField PSMGR_IEF_NEXTTRAN { get { return GetElementByName<IField>(Names.PSMGR_IEF_NEXTTRAN); } }
        public IField PSMGR_EXIT_MSGTYPE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_MSGTYPE); } }
        public IGroup PSMGR_IEF_DEBUG_FLAGS { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_DEBUG_FLAGS); } }
        public IField PSMGR_IEF_DEBUG { get { return GetElementByName<IField>(Names.PSMGR_IEF_DEBUG); } }
        public ICheckField PSMGR_DEBUG_ON { get { return GetElementByName<ICheckField>(Names.PSMGR_DEBUG_ON); } }
        public IGroup PSMGR_ENVIRONMENT_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ENVIRONMENT_DATA); } }
        public IField PSMGR_PCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_PCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_PCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_PCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_PCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_PCB_ADR); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup PSMGR_ERROR_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ERROR_DATA); } }
        public IField ERROR_ACTION_NAME { get { return GetElementByName<IField>(Names.ERROR_ACTION_NAME); } }
        public IField ERROR_ENCOUNTERED_SW { get { return GetElementByName<IField>(Names.ERROR_ENCOUNTERED_SW); } }
        public IField VIEW_OVERFLOW_SW { get { return GetElementByName<IField>(Names.VIEW_OVERFLOW_SW); } }
        public IGroup PSMGR_DASG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DASG_DATA); } }
        public IGroup ACTION_ID_X { get { return GetElementByName<IGroup>(Names.ACTION_ID_X); } }
        public IField ACTION_ID { get { return GetElementByName<IField>(Names.ACTION_ID); } }
        public IGroup ATTRIBUTE_ID_X { get { return GetElementByName<IGroup>(Names.ATTRIBUTE_ID_X); } }
        public IField ATTRIBUTE_ID { get { return GetElementByName<IField>(Names.ATTRIBUTE_ID); } }
        public IField STATUS_FLAG { get { return GetElementByName<IField>(Names.STATUS_FLAG); } }
        public ICheckField FATAL_ERROR_SF { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_SF); } }
        public ICheckField PSTEP_USE_FAILURE { get { return GetElementByName<ICheckField>(Names.PSTEP_USE_FAILURE); } }
        public IField LAST_STATUS { get { return GetElementByName<IField>(Names.LAST_STATUS); } }
        public ICheckField DB_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_ERROR_FL_LS); } }
        public ICheckField DUPLICATE_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.DUPLICATE_FOUND_FL_LS); } }
        public ICheckField INVALID_DATAA_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAA_FL_LS); } }
        public ICheckField INVALID_DATAB_TYPE_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_TYPE_FL_LS); } }
        public ICheckField INVALID_DATAB_PERM_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_PERM_FL_LS); } }
        public ICheckField FATAL_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_FL_LS); } }
        public ICheckField NOT_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_FOUND_FL_LS); } }
        public ICheckField NOT_UNIQUE_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_UNIQUE_FL_LS); } }
        public ICheckField IEF_FUNCTION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_FUNCTION_ERROR_FL_LS); } }
        public ICheckField IEF_DURATION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_DURATION_ERROR_FL_LS); } }
        public ICheckField USED_PSTEP_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_NOT_FOUND); } }
        public ICheckField USED_PSTEP_ROUTING_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ROUTING_ERR); } }
        public ICheckField USED_PSTEP_SND_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_FMT_ERR); } }
        public ICheckField USED_PSTEP_ENCRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ENCRYPT_ERR); } }
        public ICheckField USED_PSTEP_SND_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_FMT_ERR); } }
        public ICheckField USED_PSTEP_TIRSECR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TIRSECR_ERR); } }
        public ICheckField USED_PSTEP_TOKEN_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TOKEN_ERR); } }
        public ICheckField USED_PSTEP_SEND_MAX_SIZE { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SEND_MAX_SIZE); } }
        public ICheckField USED_PSTEP_SECG_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SECG_ERR); } }
        public ICheckField USED_PSTEP_ALLOC_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ALLOC_ERR); } }
        public ICheckField USED_PSTEP_CONNECT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_CONNECT_ERR); } }
        public ICheckField USED_PSTEP_XERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XERR); } }
        public ICheckField USED_PSTEP_RCV_UA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_UA_ERR); } }
        public ICheckField USED_PSTEP_RCV_ES_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_ES_ERR); } }
        public ICheckField USED_PSTEP_XFAL { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XFAL); } }
        public ICheckField USED_PSTEP_SETOA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SETOA_ERR); } }
        public ICheckField USED_PSTEP_RCV_VIEW_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_VIEW_ERR); } }
        public ICheckField USED_PSTEP_DECRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_DECRYPT_ERR); } }
        public IField SAVE_SQLCA { get { return GetElementByName<IField>(Names.SAVE_SQLCA); } }
        public IGroup PSMGR_DEBUG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DEBUG_DATA); } }
        public IField PSMGR_TRACE_ADR { get { return GetElementByName<IField>(Names.PSMGR_TRACE_ADR); } }
        public IGroup LAST_STATEMENT_X { get { return GetElementByName<IGroup>(Names.LAST_STATEMENT_X); } }
        public IField LAST_STATEMENT_NUM { get { return GetElementByName<IField>(Names.LAST_STATEMENT_NUM); } }
        public IField CUR_AB_ID { get { return GetElementByName<IField>(Names.CUR_AB_ID); } }
        public IField CUR_AB_NAME { get { return GetElementByName<IField>(Names.CUR_AB_NAME); } }
        public IField PSMGR_TIRDATE_SAVEAREA { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SAVEAREA); } }
        public IGroup PSMGR_TIRDATE_CMCB { get { return GetElementByName<IGroup>(Names.PSMGR_TIRDATE_CMCB); } }
        public IField PSMGR_TIRDATE_DATE { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE); } }
        public IField PSMGR_TIRDATE_TIME { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME); } }
        public IField PSMGR_TIRDATE_INC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_INC); } }
        public IField PSMGR_TIRDATE_RC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RC); } }
        public ICheckField PSMGR_TIRDATE_OK { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_OK); } }
        public ICheckField PSMGR_TIRDATE_WARNING { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_WARNING); } }
        public ICheckField PSMGR_TIRDATE_ERROR { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_ERROR); } }
        public IField PSMGR_TIRDATE_REQ { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_REQ); } }
        public IField PSMGR_TIRDATE_DATEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATEF); } }
        public IField PSMGR_TIRDATE_TIMEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIMEF); } }
        public IField PSMGR_TIRDATE_RETMSG { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RETMSG); } }
        public IField PSMGR_TIRDATE_TSTAMP { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TSTAMP); } }
        public IField PSMGR_TIRDATE_DATE_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE_Z); } }
        public IField PSMGR_TIRDATE_TIME_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME_Z); } }
        public IField PSMGR_ROLLBACK_RQSTED { get { return GetElementByName<IField>(Names.PSMGR_ROLLBACK_RQSTED); } }
        public ICheckField ROLLBACK_RQSTED { get { return GetElementByName<ICheckField>(Names.ROLLBACK_RQSTED); } }
        public ICheckField ABEND_RQSTED { get { return GetElementByName<ICheckField>(Names.ABEND_RQSTED); } }
        public ICheckField TERMINATE_RQSTED { get { return GetElementByName<ICheckField>(Names.TERMINATE_RQSTED); } }
        public IGroup TIRTRCE_SAVE_AREA { get { return GetElementByName<IGroup>(Names.TIRTRCE_SAVE_AREA); } }
        public IField TOP_INDX { get { return GetElementByName<IField>(Names.TOP_INDX); } }
        public IField BOTTOM_INDX { get { return GetElementByName<IField>(Names.BOTTOM_INDX); } }
        public IField END_INDX { get { return GetElementByName<IField>(Names.END_INDX); } }
        public IField LAST_STMT { get { return GetElementByName<IField>(Names.LAST_STMT); } }
        public IField TOP_OF_CALL { get { return GetElementByName<IField>(Names.TOP_OF_CALL); } }
        public IField TRACE_BREAK_POINT { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT); } }
        public IField TRACE_BREAK_POINT_STATUS { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT_STATUS); } }
        public IField LAST_AB_NAME { get { return GetElementByName<IField>(Names.LAST_AB_NAME); } }
        public IField COLOR { get { return GetElementByName<IField>(Names.COLOR); } }
        public IField COLORT { get { return GetElementByName<IField>(Names.COLORT); } }
        public IField HILITE { get { return GetElementByName<IField>(Names.HILITE); } }
        public IField TRACE_ON_OFF { get { return GetElementByName<IField>(Names.TRACE_ON_OFF); } }
        public IGroup CASCADE_DELETE_FLAGS { get { return GetElementByName<IGroup>(Names.CASCADE_DELETE_FLAGS); } }
        public IField V1PRESENT { get { return GetElementByName<IField>(Names.V1PRESENT); } }
        public IField V2PRESENT { get { return GetElementByName<IField>(Names.V2PRESENT); } }
        public IField CASCADE1 { get { return GetElementByName<IField>(Names.CASCADE1); } }
        public IField CASCADE2 { get { return GetElementByName<IField>(Names.CASCADE2); } }
        public IField PROCESSQ_FLAG { get { return GetElementByName<IField>(Names.PROCESSQ_FLAG); } }
        public IGroup PSMGR_ACTIVE_DIALECT { get { return GetElementByName<IGroup>(Names.PSMGR_ACTIVE_DIALECT); } }
        public IField DIALECT_NAME { get { return GetElementByName<IField>(Names.DIALECT_NAME); } }
        public IField MESSAGE_TABLE_NAME { get { return GetElementByName<IField>(Names.MESSAGE_TABLE_NAME); } }
        public IField TRANSLATE_TABLE_NAME { get { return GetElementByName<IField>(Names.TRANSLATE_TABLE_NAME); } }
        public IGroup PSMGR_FUNCTION_DATA_EXT { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA_EXT); } }
        public IField PSMGR_FUNC_IN_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIMESTAMP); } }
        public IGroup PSMGR_FUNC_IN_TSDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TSDURA); } }
        public IGroup TSDURA_MICROSECOND { get { return GetElementByName<IGroup>(Names.TSDURA_MICROSECOND); } }
        public IField TSDURA_M_MISS { get { return GetElementByName<IField>(Names.TSDURA_M_MISS); } }
        public IField TSDURA_MS { get { return GetElementByName<IField>(Names.TSDURA_MS); } }
        public IField PSMGR_FUNC_OUT_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIMESTAMP); } }
        public IField PSMGR_CICS_FAIL_SW { get { return GetElementByName<IField>(Names.PSMGR_CICS_FAIL_SW); } }
        public ICheckField INHIBIT_CICS_RECEIVE { get { return GetElementByName<ICheckField>(Names.INHIBIT_CICS_RECEIVE); } }
        public IField CLIENT_USERID { get { return GetElementByName<IField>(Names.CLIENT_USERID); } }
        public IField CLIENT_PASSWORD { get { return GetElementByName<IField>(Names.CLIENT_PASSWORD); } }
        public IField LOAD_MODULE_NAME { get { return GetElementByName<IField>(Names.LOAD_MODULE_NAME); } }
        public IField INSTRUMENT_CODE { get { return GetElementByName<IField>(Names.INSTRUMENT_CODE); } }
        public IField TX_RETRY_LIMIT { get { return GetElementByName<IField>(Names.TX_RETRY_LIMIT); } }
        public IField TX_TIMEOUT { get { return GetElementByName<IField>(Names.TX_TIMEOUT); } }
        public IGroup PSMGR_EXTRA_ERRINFO { get { return GetElementByName<IGroup>(Names.PSMGR_EXTRA_ERRINFO); } }
        public IField ERRINFO_BUF_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_BUF_SIZE); } }
        public IField ERRINFO_MSG_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_MSG_SIZE); } }
        public IField ERRINFO_BUF_ADDR { get { return GetElementByName<IField>(Names.ERRINFO_BUF_ADDR); } }
        public IGroup PSMGR_PSTEP_USE_PTRS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_PTRS); } }
        public IField PSTEP_FAIL_MSG_PTR { get { return GetElementByName<IField>(Names.PSTEP_FAIL_MSG_PTR); } }
        public IField PSTEP_GURB_REST_PTR { get { return GetElementByName<IField>(Names.PSTEP_GURB_REST_PTR); } }
        public IField PSTEP_LIPS_PTR { get { return GetElementByName<IField>(Names.PSTEP_LIPS_PTR); } }
        public IField PSTEP_TBL_PTR { get { return GetElementByName<IField>(Names.PSTEP_TBL_PTR); } }
        public IField PSTEP_DDF_PTR { get { return GetElementByName<IField>(Names.PSTEP_DDF_PTR); } }
        public IField PSTEP_COMM_ID { get { return GetElementByName<IField>(Names.PSTEP_COMM_ID); } }
        public IField PSTEP_APPL_LIST_PTR { get { return GetElementByName<IField>(Names.PSTEP_APPL_LIST_PTR); } }
        public IField PSTEP_CURR_PST_PTR { get { return GetElementByName<IField>(Names.PSTEP_CURR_PST_PTR); } }
        public IGroup PSMGR_PSTEP_USE_SYSFLDS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_SYSFLDS); } }
        public IField PSMGR_EIBERRCD { get { return GetElementByName<IField>(Names.PSMGR_EIBERRCD); } }
        public IField PSMGR_EIBFN { get { return GetElementByName<IField>(Names.PSMGR_EIBFN); } }
        public IField PSMGR_EIBRESP { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP); } }
        public IField PSMGR_EIBRESP2 { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP2); } }
        public IGroup IMPORT_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_0001EV); } }
        public IGroup HEALTH_INSURANCE_COMPAN_0001ET { get { return GetElementByName<IGroup>(Names.HEALTH_INSURANCE_COMPAN_0001ET); } }
        public IField CARRIER_CODE_0001AS { get { return GetElementByName<IField>(Names.CARRIER_CODE_0001AS); } }
        public IField CARRIER_CODE_0001 { get { return GetElementByName<IField>(Names.CARRIER_CODE_0001); } }
        public IField CARRIER_CODE_0001XX { get { return GetElementByName<IField>(Names.CARRIER_CODE_0001XX); } }
        public IGroup IMPORT_0002EV { get { return GetElementByName<IGroup>(Names.IMPORT_0002EV); } }
        public IGroup HEALTH_INSURANCE_COVERA_0002ET { get { return GetElementByName<IGroup>(Names.HEALTH_INSURANCE_COVERA_0002ET); } }
        public IField POLICY_PAID_BY_CSE_PERS_0003AS { get { return GetElementByName<IField>(Names.POLICY_PAID_BY_CSE_PERS_0003AS); } }
        public IField POLICY_PAID_BY_CSE_PERSON_0003 { get { return GetElementByName<IField>(Names.POLICY_PAID_BY_CSE_PERSON_0003); } }
        public IField POLICY_PAID_BY_CSE_PERS_0003XX { get { return GetElementByName<IField>(Names.POLICY_PAID_BY_CSE_PERS_0003XX); } }
        public IField INSURANCE_GROUP_NUMBER_0003AS { get { return GetElementByName<IField>(Names.INSURANCE_GROUP_NUMBER_0003AS); } }
        public IField INSURANCE_GROUP_NUMBER_0003 { get { return GetElementByName<IField>(Names.INSURANCE_GROUP_NUMBER_0003); } }
        public IField INSURANCE_GROUP_NUMBER_0003XX { get { return GetElementByName<IField>(Names.INSURANCE_GROUP_NUMBER_0003XX); } }
        public IField INSURANCE_POLICY_NUMBER_0004AS { get { return GetElementByName<IField>(Names.INSURANCE_POLICY_NUMBER_0004AS); } }
        public IField INSURANCE_POLICY_NUMBER_0004 { get { return GetElementByName<IField>(Names.INSURANCE_POLICY_NUMBER_0004); } }
        public IField INSURANCE_POLICY_NUMBER_0004XX { get { return GetElementByName<IField>(Names.INSURANCE_POLICY_NUMBER_0004XX); } }
        public IField COVERAGE_CODE_1_0004AS { get { return GetElementByName<IField>(Names.COVERAGE_CODE_1_0004AS); } }
        public IField COVERAGE_CODE_1_0004 { get { return GetElementByName<IField>(Names.COVERAGE_CODE_1_0004); } }
        public IField COVERAGE_CODE_1_0004XX { get { return GetElementByName<IField>(Names.COVERAGE_CODE_1_0004XX); } }
        public IField COVERAGE_CODE_2_0004AS { get { return GetElementByName<IField>(Names.COVERAGE_CODE_2_0004AS); } }
        public IField COVERAGE_CODE_2_0004 { get { return GetElementByName<IField>(Names.COVERAGE_CODE_2_0004); } }
        public IField COVERAGE_CODE_2_0004XX { get { return GetElementByName<IField>(Names.COVERAGE_CODE_2_0004XX); } }
        public IField COVERAGE_CODE_3_0004AS { get { return GetElementByName<IField>(Names.COVERAGE_CODE_3_0004AS); } }
        public IField COVERAGE_CODE_3_0004 { get { return GetElementByName<IField>(Names.COVERAGE_CODE_3_0004); } }
        public IField COVERAGE_CODE_3_0004XX { get { return GetElementByName<IField>(Names.COVERAGE_CODE_3_0004XX); } }
        public IField COVERAGE_CODE_4_0004AS { get { return GetElementByName<IField>(Names.COVERAGE_CODE_4_0004AS); } }
        public IField COVERAGE_CODE_4_0004 { get { return GetElementByName<IField>(Names.COVERAGE_CODE_4_0004); } }
        public IField COVERAGE_CODE_4_0004XX { get { return GetElementByName<IField>(Names.COVERAGE_CODE_4_0004XX); } }
        public IField COVERAGE_CODE_5_0004AS { get { return GetElementByName<IField>(Names.COVERAGE_CODE_5_0004AS); } }
        public IField COVERAGE_CODE_5_0004 { get { return GetElementByName<IField>(Names.COVERAGE_CODE_5_0004); } }
        public IField COVERAGE_CODE_5_0004XX { get { return GetElementByName<IField>(Names.COVERAGE_CODE_5_0004XX); } }
        public IField COVERAGE_CODE_6_0004AS { get { return GetElementByName<IField>(Names.COVERAGE_CODE_6_0004AS); } }
        public IField COVERAGE_CODE_6_0004 { get { return GetElementByName<IField>(Names.COVERAGE_CODE_6_0004); } }
        public IField COVERAGE_CODE_6_0004XX { get { return GetElementByName<IField>(Names.COVERAGE_CODE_6_0004XX); } }
        public IField COVERAGE_CODE_7_0004AS { get { return GetElementByName<IField>(Names.COVERAGE_CODE_7_0004AS); } }
        public IField COVERAGE_CODE_7_0004 { get { return GetElementByName<IField>(Names.COVERAGE_CODE_7_0004); } }
        public IField COVERAGE_CODE_7_0004XX { get { return GetElementByName<IField>(Names.COVERAGE_CODE_7_0004XX); } }
        public IGroup IMPORT_COVERED_PERSON_0005EV { get { return GetElementByName<IGroup>(Names.IMPORT_COVERED_PERSON_0005EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0005ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0005ET); } }
        public IField NUMBER_0005AS { get { return GetElementByName<IField>(Names.NUMBER_0005AS); } }
        public IField NUMBER_0005 { get { return GetElementByName<IField>(Names.NUMBER_0005); } }
        public IField NUMBER_0005XX { get { return GetElementByName<IField>(Names.NUMBER_0005XX); } }
        public IGroup IMPORT_POLICY_HOLDER_0006EV { get { return GetElementByName<IGroup>(Names.IMPORT_POLICY_HOLDER_0006EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0006ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0006ET); } }
        public IField NUMBER_0006AS { get { return GetElementByName<IField>(Names.NUMBER_0006AS); } }
        public IField NUMBER_0006 { get { return GetElementByName<IField>(Names.NUMBER_0006); } }
        public IField NUMBER_0006XX { get { return GetElementByName<IField>(Names.NUMBER_0006XX); } }
        public IField SSN_0006AS { get { return GetElementByName<IField>(Names.SSN_0006AS); } }
        public IField SSN_0006 { get { return GetElementByName<IField>(Names.SSN_0006); } }
        public IField SSN_0006XX { get { return GetElementByName<IField>(Names.SSN_0006XX); } }
        public IField FIRST_NAME_0006AS { get { return GetElementByName<IField>(Names.FIRST_NAME_0006AS); } }
        public IField FIRST_NAME_0006 { get { return GetElementByName<IField>(Names.FIRST_NAME_0006); } }
        public IField FIRST_NAME_0006XX { get { return GetElementByName<IField>(Names.FIRST_NAME_0006XX); } }
        public IField LAST_NAME_0006AS { get { return GetElementByName<IField>(Names.LAST_NAME_0006AS); } }
        public IField LAST_NAME_0006 { get { return GetElementByName<IField>(Names.LAST_NAME_0006); } }
        public IField LAST_NAME_0006XX { get { return GetElementByName<IField>(Names.LAST_NAME_0006XX); } }
        public IGroup IMPORT_RELATION_TO_POLI_0007EV { get { return GetElementByName<IGroup>(Names.IMPORT_RELATION_TO_POLI_0007EV); } }
        public IGroup IEF_SUPPLIED_0007ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0007ET); } }
        public IField SELECT_CHAR_0007AS { get { return GetElementByName<IField>(Names.SELECT_CHAR_0007AS); } }
        public IField SELECT_CHAR_0007 { get { return GetElementByName<IField>(Names.SELECT_CHAR_0007); } }
        public IField SELECT_CHAR_0007XX { get { return GetElementByName<IField>(Names.SELECT_CHAR_0007XX); } }
        public IGroup IMPORT_0008EV { get { return GetElementByName<IGroup>(Names.IMPORT_0008EV); } }
        public IGroup PERSONAL_HEALTH_INSURAN_0008ET { get { return GetElementByName<IGroup>(Names.PERSONAL_HEALTH_INSURAN_0008ET); } }
        public IField COVERAGE_VERIFIED_DATE_0008AS { get { return GetElementByName<IField>(Names.COVERAGE_VERIFIED_DATE_0008AS); } }
        public IField COVERAGE_VERIFIED_DATE_0008 { get { return GetElementByName<IField>(Names.COVERAGE_VERIFIED_DATE_0008); } }
        public IField COVERAGE_VERIFIED_DATE_0008XX { get { return GetElementByName<IField>(Names.COVERAGE_VERIFIED_DATE_0008XX); } }
        public IField COVERAGE_BEGIN_DATE_0008AS { get { return GetElementByName<IField>(Names.COVERAGE_BEGIN_DATE_0008AS); } }
        public IField COVERAGE_BEGIN_DATE_0008 { get { return GetElementByName<IField>(Names.COVERAGE_BEGIN_DATE_0008); } }
        public IField COVERAGE_BEGIN_DATE_0008XX { get { return GetElementByName<IField>(Names.COVERAGE_BEGIN_DATE_0008XX); } }
        public IField COVERAGE_END_DATE_0008AS { get { return GetElementByName<IField>(Names.COVERAGE_END_DATE_0008AS); } }
        public IField COVERAGE_END_DATE_0008 { get { return GetElementByName<IField>(Names.COVERAGE_END_DATE_0008); } }
        public IField COVERAGE_END_DATE_0008XX { get { return GetElementByName<IField>(Names.COVERAGE_END_DATE_0008XX); } }
        public IGroup IMPORT_0009EV { get { return GetElementByName<IGroup>(Names.IMPORT_0009EV); } }
        public IGroup EMPLOYER_0009ET { get { return GetElementByName<IGroup>(Names.EMPLOYER_0009ET); } }
        public IField EIN_0009AS { get { return GetElementByName<IField>(Names.EIN_0009AS); } }
        public IField EIN_0009 { get { return GetElementByName<IField>(Names.EIN_0009); } }
        public IField EIN_0009XX { get { return GetElementByName<IField>(Names.EIN_0009XX); } }
        public IField NAME_0009AS { get { return GetElementByName<IField>(Names.NAME_0009AS); } }
        public IField NAME_0009 { get { return GetElementByName<IField>(Names.NAME_0009); } }
        public IField NAME_0009XX { get { return GetElementByName<IField>(Names.NAME_0009XX); } }
        public IGroup IMPORT_0010EV { get { return GetElementByName<IGroup>(Names.IMPORT_0010EV); } }
        public IGroup EMPLOYER_ADDRESS_0010ET { get { return GetElementByName<IGroup>(Names.EMPLOYER_ADDRESS_0010ET); } }
        public IField LOCATION_TYPE_0010AS { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0010AS); } }
        public IField LOCATION_TYPE_0010 { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0010); } }
        public IField LOCATION_TYPE_0010XX { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0010XX); } }
        public IField STREET1_0010AS { get { return GetElementByName<IField>(Names.STREET1_0010AS); } }
        public IField STREET1_0010 { get { return GetElementByName<IField>(Names.STREET1_0010); } }
        public IField STREET1_0010XX { get { return GetElementByName<IField>(Names.STREET1_0010XX); } }
        public IField STREET2_0010AS { get { return GetElementByName<IField>(Names.STREET2_0010AS); } }
        public IField STREET2_0010 { get { return GetElementByName<IField>(Names.STREET2_0010); } }
        public IField STREET2_0010XX { get { return GetElementByName<IField>(Names.STREET2_0010XX); } }
        public IField CITY_0010AS { get { return GetElementByName<IField>(Names.CITY_0010AS); } }
        public IField CITY_0010 { get { return GetElementByName<IField>(Names.CITY_0010); } }
        public IField CITY_0010XX { get { return GetElementByName<IField>(Names.CITY_0010XX); } }
        public IField STATE_0010AS { get { return GetElementByName<IField>(Names.STATE_0010AS); } }
        public IField STATE_0010 { get { return GetElementByName<IField>(Names.STATE_0010); } }
        public IField STATE_0010XX { get { return GetElementByName<IField>(Names.STATE_0010XX); } }
        public IField ZIP_CODE_0010AS { get { return GetElementByName<IField>(Names.ZIP_CODE_0010AS); } }
        public IField ZIP_CODE_0010 { get { return GetElementByName<IField>(Names.ZIP_CODE_0010); } }
        public IField ZIP_CODE_0010XX { get { return GetElementByName<IField>(Names.ZIP_CODE_0010XX); } }
        public IGroup IMPORT_0011EV { get { return GetElementByName<IGroup>(Names.IMPORT_0011EV); } }
        public IGroup DATE_WORK_AREA_0011ET { get { return GetElementByName<IGroup>(Names.DATE_WORK_AREA_0011ET); } }
        public IField DATE_0011AS { get { return GetElementByName<IField>(Names.DATE_0011AS); } }
        public IField DATE_0011 { get { return GetElementByName<IField>(Names.DATE_0011); } }
        public IField DATE_0011XX { get { return GetElementByName<IField>(Names.DATE_0011XX); } }
        public IGroup IMPORT_RECORD_0012EV { get { return GetElementByName<IGroup>(Names.IMPORT_RECORD_0012EV); } }
        public IGroup IEF_SUPPLIED_0012ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0012ET); } }
        public IField COUNT_0012AS { get { return GetElementByName<IField>(Names.COUNT_0012AS); } }
        public IField COUNT_0012 { get { return GetElementByName<IField>(Names.COUNT_0012); } }
        public IField COUNT_0012XX { get { return GetElementByName<IField>(Names.COUNT_0012XX); } }
        public IGroup IMPORT_0013EV { get { return GetElementByName<IGroup>(Names.IMPORT_0013EV); } }
        public IGroup EAB_FILE_HANDLING_0013ET { get { return GetElementByName<IGroup>(Names.EAB_FILE_HANDLING_0013ET); } }
        public IField ACTION_0013AS { get { return GetElementByName<IField>(Names.ACTION_0013AS); } }
        public IField ACTION_0013 { get { return GetElementByName<IField>(Names.ACTION_0013); } }
        public IField ACTION_0013XX { get { return GetElementByName<IField>(Names.ACTION_0013XX); } }
        public IGroup EXPORT_0014EV { get { return GetElementByName<IGroup>(Names.EXPORT_0014EV); } }
        public IGroup EAB_FILE_HANDLING_0014ET { get { return GetElementByName<IGroup>(Names.EAB_FILE_HANDLING_0014ET); } }
        public IField STATUS_0014AS { get { return GetElementByName<IField>(Names.STATUS_0014AS); } }
        public IField STATUS_0014 { get { return GetElementByName<IField>(Names.STATUS_0014); } }
        public IField STATUS_0014XX { get { return GetElementByName<IField>(Names.STATUS_0014XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.GLOBDATA, (GLOBDATA) =>
           {
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_COMMAND, (PSMGR_IEF_COMMAND) =>
               {
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_1, FieldType.String, 8);
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_2, FieldType.String, 72);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_TRANCODE, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_STATE, FieldType.PackedDecimal, 11);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_INFOMSG, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_USER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_TERMINAL_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_PRINTER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_DATE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_TIME, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_RUNTIME_TYPE, FieldType.String, 4);
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA, (PSMGR_FUNCTION_DATA) =>
               {
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_ERRMSG, FieldType.String, 4);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_NAME, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_DDURA, (PSMGR_FUNC_IN_DDURA) =>
                   {
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_YEAR, (DDURA_YEAR) =>
                       {
                           DDURA_YEAR.CreateNewField(Names.DDURA_Y_MISS, FieldType.String, 1);
                           DDURA_YEAR.CreateNewField(Names.DDURA_YYYY, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_MONTH, (DDURA_MONTH) =>
                       {
                           DDURA_MONTH.CreateNewField(Names.DDURA_M_MISS, FieldType.String, 1);
                           DDURA_MONTH.CreateNewField(Names.DDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_DAY, (DDURA_DAY) =>
                       {
                           DDURA_DAY.CreateNewField(Names.DDURA_D_MISS, FieldType.String, 1);
                           DDURA_DAY.CreateNewField(Names.DDURA_DD, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_TIME, FieldType.String, 6);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_TDURA, (PSMGR_FUNC_IN_TDURA) =>
                   {
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_HOUR, (TDURA_HOUR) =>
                       {
                           TDURA_HOUR.CreateNewField(Names.TDURA_H_MISS, FieldType.String, 1);
                           TDURA_HOUR.CreateNewField(Names.TDURA_HH, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_MINUTE, (TDURA_MINUTE) =>
                       {
                           TDURA_MINUTE.CreateNewField(Names.TDURA_M_MISS, FieldType.String, 1);
                           TDURA_MINUTE.CreateNewField(Names.TDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_SECOND, (TDURA_SECOND) =>
                       {
                           TDURA_SECOND.CreateNewField(Names.TDURA_S_MISS, FieldType.String, 1);
                           TDURA_SECOND.CreateNewField(Names.TDURA_SS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_TIME, FieldType.String, 6);
               });
               GLOBDATA.CreateNewFillerField(2, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_NEXTTRAN, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_MSGTYPE, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(11, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_DEBUG_FLAGS, (PSMGR_IEF_DEBUG_FLAGS) =>
               {
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewField(Names.PSMGR_IEF_DEBUG, FieldType.String, 1)
                       .NewCheckField(Names.PSMGR_DEBUG_ON, "Y")
                       ;
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewFillerField(15, FillWith.Hashes);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ENVIRONMENT_DATA, (PSMGR_ENVIRONMENT_DATA) =>
               {
                   PSMGR_ENVIRONMENT_DATA.CreateNewField(Names.PSMGR_PCB_CNT, FieldType.CompInt, 9);
                   PSMGR_ENVIRONMENT_DATA.CreateNewGroupArray(Names.PSMGR_PCB_ENTRY, 255, (PSMGR_PCB_ENTRY) =>
                   {
                       PSMGR_PCB_ENTRY.CreateNewField(Names.PSMGR_PCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
               {
                   PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
                   PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
                   {
                       PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ERROR_DATA, (PSMGR_ERROR_DATA) =>
               {
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ACTION_NAME, FieldType.String, 32);
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ENCOUNTERED_SW, FieldType.String, 1);
                   PSMGR_ERROR_DATA.CreateNewField(Names.VIEW_OVERFLOW_SW, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DASG_DATA, (PSMGR_DASG_DATA) =>
               {
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ACTION_ID_X, (ACTION_ID_X) =>
                   {
                       ACTION_ID_X.CreateNewField(Names.ACTION_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ATTRIBUTE_ID_X, (ATTRIBUTE_ID_X) =>
                   {
                       ATTRIBUTE_ID_X.CreateNewField(Names.ATTRIBUTE_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewField(Names.STATUS_FLAG, FieldType.String, 2)
                       .NewCheckField(Names.FATAL_ERROR_SF, "FE")
                       .NewCheckField(Names.PSTEP_USE_FAILURE, "PU")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.LAST_STATUS, FieldType.String, 2)
                       .NewCheckField(Names.DB_ERROR_FL_LS, "DB")
                       .NewCheckField(Names.DUPLICATE_FOUND_FL_LS, "DF")
                       .NewCheckField(Names.INVALID_DATAA_FL_LS, "IA")
                       .NewCheckField(Names.INVALID_DATAB_TYPE_FL_LS, "BT")
                       .NewCheckField(Names.INVALID_DATAB_PERM_FL_LS, "BP")
                       .NewCheckField(Names.FATAL_ERROR_FL_LS, "FE")
                       .NewCheckField(Names.NOT_FOUND_FL_LS, "NF")
                       .NewCheckField(Names.NOT_UNIQUE_FL_LS, "NU")
                       .NewCheckField(Names.IEF_FUNCTION_ERROR_FL_LS, "IE")
                       .NewCheckField(Names.IEF_DURATION_ERROR_FL_LS, "DE")
                       .NewCheckField(Names.USED_PSTEP_NOT_FOUND, "PO")
                       .NewCheckField(Names.USED_PSTEP_ROUTING_ERR, "PX")
                       .NewCheckField(Names.USED_PSTEP_SND_FMT_ERR, "PF")
                       .NewCheckField(Names.USED_PSTEP_ENCRYPT_ERR, "PN")
                       .NewCheckField(Names.USED_PSTEP_SND_BFR_ERR, "PS")
                       .NewCheckField(Names.USED_PSTEP_RCV_BFR_ERR, "PR")
                       .NewCheckField(Names.USED_PSTEP_RCV_FMT_ERR, "PU")
                       .NewCheckField(Names.USED_PSTEP_TIRSECR_ERR, "PE")
                       .NewCheckField(Names.USED_PSTEP_TOKEN_ERR, "PT")
                       .NewCheckField(Names.USED_PSTEP_SEND_MAX_SIZE, "PM")
                       .NewCheckField(Names.USED_PSTEP_SECG_ERR, "PB")
                       .NewCheckField(Names.USED_PSTEP_ALLOC_ERR, "PA")
                       .NewCheckField(Names.USED_PSTEP_CONNECT_ERR, "PC")
                       .NewCheckField(Names.USED_PSTEP_XERR, "PD")
                       .NewCheckField(Names.USED_PSTEP_RCV_UA_ERR, "PH")
                       .NewCheckField(Names.USED_PSTEP_RCV_ES_ERR, "PI")
                       .NewCheckField(Names.USED_PSTEP_XFAL, "PJ")
                       .NewCheckField(Names.USED_PSTEP_SETOA_ERR, "PK")
                       .NewCheckField(Names.USED_PSTEP_RCV_VIEW_ERR, "PL")
                       .NewCheckField(Names.USED_PSTEP_DECRYPT_ERR, "PP")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.SAVE_SQLCA, FieldType.String, 255);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DEBUG_DATA, (PSMGR_DEBUG_DATA) =>
               {
                   PSMGR_DEBUG_DATA.CreateNewField(Names.PSMGR_TRACE_ADR, FieldType.CompInt, 9);
                   PSMGR_DEBUG_DATA.CreateNewGroup(Names.LAST_STATEMENT_X, (LAST_STATEMENT_X) =>
                   {
                       LAST_STATEMENT_X.CreateNewField(Names.LAST_STATEMENT_NUM, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_ID, FieldType.String, 10);
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_NAME, FieldType.String, 32);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_TIRDATE_SAVEAREA, FieldType.String, 12);
               GLOBDATA.CreateNewGroup(Names.PSMGR_TIRDATE_CMCB, (PSMGR_TIRDATE_CMCB) =>
               {
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATE, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIME, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(8, FillWith.Hashes);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_INC, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RC, FieldType.CompShort, 4)
                       .NewCheckField(Names.PSMGR_TIRDATE_OK, +0)
                       .NewCheckField(Names.PSMGR_TIRDATE_WARNING, +4)
                       .NewCheckField(Names.PSMGR_TIRDATE_ERROR, +8)
                       ;
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_REQ, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIMEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RETMSG, FieldType.String, 60);

                   IField PSMGR_TIRDATE_TSTAMP_local = PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TSTAMP, FieldType.String, 20);
                   PSMGR_TIRDATE_CMCB.CreateNewGroupRedefine("FILLER_d8", PSMGR_TIRDATE_TSTAMP_local, (FILLER_d8) =>
                   {
                       FILLER_d8.CreateNewField(Names.PSMGR_TIRDATE_DATE_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d8.CreateNewField(Names.PSMGR_TIRDATE_TIME_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d8.CreateNewFillerField(4, FillWith.Hashes);
                   });
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(96, FillWith.Hashes);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_ROLLBACK_RQSTED, FieldType.String, 1)
                   .NewCheckField(Names.ROLLBACK_RQSTED, "R")
                   .NewCheckField(Names.ABEND_RQSTED, "A")
                   .NewCheckField(Names.TERMINATE_RQSTED, "T")
                   ;
               GLOBDATA.CreateNewGroup(Names.TIRTRCE_SAVE_AREA, (TIRTRCE_SAVE_AREA) =>
               {
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.BOTTOM_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.END_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_STMT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_OF_CALL, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT_STATUS, FieldType.String, 3);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_AB_NAME, FieldType.String, 32);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLOR, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLORT, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.HILITE, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_ON_OFF, FieldType.String, 3);
               });
               GLOBDATA.CreateNewGroup(Names.CASCADE_DELETE_FLAGS, (CASCADE_DELETE_FLAGS) =>
               {
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V1PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V2PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE1, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE2, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.PROCESSQ_FLAG, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ACTIVE_DIALECT, (PSMGR_ACTIVE_DIALECT) =>
               {
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.DIALECT_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.MESSAGE_TABLE_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.TRANSLATE_TABLE_NAME, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA_EXT, (PSMGR_FUNCTION_DATA_EXT) =>
               {
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_IN_TIMESTAMP, FieldType.String, 20);
                   PSMGR_FUNCTION_DATA_EXT.CreateNewGroup(Names.PSMGR_FUNC_IN_TSDURA, (PSMGR_FUNC_IN_TSDURA) =>
                   {
                       PSMGR_FUNC_IN_TSDURA.CreateNewGroup(Names.TSDURA_MICROSECOND, (TSDURA_MICROSECOND) =>
                       {
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_M_MISS, FieldType.String, 1);
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_MS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_OUT_TIMESTAMP, FieldType.String, 20);
               });
               GLOBDATA.CreateNewFillerField(8, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_CICS_FAIL_SW, FieldType.String, 1)
                   .NewCheckField(Names.INHIBIT_CICS_RECEIVE, "I")
                   ;
               GLOBDATA.CreateNewField(Names.CLIENT_USERID, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.CLIENT_PASSWORD, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.LOAD_MODULE_NAME, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.INSTRUMENT_CODE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_RETRY_LIMIT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_TIMEOUT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewGroup(Names.PSMGR_EXTRA_ERRINFO, (PSMGR_EXTRA_ERRINFO) =>
               {
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_MSG_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_ADDR, FieldType.String, 16);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_PTRS, (PSMGR_PSTEP_USE_PTRS) =>
               {
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_FAIL_MSG_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_GURB_REST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_LIPS_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_TBL_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_DDF_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_COMM_ID, FieldType.String, 8);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_APPL_LIST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_CURR_PST_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_SYSFLDS, (PSMGR_PSTEP_USE_SYSFLDS) =>
               {
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBERRCD, FieldType.String, 4);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBFN, FieldType.String, 2);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP, FieldType.String, 8);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP2, FieldType.String, 8);
               });
               GLOBDATA.CreateNewFillerField(199, FillWith.Hashes);
           });

            recordDef.CreateNewGroup(Names.IMPORT_0001EV, (IMPORT_0001EV) =>
           {
               IMPORT_0001EV.CreateNewGroup(Names.HEALTH_INSURANCE_COMPAN_0001ET, (HEALTH_INSURANCE_COMPAN_0001ET) =>
               {
                   HEALTH_INSURANCE_COMPAN_0001ET.CreateNewField(Names.CARRIER_CODE_0001AS, FieldType.String, 1);

                   IField CARRIER_CODE_0001_local = HEALTH_INSURANCE_COMPAN_0001ET.CreateNewField(Names.CARRIER_CODE_0001, FieldType.String, 7);
                   HEALTH_INSURANCE_COMPAN_0001ET.CreateNewFieldRedefine(Names.CARRIER_CODE_0001XX, FieldType.String, CARRIER_CODE_0001_local, 7);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0002EV, (IMPORT_0002EV) =>
           {
               IMPORT_0002EV.CreateNewGroup(Names.HEALTH_INSURANCE_COVERA_0002ET, (HEALTH_INSURANCE_COVERA_0002ET) =>
               {
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.POLICY_PAID_BY_CSE_PERS_0003AS, FieldType.String, 1);

                   IField POLICY_PAID_BY_CSE_PERSON_0003_local = HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.POLICY_PAID_BY_CSE_PERSON_0003, FieldType.String, 1);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewFieldRedefine(Names.POLICY_PAID_BY_CSE_PERS_0003XX, FieldType.String, POLICY_PAID_BY_CSE_PERSON_0003_local, 1);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.INSURANCE_GROUP_NUMBER_0003AS, FieldType.String, 1);

                   IField INSURANCE_GROUP_NUMBER_0003_local = HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.INSURANCE_GROUP_NUMBER_0003, FieldType.String, 20);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewFieldRedefine(Names.INSURANCE_GROUP_NUMBER_0003XX, FieldType.String, INSURANCE_GROUP_NUMBER_0003_local, 20);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.INSURANCE_POLICY_NUMBER_0004AS, FieldType.String, 1);

                   IField INSURANCE_POLICY_NUMBER_0004_local = HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.INSURANCE_POLICY_NUMBER_0004, FieldType.String, 20);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewFieldRedefine(Names.INSURANCE_POLICY_NUMBER_0004XX, FieldType.String, INSURANCE_POLICY_NUMBER_0004_local, 20);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_1_0004AS, FieldType.String, 1);

                   IField COVERAGE_CODE_1_0004_local = HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_1_0004, FieldType.String, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewFieldRedefine(Names.COVERAGE_CODE_1_0004XX, FieldType.String, COVERAGE_CODE_1_0004_local, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_2_0004AS, FieldType.String, 1);

                   IField COVERAGE_CODE_2_0004_local = HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_2_0004, FieldType.String, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewFieldRedefine(Names.COVERAGE_CODE_2_0004XX, FieldType.String, COVERAGE_CODE_2_0004_local, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_3_0004AS, FieldType.String, 1);

                   IField COVERAGE_CODE_3_0004_local = HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_3_0004, FieldType.String, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewFieldRedefine(Names.COVERAGE_CODE_3_0004XX, FieldType.String, COVERAGE_CODE_3_0004_local, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_4_0004AS, FieldType.String, 1);

                   IField COVERAGE_CODE_4_0004_local = HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_4_0004, FieldType.String, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewFieldRedefine(Names.COVERAGE_CODE_4_0004XX, FieldType.String, COVERAGE_CODE_4_0004_local, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_5_0004AS, FieldType.String, 1);

                   IField COVERAGE_CODE_5_0004_local = HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_5_0004, FieldType.String, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewFieldRedefine(Names.COVERAGE_CODE_5_0004XX, FieldType.String, COVERAGE_CODE_5_0004_local, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_6_0004AS, FieldType.String, 1);

                   IField COVERAGE_CODE_6_0004_local = HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_6_0004, FieldType.String, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewFieldRedefine(Names.COVERAGE_CODE_6_0004XX, FieldType.String, COVERAGE_CODE_6_0004_local, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_7_0004AS, FieldType.String, 1);

                   IField COVERAGE_CODE_7_0004_local = HEALTH_INSURANCE_COVERA_0002ET.CreateNewField(Names.COVERAGE_CODE_7_0004, FieldType.String, 2);
                   HEALTH_INSURANCE_COVERA_0002ET.CreateNewFieldRedefine(Names.COVERAGE_CODE_7_0004XX, FieldType.String, COVERAGE_CODE_7_0004_local, 2);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_COVERED_PERSON_0005EV, (IMPORT_COVERED_PERSON_0005EV) =>
           {
               IMPORT_COVERED_PERSON_0005EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0005ET, (CSE_PERSONS_WORK_SET_0005ET) =>
               {
                   CSE_PERSONS_WORK_SET_0005ET.CreateNewField(Names.NUMBER_0005AS, FieldType.String, 1);

                   IField NUMBER_0005_local = CSE_PERSONS_WORK_SET_0005ET.CreateNewField(Names.NUMBER_0005, FieldType.String, 10);
                   CSE_PERSONS_WORK_SET_0005ET.CreateNewFieldRedefine(Names.NUMBER_0005XX, FieldType.String, NUMBER_0005_local, 10);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_POLICY_HOLDER_0006EV, (IMPORT_POLICY_HOLDER_0006EV) =>
           {
               IMPORT_POLICY_HOLDER_0006EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0006ET, (CSE_PERSONS_WORK_SET_0006ET) =>
               {
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.NUMBER_0006AS, FieldType.String, 1);

                   IField NUMBER_0006_local = CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.NUMBER_0006, FieldType.String, 10);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewFieldRedefine(Names.NUMBER_0006XX, FieldType.String, NUMBER_0006_local, 10);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.SSN_0006AS, FieldType.String, 1);

                   IField SSN_0006_local = CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.SSN_0006, FieldType.String, 9);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewFieldRedefine(Names.SSN_0006XX, FieldType.String, SSN_0006_local, 9);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.FIRST_NAME_0006AS, FieldType.String, 1);

                   IField FIRST_NAME_0006_local = CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.FIRST_NAME_0006, FieldType.String, 12);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewFieldRedefine(Names.FIRST_NAME_0006XX, FieldType.String, FIRST_NAME_0006_local, 12);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.LAST_NAME_0006AS, FieldType.String, 1);

                   IField LAST_NAME_0006_local = CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.LAST_NAME_0006, FieldType.String, 17);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewFieldRedefine(Names.LAST_NAME_0006XX, FieldType.String, LAST_NAME_0006_local, 17);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_RELATION_TO_POLI_0007EV, (IMPORT_RELATION_TO_POLI_0007EV) =>
           {
               IMPORT_RELATION_TO_POLI_0007EV.CreateNewGroup(Names.IEF_SUPPLIED_0007ET, (IEF_SUPPLIED_0007ET) =>
               {
                   IEF_SUPPLIED_0007ET.CreateNewField(Names.SELECT_CHAR_0007AS, FieldType.String, 1);

                   IField SELECT_CHAR_0007_local = IEF_SUPPLIED_0007ET.CreateNewField(Names.SELECT_CHAR_0007, FieldType.String, 1);
                   IEF_SUPPLIED_0007ET.CreateNewFieldRedefine(Names.SELECT_CHAR_0007XX, FieldType.String, SELECT_CHAR_0007_local, 1);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0008EV, (IMPORT_0008EV) =>
           {
               IMPORT_0008EV.CreateNewGroup(Names.PERSONAL_HEALTH_INSURAN_0008ET, (PERSONAL_HEALTH_INSURAN_0008ET) =>
               {
                   PERSONAL_HEALTH_INSURAN_0008ET.CreateNewField(Names.COVERAGE_VERIFIED_DATE_0008AS, FieldType.String, 1);

                   IField COVERAGE_VERIFIED_DATE_0008_local = PERSONAL_HEALTH_INSURAN_0008ET.CreateNewField(Names.COVERAGE_VERIFIED_DATE_0008, FieldType.SignedNumeric, 8);
                   PERSONAL_HEALTH_INSURAN_0008ET.CreateNewFieldRedefine(Names.COVERAGE_VERIFIED_DATE_0008XX, FieldType.String, COVERAGE_VERIFIED_DATE_0008_local, 8);
                   PERSONAL_HEALTH_INSURAN_0008ET.CreateNewField(Names.COVERAGE_BEGIN_DATE_0008AS, FieldType.String, 1);

                   IField COVERAGE_BEGIN_DATE_0008_local = PERSONAL_HEALTH_INSURAN_0008ET.CreateNewField(Names.COVERAGE_BEGIN_DATE_0008, FieldType.SignedNumeric, 8);
                   PERSONAL_HEALTH_INSURAN_0008ET.CreateNewFieldRedefine(Names.COVERAGE_BEGIN_DATE_0008XX, FieldType.String, COVERAGE_BEGIN_DATE_0008_local, 8);
                   PERSONAL_HEALTH_INSURAN_0008ET.CreateNewField(Names.COVERAGE_END_DATE_0008AS, FieldType.String, 1);

                   IField COVERAGE_END_DATE_0008_local = PERSONAL_HEALTH_INSURAN_0008ET.CreateNewField(Names.COVERAGE_END_DATE_0008, FieldType.SignedNumeric, 8);
                   PERSONAL_HEALTH_INSURAN_0008ET.CreateNewFieldRedefine(Names.COVERAGE_END_DATE_0008XX, FieldType.String, COVERAGE_END_DATE_0008_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0009EV, (IMPORT_0009EV) =>
           {
               IMPORT_0009EV.CreateNewGroup(Names.EMPLOYER_0009ET, (EMPLOYER_0009ET) =>
               {
                   EMPLOYER_0009ET.CreateNewField(Names.EIN_0009AS, FieldType.String, 1);

                   IField EIN_0009_local = EMPLOYER_0009ET.CreateNewField(Names.EIN_0009, FieldType.String, 9);
                   EMPLOYER_0009ET.CreateNewFieldRedefine(Names.EIN_0009XX, FieldType.String, EIN_0009_local, 9);
                   EMPLOYER_0009ET.CreateNewField(Names.NAME_0009AS, FieldType.String, 1);

                   IField NAME_0009_local = EMPLOYER_0009ET.CreateNewField(Names.NAME_0009, FieldType.String, 33);
                   EMPLOYER_0009ET.CreateNewFieldRedefine(Names.NAME_0009XX, FieldType.String, NAME_0009_local, 33);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0010EV, (IMPORT_0010EV) =>
           {
               IMPORT_0010EV.CreateNewGroup(Names.EMPLOYER_ADDRESS_0010ET, (EMPLOYER_ADDRESS_0010ET) =>
               {
                   EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.LOCATION_TYPE_0010AS, FieldType.String, 1);

                   IField LOCATION_TYPE_0010_local = EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.LOCATION_TYPE_0010, FieldType.String, 1);
                   EMPLOYER_ADDRESS_0010ET.CreateNewFieldRedefine(Names.LOCATION_TYPE_0010XX, FieldType.String, LOCATION_TYPE_0010_local, 1);
                   EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.STREET1_0010AS, FieldType.String, 1);

                   IField STREET1_0010_local = EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.STREET1_0010, FieldType.String, 25);
                   EMPLOYER_ADDRESS_0010ET.CreateNewFieldRedefine(Names.STREET1_0010XX, FieldType.String, STREET1_0010_local, 25);
                   EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.STREET2_0010AS, FieldType.String, 1);

                   IField STREET2_0010_local = EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.STREET2_0010, FieldType.String, 25);
                   EMPLOYER_ADDRESS_0010ET.CreateNewFieldRedefine(Names.STREET2_0010XX, FieldType.String, STREET2_0010_local, 25);
                   EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.CITY_0010AS, FieldType.String, 1);

                   IField CITY_0010_local = EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.CITY_0010, FieldType.String, 15);
                   EMPLOYER_ADDRESS_0010ET.CreateNewFieldRedefine(Names.CITY_0010XX, FieldType.String, CITY_0010_local, 15);
                   EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.STATE_0010AS, FieldType.String, 1);

                   IField STATE_0010_local = EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.STATE_0010, FieldType.String, 2);
                   EMPLOYER_ADDRESS_0010ET.CreateNewFieldRedefine(Names.STATE_0010XX, FieldType.String, STATE_0010_local, 2);
                   EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.ZIP_CODE_0010AS, FieldType.String, 1);

                   IField ZIP_CODE_0010_local = EMPLOYER_ADDRESS_0010ET.CreateNewField(Names.ZIP_CODE_0010, FieldType.String, 5);
                   EMPLOYER_ADDRESS_0010ET.CreateNewFieldRedefine(Names.ZIP_CODE_0010XX, FieldType.String, ZIP_CODE_0010_local, 5);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0011EV, (IMPORT_0011EV) =>
           {
               IMPORT_0011EV.CreateNewGroup(Names.DATE_WORK_AREA_0011ET, (DATE_WORK_AREA_0011ET) =>
               {
                   DATE_WORK_AREA_0011ET.CreateNewField(Names.DATE_0011AS, FieldType.String, 1);

                   IField DATE_0011_local = DATE_WORK_AREA_0011ET.CreateNewField(Names.DATE_0011, FieldType.SignedNumeric, 8);
                   DATE_WORK_AREA_0011ET.CreateNewFieldRedefine(Names.DATE_0011XX, FieldType.String, DATE_0011_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_RECORD_0012EV, (IMPORT_RECORD_0012EV) =>
           {
               IMPORT_RECORD_0012EV.CreateNewGroup(Names.IEF_SUPPLIED_0012ET, (IEF_SUPPLIED_0012ET) =>
               {
                   IEF_SUPPLIED_0012ET.CreateNewField(Names.COUNT_0012AS, FieldType.String, 1);

                   IField COUNT_0012_local = IEF_SUPPLIED_0012ET.CreateNewField(Names.COUNT_0012, FieldType.SignedNumeric, 9);
                   IEF_SUPPLIED_0012ET.CreateNewFieldRedefine(Names.COUNT_0012XX, FieldType.String, COUNT_0012_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0013EV, (IMPORT_0013EV) =>
           {
               IMPORT_0013EV.CreateNewGroup(Names.EAB_FILE_HANDLING_0013ET, (EAB_FILE_HANDLING_0013ET) =>
               {
                   EAB_FILE_HANDLING_0013ET.CreateNewField(Names.ACTION_0013AS, FieldType.String, 1);

                   IField ACTION_0013_local = EAB_FILE_HANDLING_0013ET.CreateNewField(Names.ACTION_0013, FieldType.String, 8);
                   EAB_FILE_HANDLING_0013ET.CreateNewFieldRedefine(Names.ACTION_0013XX, FieldType.String, ACTION_0013_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0014EV, (EXPORT_0014EV) =>
           {
               EXPORT_0014EV.CreateNewGroup(Names.EAB_FILE_HANDLING_0014ET, (EAB_FILE_HANDLING_0014ET) =>
               {
                   EAB_FILE_HANDLING_0014ET.CreateNewField(Names.STATUS_0014AS, FieldType.String, 1);

                   IField STATUS_0014_local = EAB_FILE_HANDLING_0014ET.CreateNewField(Names.STATUS_0014, FieldType.String, 8);
                   EAB_FILE_HANDLING_0014ET.CreateNewFieldRedefine(Names.STATUS_0014XX, FieldType.String, STATUS_0014_local, 8);
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(IEF_RUNTIME_PARM1, args, 0);
            SetPassedParm(IEF_RUNTIME_PARM2, args, 1);
            SetPassedParm(GLOBDATA, args, 2);
            SetPassedParm(IMPORT_0001EV, args, 3);
            SetPassedParm(IMPORT_0002EV, args, 4);
            SetPassedParm(IMPORT_COVERED_PERSON_0005EV, args, 5);
            SetPassedParm(IMPORT_POLICY_HOLDER_0006EV, args, 6);
            SetPassedParm(IMPORT_RELATION_TO_POLI_0007EV, args, 7);
            SetPassedParm(IMPORT_0008EV, args, 8);
            SetPassedParm(IMPORT_0009EV, args, 9);
            SetPassedParm(IMPORT_0010EV, args, 10);
            SetPassedParm(IMPORT_0011EV, args, 11);
            SetPassedParm(IMPORT_RECORD_0012EV, args, 12);
            SetPassedParm(IMPORT_0013EV, args, 13);
            SetPassedParm(EXPORT_0014EV, args, 14);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(IEF_RUNTIME_PARM1, args, 0);
            SetReturnParm(IEF_RUNTIME_PARM2, args, 1);
            SetReturnParm(GLOBDATA, args, 2);
            SetReturnParm(IMPORT_0001EV, args, 3);
            SetReturnParm(IMPORT_0002EV, args, 4);
            SetReturnParm(IMPORT_COVERED_PERSON_0005EV, args, 5);
            SetReturnParm(IMPORT_POLICY_HOLDER_0006EV, args, 6);
            SetReturnParm(IMPORT_RELATION_TO_POLI_0007EV, args, 7);
            SetReturnParm(IMPORT_0008EV, args, 8);
            SetReturnParm(IMPORT_0009EV, args, 9);
            SetReturnParm(IMPORT_0010EV, args, 10);
            SetReturnParm(IMPORT_0011EV, args, 11);
            SetReturnParm(IMPORT_RECORD_0012EV, args, 12);
            SetReturnParm(IMPORT_0013EV, args, 13);
            SetReturnParm(EXPORT_0014EV, args, 14);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXEE33 : EABBase
    {

        #region Public Constructors
        public SWEXEE33()
            : base()
        {
            this.ProgramName.SetValue("SWEXEE33");

            WS = new SWEXEE33_ws();
            FD = new SWEXEE33_fd();
            LS = new SWEXEE33_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXEE33_ws WS;

        //==== File Data Class ========================================
        private SWEXEE33_fd FD;

        //==== Linkage Section Data Class ========================================
        private SWEXEE33_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING IEF-RUNTIME-PARM1 , IEF-RUNTIME-PARM2 , GLOBDATA , IMPORT-0001EV , IMPORT-0002EV , IMPORT-COVERED-PERSON-0005EV , IMPORT-POLICY-HOLDER-0006EV , IMPORT-RELATION-TO-POLI-0007EV , IMPORT-0008EV , IMPORT-0009EV , IMPORT-0010EV , IMPORT-0011EV , IMPORT-RECORD-0012EV , IMPORT-0013EV , EXPORT-0014EV.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0613683549(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0613683549
        /// </summary>
        private void M_MAIN_0613683549(string returnMethod = "")
        {
            M_PARA_0613683549_INIT("M_PARA_0613683549_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0613683549-INIT THRU PARA-0613683549-INIT-EXIT
            M_PARA_0613683549("M_PARA_0613683549_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0613683549 THRU PARA-0613683549-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0613683549
        /// </summary>
        private void M_PARA_0613683549(string returnMethod = "")
        {
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            //COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            // EvaluateList !LS.ACTION_0013!                                                                    //COBOL==> EVALUATE ACTION-0013
            if ((LS.ACTION_0013.IsEqualTo("OPEN")))                                                             //COBOL==> WHEN 'OPEN'
            {
                M_PARA_OPEN("M_PARA_OPEN_EXIT"); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM PARA-OPEN THRU PARA-OPEN-EXIT
                M_PARA_HEADER("M_PARA_HEADER_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-HEADER THRU PARA-HEADER-EXIT
            }                                                                                                //COBOL==> WHEN 'WRITE'
            else
            if ((LS.ACTION_0013.IsEqualTo("WRITE")))
            {
                M_PARA_MAIN("M_PARA_MAIN_EXIT"); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM PARA-MAIN THRU PARA-MAIN-EXIT
            }                                                                                                //COBOL==> WHEN 'CLOSE'
            else
            if ((LS.ACTION_0013.IsEqualTo("CLOSE")))
            {
                M_PARA_TRAILER("M_PARA_TRAILER_EXIT"); if (Control.ExitProgram) { return; }                           //COBOL==> PERFORM PARA-TRAILER THRU PARA-TRAILER-EXIT
                M_PARA_CLOSE("M_PARA_CLOSE_EXIT"); if (Control.ExitProgram) { return; }                               //COBOL==> PERFORM PARA-CLOSE THRU PARA-CLOSE-EXIT
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                LS.STATUS_0014.SetValue("ABEND");                                                                   //COBOL==> MOVE 'ABEND' TO STATUS-0014 .
            }
            if (returnMethod != "" && returnMethod != "M_PARA_0613683549") { M_PARA_0613683549_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0613683549_EXIT
        /// </summary>
        private void M_PARA_0613683549_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0613683549_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0613683549_EXIT") { M_PARA_MAIN(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_MAIN
        /// </summary>
        private void M_PARA_MAIN(string returnMethod = "")
        {
            WS.WS_PO_BENE_ID.SetValue(LS.NUMBER_0005);                                                          //COBOL==> MOVE NUMBER-0005 TO WS-PO-BENE-ID
            WS.WS_PO_CARRIER_CODE.SetValue(LS.CARRIER_CODE_0001);                                               //COBOL==> MOVE CARRIER-CODE-0001 TO WS-PO-CARRIER-CODE
            if (LS.EIN_0009.IsGreaterThan("0"))                                                                 //COBOL==> IF EIN-0009 > '0'
            {
                WS.WS_PO_EIN.SetValue(LS.EIN_0009);                                                                 //COBOL==> MOVE EIN-0009 TO WS-PO-EIN
            }                                                                                                   //COBOL==> ELSE
            else
            {
                WS.WS_PO_EIN.SetValueWithZeroes();                                                                  //COBOL==> MOVE ZERO TO WS-PO-EIN
            }                                                                                                   //COBOL==> END-IF
            WS.WS_PO_EMPLOYER_NAME.SetValue(LS.NAME_0009);                                                      //COBOL==> MOVE NAME-0009 TO WS-PO-EMPLOYER-NAME
            WS.WS_PO_EMPLOYER_STREET1.SetValue(LS.STREET1_0010);                                                //COBOL==> MOVE STREET1-0010 TO WS-PO-EMPLOYER-STREET1
            WS.WS_PO_EMPLOYER_STREET2.SetValue(LS.STREET2_0010);                                                //COBOL==> MOVE STREET2-0010 TO WS-PO-EMPLOYER-STREET2
            WS.WS_PO_EMPLOYER_CITY.SetValue(LS.CITY_0010);                                                      //COBOL==> MOVE CITY-0010 TO WS-PO-EMPLOYER-CITY
            WS.WS_PO_EMPLOYER_STATE.SetValue(LS.STATE_0010);                                                    //COBOL==> MOVE STATE-0010 TO WS-PO-EMPLOYER-STATE
            WS.WS_PO_EMPLOYER_ZIP.SetValue(LS.ZIP_CODE_0010);                                                   //COBOL==> MOVE ZIP-CODE-0010 TO WS-PO-EMPLOYER-ZIP
            WS.WS_PO_COVERAGE_1.SetValue(LS.COVERAGE_CODE_1_0004);                                              //COBOL==> MOVE COVERAGE-CODE-1-0004 TO WS-PO-COVERAGE-1
            WS.WS_PO_COVERAGE_2.SetValue(LS.COVERAGE_CODE_2_0004);                                              //COBOL==> MOVE COVERAGE-CODE-2-0004 TO WS-PO-COVERAGE-2
            WS.WS_PO_COVERAGE_3.SetValue(LS.COVERAGE_CODE_3_0004);                                              //COBOL==> MOVE COVERAGE-CODE-3-0004 TO WS-PO-COVERAGE-3
            WS.WS_PO_COVERAGE_4.SetValue(LS.COVERAGE_CODE_4_0004);                                              //COBOL==> MOVE COVERAGE-CODE-4-0004 TO WS-PO-COVERAGE-4
            WS.WS_PO_COVERAGE_5.SetValue(LS.COVERAGE_CODE_5_0004);                                              //COBOL==> MOVE COVERAGE-CODE-5-0004 TO WS-PO-COVERAGE-5
            WS.WS_PO_COVERAGE_6.SetValue(LS.COVERAGE_CODE_6_0004);                                              //COBOL==> MOVE COVERAGE-CODE-6-0004 TO WS-PO-COVERAGE-6
            WS.WS_PO_COVERAGE_7.SetValue(LS.COVERAGE_CODE_7_0004);                                              //COBOL==> MOVE COVERAGE-CODE-7-0004 TO WS-PO-COVERAGE-7
            if (LS.SSN_0006.IsNumericValue())                                                                   //COBOL==> IF SSN-0006 NUMERIC
            {
                WS.WS_PO_POLICY_HOLDER_SSN.SetValue(LS.SSN_0006);                                                   //COBOL==> MOVE SSN-0006 TO WS-PO-POLICY-HOLDER-SSN
            }                                                                                                   //COBOL==> ELSE
            else
            {
                WS.WS_PO_POLICY_HOLDER_SSN.SetValueWithZeroes();                                                    //COBOL==> MOVE ZERO TO WS-PO-POLICY-HOLDER-SSN
            }                                                                                                   //COBOL==> END-IF
            WS.WS_PO_POLICY_HOLDER_NUM.SetValue(LS.NUMBER_0006);                                                //COBOL==> MOVE NUMBER-0006 TO WS-PO-POLICY-HOLDER-NUM
            WS.WS_PO_POLICY_HOLDER_LNAME.SetValue(LS.LAST_NAME_0006);                                           //COBOL==> MOVE LAST-NAME-0006 TO WS-PO-POLICY-HOLDER-LNAME
            WS.WS_PO_POLICY_HOLDER_FNAME.SetValue(LS.FIRST_NAME_0006);                                          //COBOL==> MOVE FIRST-NAME-0006 TO WS-PO-POLICY-HOLDER-FNAME
            WS.WS_PO_VERIFICATION_DATE.SetValue(LS.COVERAGE_VERIFIED_DATE_0008);                                //COBOL==> MOVE COVERAGE-VERIFIED-DATE-0008 TO WS-PO-VERIFICATION-DATE
            WS.WS_PO_EFFECTIVE_DATE.SetValue(LS.COVERAGE_BEGIN_DATE_0008);                                      //COBOL==> MOVE COVERAGE-BEGIN-DATE-0008 TO WS-PO-EFFECTIVE-DATE
            WS.WS_PO_END_DATE.SetValue(LS.COVERAGE_END_DATE_0008);                                              //COBOL==> MOVE COVERAGE-END-DATE-0008 TO WS-PO-END-DATE
            WS.WS_PO_RELATIONSHIP.SetValue(LS.SELECT_CHAR_0007);                                                //COBOL==> MOVE SELECT-CHAR-0007 TO WS-PO-RELATIONSHIP
            WS.WS_SPACE_COUNT.SetValue(LS.INSURANCE_GROUP_NUMBER_0003.InspectGivingCount(" ", "LEADING"));      //COBOL==> INSPECT INSURANCE-GROUP-NUMBER-0003 TALLYING WS-SPACE-COUNT FOR LEADING ' '
            WS.WS_RM_ST.SetComputeValue(WS.WS_SPACE_COUNT.AsDecimal() + 1m);                                    //COBOL==> COMPUTE WS-RM-ST = WS-SPACE-COUNT + 1
            WS.WS_RM_LNG.SetComputeValue(WS.WS_SOURCE_LENGTH.AsDecimal() - WS.WS_SPACE_COUNT.AsDecimal());      //COBOL==> COMPUTE WS-RM-LNG = WS-SOURCE-LENGTH - WS-SPACE-COUNT
            WS.WS_PO_GROUP_NUMBER.SetValue(LS.INSURANCE_GROUP_NUMBER_0003.GetSubstring(WS.WS_RM_ST.AsInt(), WS.WS_RM_LNG.AsInt()));  //COBOL==> MOVE INSURANCE-GROUP-NUMBER-0003 ( WS-RM-ST:WS-RM-LNG ) TO WS-PO-GROUP-NUMBER
            WS.WS_SPACE_COUNT.SetValueWithZeroes();                                                             //COBOL==> MOVE ZERO TO WS-SPACE-COUNT
            WS.WS_SPACE_COUNT.SetValue(LS.INSURANCE_POLICY_NUMBER_0004.InspectGivingCount(" ", "LEADING"));     //COBOL==> INSPECT INSURANCE-POLICY-NUMBER-0004 TALLYING WS-SPACE-COUNT FOR LEADING ' '
            WS.WS_RM_ST.SetComputeValue(WS.WS_SPACE_COUNT.AsDecimal() + 1m);                                    //COBOL==> COMPUTE WS-RM-ST = WS-SPACE-COUNT + 1
            WS.WS_RM_LNG.SetComputeValue(WS.WS_SOURCE_LENGTH.AsDecimal() - WS.WS_SPACE_COUNT.AsDecimal());      //COBOL==> COMPUTE WS-RM-LNG = WS-SOURCE-LENGTH - WS-SPACE-COUNT
            WS.WS_PO_POLICY_NUMBER.SetValue(LS.INSURANCE_POLICY_NUMBER_0004.GetSubstring(WS.WS_RM_ST.AsInt(), WS.WS_RM_LNG.AsInt()));  //COBOL==> MOVE INSURANCE-POLICY-NUMBER-0004 ( WS-RM-ST:WS-RM-LNG ) TO WS-PO-POLICY-NUMBER
            FD.HINSOUT.WriteLine(WS.WS_TYPE_PO.AsBytes);                                                        //COBOL==> WRITE DETAIL-REC FROM WS-TYPE-PO
            LS.STATUS_0014.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0014 .
            if (returnMethod != "" && returnMethod != "M_PARA_MAIN") { M_PARA_MAIN_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_MAIN_EXIT
        /// </summary>
        private void M_PARA_MAIN_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_MAIN_EXIT") { return; }                                                 //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_MAIN_EXIT") { M_PARA_OPEN(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_OPEN
        /// </summary>
        private void M_PARA_OPEN(string returnMethod = "")
        {
            FD.HINSOUT.OpenFile(FileAccessMode.Write);                                                          //COBOL==> OPEN OUTPUT HINSOUT.
            LS.STATUS_0014.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0014.
            if (returnMethod != "" && returnMethod != "M_PARA_OPEN") { M_PARA_OPEN_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_OPEN_EXIT
        /// </summary>
        private void M_PARA_OPEN_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_OPEN_EXIT") { return; }                                                 //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_OPEN_EXIT") { M_PARA_HEADER(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_HEADER
        /// </summary>
        private void M_PARA_HEADER(string returnMethod = "")
        {
            WS.WS_AA_CREATION_DATE.SetValue(LS.DATE_0011);                                                      //COBOL==> MOVE DATE-0011 TO WS-AA-CREATION-DATE
            FD.HINSOUT.WriteLine(WS.WS_TYPE_AA.AsBytes);                                                        //COBOL==> WRITE DETAIL-REC FROM WS-TYPE-AA .
            if (returnMethod != "" && returnMethod != "M_PARA_HEADER") { M_PARA_HEADER_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_HEADER_EXIT
        /// </summary>
        private void M_PARA_HEADER_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_HEADER_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_HEADER_EXIT") { M_PARA_TRAILER(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TRAILER
        /// </summary>
        private void M_PARA_TRAILER(string returnMethod = "")
        {
            WS.WS_ZZ_RECORD_COUNT.SetValue(LS.COUNT_0012);                                                      //COBOL==> MOVE COUNT-0012 TO WS-ZZ-RECORD-COUNT
            FD.HINSOUT.WriteLine(WS.WS_TYPE_ZZ.AsBytes);                                                        //COBOL==> WRITE DETAIL-REC FROM WS-TYPE-ZZ .
            if (returnMethod != "" && returnMethod != "M_PARA_TRAILER") { M_PARA_TRAILER_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TRAILER_EXIT
        /// </summary>
        private void M_PARA_TRAILER_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TRAILER_EXIT") { return; }                                              //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TRAILER_EXIT") { M_PARA_CLOSE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_CLOSE
        /// </summary>
        private void M_PARA_CLOSE(string returnMethod = "")
        {
            FD.HINSOUT.CloseFile();                                                                             //COBOL==> CLOSE HINSOUT.
            LS.STATUS_0014.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0014.
            if (returnMethod != "" && returnMethod != "M_PARA_CLOSE") { M_PARA_CLOSE_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_CLOSE_EXIT
        /// </summary>
        private void M_PARA_CLOSE_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_CLOSE_EXIT") { return; }                                                //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_CLOSE_EXIT") { M_PARA_0613683549_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0613683549_INIT
        /// </summary>
        private void M_PARA_0613683549_INIT(string returnMethod = "")
        {
            LS.EXPORT_0014EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0014EV .
            if (returnMethod != "" && returnMethod != "M_PARA_0613683549_INIT") { M_PARA_0613683549_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0613683549_INIT_EXIT
        /// </summary>
        private void M_PARA_0613683549_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0613683549_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
