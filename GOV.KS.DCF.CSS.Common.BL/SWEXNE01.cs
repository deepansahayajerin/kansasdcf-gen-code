#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2022
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2022-03-02 04:53:51 PM
   **        *   FROM COBOL PGM   :  SWEXNE01
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                   INFORMATION ENGINEERING FACILITY (TM)
                       TEXAS INSTRUMENTS INC.
                COPYRIGHT (C) TEXAS INSTRUMENTS INC. 1996
       NAME: SP_EAB_CONCAT_N_ADD_DELIM        DATE: 96/06/25
       TARGET OS:   MVS                       TIME: 17:29:36
       TARGET DBMS: DB2                       USER: SWMTSAKX
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
   **************************************************************
*/
#endregion
#region Using Directives
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Core;
using System;
#endregion

namespace GOV.KS.DCF.CSS.Common.BL
{
    #region Working Storage Class
    internal class SWEXNE01_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXNE01_ws_WorkingStorage";
            internal const string STRING1_SUB = "STRING1_SUB";
            internal const string STRING2_SUB = "STRING2_SUB";
            internal const string POUND_SIGN = "POUND_SIGN";
            internal const string TILDE = "TILDE";
            internal const string STRING3_COUNT = "STRING3_COUNT";
            internal const string IMPORT_COPY = "IMPORT_COPY";
            internal const string STRING1 = "STRING1";
            internal const string STRING1_COPY = "STRING1_COPY";
            internal const string STRING1_X = "STRING1_X";
            internal const string STRING1_X_Redefines = "STRING1_X_Redefines";
            internal const string STRING2 = "STRING2";
            internal const string STRING2_COPY = "STRING2_COPY";
            internal const string STRING2_X = "STRING2_X";
            internal const string STRING2_X_Redefines = "STRING2_X_Redefines";
            internal const string FUNC_0777519207_ESC_FLAG = "FUNC_0777519207_ESC_FLAG";
        }
        #endregion

        #region Direct-access element properties
        public IField STRING1_SUB { get { return GetElementByName<IField>(Names.STRING1_SUB); } }
        public IField STRING2_SUB { get { return GetElementByName<IField>(Names.STRING2_SUB); } }
        public IField POUND_SIGN { get { return GetElementByName<IField>(Names.POUND_SIGN); } }
        public IField TILDE { get { return GetElementByName<IField>(Names.TILDE); } }
        public IField STRING3_COUNT { get { return GetElementByName<IField>(Names.STRING3_COUNT); } }
        public IGroup IMPORT_COPY { get { return GetElementByName<IGroup>(Names.IMPORT_COPY); } }
        public IGroup STRING1 { get { return GetElementByName<IGroup>(Names.STRING1); } }
        public IField STRING1_COPY { get { return GetElementByName<IField>(Names.STRING1_COPY); } }
        public IGroup STRING1_X_Redefines { get { return GetElementByName<IGroup>(Names.STRING1_X_Redefines); } }
        public IArrayElementAccessor<IField> STRING1_X { get { return GetArrayElementAccessor<IField>(Names.STRING1_X); } }
        public IGroup STRING2 { get { return GetElementByName<IGroup>(Names.STRING2); } }
        public IField STRING2_COPY { get { return GetElementByName<IField>(Names.STRING2_COPY); } }
        public IGroup STRING2_X_Redefines { get { return GetElementByName<IGroup>(Names.STRING2_X_Redefines); } }
        public IArrayElementAccessor<IField> STRING2_X { get { return GetArrayElementAccessor<IField>(Names.STRING2_X); } }
        public IField FUNC_0777519207_ESC_FLAG { get { return GetElementByName<IField>(Names.FUNC_0777519207_ESC_FLAG); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.STRING1_SUB, FieldType.SignedNumeric, 4);
            recordDef.CreateNewField(Names.STRING2_SUB, FieldType.SignedNumeric, 4);
            recordDef.CreateNewField(Names.POUND_SIGN, FieldType.String, 1, "#");
            recordDef.CreateNewField(Names.TILDE, FieldType.String, 1, "~");
            recordDef.CreateNewField(Names.STRING3_COUNT, FieldType.SignedNumeric, 4);

            recordDef.CreateNewGroup(Names.IMPORT_COPY, (IMPORT_COPY) =>
           {
               IMPORT_COPY.CreateNewGroup(Names.STRING1, (STRING1) =>
               {

                   IField STRING1_COPY_local = STRING1.CreateNewField(Names.STRING1_COPY, FieldType.String, 245);
                   STRING1.CreateNewGroupRedefine(Names.STRING1_X_Redefines, STRING1_COPY_local, (STRING1_X_Redefines) =>
                   {
                       STRING1_X_Redefines.CreateNewFieldArray(Names.STRING1_X, 245, FieldType.String, 1);
                   });
               });
               IMPORT_COPY.CreateNewGroup(Names.STRING2, (STRING2) =>
               {

                   IField STRING2_COPY_local = STRING2.CreateNewField(Names.STRING2_COPY, FieldType.String, 245);
                   STRING2.CreateNewGroupRedefine(Names.STRING2_X_Redefines, STRING2_COPY_local, (STRING2_X_Redefines) =>
                   {
                       STRING2_X_Redefines.CreateNewFieldArray(Names.STRING2_X, 245, FieldType.String, 1);
                   });
               });
           });
            recordDef.CreateNewField(Names.FUNC_0777519207_ESC_FLAG, FieldType.String, 1);

        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXNE01_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXNE01_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string W_IA = "W_IA";
            internal const string A_0777519210_IA = "A_0777519210_IA";
            internal const string IMPORT_INPUT_1_0001EV = "IMPORT_INPUT_1_0001EV";
            internal const string FIELD_VALUE_0001ET = "FIELD_VALUE_0001ET";
            internal const string VALUE_0001AS = "VALUE_0001AS";
            internal const string VALUE_0001 = "VALUE_0001";
            internal const string VALUE_0001DL = "VALUE_0001DL";
            internal const string VALUE_0001XL = "VALUE_0001XL";
            internal const string VALUE_0001DV = "VALUE_0001DV";
            internal const string VALUE_0001XV = "VALUE_0001XV";
            internal const string VALUE_0001XX = "VALUE_0001XX";
            internal const string IMPORT_INPUT_2_0002EV = "IMPORT_INPUT_2_0002EV";
            internal const string FIELD_VALUE_0002ET = "FIELD_VALUE_0002ET";
            internal const string VALUE_0002AS = "VALUE_0002AS";
            internal const string VALUE_0002 = "VALUE_0002";
            internal const string VALUE_0002DL = "VALUE_0002DL";
            internal const string VALUE_0002XL = "VALUE_0002XL";
            internal const string VALUE_0002DV = "VALUE_0002DV";
            internal const string VALUE_0002XV = "VALUE_0002XV";
            internal const string VALUE_0002XX = "VALUE_0002XX";
            internal const string W_OA = "W_OA";
            internal const string A_0777519216_OA = "A_0777519216_OA";
            internal const string EXPORT_0003EV = "EXPORT_0003EV";
            internal const string FIELD_VALUE_0003ET = "FIELD_VALUE_0003ET";
            internal const string VALUE_0003AS = "VALUE_0003AS";
            internal const string VALUE_0003 = "VALUE_0003";
            internal const string VALUE_0003DL = "VALUE_0003DL";
            internal const string VALUE_0003XL = "VALUE_0003XL";
            internal const string VALUE_0003DV = "VALUE_0003DV";
            internal const string VALUE_0003XV = "VALUE_0003XV";
            internal const string VALUE_0003XX = "VALUE_0003XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup W_IA { get { return GetElementByName<IGroup>(Names.W_IA); } }
        public IGroup A_0777519210_IA { get { return GetElementByName<IGroup>(Names.A_0777519210_IA); } }
        public IGroup IMPORT_INPUT_1_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_INPUT_1_0001EV); } }
        public IGroup FIELD_VALUE_0001ET { get { return GetElementByName<IGroup>(Names.FIELD_VALUE_0001ET); } }
        public IField VALUE_0001AS { get { return GetElementByName<IField>(Names.VALUE_0001AS); } }
        public IGroup VALUE_0001 { get { return GetElementByName<IGroup>(Names.VALUE_0001); } }
        public IField VALUE_0001DL { get { return GetElementByName<IField>(Names.VALUE_0001DL); } }
        public IField VALUE_0001XL { get { return GetElementByName<IField>(Names.VALUE_0001XL); } }
        public IField VALUE_0001DV { get { return GetElementByName<IField>(Names.VALUE_0001DV); } }
        public IField VALUE_0001XV { get { return GetElementByName<IField>(Names.VALUE_0001XV); } }
        public IField VALUE_0001XX { get { return GetElementByName<IField>(Names.VALUE_0001XX); } }
        public IGroup IMPORT_INPUT_2_0002EV { get { return GetElementByName<IGroup>(Names.IMPORT_INPUT_2_0002EV); } }
        public IGroup FIELD_VALUE_0002ET { get { return GetElementByName<IGroup>(Names.FIELD_VALUE_0002ET); } }
        public IField VALUE_0002AS { get { return GetElementByName<IField>(Names.VALUE_0002AS); } }
        public IGroup VALUE_0002 { get { return GetElementByName<IGroup>(Names.VALUE_0002); } }
        public IField VALUE_0002DL { get { return GetElementByName<IField>(Names.VALUE_0002DL); } }
        public IField VALUE_0002XL { get { return GetElementByName<IField>(Names.VALUE_0002XL); } }
        public IField VALUE_0002DV { get { return GetElementByName<IField>(Names.VALUE_0002DV); } }
        public IField VALUE_0002XV { get { return GetElementByName<IField>(Names.VALUE_0002XV); } }
        public IField VALUE_0002XX { get { return GetElementByName<IField>(Names.VALUE_0002XX); } }
        public IGroup W_OA { get { return GetElementByName<IGroup>(Names.W_OA); } }
        public IGroup A_0777519216_OA { get { return GetElementByName<IGroup>(Names.A_0777519216_OA); } }
        public IGroup EXPORT_0003EV { get { return GetElementByName<IGroup>(Names.EXPORT_0003EV); } }
        public IGroup FIELD_VALUE_0003ET { get { return GetElementByName<IGroup>(Names.FIELD_VALUE_0003ET); } }
        public IField VALUE_0003AS { get { return GetElementByName<IField>(Names.VALUE_0003AS); } }
        public IGroup VALUE_0003 { get { return GetElementByName<IGroup>(Names.VALUE_0003); } }
        public IField VALUE_0003DL { get { return GetElementByName<IField>(Names.VALUE_0003DL); } }
        public IField VALUE_0003XL { get { return GetElementByName<IField>(Names.VALUE_0003XL); } }
        public IField VALUE_0003DV { get { return GetElementByName<IField>(Names.VALUE_0003DV); } }
        public IField VALUE_0003XV { get { return GetElementByName<IField>(Names.VALUE_0003XV); } }
        public IField VALUE_0003XX { get { return GetElementByName<IField>(Names.VALUE_0003XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
           {
               PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
               PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
               {
                   PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
               });
           });

            recordDef.CreateNewGroup(Names.W_IA, (W_IA) =>
           {
               W_IA.CreateNewGroup(Names.A_0777519210_IA, (A_0777519210_IA) =>
               {
                   A_0777519210_IA.CreateNewGroup(Names.IMPORT_INPUT_1_0001EV, (IMPORT_INPUT_1_0001EV) =>
                   {
                       IMPORT_INPUT_1_0001EV.CreateNewGroup(Names.FIELD_VALUE_0001ET, (FIELD_VALUE_0001ET) =>
                       {
                           FIELD_VALUE_0001ET.CreateNewField(Names.VALUE_0001AS, FieldType.String, 1);
                           IGroup VALUE_0001_local = (IGroup)FIELD_VALUE_0001ET.CreateNewGroup(Names.VALUE_0001, (VALUE_0001) =>
                           {

                               IField VALUE_0001DL_local = VALUE_0001.CreateNewField(Names.VALUE_0001DL, FieldType.CompShort, 4);
                               VALUE_0001.CreateNewFieldRedefine(Names.VALUE_0001XL, FieldType.String, VALUE_0001DL_local, 2);

                               IField VALUE_0001DV_local = VALUE_0001.CreateNewField(Names.VALUE_0001DV, FieldType.String, 245);
                               VALUE_0001.CreateNewFieldRedefine(Names.VALUE_0001XV, FieldType.String, VALUE_0001DV_local, 245);
                           });
                           FIELD_VALUE_0001ET.CreateNewFieldRedefine(Names.VALUE_0001XX, FieldType.String, VALUE_0001_local, 247);
                       });
                   });
                   A_0777519210_IA.CreateNewGroup(Names.IMPORT_INPUT_2_0002EV, (IMPORT_INPUT_2_0002EV) =>
                   {
                       IMPORT_INPUT_2_0002EV.CreateNewGroup(Names.FIELD_VALUE_0002ET, (FIELD_VALUE_0002ET) =>
                       {
                           FIELD_VALUE_0002ET.CreateNewField(Names.VALUE_0002AS, FieldType.String, 1);
                           IGroup VALUE_0002_local = (IGroup)FIELD_VALUE_0002ET.CreateNewGroup(Names.VALUE_0002, (VALUE_0002) =>
                           {

                               IField VALUE_0002DL_local = VALUE_0002.CreateNewField(Names.VALUE_0002DL, FieldType.CompShort, 4);
                               VALUE_0002.CreateNewFieldRedefine(Names.VALUE_0002XL, FieldType.String, VALUE_0002DL_local, 2);

                               IField VALUE_0002DV_local = VALUE_0002.CreateNewField(Names.VALUE_0002DV, FieldType.String, 245);
                               VALUE_0002.CreateNewFieldRedefine(Names.VALUE_0002XV, FieldType.String, VALUE_0002DV_local, 245);
                           });
                           FIELD_VALUE_0002ET.CreateNewFieldRedefine(Names.VALUE_0002XX, FieldType.String, VALUE_0002_local, 247);
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.W_OA, (W_OA) =>
           {
               W_OA.CreateNewGroup(Names.A_0777519216_OA, (A_0777519216_OA) =>
               {
                   A_0777519216_OA.CreateNewGroup(Names.EXPORT_0003EV, (EXPORT_0003EV) =>
                   {
                       EXPORT_0003EV.CreateNewGroup(Names.FIELD_VALUE_0003ET, (FIELD_VALUE_0003ET) =>
                       {
                           FIELD_VALUE_0003ET.CreateNewField(Names.VALUE_0003AS, FieldType.String, 1);
                           IGroup VALUE_0003_local = (IGroup)FIELD_VALUE_0003ET.CreateNewGroup(Names.VALUE_0003, (VALUE_0003) =>
                           {

                               IField VALUE_0003DL_local = VALUE_0003.CreateNewField(Names.VALUE_0003DL, FieldType.CompShort, 4);
                               VALUE_0003.CreateNewFieldRedefine(Names.VALUE_0003XL, FieldType.String, VALUE_0003DL_local, 2);

                               IField VALUE_0003DV_local = VALUE_0003.CreateNewField(Names.VALUE_0003DV, FieldType.String, 245);
                               VALUE_0003.CreateNewFieldRedefine(Names.VALUE_0003XV, FieldType.String, VALUE_0003DV_local, 245);
                           });
                           FIELD_VALUE_0003ET.CreateNewFieldRedefine(Names.VALUE_0003XX, FieldType.String, VALUE_0003_local, 247);
                       });
                   });
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(W_IA, args, 0);
            SetPassedParm(W_OA, args, 1);
            SetPassedParm(PSMGR_EAB_DATA, args, 2);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(W_IA, args, 0);
            SetReturnParm(W_OA, args, 1);
            SetReturnParm(PSMGR_EAB_DATA, args, 2);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXNE01 : EABBase
    {

        #region Public Constructors
        public SWEXNE01()
            : base()
        {
            this.ProgramName.SetValue("SWEXNE01");

            WS = new SWEXNE01_ws();
            LS = new SWEXNE01_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXNE01_ws WS;

        //==== Linkage Section Data Class ========================================
        private SWEXNE01_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING W-IA , W-OA , PSMGR-EAB-DATA.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0777519207(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0777519207
        /// </summary>
        private void M_MAIN_0777519207(string returnMethod = "")
        {
            M_PARA_0777519207_INIT("M_PARA_0777519207_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0777519207-INIT THRU PARA-0777519207-INIT-EXIT
            M_PARA_0777519207("M_PARA_0777519207_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0777519207 THRU PARA-0777519207-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0777519207
        /// </summary>
        private void M_PARA_0777519207(string returnMethod = "")
        {
            WS.FUNC_0777519207_ESC_FLAG.SetValue("N");                                                          //COBOL==> MOVE 'N' TO FUNC-0777519207-ESC-FLAG
            WS.STRING1_COPY.SetValue(LS.VALUE_0001DV);                                                          //COBOL==> MOVE VALUE-0001DV TO STRING1-COPY
            for (WS.STRING1_SUB.SetValue(LS.VALUE_0001DL); (!((!(WS.STRING1_X[WS.STRING1_SUB.AsInt()].IsSpaces())) || (WS.STRING1_SUB.IsEqualTo(0)))); WS.STRING1_SUB.Add(-1))  //COBOL==> PERFORM VARYING STRING1-SUB FROM VALUE-0001DL BY -1 UNTIL STRING1-X ( STRING1-SUB ) NOT EQUAL SPACE OR STRING1-SUB EQUAL ZERO
            {
            }                                                                                                   //COBOL==> END-PERFORM
            if (WS.STRING1_SUB.IsLessThan(245))                                                                 //COBOL==> IF STRING1-SUB LESS THAN 245 THEN
            {
                WS.STRING1_SUB.Add(1);                                                                              //COBOL==> ADD 1 TO STRING1-SUB
                WS.STRING1_X[WS.STRING1_SUB.AsInt()].SetValue(WS.TILDE);                                            //COBOL==> MOVE TILDE TO STRING1-X ( STRING1-SUB )
            }                                                                                                   //COBOL==> END-IF
            WS.STRING2_COPY.SetValue(LS.VALUE_0002DV);                                                          //COBOL==> MOVE VALUE-0002DV TO STRING2-COPY
            for (WS.STRING2_SUB.SetValue(LS.VALUE_0002DL); (!((!(WS.STRING2_X[WS.STRING2_SUB.AsInt()].IsSpaces())) || (WS.STRING2_SUB.IsEqualTo(0)))); WS.STRING2_SUB.Add(-1))  //COBOL==> PERFORM VARYING STRING2-SUB FROM VALUE-0002DL BY -1 UNTIL STRING2-X ( STRING2-SUB ) NOT EQUAL SPACE OR STRING2-SUB EQUAL ZERO
            {
            }                                                                                                   //COBOL==> END-PERFORM
            if (WS.STRING2_SUB.IsLessThan(245))                                                                 //COBOL==> IF STRING2-SUB LESS THAN 245 THEN
            {
                WS.STRING2_SUB.Add(1);                                                                              //COBOL==> ADD 1 TO STRING2-SUB
                WS.STRING2_X[WS.STRING2_SUB.AsInt()].SetValue(WS.TILDE);                                            //COBOL==> MOVE TILDE TO STRING2-X ( STRING2-SUB )
            }                                                                                                   //COBOL==> END-IF
            WS.STRING3_COUNT.SetValue(1);                                                                       //COBOL==> MOVE 1 TO STRING3-COUNT
            LS.VALUE_0003DV.SetStringValueWithPointer(StringUtils.Stringify(StringUtils.DelimitedByString(WS.TILDE.AsString(), WS.STRING1_COPY.AsString(), WS.STRING2_COPY.AsString()), StringUtils.DelimitedBySize(WS.POUND_SIGN.AsString())), WS.STRING3_COUNT);  //COBOL==> STRING STRING1-COPY STRING2-COPY DELIMITED BY TILDE POUND-SIGN DELIMITED BY SIZE INTO VALUE-0003DV WITH POINTER STRING3-COUNT
            LS.VALUE_0003DL.SetComputeValue(WS.STRING3_COUNT.AsDecimal() - 1m);                                 //COBOL==> COMPUTE VALUE-0003DL = STRING3-COUNT - 1 .
            if (returnMethod != "" && returnMethod != "M_PARA_0777519207") { M_PARA_0777519207_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0777519207_EXIT
        /// </summary>
        private void M_PARA_0777519207_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0777519207_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0777519207_EXIT") { M_PARA_0777519207_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0777519207_INIT
        /// </summary>
        private void M_PARA_0777519207_INIT(string returnMethod = "")
        {
            LS.EXPORT_0003EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0003EV .
            if (returnMethod != "" && returnMethod != "M_PARA_0777519207_INIT") { M_PARA_0777519207_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0777519207_INIT_EXIT
        /// </summary>
        private void M_PARA_0777519207_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0777519207_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
