#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2022
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2022-03-02 04:54:16 PM
   **        *   FROM COBOL PGM   :  SWEXPE20
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                   INFORMATION ENGINEERING FACILITY (TM)
                       TEXAS INSTRUMENTS INC.
                COPYRIGHT (C) TEXAS INSTRUMENTS INC. 1997
       NAME: CO_EAB_CONCAT_10_DELIMIT         DATE: 97/01/16
       TARGET OS:   MVS                       TIME: 19:03:43
       TARGET DBMS: DB2                       USER: SWMTLAF
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
   **************************************************************
*/
#endregion
#region Using Directives
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Core;
using System;
#endregion

namespace GOV.KS.DCF.CSS.Common.BL
{
    #region Working Storage Class
    internal class SWEXPE20_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXPE20_ws_WorkingStorage";
            internal const string TEXT_LINE = "TEXT_LINE";
            internal const string TEXT_LINE_X = "TEXT_LINE_X";
            internal const string TEXT_LINE_X_Redefines = "TEXT_LINE_X_Redefines";
            internal const string TEXT_DELIMITER = "TEXT_DELIMITER";
            internal const string TEXT_DELIMITER_X = "TEXT_DELIMITER_X";
            internal const string TEXT_DELIMITER_X_Redefines = "TEXT_DELIMITER_X_Redefines";
            internal const string TEXT_DELIMITER_LENGTH = "TEXT_DELIMITER_LENGTH";
            internal const string TILDE = "TILDE";
            internal const string LINE_NUMBER = "LINE_NUMBER";
            internal const string TEXT_LINE_SUB = "TEXT_LINE_SUB";
            internal const string TEXT_LINE_DEST = "TEXT_LINE_DEST";
            internal const string TEXT_POINTER = "TEXT_POINTER";
            internal const string SPACE_FILLER = "SPACE_FILLER";
            internal const string ADIM1 = "ADIM1";
            internal const string ADIM2 = "ADIM2";
            internal const string ADIM3 = "ADIM3";
            internal const string IMPORT_GROUP_STRINGS_0001FL = "IMPORT_GROUP_STRINGS_0001FL";
            internal const string IMPORT_GROUP_STRINGS_0001PS = "IMPORT_GROUP_STRINGS_0001PS";
            internal const string IMPORT_GROUP_STRINGS_0001RF = "IMPORT_GROUP_STRINGS_0001RF";
            internal const string FUNC_0937974975_ESC_FLAG = "FUNC_0937974975_ESC_FLAG";
        }
        #endregion

        #region Direct-access element properties
        public IField TEXT_LINE { get { return GetElementByName<IField>(Names.TEXT_LINE); } }
        public IGroup TEXT_LINE_X_Redefines { get { return GetElementByName<IGroup>(Names.TEXT_LINE_X_Redefines); } }
        public IArrayElementAccessor<IField> TEXT_LINE_X { get { return GetArrayElementAccessor<IField>(Names.TEXT_LINE_X); } }
        public IField TEXT_DELIMITER { get { return GetElementByName<IField>(Names.TEXT_DELIMITER); } }
        public IGroup TEXT_DELIMITER_X_Redefines { get { return GetElementByName<IGroup>(Names.TEXT_DELIMITER_X_Redefines); } }
        public IArrayElementAccessor<IField> TEXT_DELIMITER_X { get { return GetArrayElementAccessor<IField>(Names.TEXT_DELIMITER_X); } }
        public IField TEXT_DELIMITER_LENGTH { get { return GetElementByName<IField>(Names.TEXT_DELIMITER_LENGTH); } }
        public IField TILDE { get { return GetElementByName<IField>(Names.TILDE); } }
        public IField LINE_NUMBER { get { return GetElementByName<IField>(Names.LINE_NUMBER); } }
        public IField TEXT_LINE_SUB { get { return GetElementByName<IField>(Names.TEXT_LINE_SUB); } }
        public IField TEXT_LINE_DEST { get { return GetElementByName<IField>(Names.TEXT_LINE_DEST); } }
        public IField TEXT_POINTER { get { return GetElementByName<IField>(Names.TEXT_POINTER); } }
        public IField SPACE_FILLER { get { return GetElementByName<IField>(Names.SPACE_FILLER); } }
        public IField ADIM1 { get { return GetElementByName<IField>(Names.ADIM1); } }
        public IField ADIM2 { get { return GetElementByName<IField>(Names.ADIM2); } }
        public IField ADIM3 { get { return GetElementByName<IField>(Names.ADIM3); } }
        public IField IMPORT_GROUP_STRINGS_0001FL { get { return GetElementByName<IField>(Names.IMPORT_GROUP_STRINGS_0001FL); } }
        public IField IMPORT_GROUP_STRINGS_0001PS { get { return GetElementByName<IField>(Names.IMPORT_GROUP_STRINGS_0001PS); } }
        public IField IMPORT_GROUP_STRINGS_0001RF { get { return GetElementByName<IField>(Names.IMPORT_GROUP_STRINGS_0001RF); } }
        public IField FUNC_0937974975_ESC_FLAG { get { return GetElementByName<IField>(Names.FUNC_0937974975_ESC_FLAG); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup("FILLER", (FILLER) =>
           {

               IField TEXT_LINE_local = FILLER.CreateNewField(Names.TEXT_LINE, FieldType.String, 33);
               FILLER.CreateNewGroupRedefine(Names.TEXT_LINE_X_Redefines, TEXT_LINE_local, (TEXT_LINE_X_Redefines) =>
               {
                   TEXT_LINE_X_Redefines.CreateNewFieldArray(Names.TEXT_LINE_X, 33, FieldType.String, 1);
               });

               IField TEXT_DELIMITER_local = FILLER.CreateNewField(Names.TEXT_DELIMITER, FieldType.String, 6);
               FILLER.CreateNewGroupRedefine(Names.TEXT_DELIMITER_X_Redefines, TEXT_DELIMITER_local, (TEXT_DELIMITER_X_Redefines) =>
               {
                   TEXT_DELIMITER_X_Redefines.CreateNewFieldArray(Names.TEXT_DELIMITER_X, 6, FieldType.String, 1);
               });
           });
            recordDef.CreateNewField(Names.TEXT_DELIMITER_LENGTH, FieldType.SignedNumeric, 4);
            recordDef.CreateNewField(Names.TILDE, FieldType.String, 1, "~");
            recordDef.CreateNewField(Names.LINE_NUMBER, FieldType.SignedNumeric, 4);
            recordDef.CreateNewField(Names.TEXT_LINE_SUB, FieldType.SignedNumeric, 4);
            recordDef.CreateNewField(Names.TEXT_LINE_DEST, FieldType.SignedNumeric, 4);
            recordDef.CreateNewField(Names.TEXT_POINTER, FieldType.SignedNumeric, 4);
            recordDef.CreateNewField(Names.SPACE_FILLER, FieldType.String, 32, SPACES);

            recordDef.CreateNewGroup("FILLER_d2", (FILLER_d2) =>
           {
               FILLER_d2.CreateNewField(Names.ADIM1, FieldType.CompInt, 8);
               FILLER_d2.CreateNewField(Names.ADIM2, FieldType.CompInt, 8);
               FILLER_d2.CreateNewField(Names.ADIM3, FieldType.CompInt, 8);
           });

            recordDef.CreateNewGroup("FILLER_d3", (FILLER_d3) =>
           {
               FILLER_d3.CreateNewField(Names.IMPORT_GROUP_STRINGS_0001FL, FieldType.String, 1);
               FILLER_d3.CreateNewField(Names.IMPORT_GROUP_STRINGS_0001PS, FieldType.CompShort, 4);
               FILLER_d3.CreateNewField(Names.IMPORT_GROUP_STRINGS_0001RF, FieldType.String, 1);
           });
            recordDef.CreateNewField(Names.FUNC_0937974975_ESC_FLAG, FieldType.String, 1);

        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXPE20_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXPE20_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string W_IA = "W_IA";
            internal const string A_0937974978_IA = "A_0937974978_IA";
            internal const string IMPORT_DELIMITER_LENGTH_0001EV = "IMPORT_DELIMITER_LENGTH_0001EV";
            internal const string IEF_SUPPLIED_0001ET = "IEF_SUPPLIED_0001ET";
            internal const string COUNT_0001AS = "COUNT_0001AS";
            internal const string COUNT_0001 = "COUNT_0001";
            internal const string COUNT_0001XX = "COUNT_0001XX";
            internal const string IMPORT_DELIMITER_0002EV = "IMPORT_DELIMITER_0002EV";
            internal const string WORK_AREA_0002ET = "WORK_AREA_0002ET";
            internal const string TEXT_5_0002AS = "TEXT_5_0002AS";
            internal const string TEXT_5_0002 = "TEXT_5_0002";
            internal const string TEXT_5_0002XX = "TEXT_5_0002XX";
            internal const string IMPORT_GROUP_STRINGS_0001RG = "IMPORT_GROUP_STRINGS_0001RG";
            internal const string IMPORT_GROUP_STRINGS_0001MA = "IMPORT_GROUP_STRINGS_0001MA";
            internal const string IMPORT_GROUP_STRINGS_0001MX = "IMPORT_GROUP_STRINGS_0001MX";
            internal const string IMPORT_GROUP_STRINGS_0001 = "IMPORT_GROUP_STRINGS_0001";
            internal const string IMPORT_GROUP_STRINGS_0001AC = "IMPORT_GROUP_STRINGS_0001AC";
            internal const string GRP_IMP_STRING_0003EV = "GRP_IMP_STRING_0003EV";
            internal const string WORK_AREA_0003ET = "WORK_AREA_0003ET";
            internal const string TEXT_32_0003AS = "TEXT_32_0003AS";
            internal const string TEXT_32_0003 = "TEXT_32_0003";
            internal const string TEXT_32_0003XX = "TEXT_32_0003XX";
            internal const string W_OA = "W_OA";
            internal const string A_0937974979_OA = "A_0937974979_OA";
            internal const string EXPORT_RESULT_STRING_0004EV = "EXPORT_RESULT_STRING_0004EV";
            internal const string WORK_AREA_0004ET = "WORK_AREA_0004ET";
            internal const string TEXT_80_0004AS = "TEXT_80_0004AS";
            internal const string TEXT_80_0004 = "TEXT_80_0004";
            internal const string TEXT_80_0004XX = "TEXT_80_0004XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup W_IA { get { return GetElementByName<IGroup>(Names.W_IA); } }
        public IGroup A_0937974978_IA { get { return GetElementByName<IGroup>(Names.A_0937974978_IA); } }
        public IGroup IMPORT_DELIMITER_LENGTH_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_DELIMITER_LENGTH_0001EV); } }
        public IGroup IEF_SUPPLIED_0001ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0001ET); } }
        public IField COUNT_0001AS { get { return GetElementByName<IField>(Names.COUNT_0001AS); } }
        public IField COUNT_0001 { get { return GetElementByName<IField>(Names.COUNT_0001); } }
        public IField COUNT_0001XX { get { return GetElementByName<IField>(Names.COUNT_0001XX); } }
        public IGroup IMPORT_DELIMITER_0002EV { get { return GetElementByName<IGroup>(Names.IMPORT_DELIMITER_0002EV); } }
        public IGroup WORK_AREA_0002ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0002ET); } }
        public IField TEXT_5_0002AS { get { return GetElementByName<IField>(Names.TEXT_5_0002AS); } }
        public IField TEXT_5_0002 { get { return GetElementByName<IField>(Names.TEXT_5_0002); } }
        public IField TEXT_5_0002XX { get { return GetElementByName<IField>(Names.TEXT_5_0002XX); } }
        public IGroup IMPORT_GROUP_STRINGS_0001RG { get { return GetElementByName<IGroup>(Names.IMPORT_GROUP_STRINGS_0001RG); } }
        public IField IMPORT_GROUP_STRINGS_0001MA { get { return GetElementByName<IField>(Names.IMPORT_GROUP_STRINGS_0001MA); } }
        public IField IMPORT_GROUP_STRINGS_0001MX { get { return GetElementByName<IField>(Names.IMPORT_GROUP_STRINGS_0001MX); } }
        public IArrayElementAccessor<IGroup> IMPORT_GROUP_STRINGS_0001 { get { return GetArrayElementAccessor<IGroup>(Names.IMPORT_GROUP_STRINGS_0001); } }
        public IArrayElementAccessor<IField> IMPORT_GROUP_STRINGS_0001AC { get { return GetArrayElementAccessor<IField>(Names.IMPORT_GROUP_STRINGS_0001AC); } }
        public IArrayElementAccessor<IGroup> GRP_IMP_STRING_0003EV { get { return GetArrayElementAccessor<IGroup>(Names.GRP_IMP_STRING_0003EV); } }
        public IArrayElementAccessor<IGroup> WORK_AREA_0003ET { get { return GetArrayElementAccessor<IGroup>(Names.WORK_AREA_0003ET); } }
        public IArrayElementAccessor<IField> TEXT_32_0003AS { get { return GetArrayElementAccessor<IField>(Names.TEXT_32_0003AS); } }
        public IArrayElementAccessor<IField> TEXT_32_0003 { get { return GetArrayElementAccessor<IField>(Names.TEXT_32_0003); } }
        public IArrayElementAccessor<IField> TEXT_32_0003XX { get { return GetArrayElementAccessor<IField>(Names.TEXT_32_0003XX); } }
        public IGroup W_OA { get { return GetElementByName<IGroup>(Names.W_OA); } }
        public IGroup A_0937974979_OA { get { return GetElementByName<IGroup>(Names.A_0937974979_OA); } }
        public IGroup EXPORT_RESULT_STRING_0004EV { get { return GetElementByName<IGroup>(Names.EXPORT_RESULT_STRING_0004EV); } }
        public IGroup WORK_AREA_0004ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0004ET); } }
        public IField TEXT_80_0004AS { get { return GetElementByName<IField>(Names.TEXT_80_0004AS); } }
        public IField TEXT_80_0004 { get { return GetElementByName<IField>(Names.TEXT_80_0004); } }
        public IField TEXT_80_0004XX { get { return GetElementByName<IField>(Names.TEXT_80_0004XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
           {
               PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
               PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
               {
                   PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
               });
           });

            recordDef.CreateNewGroup(Names.W_IA, (W_IA) =>
           {
               W_IA.CreateNewGroup(Names.A_0937974978_IA, (A_0937974978_IA) =>
               {
                   A_0937974978_IA.CreateNewGroup(Names.IMPORT_DELIMITER_LENGTH_0001EV, (IMPORT_DELIMITER_LENGTH_0001EV) =>
                   {
                       IMPORT_DELIMITER_LENGTH_0001EV.CreateNewGroup(Names.IEF_SUPPLIED_0001ET, (IEF_SUPPLIED_0001ET) =>
                       {
                           IEF_SUPPLIED_0001ET.CreateNewField(Names.COUNT_0001AS, FieldType.String, 1);

                           IField COUNT_0001_local = IEF_SUPPLIED_0001ET.CreateNewField(Names.COUNT_0001, FieldType.SignedNumeric, 9);
                           IEF_SUPPLIED_0001ET.CreateNewFieldRedefine(Names.COUNT_0001XX, FieldType.String, COUNT_0001_local, 9);
                       });
                   });
                   A_0937974978_IA.CreateNewGroup(Names.IMPORT_DELIMITER_0002EV, (IMPORT_DELIMITER_0002EV) =>
                   {
                       IMPORT_DELIMITER_0002EV.CreateNewGroup(Names.WORK_AREA_0002ET, (WORK_AREA_0002ET) =>
                       {
                           WORK_AREA_0002ET.CreateNewField(Names.TEXT_5_0002AS, FieldType.String, 1);

                           IField TEXT_5_0002_local = WORK_AREA_0002ET.CreateNewField(Names.TEXT_5_0002, FieldType.String, 5);
                           WORK_AREA_0002ET.CreateNewFieldRedefine(Names.TEXT_5_0002XX, FieldType.String, TEXT_5_0002_local, 5);
                       });
                   });
                   A_0937974978_IA.CreateNewGroup(Names.IMPORT_GROUP_STRINGS_0001RG, (IMPORT_GROUP_STRINGS_0001RG) =>
                   {

                       IField IMPORT_GROUP_STRINGS_0001MA_local = IMPORT_GROUP_STRINGS_0001RG.CreateNewField(Names.IMPORT_GROUP_STRINGS_0001MA, FieldType.SignedNumeric, 4);
                       IMPORT_GROUP_STRINGS_0001RG.CreateNewFieldRedefine(Names.IMPORT_GROUP_STRINGS_0001MX, FieldType.String, IMPORT_GROUP_STRINGS_0001MA_local, 4);
                       IMPORT_GROUP_STRINGS_0001RG.CreateNewGroupArray(Names.IMPORT_GROUP_STRINGS_0001, 10, (IMPORT_GROUP_STRINGS_0001) =>
                       {
                           IMPORT_GROUP_STRINGS_0001.CreateNewField(Names.IMPORT_GROUP_STRINGS_0001AC, FieldType.String, 1);
                           IMPORT_GROUP_STRINGS_0001.CreateNewGroup(Names.GRP_IMP_STRING_0003EV, (GRP_IMP_STRING_0003EV) =>
                           {
                               GRP_IMP_STRING_0003EV.CreateNewGroup(Names.WORK_AREA_0003ET, (WORK_AREA_0003ET) =>
                               {
                                   WORK_AREA_0003ET.CreateNewField(Names.TEXT_32_0003AS, FieldType.String, 1);

                                   IField TEXT_32_0003_local = WORK_AREA_0003ET.CreateNewField(Names.TEXT_32_0003, FieldType.String, 32);
                                   WORK_AREA_0003ET.CreateNewFieldRedefine(Names.TEXT_32_0003XX, FieldType.String, TEXT_32_0003_local, 32);
                               });
                           });
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.W_OA, (W_OA) =>
           {
               W_OA.CreateNewGroup(Names.A_0937974979_OA, (A_0937974979_OA) =>
               {
                   A_0937974979_OA.CreateNewGroup(Names.EXPORT_RESULT_STRING_0004EV, (EXPORT_RESULT_STRING_0004EV) =>
                   {
                       EXPORT_RESULT_STRING_0004EV.CreateNewGroup(Names.WORK_AREA_0004ET, (WORK_AREA_0004ET) =>
                       {
                           WORK_AREA_0004ET.CreateNewField(Names.TEXT_80_0004AS, FieldType.String, 1);

                           IField TEXT_80_0004_local = WORK_AREA_0004ET.CreateNewField(Names.TEXT_80_0004, FieldType.String, 80);
                           WORK_AREA_0004ET.CreateNewFieldRedefine(Names.TEXT_80_0004XX, FieldType.String, TEXT_80_0004_local, 80);
                       });
                   });
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(W_IA, args, 0);
            SetPassedParm(W_OA, args, 1);
            SetPassedParm(PSMGR_EAB_DATA, args, 2);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(W_IA, args, 0);
            SetReturnParm(W_OA, args, 1);
            SetReturnParm(PSMGR_EAB_DATA, args, 2);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXPE20 : EABBase
    {

        #region Public Constructors
        public SWEXPE20()
            : base()
        {
            this.ProgramName.SetValue("SWEXPE20");

            WS = new SWEXPE20_ws();
            LS = new SWEXPE20_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXPE20_ws WS;

        //==== Linkage Section Data Class ========================================
        private SWEXPE20_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING W-IA , W-OA , PSMGR-EAB-DATA.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0937974975(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0937974975
        /// </summary>
        private void M_MAIN_0937974975(string returnMethod = "")
        {
            M_PARA_0937974975_INIT("M_PARA_0937974975_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0937974975-INIT THRU PARA-0937974975-INIT-EXIT
            M_PARA_0937974975("M_PARA_0937974975_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0937974975 THRU PARA-0937974975-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0937974975
        /// </summary>
        private void M_PARA_0937974975(string returnMethod = "")
        {
            WS.FUNC_0937974975_ESC_FLAG.SetValue("N");                                                          //COBOL==> MOVE 'N' TO FUNC-0937974975-ESC-FLAG
            WS.TEXT_DELIMITER.SetValue(LS.TEXT_5_0002);                                                         //COBOL==> MOVE TEXT-5-0002 TO TEXT-DELIMITER
            WS.TEXT_DELIMITER_LENGTH.SetValue(LS.COUNT_0001);                                                   //COBOL==> MOVE COUNT-0001 TO TEXT-DELIMITER-LENGTH
            WS.TEXT_DELIMITER_LENGTH.Add(1);                                                                    //COBOL==> ADD 1 TO TEXT-DELIMITER-LENGTH
            WS.TEXT_DELIMITER_X[WS.TEXT_DELIMITER_LENGTH.AsInt()].SetValue(WS.TILDE);                           //COBOL==> MOVE TILDE TO TEXT-DELIMITER-X ( TEXT-DELIMITER-LENGTH )
            WS.TEXT_DELIMITER_LENGTH.SetValue(WS.TEXT_DELIMITER_LENGTH.AsInt() - 1);                            //COBOL==> SUBTRACT 1 FROM TEXT-DELIMITER-LENGTH
            WS.TEXT_POINTER.SetValue(1);                                                                        //COBOL==> MOVE 1 TO TEXT-POINTER.
            WS.TEXT_LINE_SUB.SetValue(-1);                                                                      //COBOL==> MOVE -1 TO TEXT-LINE-SUB
            for (WS.LINE_NUMBER.SetValue(1); (!((WS.LINE_NUMBER.IsGreaterThan(10)) || (WS.TEXT_LINE_SUB.IsEqualTo(0)))); WS.LINE_NUMBER.Add(1))  //COBOL==> PERFORM VARYING LINE-NUMBER FROM 1 BY 1 UNTIL LINE-NUMBER GREATER THAN 10 OR TEXT-LINE-SUB EQUAL 0
            {
                WS.TEXT_LINE.SetValue(LS.TEXT_32_0003[WS.LINE_NUMBER.AsInt()]);                                     //COBOL==> MOVE TEXT-32-0003 ( LINE-NUMBER ) TO TEXT-LINE
                for (WS.TEXT_LINE_SUB.SetValue(32); (!((!(WS.TEXT_LINE_X[WS.TEXT_LINE_SUB.AsInt()].IsSpaces())) || (WS.TEXT_LINE_SUB.IsEqualTo(0)))); WS.TEXT_LINE_SUB.Add(-1))  //COBOL==> PERFORM VARYING TEXT-LINE-SUB FROM 32 BY -1 UNTIL TEXT-LINE-X ( TEXT-LINE-SUB ) NOT EQUAL SPACE OR TEXT-LINE-SUB EQUAL ZERO
                {
                }                                                                                                   //COBOL==> END-PERFORM
                if (!(WS.TEXT_LINE_SUB.IsEqualTo(0)))                                                               //COBOL==> IF TEXT-LINE-SUB NOT EQUAL 0 THEN
                {
                    WS.TEXT_LINE_SUB.Add(1);                                                                            //COBOL==> ADD 1 TO TEXT-LINE-SUB
                    WS.TEXT_LINE_X[WS.TEXT_LINE_SUB.AsInt()].SetValue(WS.TILDE);                                        //COBOL==> MOVE TILDE TO TEXT-LINE-X ( TEXT-LINE-SUB )
                    if (WS.TEXT_LINE_X[1].IsSpaces())                                                                   //COBOL==> IF TEXT-LINE-X ( 1 ) EQUAL SPACE THEN
                    {
                        for (WS.TEXT_LINE_SUB.SetValue(2); (!((!(WS.TEXT_LINE_X[WS.TEXT_LINE_SUB.AsInt()].IsSpaces())) && (!(WS.TEXT_LINE_X[WS.TEXT_LINE_SUB.AsInt()].IsEqualTo("0"))))); WS.TEXT_LINE_SUB.Add(1))  //COBOL==> PERFORM VARYING TEXT-LINE-SUB FROM 2 BY 1 UNTIL TEXT-LINE-X ( TEXT-LINE-SUB ) NOT EQUAL SPACE AND TEXT-LINE-X ( TEXT-LINE-SUB ) NOT EQUAL '0'
                        {
                        }                                                                                                   //COBOL==> END-PERFORM
                        WS.TEXT_LINE_DEST.SetValueWithZeroes();                                                             //COBOL==> MOVE 0 TO TEXT-LINE-DEST
                        for (WS.TEXT_LINE_SUB.SetValue(WS.TEXT_LINE_SUB); (!(WS.TEXT_LINE_X[WS.TEXT_LINE_SUB.AsInt()].IsEqualTo(WS.TILDE))); WS.TEXT_LINE_SUB.Add(1))  //COBOL==> PERFORM VARYING TEXT-LINE-SUB FROM TEXT-LINE-SUB BY 1 UNTIL TEXT-LINE-X ( TEXT-LINE-SUB ) EQUAL TILDE
                        {
                            WS.TEXT_LINE_DEST.Add(1);                                                                           //COBOL==> ADD 1 TO TEXT-LINE-DEST
                            WS.TEXT_LINE_X[WS.TEXT_LINE_DEST.AsInt()].SetValue(WS.TEXT_LINE_X[WS.TEXT_LINE_SUB.AsInt()]);       //COBOL==> MOVE TEXT-LINE-X ( TEXT-LINE-SUB ) TO TEXT-LINE-X ( TEXT-LINE-DEST )
                        }                                                                                                   //COBOL==> END-PERFORM
                        WS.TEXT_LINE_DEST.Add(1);                                                                           //COBOL==> ADD 1 TO TEXT-LINE-DEST
                        WS.TEXT_LINE_X[WS.TEXT_LINE_DEST.AsInt()].SetValue(WS.TILDE);                                       //COBOL==> MOVE TILDE TO TEXT-LINE-X ( TEXT-LINE-DEST )
                    }                                                                                                   //COBOL==> END-IF
                    LS.TEXT_80_0004.SetStringValueWithPointer(StringUtils.Stringify(StringUtils.DelimitedByString(WS.TILDE.AsString(), WS.TEXT_LINE.AsString(), WS.TEXT_DELIMITER.AsString())), WS.TEXT_POINTER);  //COBOL==> STRING TEXT-LINE TEXT-DELIMITER DELIMITED BY TILDE INTO TEXT-80-0004 WITH POINTER TEXT-POINTER
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-PERFORM
            WS.TEXT_POINTER.SetValue(WS.TEXT_POINTER.AsInt() - WS.TEXT_DELIMITER_LENGTH.AsInt());               //COBOL==> SUBTRACT TEXT-DELIMITER-LENGTH FROM TEXT-POINTER
            LS.TEXT_80_0004.SetStringValueWithPointer(StringUtils.Stringify(StringUtils.DelimitedBySize(WS.SPACE_FILLER.AsString())), WS.TEXT_POINTER);  //COBOL==> STRING SPACE-FILLER DELIMITED BY SIZE INTO TEXT-80-0004 WITH POINTER TEXT-POINTER .
            if (returnMethod != "" && returnMethod != "M_PARA_0937974975") { M_PARA_0937974975_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0937974975_EXIT
        /// </summary>
        private void M_PARA_0937974975_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0937974975_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0937974975_EXIT") { M_PARA_0937974975_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0937974975_INIT
        /// </summary>
        private void M_PARA_0937974975_INIT(string returnMethod = "")
        {
            WS.IMPORT_GROUP_STRINGS_0001PS.SetValueWithZeroes();                                                //COBOL==> MOVE ZERO TO IMPORT-GROUP-STRINGS-0001PS
            LS.EXPORT_RESULT_STRING_0004EV.ResetToInitialValue();                                               //COBOL==> INITIALIZE EXPORT-RESULT-STRING-0004EV .
            if (returnMethod != "" && returnMethod != "M_PARA_0937974975_INIT") { M_PARA_0937974975_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0937974975_INIT_EXIT
        /// </summary>
        private void M_PARA_0937974975_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0937974975_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
