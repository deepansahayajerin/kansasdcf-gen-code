#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2022
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2022-03-02 04:51:31 PM
   **        *   FROM COBOL PGM   :  SWEXIR40
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                   INFORMATION ENGINEERING FACILITY (TM)
                       TEXAS INSTRUMENTS INC.
                COPYRIGHT (C) TEXAS INSTRUMENTS INC. 1997
       NAME: EAB_READ_NARRATIVE               DATE: 97/02/18
       TARGET OS:   MVS                       TIME: 10:40:21
       TARGET DBMS: DB2                       USER: SWDPDLB
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
   **************************************************************
*/
#endregion
#region Using Directives
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Control.CICS;
using MDSY.Framework.Core;
using System;

/*  usings for referenced objects  */
#endregion

namespace GOV.KS.DCF.CSS.Common.BL
{
    #region Working Storage Class
    internal class SWEXIR40_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXIR40_ws_WorkingStorage";
            internal const string EXTERNAL_ACTION_BLOCK_WS = "EXTERNAL_ACTION_BLOCK_WS";
            internal const string SRADALNK = "SRADALNK";
            internal const string SRMODLNK = "SRMODLNK";
            internal const string MV_ABEND_FIELDS = "MV_ABEND_FIELDS";
            internal const string MV_ABEND_TYPE = "MV_ABEND_TYPE";
            internal const string MV_ABEND_TYPE_NONE = "MV_ABEND_TYPE_NONE";
            internal const string MV_ABEND_TYPE_ADABAS = "MV_ABEND_TYPE_ADABAS";
            internal const string MV_ABEND_TYPE_CICS = "MV_ABEND_TYPE_CICS";
            internal const string MV_ABEND_ADABAS = "MV_ABEND_ADABAS";
            internal const string MV_ADA_FILE_NUMBER = "MV_ADA_FILE_NUMBER";
            internal const string MV_ADA_FILE_ACTION = "MV_ADA_FILE_ACTION";
            internal const string MV_ADA_RESPONSE_CD = "MV_ADA_RESPONSE_CD";
            internal const string MV_ABEND_CICS = "MV_ABEND_CICS";
            internal const string MV_CICS_RESOURCE_NM = "MV_CICS_RESOURCE_NM";
            internal const string MV_CICS_FUNCTION_CD = "MV_CICS_FUNCTION_CD";
            internal const string MV_CICS_RESPONSE_CD = "MV_CICS_RESPONSE_CD";
            internal const string SUB = "SUB";
            internal const string MV_ABS_TIME = "MV_ABS_TIME";
            internal const string MC_DATE_ENTRY = "MC_DATE_ENTRY";
            internal const string MC_DATE_MM_PLUS_1 = "MC_DATE_MM_PLUS_1";
            internal const string MC_DATE_YY_PLUS_1 = "MC_DATE_YY_PLUS_1";
            internal const string MC_DATE_MM_MINUS_1 = "MC_DATE_MM_MINUS_1";
            internal const string MC_DATE_YY_MINUS_1 = "MC_DATE_YY_MINUS_1";
            internal const string MC_DATE_MM_MINUS_2 = "MC_DATE_MM_MINUS_2";
            internal const string MC_DATE_YY_MINUS_2 = "MC_DATE_YY_MINUS_2";
            internal const string MV_CURRENT_DATES = "MV_CURRENT_DATES";
            internal const string MV_CURRENT_DATE = "MV_CURRENT_DATE";
            internal const string MV_CURRENT_DATE_42 = "MV_CURRENT_DATE_42";
            internal const string MV_CURRENT_CCYY = "MV_CURRENT_CCYY";
            internal const string MV_CURRENT_MM = "MV_CURRENT_MM";
            internal const string MV_CURRENT_CCYYMM = "MV_CURRENT_CCYYMM";
            internal const string MV_CCYYMMDD_X8 = "MV_CCYYMMDD_X8";
            internal const string MV_CC = "MV_CC";
            internal const string MV_YYMM_X4 = "MV_YYMM_X4";
            internal const string MV_YY = "MV_YY";
            internal const string MV_MM = "MV_MM";
            internal const string MV_CCYYMM = "MV_CCYYMM";
            internal const string MV_CCYY = "MV_CCYY";
            internal const string MV_TEMP_DATE = "MV_TEMP_DATE";
            internal const string MV_CENTURY_TEMP = "MV_CENTURY_TEMP";
            internal const string MV_YR_TEMP = "MV_YR_TEMP";
            internal const string MV_MO_TEMP = "MV_MO_TEMP";
            internal const string MV_DAY_TEMP = "MV_DAY_TEMP";
            internal const string MV_TEMP_DTE_HLD = "MV_TEMP_DTE_HLD";
            internal const string MV_TEMP_MM = "MV_TEMP_MM";
            internal const string MV_TEMP_DD = "MV_TEMP_DD";
            internal const string MV_TEMP_CC = "MV_TEMP_CC";
            internal const string MV_TEMP_YY = "MV_TEMP_YY";
            internal const string MV_COMPLEMENT_DATE = "MV_COMPLEMENT_DATE";
            internal const string MV_WRK_PTR = "MV_WRK_PTR";
            internal const string MV_PRT_PTR = "MV_PRT_PTR";
            internal const string MV_RTE_PTR = "MV_RTE_PTR";
            internal const string MV_RTE_PTR_SET = "MV_RTE_PTR_SET";
            internal const string MV_CASE_NUMBER_X10 = "MV_CASE_NUMBER_X10";
            internal const string MV_CASE_NUMBER = "MV_CASE_NUMBER";
            internal const string MV_NARR_PULL_DATEX08 = "MV_NARR_PULL_DATEX08";
            internal const string MV_NARR_PULL_DATE = "MV_NARR_PULL_DATE";
            internal const string MV_NARR_PULL_DATE_RED = "MV_NARR_PULL_DATE_RED";
            internal const string MV_NARR_PULL_DATE_MM_RED = "MV_NARR_PULL_DATE_MM_RED";
            internal const string MV_NARR_PULL_DATE_DD_RED = "MV_NARR_PULL_DATE_DD_RED";
            internal const string MV_NARR_PULL_DATE_CC_RED = "MV_NARR_PULL_DATE_CC_RED";
            internal const string MV_NARR_PULL_DATE_YY_RED = "MV_NARR_PULL_DATE_YY_RED";
            internal const string MV_NARR_DATE = "MV_NARR_DATE";
            internal const string MV_NARR_CCYYMMDD_PULL_DATE = "MV_NARR_CCYYMMDD_PULL_DATE";
            internal const string MV_CC_PULL_CC = "MV_CC_PULL_CC";
            internal const string MV_YY_PULL_YY = "MV_YY_PULL_YY";
            internal const string MV_MM_PULL_MM = "MV_MM_PULL_MM";
            internal const string MV_DD_PULL_DD = "MV_DD_PULL_DD";
            internal const string MV_NARR_CCYYMMDD_PULL_DATE_NUM = "MV_NARR_CCYYMMDD_PULL_DATE_NUM";
            internal const string HLD_NARRATIVE_PULL_DATE = "HLD_NARRATIVE_PULL_DATE";
            internal const string HLD_NARR_CC = "HLD_NARR_CC";
            internal const string HLD_NARR_YY = "HLD_NARR_YY";
            internal const string HLD_NARR_MM = "HLD_NARR_MM";
            internal const string HLD_NARR_DD = "HLD_NARR_DD";
            internal const string MV_NARR_TYPE = "MV_NARR_TYPE";
            internal const string MV_NARR_DESC = "MV_NARR_DESC";
            internal const string MV_REGION = "MV_REGION";
            internal const string MV_TEAM_LETTER = "MV_TEAM_LETTER";
            internal const string DCLKSD_NARRATIVE = "DCLKSD_NARRATIVE";
            internal const string NARR_CASE_NUMBER = "NARR_CASE_NUMBER";
            internal const string NARR_NARRATIVE_TYPE = "NARR_NARRATIVE_TYPE";
            internal const string NARR_NARRATIVE_DATE = "NARR_NARRATIVE_DATE";
            internal const string NARR_NARRATIVE_TIME = "NARR_NARRATIVE_TIME";
            internal const string NARR_REGION = "NARR_REGION";
            internal const string NARR_TEAM_LETTER = "NARR_TEAM_LETTER";
            internal const string NARR_CHANGE_OPERATOR = "NARR_CHANGE_OPERATOR";
            internal const string NARR_NARRATIVE_DESC = "NARR_NARRATIVE_DESC";
            internal const string NARR_NARRATIVE_DESC_LEN = "NARR_NARRATIVE_DESC_LEN";
            internal const string NARR_NARRATIVE_DESC_TEXT = "NARR_NARRATIVE_DESC_TEXT";
            internal const string WS_SWITCHES = "WS_SWITCHES";
            internal const string WS_NARR_EOFSW = "WS_NARR_EOFSW";
            internal const string WS_NARR_EOF_NO = "WS_NARR_EOF_NO";
            internal const string WS_NARR_EOF_YES = "WS_NARR_EOF_YES";
            internal const string CONTROL_BLOCK = "CONTROL_BLOCK";
            internal const string COMMAND_CODE = "COMMAND_CODE";
            internal const string COMMAND_ID = "COMMAND_ID";
            internal const string FILE_NUMBER = "FILE_NUMBER";
            internal const string RESPONSE_CODE = "RESPONSE_CODE";
            internal const string ISN = "ISN";
            internal const string ISN_LOWER_LIMIT = "ISN_LOWER_LIMIT";
            internal const string ISN_QUANTITY = "ISN_QUANTITY";
            internal const string FORMAT_BUFFER_LENGTH = "FORMAT_BUFFER_LENGTH";
            internal const string RECORD_BUFFER_LENGTH = "RECORD_BUFFER_LENGTH";
            internal const string SEARCH_BUFFER_LENGTH = "SEARCH_BUFFER_LENGTH";
            internal const string VALUE_BUFFER_LENGTH = "VALUE_BUFFER_LENGTH";
            internal const string ISN_BUFFER_LENGTH = "ISN_BUFFER_LENGTH";
            internal const string COMMAND_OPTION_1 = "COMMAND_OPTION_1";
            internal const string COMMAND_OPTION_2 = "COMMAND_OPTION_2";
            internal const string ADDITIONS_1 = "ADDITIONS_1";
            internal const string ADDITIONS_2 = "ADDITIONS_2";
            internal const string ADDITIONS_3 = "ADDITIONS_3";
            internal const string ADDITIONS_4 = "ADDITIONS_4";
            internal const string COMMAND_TIME = "COMMAND_TIME";
            internal const string USER_AREA = "USER_AREA";
            internal const string ADIM1 = "ADIM1";
            internal const string ADIM2 = "ADIM2";
            internal const string ADIM3 = "ADIM3";
            internal const string EXP_GROUP_0001FL = "EXP_GROUP_0001FL";
            internal const string EXP_GROUP_0001PS = "EXP_GROUP_0001PS";
            internal const string EXP_GROUP_0001RF = "EXP_GROUP_0001RF";
            internal const string FUNC_1044122623_ESC_FLAG = "FUNC_1044122623_ESC_FLAG";
        }
        #endregion

        #region Direct-access element properties
        public IGroup EXTERNAL_ACTION_BLOCK_WS { get { return GetElementByName<IGroup>(Names.EXTERNAL_ACTION_BLOCK_WS); } }
        public IField SRADALNK { get { return GetElementByName<IField>(Names.SRADALNK); } }
        public IField SRMODLNK { get { return GetElementByName<IField>(Names.SRMODLNK); } }
        public IGroup MV_ABEND_FIELDS { get { return GetElementByName<IGroup>(Names.MV_ABEND_FIELDS); } }
        public IField MV_ABEND_TYPE { get { return GetElementByName<IField>(Names.MV_ABEND_TYPE); } }
        public ICheckField MV_ABEND_TYPE_NONE { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_NONE); } }
        public ICheckField MV_ABEND_TYPE_ADABAS { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_ADABAS); } }
        public ICheckField MV_ABEND_TYPE_CICS { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_CICS); } }
        public IGroup MV_ABEND_ADABAS { get { return GetElementByName<IGroup>(Names.MV_ABEND_ADABAS); } }
        public IField MV_ADA_FILE_NUMBER { get { return GetElementByName<IField>(Names.MV_ADA_FILE_NUMBER); } }
        public IField MV_ADA_FILE_ACTION { get { return GetElementByName<IField>(Names.MV_ADA_FILE_ACTION); } }
        public IField MV_ADA_RESPONSE_CD { get { return GetElementByName<IField>(Names.MV_ADA_RESPONSE_CD); } }
        public IGroup MV_ABEND_CICS { get { return GetElementByName<IGroup>(Names.MV_ABEND_CICS); } }
        public IField MV_CICS_RESOURCE_NM { get { return GetElementByName<IField>(Names.MV_CICS_RESOURCE_NM); } }
        public IField MV_CICS_FUNCTION_CD { get { return GetElementByName<IField>(Names.MV_CICS_FUNCTION_CD); } }
        public IField MV_CICS_RESPONSE_CD { get { return GetElementByName<IField>(Names.MV_CICS_RESPONSE_CD); } }
        public IField SUB { get { return GetElementByName<IField>(Names.SUB); } }
        public IField MV_ABS_TIME { get { return GetElementByName<IField>(Names.MV_ABS_TIME); } }
        public IArrayElementAccessor<IGroup> MC_DATE_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.MC_DATE_ENTRY); } }
        public IArrayElementAccessor<IField> MC_DATE_MM_PLUS_1 { get { return GetArrayElementAccessor<IField>(Names.MC_DATE_MM_PLUS_1); } }
        public IArrayElementAccessor<IField> MC_DATE_YY_PLUS_1 { get { return GetArrayElementAccessor<IField>(Names.MC_DATE_YY_PLUS_1); } }
        public IArrayElementAccessor<IField> MC_DATE_MM_MINUS_1 { get { return GetArrayElementAccessor<IField>(Names.MC_DATE_MM_MINUS_1); } }
        public IArrayElementAccessor<IField> MC_DATE_YY_MINUS_1 { get { return GetArrayElementAccessor<IField>(Names.MC_DATE_YY_MINUS_1); } }
        public IArrayElementAccessor<IField> MC_DATE_MM_MINUS_2 { get { return GetArrayElementAccessor<IField>(Names.MC_DATE_MM_MINUS_2); } }
        public IArrayElementAccessor<IField> MC_DATE_YY_MINUS_2 { get { return GetArrayElementAccessor<IField>(Names.MC_DATE_YY_MINUS_2); } }
        public IGroup MV_CURRENT_DATES { get { return GetElementByName<IGroup>(Names.MV_CURRENT_DATES); } }
        public IGroup MV_CURRENT_DATE { get { return GetElementByName<IGroup>(Names.MV_CURRENT_DATE); } }
        public IArrayElementAccessor<IGroup> MV_CURRENT_DATE_42 { get { return GetArrayElementAccessor<IGroup>(Names.MV_CURRENT_DATE_42); } }
        public IArrayElementAccessor<IField> MV_CURRENT_CCYY { get { return GetArrayElementAccessor<IField>(Names.MV_CURRENT_CCYY); } }
        public IArrayElementAccessor<IField> MV_CURRENT_MM { get { return GetArrayElementAccessor<IField>(Names.MV_CURRENT_MM); } }
        public IArrayElementAccessor<IField> MV_CURRENT_CCYYMM { get { return GetArrayElementAccessor<IField>(Names.MV_CURRENT_CCYYMM); } }
        public IGroup MV_CCYYMMDD_X8 { get { return GetElementByName<IGroup>(Names.MV_CCYYMMDD_X8); } }
        public IField MV_CC { get { return GetElementByName<IField>(Names.MV_CC); } }
        public IGroup MV_YYMM_X4 { get { return GetElementByName<IGroup>(Names.MV_YYMM_X4); } }
        public IField MV_YY { get { return GetElementByName<IField>(Names.MV_YY); } }
        public IField MV_MM { get { return GetElementByName<IField>(Names.MV_MM); } }
        public IField MV_CCYYMM { get { return GetElementByName<IField>(Names.MV_CCYYMM); } }
        public IField MV_CCYY { get { return GetElementByName<IField>(Names.MV_CCYY); } }
        public IGroup MV_TEMP_DATE { get { return GetElementByName<IGroup>(Names.MV_TEMP_DATE); } }
        public IField MV_CENTURY_TEMP { get { return GetElementByName<IField>(Names.MV_CENTURY_TEMP); } }
        public IField MV_YR_TEMP { get { return GetElementByName<IField>(Names.MV_YR_TEMP); } }
        public IField MV_MO_TEMP { get { return GetElementByName<IField>(Names.MV_MO_TEMP); } }
        public IField MV_DAY_TEMP { get { return GetElementByName<IField>(Names.MV_DAY_TEMP); } }
        public IGroup MV_TEMP_DTE_HLD { get { return GetElementByName<IGroup>(Names.MV_TEMP_DTE_HLD); } }
        public IField MV_TEMP_MM { get { return GetElementByName<IField>(Names.MV_TEMP_MM); } }
        public IField MV_TEMP_DD { get { return GetElementByName<IField>(Names.MV_TEMP_DD); } }
        public IField MV_TEMP_CC { get { return GetElementByName<IField>(Names.MV_TEMP_CC); } }
        public IField MV_TEMP_YY { get { return GetElementByName<IField>(Names.MV_TEMP_YY); } }
        public IField MV_COMPLEMENT_DATE { get { return GetElementByName<IField>(Names.MV_COMPLEMENT_DATE); } }
        public IField MV_WRK_PTR { get { return GetElementByName<IField>(Names.MV_WRK_PTR); } }
        public IField MV_PRT_PTR { get { return GetElementByName<IField>(Names.MV_PRT_PTR); } }
        public IField MV_RTE_PTR { get { return GetElementByName<IField>(Names.MV_RTE_PTR); } }
        public ICheckField MV_RTE_PTR_SET { get { return GetElementByName<ICheckField>(Names.MV_RTE_PTR_SET); } }
        public IGroup MV_CASE_NUMBER_X10 { get { return GetElementByName<IGroup>(Names.MV_CASE_NUMBER_X10); } }
        public IField MV_CASE_NUMBER { get { return GetElementByName<IField>(Names.MV_CASE_NUMBER); } }
        public IGroup MV_NARR_PULL_DATEX08 { get { return GetElementByName<IGroup>(Names.MV_NARR_PULL_DATEX08); } }
        public IField MV_NARR_PULL_DATE { get { return GetElementByName<IField>(Names.MV_NARR_PULL_DATE); } }
        public IGroup MV_NARR_PULL_DATE_RED { get { return GetElementByName<IGroup>(Names.MV_NARR_PULL_DATE_RED); } }
        public IField MV_NARR_PULL_DATE_MM_RED { get { return GetElementByName<IField>(Names.MV_NARR_PULL_DATE_MM_RED); } }
        public IField MV_NARR_PULL_DATE_DD_RED { get { return GetElementByName<IField>(Names.MV_NARR_PULL_DATE_DD_RED); } }
        public IField MV_NARR_PULL_DATE_CC_RED { get { return GetElementByName<IField>(Names.MV_NARR_PULL_DATE_CC_RED); } }
        public IField MV_NARR_PULL_DATE_YY_RED { get { return GetElementByName<IField>(Names.MV_NARR_PULL_DATE_YY_RED); } }
        public IField MV_NARR_DATE { get { return GetElementByName<IField>(Names.MV_NARR_DATE); } }
        public IGroup MV_NARR_CCYYMMDD_PULL_DATE { get { return GetElementByName<IGroup>(Names.MV_NARR_CCYYMMDD_PULL_DATE); } }
        public IField MV_CC_PULL_CC { get { return GetElementByName<IField>(Names.MV_CC_PULL_CC); } }
        public IField MV_YY_PULL_YY { get { return GetElementByName<IField>(Names.MV_YY_PULL_YY); } }
        public IField MV_MM_PULL_MM { get { return GetElementByName<IField>(Names.MV_MM_PULL_MM); } }
        public IField MV_DD_PULL_DD { get { return GetElementByName<IField>(Names.MV_DD_PULL_DD); } }
        public IField MV_NARR_CCYYMMDD_PULL_DATE_NUM { get { return GetElementByName<IField>(Names.MV_NARR_CCYYMMDD_PULL_DATE_NUM); } }
        public IGroup HLD_NARRATIVE_PULL_DATE { get { return GetElementByName<IGroup>(Names.HLD_NARRATIVE_PULL_DATE); } }
        public IField HLD_NARR_CC { get { return GetElementByName<IField>(Names.HLD_NARR_CC); } }
        public IField HLD_NARR_YY { get { return GetElementByName<IField>(Names.HLD_NARR_YY); } }
        public IField HLD_NARR_MM { get { return GetElementByName<IField>(Names.HLD_NARR_MM); } }
        public IField HLD_NARR_DD { get { return GetElementByName<IField>(Names.HLD_NARR_DD); } }
        public IField MV_NARR_TYPE { get { return GetElementByName<IField>(Names.MV_NARR_TYPE); } }
        public IField MV_NARR_DESC { get { return GetElementByName<IField>(Names.MV_NARR_DESC); } }
        public IField MV_REGION { get { return GetElementByName<IField>(Names.MV_REGION); } }
        public IField MV_TEAM_LETTER { get { return GetElementByName<IField>(Names.MV_TEAM_LETTER); } }
        public IGroup DCLKSD_NARRATIVE { get { return GetElementByName<IGroup>(Names.DCLKSD_NARRATIVE); } }
        public IField NARR_CASE_NUMBER { get { return GetElementByName<IField>(Names.NARR_CASE_NUMBER); } }
        public IField NARR_NARRATIVE_TYPE { get { return GetElementByName<IField>(Names.NARR_NARRATIVE_TYPE); } }
        public IField NARR_NARRATIVE_DATE { get { return GetElementByName<IField>(Names.NARR_NARRATIVE_DATE); } }
        public IField NARR_NARRATIVE_TIME { get { return GetElementByName<IField>(Names.NARR_NARRATIVE_TIME); } }
        public IField NARR_REGION { get { return GetElementByName<IField>(Names.NARR_REGION); } }
        public IField NARR_TEAM_LETTER { get { return GetElementByName<IField>(Names.NARR_TEAM_LETTER); } }
        public IField NARR_CHANGE_OPERATOR { get { return GetElementByName<IField>(Names.NARR_CHANGE_OPERATOR); } }
        public IGroup NARR_NARRATIVE_DESC { get { return GetElementByName<IGroup>(Names.NARR_NARRATIVE_DESC); } }
        public IField NARR_NARRATIVE_DESC_LEN { get { return GetElementByName<IField>(Names.NARR_NARRATIVE_DESC_LEN); } }
        public IField NARR_NARRATIVE_DESC_TEXT { get { return GetElementByName<IField>(Names.NARR_NARRATIVE_DESC_TEXT); } }
        public IGroup WS_SWITCHES { get { return GetElementByName<IGroup>(Names.WS_SWITCHES); } }
        public IField WS_NARR_EOFSW { get { return GetElementByName<IField>(Names.WS_NARR_EOFSW); } }
        public ICheckField WS_NARR_EOF_NO { get { return GetElementByName<ICheckField>(Names.WS_NARR_EOF_NO); } }
        public ICheckField WS_NARR_EOF_YES { get { return GetElementByName<ICheckField>(Names.WS_NARR_EOF_YES); } }
        public IGroup CONTROL_BLOCK { get { return GetElementByName<IGroup>(Names.CONTROL_BLOCK); } }
        public IField COMMAND_CODE { get { return GetElementByName<IField>(Names.COMMAND_CODE); } }
        public IField COMMAND_ID { get { return GetElementByName<IField>(Names.COMMAND_ID); } }
        public IField FILE_NUMBER { get { return GetElementByName<IField>(Names.FILE_NUMBER); } }
        public IField RESPONSE_CODE { get { return GetElementByName<IField>(Names.RESPONSE_CODE); } }
        public IField ISN { get { return GetElementByName<IField>(Names.ISN); } }
        public IField ISN_LOWER_LIMIT { get { return GetElementByName<IField>(Names.ISN_LOWER_LIMIT); } }
        public IField ISN_QUANTITY { get { return GetElementByName<IField>(Names.ISN_QUANTITY); } }
        public IField FORMAT_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.FORMAT_BUFFER_LENGTH); } }
        public IField RECORD_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.RECORD_BUFFER_LENGTH); } }
        public IField SEARCH_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.SEARCH_BUFFER_LENGTH); } }
        public IField VALUE_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.VALUE_BUFFER_LENGTH); } }
        public IField ISN_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.ISN_BUFFER_LENGTH); } }
        public IField COMMAND_OPTION_1 { get { return GetElementByName<IField>(Names.COMMAND_OPTION_1); } }
        public IField COMMAND_OPTION_2 { get { return GetElementByName<IField>(Names.COMMAND_OPTION_2); } }
        public IField ADDITIONS_1 { get { return GetElementByName<IField>(Names.ADDITIONS_1); } }
        public IField ADDITIONS_2 { get { return GetElementByName<IField>(Names.ADDITIONS_2); } }
        public IField ADDITIONS_3 { get { return GetElementByName<IField>(Names.ADDITIONS_3); } }
        public IField ADDITIONS_4 { get { return GetElementByName<IField>(Names.ADDITIONS_4); } }
        public IField COMMAND_TIME { get { return GetElementByName<IField>(Names.COMMAND_TIME); } }
        public IField USER_AREA { get { return GetElementByName<IField>(Names.USER_AREA); } }
        public IField ADIM1 { get { return GetElementByName<IField>(Names.ADIM1); } }
        public IField ADIM2 { get { return GetElementByName<IField>(Names.ADIM2); } }
        public IField ADIM3 { get { return GetElementByName<IField>(Names.ADIM3); } }
        public IField EXP_GROUP_0001FL { get { return GetElementByName<IField>(Names.EXP_GROUP_0001FL); } }
        public IField EXP_GROUP_0001PS { get { return GetElementByName<IField>(Names.EXP_GROUP_0001PS); } }
        public IField EXP_GROUP_0001RF { get { return GetElementByName<IField>(Names.EXP_GROUP_0001RF); } }
        public IField FUNC_1044122623_ESC_FLAG { get { return GetElementByName<IField>(Names.FUNC_1044122623_ESC_FLAG); } }

        public CPY_SQLCA SQLCA = new CPY_SQLCA(null, true);
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.EXTERNAL_ACTION_BLOCK_WS, (EXTERNAL_ACTION_BLOCK_WS) =>
           {
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.SRADALNK, FieldType.String, 8, "SWASZ990");
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.SRMODLNK, FieldType.String, 8, "SWEXIR40");
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_ABEND_FIELDS, (MV_ABEND_FIELDS) =>
               {
                   MV_ABEND_FIELDS.CreateNewField(Names.MV_ABEND_TYPE, FieldType.String, 1)
                       .NewCheckField(Names.MV_ABEND_TYPE_NONE, SPACE)
                       .NewCheckField(Names.MV_ABEND_TYPE_ADABAS, "A")
                       .NewCheckField(Names.MV_ABEND_TYPE_CICS, "C")
                       ;
                   MV_ABEND_FIELDS.CreateNewGroup(Names.MV_ABEND_ADABAS, (MV_ABEND_ADABAS) =>
                   {
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_FILE_NUMBER, FieldType.UnsignedNumeric, 4);
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_FILE_ACTION, FieldType.String, 3);
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_RESPONSE_CD, FieldType.UnsignedNumeric, 4);
                   });
                   MV_ABEND_FIELDS.CreateNewGroup(Names.MV_ABEND_CICS, (MV_ABEND_CICS) =>
                   {
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_RESOURCE_NM, FieldType.String, 8);
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_FUNCTION_CD, FieldType.String, 2);
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_RESPONSE_CD, FieldType.String, 6);
                   });
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.SUB, FieldType.UnsignedNumeric, 3);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_ABS_TIME, FieldType.PackedDecimal, 15);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroupArray(Names.MC_DATE_ENTRY, 12, (MC_DATE_ENTRY) =>
               {
                   MC_DATE_ENTRY.CreateNewField(Names.MC_DATE_MM_PLUS_1, FieldType.UnsignedNumeric, 2);
                   MC_DATE_ENTRY.CreateNewFillerField(1, FillWith.Hashes);
                   MC_DATE_ENTRY.CreateNewField(Names.MC_DATE_YY_PLUS_1, FieldType.UnsignedNumeric, 2);
                   MC_DATE_ENTRY.CreateNewFillerField(1, FillWith.Hashes);
                   MC_DATE_ENTRY.CreateNewField(Names.MC_DATE_MM_MINUS_1, FieldType.UnsignedNumeric, 2);
                   MC_DATE_ENTRY.CreateNewFillerField(1, FillWith.Hashes);
                   MC_DATE_ENTRY.CreateNewField(Names.MC_DATE_YY_MINUS_1, FieldType.UnsignedNumeric, 1);
                   MC_DATE_ENTRY.CreateNewFillerField(1, FillWith.Hashes);
                   MC_DATE_ENTRY.CreateNewField(Names.MC_DATE_MM_MINUS_2, FieldType.UnsignedNumeric, 2);
                   MC_DATE_ENTRY.CreateNewFillerField(1, FillWith.Hashes);
                   MC_DATE_ENTRY.CreateNewField(Names.MC_DATE_YY_MINUS_2, FieldType.UnsignedNumeric, 1);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CURRENT_DATES, (MV_CURRENT_DATES) =>
               {
                   IGroup MV_CURRENT_DATE_local = (IGroup)MV_CURRENT_DATES.CreateNewGroup(Names.MV_CURRENT_DATE, (MV_CURRENT_DATE) =>
                   {
                       MV_CURRENT_DATE.CreateNewGroupArray(Names.MV_CURRENT_DATE_42, 4, (MV_CURRENT_DATE_42) =>
                       {
                           MV_CURRENT_DATE_42.CreateNewField(Names.MV_CURRENT_CCYY, FieldType.UnsignedNumeric, 4);
                           MV_CURRENT_DATE_42.CreateNewField(Names.MV_CURRENT_MM, FieldType.UnsignedNumeric, 2);
                       });
                   });
                   MV_CURRENT_DATES.CreateNewGroupRedefine("FILLER_d6", MV_CURRENT_DATE_local, (FILLER_d6) =>
                   {
                       FILLER_d6.CreateNewFieldArray(Names.MV_CURRENT_CCYYMM, 4, FieldType.UnsignedNumeric, 6);
                   });
               });
               IGroup MV_CCYYMMDD_X8_local = (IGroup)EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CCYYMMDD_X8, (MV_CCYYMMDD_X8) =>
               {
                   MV_CCYYMMDD_X8.CreateNewField(Names.MV_CC, FieldType.UnsignedNumeric, 2);
                   MV_CCYYMMDD_X8.CreateNewGroup(Names.MV_YYMM_X4, (MV_YYMM_X4) =>
                   {
                       MV_YYMM_X4.CreateNewField(Names.MV_YY, FieldType.UnsignedNumeric, 2);
                       MV_YYMM_X4.CreateNewField(Names.MV_MM, FieldType.UnsignedNumeric, 2);
                       MV_YYMM_X4.CreateNewFillerField(4, FillWith.Hashes);
                   });
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroupRedefine("FILLER_d8", MV_CCYYMMDD_X8_local, (FILLER_d8) =>
               {
                   FILLER_d8.CreateNewField(Names.MV_CCYYMM, FieldType.UnsignedNumeric, 6);
                   FILLER_d8.CreateNewFillerField(4, FillWith.Hashes);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroupRedefine("FILLER_d10", MV_CCYYMMDD_X8_local, (FILLER_d10) =>
               {
                   FILLER_d10.CreateNewField(Names.MV_CCYY, FieldType.UnsignedNumeric, 4);
                   FILLER_d10.CreateNewFillerField(6, FillWith.Hashes);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_TEMP_DATE, (MV_TEMP_DATE) =>
               {
                   MV_TEMP_DATE.CreateNewField(Names.MV_CENTURY_TEMP, FieldType.String, 2);
                   MV_TEMP_DATE.CreateNewField(Names.MV_YR_TEMP, FieldType.String, 2);
                   MV_TEMP_DATE.CreateNewField(Names.MV_MO_TEMP, FieldType.String, 2);
                   MV_TEMP_DATE.CreateNewField(Names.MV_DAY_TEMP, FieldType.String, 2);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_TEMP_DTE_HLD, (MV_TEMP_DTE_HLD) =>
               {
                   MV_TEMP_DTE_HLD.CreateNewField(Names.MV_TEMP_MM, FieldType.String, 2);
                   MV_TEMP_DTE_HLD.CreateNewField(Names.MV_TEMP_DD, FieldType.String, 2);
                   MV_TEMP_DTE_HLD.CreateNewField(Names.MV_TEMP_CC, FieldType.String, 2);
                   MV_TEMP_DTE_HLD.CreateNewField(Names.MV_TEMP_YY, FieldType.String, 2);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_COMPLEMENT_DATE, FieldType.UnsignedPackedDecimal, 9);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_WRK_PTR, FieldType.CompShort, 4);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_PRT_PTR, FieldType.CompShort, 4);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_RTE_PTR, FieldType.CompShort, 4)
                   .NewCheckField(Names.MV_RTE_PTR_SET, 1, 2, 3)
                   ;
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CASE_NUMBER_X10, (MV_CASE_NUMBER_X10) =>
               {
                   MV_CASE_NUMBER_X10.CreateNewField(Names.MV_CASE_NUMBER, FieldType.UnsignedNumeric, 12);
               });
               IGroup MV_NARR_PULL_DATEX08_local = (IGroup)EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_NARR_PULL_DATEX08, (MV_NARR_PULL_DATEX08) =>
               {
                   MV_NARR_PULL_DATEX08.CreateNewField(Names.MV_NARR_PULL_DATE, FieldType.UnsignedNumeric, 8);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroupRedefine(Names.MV_NARR_PULL_DATE_RED, MV_NARR_PULL_DATEX08_local, (MV_NARR_PULL_DATE_RED) =>
               {
                   MV_NARR_PULL_DATE_RED.CreateNewField(Names.MV_NARR_PULL_DATE_MM_RED, FieldType.UnsignedNumeric, 2);
                   MV_NARR_PULL_DATE_RED.CreateNewField(Names.MV_NARR_PULL_DATE_DD_RED, FieldType.UnsignedNumeric, 2);
                   MV_NARR_PULL_DATE_RED.CreateNewField(Names.MV_NARR_PULL_DATE_CC_RED, FieldType.UnsignedNumeric, 2);
                   MV_NARR_PULL_DATE_RED.CreateNewField(Names.MV_NARR_PULL_DATE_YY_RED, FieldType.UnsignedNumeric, 2);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_NARR_DATE, FieldType.UnsignedNumeric, 8);
               IGroup MV_NARR_CCYYMMDD_PULL_DATE_local = (IGroup)EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_NARR_CCYYMMDD_PULL_DATE, (MV_NARR_CCYYMMDD_PULL_DATE) =>
               {
                   MV_NARR_CCYYMMDD_PULL_DATE.CreateNewField(Names.MV_CC_PULL_CC, FieldType.UnsignedNumeric, 2);
                   MV_NARR_CCYYMMDD_PULL_DATE.CreateNewField(Names.MV_YY_PULL_YY, FieldType.UnsignedNumeric, 2);
                   MV_NARR_CCYYMMDD_PULL_DATE.CreateNewField(Names.MV_MM_PULL_MM, FieldType.UnsignedNumeric, 2);
                   MV_NARR_CCYYMMDD_PULL_DATE.CreateNewField(Names.MV_DD_PULL_DD, FieldType.UnsignedNumeric, 2);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewFieldRedefine(Names.MV_NARR_CCYYMMDD_PULL_DATE_NUM, FieldType.UnsignedNumeric, MV_NARR_CCYYMMDD_PULL_DATE_local, 8);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.HLD_NARRATIVE_PULL_DATE, (HLD_NARRATIVE_PULL_DATE) =>
               {
                   HLD_NARRATIVE_PULL_DATE.CreateNewField(Names.HLD_NARR_CC, FieldType.UnsignedNumeric, 2);
                   HLD_NARRATIVE_PULL_DATE.CreateNewField(Names.HLD_NARR_YY, FieldType.UnsignedNumeric, 2);
                   HLD_NARRATIVE_PULL_DATE.CreateNewField(Names.HLD_NARR_MM, FieldType.UnsignedNumeric, 2);
                   HLD_NARRATIVE_PULL_DATE.CreateNewField(Names.HLD_NARR_DD, FieldType.UnsignedNumeric, 2);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_NARR_TYPE, FieldType.String, 1);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_NARR_DESC, FieldType.String, 62);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_REGION, FieldType.UnsignedNumeric, 2);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_TEAM_LETTER, FieldType.String, 1);
           });

            recordDef.CreateNewGroup(Names.DCLKSD_NARRATIVE, (DCLKSD_NARRATIVE) =>
           {
               DCLKSD_NARRATIVE.CreateNewField(Names.NARR_CASE_NUMBER, FieldType.String, 12);
               DCLKSD_NARRATIVE.CreateNewField(Names.NARR_NARRATIVE_TYPE, FieldType.String, 1);
               DCLKSD_NARRATIVE.CreateNewField(Names.NARR_NARRATIVE_DATE, FieldType.String, 10);
               DCLKSD_NARRATIVE.CreateNewField(Names.NARR_NARRATIVE_TIME, FieldType.String, 8);
               DCLKSD_NARRATIVE.CreateNewField(Names.NARR_REGION, FieldType.CompShort, 4);
               DCLKSD_NARRATIVE.CreateNewField(Names.NARR_TEAM_LETTER, FieldType.String, 1);
               DCLKSD_NARRATIVE.CreateNewField(Names.NARR_CHANGE_OPERATOR, FieldType.String, 6);
               DCLKSD_NARRATIVE.CreateNewGroup(Names.NARR_NARRATIVE_DESC, (NARR_NARRATIVE_DESC) =>
               {
                   NARR_NARRATIVE_DESC.CreateNewField(Names.NARR_NARRATIVE_DESC_LEN, FieldType.CompShort, 4);
                   NARR_NARRATIVE_DESC.CreateNewField(Names.NARR_NARRATIVE_DESC_TEXT, FieldType.String, 62);
               });
           });

            recordDef.CreateNewGroup(Names.WS_SWITCHES, (WS_SWITCHES) =>
           {
               WS_SWITCHES.CreateNewField(Names.WS_NARR_EOFSW, FieldType.String, 1, "N")
                   .NewCheckField(Names.WS_NARR_EOF_NO, "N")
                   .NewCheckField(Names.WS_NARR_EOF_YES, "Y")
                   ;
           });

            recordDef.CreateNewGroup(Names.CONTROL_BLOCK, (CONTROL_BLOCK) =>
           {
               CONTROL_BLOCK.CreateNewFillerField(FieldType.String, 2, "AP");
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_CODE, FieldType.String, 2, "RC");
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_ID, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.FILE_NUMBER, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.RESPONSE_CODE, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN_LOWER_LIMIT, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN_QUANTITY, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.FORMAT_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.RECORD_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.SEARCH_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.VALUE_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_OPTION_1, FieldType.String, 1, SPACE);
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_OPTION_2, FieldType.String, 1, SPACE);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_1, FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_2, FieldType.String, 4, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_3, FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_4, FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewFillerField(FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_TIME, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.USER_AREA, FieldType.String, 4, SPACES);
           });

            recordDef.CreateNewGroup("FILLER_d14", (FILLER_d14) =>
           {
               FILLER_d14.CreateNewField(Names.ADIM1, FieldType.CompInt, 8);
               FILLER_d14.CreateNewField(Names.ADIM2, FieldType.CompInt, 8);
               FILLER_d14.CreateNewField(Names.ADIM3, FieldType.CompInt, 8);
           });

            recordDef.CreateNewGroup("FILLER_d15", (FILLER_d15) =>
           {
               FILLER_d15.CreateNewField(Names.EXP_GROUP_0001FL, FieldType.String, 1);
               FILLER_d15.CreateNewField(Names.EXP_GROUP_0001PS, FieldType.CompShort, 4);
               FILLER_d15.CreateNewField(Names.EXP_GROUP_0001RF, FieldType.String, 1);
           });
            recordDef.CreateNewField(Names.FUNC_1044122623_ESC_FLAG, FieldType.String, 1);


        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            SQLCA.InitializeWithLowValues();
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXIR40_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXIR40_ls_LinkageSection";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string W_IA = "W_IA";
            internal const string A_1044122626_IA = "A_1044122626_IA";
            internal const string INPUT_0001EV = "INPUT_0001EV";
            internal const string NARR_WORK_DATA_0001ET = "NARR_WORK_DATA_0001ET";
            internal const string NARRATIVE_DATE_0001AS = "NARRATIVE_DATE_0001AS";
            internal const string NARRATIVE_DATE_0001 = "NARRATIVE_DATE_0001";
            internal const string NARRATIVE_DATE_0001XX = "NARRATIVE_DATE_0001XX";
            internal const string CSE_CASE_NUMBER_0001AS = "CSE_CASE_NUMBER_0001AS";
            internal const string CSE_CASE_NUMBER_0001 = "CSE_CASE_NUMBER_0001";
            internal const string CSE_CASE_NUMBER_0001XX = "CSE_CASE_NUMBER_0001XX";
            internal const string W_OA = "W_OA";
            internal const string A_1044122630_OA = "A_1044122630_OA";
            internal const string OUTPUT_0002EV = "OUTPUT_0002EV";
            internal const string ABEND_DATA_0002ET = "ABEND_DATA_0002ET";
            internal const string TYPE_0002AS = "TYPE_0002AS";
            internal const string TYPE_0002 = "TYPE_0002";
            internal const string TYPE_0002XX = "TYPE_0002XX";
            internal const string ADABAS_FILE_NUMBER_0002AS = "ADABAS_FILE_NUMBER_0002AS";
            internal const string ADABAS_FILE_NUMBER_0002 = "ADABAS_FILE_NUMBER_0002";
            internal const string ADABAS_FILE_NUMBER_0002XX = "ADABAS_FILE_NUMBER_0002XX";
            internal const string ADABAS_FILE_ACTION_0002AS = "ADABAS_FILE_ACTION_0002AS";
            internal const string ADABAS_FILE_ACTION_0002 = "ADABAS_FILE_ACTION_0002";
            internal const string ADABAS_FILE_ACTION_0002XX = "ADABAS_FILE_ACTION_0002XX";
            internal const string ADABAS_RESPONSE_CD_0002AS = "ADABAS_RESPONSE_CD_0002AS";
            internal const string ADABAS_RESPONSE_CD_0002 = "ADABAS_RESPONSE_CD_0002";
            internal const string ADABAS_RESPONSE_CD_0002XX = "ADABAS_RESPONSE_CD_0002XX";
            internal const string CICS_RESOURCE_NM_0002AS = "CICS_RESOURCE_NM_0002AS";
            internal const string CICS_RESOURCE_NM_0002 = "CICS_RESOURCE_NM_0002";
            internal const string CICS_RESOURCE_NM_0002XX = "CICS_RESOURCE_NM_0002XX";
            internal const string CICS_FUNCTION_CD_0002AS = "CICS_FUNCTION_CD_0002AS";
            internal const string CICS_FUNCTION_CD_0002 = "CICS_FUNCTION_CD_0002";
            internal const string CICS_FUNCTION_CD_0002XX = "CICS_FUNCTION_CD_0002XX";
            internal const string CICS_RESPONSE_CD_0002AS = "CICS_RESPONSE_CD_0002AS";
            internal const string CICS_RESPONSE_CD_0002 = "CICS_RESPONSE_CD_0002";
            internal const string CICS_RESPONSE_CD_0002XX = "CICS_RESPONSE_CD_0002XX";
            internal const string EXP_GROUP_0001RG = "EXP_GROUP_0001RG";
            internal const string EXP_GROUP_0001MA = "EXP_GROUP_0001MA";
            internal const string EXP_GROUP_0001MX = "EXP_GROUP_0001MX";
            internal const string EXP_GROUP_0001 = "EXP_GROUP_0001";
            internal const string EXP_GROUP_0001AC = "EXP_GROUP_0001AC";
            internal const string OUTPUT_0003EV = "OUTPUT_0003EV";
            internal const string NARR_WORK_DATA_0003ET = "NARR_WORK_DATA_0003ET";
            internal const string NARRATIVE_DATE_0003AS = "NARRATIVE_DATE_0003AS";
            internal const string NARRATIVE_DATE_0003 = "NARRATIVE_DATE_0003";
            internal const string NARRATIVE_DATE_0003XX = "NARRATIVE_DATE_0003XX";
            internal const string CSE_CASE_NUMBER_0003AS = "CSE_CASE_NUMBER_0003AS";
            internal const string CSE_CASE_NUMBER_0003 = "CSE_CASE_NUMBER_0003";
            internal const string CSE_CASE_NUMBER_0003XX = "CSE_CASE_NUMBER_0003XX";
            internal const string NARRATIVE_TYPE_0003AS = "NARRATIVE_TYPE_0003AS";
            internal const string NARRATIVE_TYPE_0003 = "NARRATIVE_TYPE_0003";
            internal const string NARRATIVE_TYPE_0003XX = "NARRATIVE_TYPE_0003XX";
            internal const string NARRATIVE_DESC_0003AS = "NARRATIVE_DESC_0003AS";
            internal const string NARRATIVE_DESC_0003 = "NARRATIVE_DESC_0003";
            internal const string NARRATIVE_DESC_0003XX = "NARRATIVE_DESC_0003XX";
            internal const string REGION_0003AS = "REGION_0003AS";
            internal const string REGION_0003 = "REGION_0003";
            internal const string REGION_0003XX = "REGION_0003XX";
            internal const string TEAM_0003AS = "TEAM_0003AS";
            internal const string TEAM_0003 = "TEAM_0003";
            internal const string TEAM_0003XX = "TEAM_0003XX";
            internal const string TWA = "TWA";
            internal const string TWA_ADABAS_PARMS = "TWA_ADABAS_PARMS";
            internal const string TWA_CICS_PARMS = "TWA_CICS_PARMS";
            internal const string TWA_PROGRAM_ID = "TWA_PROGRAM_ID";
            internal const string TWA_ADDR_LIST = "TWA_ADDR_LIST";
        }
        #endregion

        #region Direct-access element properties
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup W_IA { get { return GetElementByName<IGroup>(Names.W_IA); } }
        public IGroup A_1044122626_IA { get { return GetElementByName<IGroup>(Names.A_1044122626_IA); } }
        public IGroup INPUT_0001EV { get { return GetElementByName<IGroup>(Names.INPUT_0001EV); } }
        public IGroup NARR_WORK_DATA_0001ET { get { return GetElementByName<IGroup>(Names.NARR_WORK_DATA_0001ET); } }
        public IField NARRATIVE_DATE_0001AS { get { return GetElementByName<IField>(Names.NARRATIVE_DATE_0001AS); } }
        public IField NARRATIVE_DATE_0001 { get { return GetElementByName<IField>(Names.NARRATIVE_DATE_0001); } }
        public IField NARRATIVE_DATE_0001XX { get { return GetElementByName<IField>(Names.NARRATIVE_DATE_0001XX); } }
        public IField CSE_CASE_NUMBER_0001AS { get { return GetElementByName<IField>(Names.CSE_CASE_NUMBER_0001AS); } }
        public IField CSE_CASE_NUMBER_0001 { get { return GetElementByName<IField>(Names.CSE_CASE_NUMBER_0001); } }
        public IField CSE_CASE_NUMBER_0001XX { get { return GetElementByName<IField>(Names.CSE_CASE_NUMBER_0001XX); } }
        public IGroup W_OA { get { return GetElementByName<IGroup>(Names.W_OA); } }
        public IGroup A_1044122630_OA { get { return GetElementByName<IGroup>(Names.A_1044122630_OA); } }
        public IGroup OUTPUT_0002EV { get { return GetElementByName<IGroup>(Names.OUTPUT_0002EV); } }
        public IGroup ABEND_DATA_0002ET { get { return GetElementByName<IGroup>(Names.ABEND_DATA_0002ET); } }
        public IField TYPE_0002AS { get { return GetElementByName<IField>(Names.TYPE_0002AS); } }
        public IField TYPE_0002 { get { return GetElementByName<IField>(Names.TYPE_0002); } }
        public IField TYPE_0002XX { get { return GetElementByName<IField>(Names.TYPE_0002XX); } }
        public IField ADABAS_FILE_NUMBER_0002AS { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0002AS); } }
        public IField ADABAS_FILE_NUMBER_0002 { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0002); } }
        public IField ADABAS_FILE_NUMBER_0002XX { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0002XX); } }
        public IField ADABAS_FILE_ACTION_0002AS { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0002AS); } }
        public IField ADABAS_FILE_ACTION_0002 { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0002); } }
        public IField ADABAS_FILE_ACTION_0002XX { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0002XX); } }
        public IField ADABAS_RESPONSE_CD_0002AS { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0002AS); } }
        public IField ADABAS_RESPONSE_CD_0002 { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0002); } }
        public IField ADABAS_RESPONSE_CD_0002XX { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0002XX); } }
        public IField CICS_RESOURCE_NM_0002AS { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0002AS); } }
        public IField CICS_RESOURCE_NM_0002 { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0002); } }
        public IField CICS_RESOURCE_NM_0002XX { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0002XX); } }
        public IField CICS_FUNCTION_CD_0002AS { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0002AS); } }
        public IField CICS_FUNCTION_CD_0002 { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0002); } }
        public IField CICS_FUNCTION_CD_0002XX { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0002XX); } }
        public IField CICS_RESPONSE_CD_0002AS { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0002AS); } }
        public IField CICS_RESPONSE_CD_0002 { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0002); } }
        public IField CICS_RESPONSE_CD_0002XX { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0002XX); } }
        public IGroup EXP_GROUP_0001RG { get { return GetElementByName<IGroup>(Names.EXP_GROUP_0001RG); } }
        public IField EXP_GROUP_0001MA { get { return GetElementByName<IField>(Names.EXP_GROUP_0001MA); } }
        public IField EXP_GROUP_0001MX { get { return GetElementByName<IField>(Names.EXP_GROUP_0001MX); } }
        public IArrayElementAccessor<IGroup> EXP_GROUP_0001 { get { return GetArrayElementAccessor<IGroup>(Names.EXP_GROUP_0001); } }
        public IArrayElementAccessor<IField> EXP_GROUP_0001AC { get { return GetArrayElementAccessor<IField>(Names.EXP_GROUP_0001AC); } }
        public IArrayElementAccessor<IGroup> OUTPUT_0003EV { get { return GetArrayElementAccessor<IGroup>(Names.OUTPUT_0003EV); } }
        public IArrayElementAccessor<IGroup> NARR_WORK_DATA_0003ET { get { return GetArrayElementAccessor<IGroup>(Names.NARR_WORK_DATA_0003ET); } }
        public IArrayElementAccessor<IField> NARRATIVE_DATE_0003AS { get { return GetArrayElementAccessor<IField>(Names.NARRATIVE_DATE_0003AS); } }
        public IArrayElementAccessor<IField> NARRATIVE_DATE_0003 { get { return GetArrayElementAccessor<IField>(Names.NARRATIVE_DATE_0003); } }
        public IArrayElementAccessor<IField> NARRATIVE_DATE_0003XX { get { return GetArrayElementAccessor<IField>(Names.NARRATIVE_DATE_0003XX); } }
        public IArrayElementAccessor<IField> CSE_CASE_NUMBER_0003AS { get { return GetArrayElementAccessor<IField>(Names.CSE_CASE_NUMBER_0003AS); } }
        public IArrayElementAccessor<IField> CSE_CASE_NUMBER_0003 { get { return GetArrayElementAccessor<IField>(Names.CSE_CASE_NUMBER_0003); } }
        public IArrayElementAccessor<IField> CSE_CASE_NUMBER_0003XX { get { return GetArrayElementAccessor<IField>(Names.CSE_CASE_NUMBER_0003XX); } }
        public IArrayElementAccessor<IField> NARRATIVE_TYPE_0003AS { get { return GetArrayElementAccessor<IField>(Names.NARRATIVE_TYPE_0003AS); } }
        public IArrayElementAccessor<IField> NARRATIVE_TYPE_0003 { get { return GetArrayElementAccessor<IField>(Names.NARRATIVE_TYPE_0003); } }
        public IArrayElementAccessor<IField> NARRATIVE_TYPE_0003XX { get { return GetArrayElementAccessor<IField>(Names.NARRATIVE_TYPE_0003XX); } }
        public IArrayElementAccessor<IField> NARRATIVE_DESC_0003AS { get { return GetArrayElementAccessor<IField>(Names.NARRATIVE_DESC_0003AS); } }
        public IArrayElementAccessor<IField> NARRATIVE_DESC_0003 { get { return GetArrayElementAccessor<IField>(Names.NARRATIVE_DESC_0003); } }
        public IArrayElementAccessor<IField> NARRATIVE_DESC_0003XX { get { return GetArrayElementAccessor<IField>(Names.NARRATIVE_DESC_0003XX); } }
        public IArrayElementAccessor<IField> REGION_0003AS { get { return GetArrayElementAccessor<IField>(Names.REGION_0003AS); } }
        public IArrayElementAccessor<IField> REGION_0003 { get { return GetArrayElementAccessor<IField>(Names.REGION_0003); } }
        public IArrayElementAccessor<IField> REGION_0003XX { get { return GetArrayElementAccessor<IField>(Names.REGION_0003XX); } }
        public IArrayElementAccessor<IField> TEAM_0003AS { get { return GetArrayElementAccessor<IField>(Names.TEAM_0003AS); } }
        public IArrayElementAccessor<IField> TEAM_0003 { get { return GetArrayElementAccessor<IField>(Names.TEAM_0003); } }
        public IArrayElementAccessor<IField> TEAM_0003XX { get { return GetArrayElementAccessor<IField>(Names.TEAM_0003XX); } }
        public IGroup TWA { get { return GetElementByName<IGroup>(Names.TWA); } }
        public IGroup TWA_ADABAS_PARMS { get { return GetElementByName<IGroup>(Names.TWA_ADABAS_PARMS); } }
        public IGroup TWA_CICS_PARMS { get { return GetElementByName<IGroup>(Names.TWA_CICS_PARMS); } }
        public IField TWA_PROGRAM_ID { get { return GetElementByName<IField>(Names.TWA_PROGRAM_ID); } }
        public IGroup TWA_ADDR_LIST { get { return GetElementByName<IGroup>(Names.TWA_ADDR_LIST); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
           {
               PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
               PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
               {
                   PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
               });
           });

            recordDef.CreateNewGroup(Names.W_IA, (W_IA) =>
           {
               W_IA.CreateNewGroup(Names.A_1044122626_IA, (A_1044122626_IA) =>
               {
                   A_1044122626_IA.CreateNewGroup(Names.INPUT_0001EV, (INPUT_0001EV) =>
                   {
                       INPUT_0001EV.CreateNewGroup(Names.NARR_WORK_DATA_0001ET, (NARR_WORK_DATA_0001ET) =>
                       {
                           NARR_WORK_DATA_0001ET.CreateNewField(Names.NARRATIVE_DATE_0001AS, FieldType.String, 1);

                           IField NARRATIVE_DATE_0001_local = NARR_WORK_DATA_0001ET.CreateNewField(Names.NARRATIVE_DATE_0001, FieldType.SignedNumeric, 8);
                           NARR_WORK_DATA_0001ET.CreateNewFieldRedefine(Names.NARRATIVE_DATE_0001XX, FieldType.String, NARRATIVE_DATE_0001_local, 8);
                           NARR_WORK_DATA_0001ET.CreateNewField(Names.CSE_CASE_NUMBER_0001AS, FieldType.String, 1);

                           IField CSE_CASE_NUMBER_0001_local = NARR_WORK_DATA_0001ET.CreateNewField(Names.CSE_CASE_NUMBER_0001, FieldType.String, 12);
                           NARR_WORK_DATA_0001ET.CreateNewFieldRedefine(Names.CSE_CASE_NUMBER_0001XX, FieldType.String, CSE_CASE_NUMBER_0001_local, 12);
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.W_OA, (W_OA) =>
           {
               W_OA.CreateNewGroup(Names.A_1044122630_OA, (A_1044122630_OA) =>
               {
                   A_1044122630_OA.CreateNewGroup(Names.OUTPUT_0002EV, (OUTPUT_0002EV) =>
                   {
                       OUTPUT_0002EV.CreateNewGroup(Names.ABEND_DATA_0002ET, (ABEND_DATA_0002ET) =>
                       {
                           ABEND_DATA_0002ET.CreateNewField(Names.TYPE_0002AS, FieldType.String, 1);

                           IField TYPE_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.TYPE_0002, FieldType.String, 1);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.TYPE_0002XX, FieldType.String, TYPE_0002_local, 1);
                           ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_FILE_NUMBER_0002AS, FieldType.String, 1);

                           IField ADABAS_FILE_NUMBER_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_FILE_NUMBER_0002, FieldType.String, 4);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.ADABAS_FILE_NUMBER_0002XX, FieldType.String, ADABAS_FILE_NUMBER_0002_local, 4);
                           ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_FILE_ACTION_0002AS, FieldType.String, 1);

                           IField ADABAS_FILE_ACTION_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_FILE_ACTION_0002, FieldType.String, 3);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.ADABAS_FILE_ACTION_0002XX, FieldType.String, ADABAS_FILE_ACTION_0002_local, 3);
                           ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_RESPONSE_CD_0002AS, FieldType.String, 1);

                           IField ADABAS_RESPONSE_CD_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_RESPONSE_CD_0002, FieldType.String, 4);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.ADABAS_RESPONSE_CD_0002XX, FieldType.String, ADABAS_RESPONSE_CD_0002_local, 4);
                           ABEND_DATA_0002ET.CreateNewField(Names.CICS_RESOURCE_NM_0002AS, FieldType.String, 1);

                           IField CICS_RESOURCE_NM_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.CICS_RESOURCE_NM_0002, FieldType.String, 8);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.CICS_RESOURCE_NM_0002XX, FieldType.String, CICS_RESOURCE_NM_0002_local, 8);
                           ABEND_DATA_0002ET.CreateNewField(Names.CICS_FUNCTION_CD_0002AS, FieldType.String, 1);

                           IField CICS_FUNCTION_CD_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.CICS_FUNCTION_CD_0002, FieldType.String, 2);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.CICS_FUNCTION_CD_0002XX, FieldType.String, CICS_FUNCTION_CD_0002_local, 2);
                           ABEND_DATA_0002ET.CreateNewField(Names.CICS_RESPONSE_CD_0002AS, FieldType.String, 1);

                           IField CICS_RESPONSE_CD_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.CICS_RESPONSE_CD_0002, FieldType.String, 6);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.CICS_RESPONSE_CD_0002XX, FieldType.String, CICS_RESPONSE_CD_0002_local, 6);
                       });
                   });
                   A_1044122630_OA.CreateNewGroup(Names.EXP_GROUP_0001RG, (EXP_GROUP_0001RG) =>
                   {

                       IField EXP_GROUP_0001MA_local = EXP_GROUP_0001RG.CreateNewField(Names.EXP_GROUP_0001MA, FieldType.SignedNumeric, 4);
                       EXP_GROUP_0001RG.CreateNewFieldRedefine(Names.EXP_GROUP_0001MX, FieldType.String, EXP_GROUP_0001MA_local, 4);
                       EXP_GROUP_0001RG.CreateNewGroupArray(Names.EXP_GROUP_0001, 174, (EXP_GROUP_0001) =>
                       {
                           EXP_GROUP_0001.CreateNewField(Names.EXP_GROUP_0001AC, FieldType.String, 1);
                           EXP_GROUP_0001.CreateNewGroup(Names.OUTPUT_0003EV, (OUTPUT_0003EV) =>
                           {
                               OUTPUT_0003EV.CreateNewGroup(Names.NARR_WORK_DATA_0003ET, (NARR_WORK_DATA_0003ET) =>
                               {
                                   NARR_WORK_DATA_0003ET.CreateNewField(Names.NARRATIVE_DATE_0003AS, FieldType.String, 1);

                                   IField NARRATIVE_DATE_0003_local = NARR_WORK_DATA_0003ET.CreateNewField(Names.NARRATIVE_DATE_0003, FieldType.SignedNumeric, 8);
                                   NARR_WORK_DATA_0003ET.CreateNewFieldRedefine(Names.NARRATIVE_DATE_0003XX, FieldType.String, NARRATIVE_DATE_0003_local, 8);
                                   NARR_WORK_DATA_0003ET.CreateNewField(Names.CSE_CASE_NUMBER_0003AS, FieldType.String, 1);

                                   IField CSE_CASE_NUMBER_0003_local = NARR_WORK_DATA_0003ET.CreateNewField(Names.CSE_CASE_NUMBER_0003, FieldType.String, 12);
                                   NARR_WORK_DATA_0003ET.CreateNewFieldRedefine(Names.CSE_CASE_NUMBER_0003XX, FieldType.String, CSE_CASE_NUMBER_0003_local, 12);
                                   NARR_WORK_DATA_0003ET.CreateNewField(Names.NARRATIVE_TYPE_0003AS, FieldType.String, 1);

                                   IField NARRATIVE_TYPE_0003_local = NARR_WORK_DATA_0003ET.CreateNewField(Names.NARRATIVE_TYPE_0003, FieldType.String, 1);
                                   NARR_WORK_DATA_0003ET.CreateNewFieldRedefine(Names.NARRATIVE_TYPE_0003XX, FieldType.String, NARRATIVE_TYPE_0003_local, 1);
                                   NARR_WORK_DATA_0003ET.CreateNewField(Names.NARRATIVE_DESC_0003AS, FieldType.String, 1);

                                   IField NARRATIVE_DESC_0003_local = NARR_WORK_DATA_0003ET.CreateNewField(Names.NARRATIVE_DESC_0003, FieldType.String, 62);
                                   NARR_WORK_DATA_0003ET.CreateNewFieldRedefine(Names.NARRATIVE_DESC_0003XX, FieldType.String, NARRATIVE_DESC_0003_local, 62);
                                   NARR_WORK_DATA_0003ET.CreateNewField(Names.REGION_0003AS, FieldType.String, 1);

                                   IField REGION_0003_local = NARR_WORK_DATA_0003ET.CreateNewField(Names.REGION_0003, FieldType.String, 2);
                                   NARR_WORK_DATA_0003ET.CreateNewFieldRedefine(Names.REGION_0003XX, FieldType.String, REGION_0003_local, 2);
                                   NARR_WORK_DATA_0003ET.CreateNewField(Names.TEAM_0003AS, FieldType.String, 1);

                                   IField TEAM_0003_local = NARR_WORK_DATA_0003ET.CreateNewField(Names.TEAM_0003, FieldType.String, 1);
                                   NARR_WORK_DATA_0003ET.CreateNewFieldRedefine(Names.TEAM_0003XX, FieldType.String, TEAM_0003_local, 1);
                               });
                           });
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.TWA, (TWA) =>
           {
               IGroup TWA_ADABAS_PARMS_local = (IGroup)TWA.CreateNewGroup(Names.TWA_ADABAS_PARMS, (TWA_ADABAS_PARMS) =>
               {
                   TWA_ADABAS_PARMS.CreateNewFieldArray("FILLER_d16", 7, FieldType.CompInt, 4);
               });
               TWA.CreateNewGroupRedefine(Names.TWA_CICS_PARMS, TWA_ADABAS_PARMS_local, (TWA_CICS_PARMS) =>
               {
                   TWA_CICS_PARMS.CreateNewField(Names.TWA_PROGRAM_ID, FieldType.String, 8);
                   TWA_CICS_PARMS.CreateNewGroup(Names.TWA_ADDR_LIST, (TWA_ADDR_LIST) =>
                   {
                       TWA_ADDR_LIST.CreateNewFieldArray("FILLER_d17", 5, FieldType.CompInt, 4);
                   });
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(W_IA, args, 0);
            SetPassedParm(W_OA, args, 1);
            SetPassedParm(PSMGR_EAB_DATA, args, 2);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(W_IA, args, 0);
            SetReturnParm(W_OA, args, 1);
            SetReturnParm(PSMGR_EAB_DATA, args, 2);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXIR40 : OnlineEABBase
    {

        #region Public Constructors
        public SWEXIR40()
            : base()
        {
            SetUpProgram();
        }

        public SWEXIR40(OnlineControl controlData) : base(controlData)
        {
            SetUpProgram();
        }

        private void SetUpProgram()
        {
            this.ProgramName = "SWEXIR40";

            WS = new SWEXIR40_ws();
            LS = new SWEXIR40_ls();
            DbConv.SQLCA.Record = WS.SQLCA.Record;

            DbConv.SetQueryText("NARRATIVE", "SELECT CASE_NUMBER, NARRATIVE_TYPE, NARRATIVE_DATE, NARRATIVE_TIME, REGION, TEAM_LETTER, NARRATIVE_DESC FROM KSD_NARRATIVE WHERE CASE_NUMBER = {0}  AND NARRATIVE_DATE = {1}  ORDER BY CASE_NUMBER, NARRATIVE_DATE, NARRATIVE_TYPE",  //COBOL==>EXEC SQL DECLARE NARRATIVE CURSOR FOR SELECT CASE_NUMBER , NARRATIVE_TYPE , NARRATIVE_DATE , NARRATIVE_TIME , REGION , TEAM_LETTER , NARRATIVE_DESC FROM KSD_NARRATIVE WHERE CASE_NUMBER = :NARR-CASE-NUMBER AND NARRATIVE_DATE = :NARR-NARRATIVE-DATE ORDER BY CASE_NUMBER , NARRATIVE_DATE , NARRATIVE_TYPE END-EXEC
                                WS.NARR_CASE_NUMBER, WS.NARR_NARRATIVE_DATE);

        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXIR40_ws WS;

        //==== Linkage Section Data Class ========================================
        private SWEXIR40_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING W-IA , W-OA , PSMGR-EAB-DATA.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_1044122623(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_1044122623
        /// </summary>
        private void M_MAIN_1044122623(string returnMethod = "")
        {
            M_PARA_1044122623_INIT("M_PARA_1044122623_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-1044122623-INIT THRU PARA-1044122623-INIT-EXIT
            M_PARA_1044122623("M_PARA_1044122623_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-1044122623 THRU PARA-1044122623-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_1044122623
        /// </summary>
        private void M_PARA_1044122623(string returnMethod = "")
        {
            WS.FUNC_1044122623_ESC_FLAG.SetValue("N");                                                          //COBOL==> MOVE 'N' TO FUNC-1044122623-ESC-FLAG.
            if (returnMethod != "" && returnMethod != "M_PARA_1044122623") { M_0000_ADABAS_ROUTINE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_ADABAS_ROUTINE
        /// </summary>
        /// <remarks>
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT: *****************************************************************
        ///COMMENT:                                                                 *
        ///COMMENT:  INCLUDE NAME:  SWCSZP02.                                       *
        ///COMMENT:      EAB NAME:  SWEXIR40.                                       *
        ///COMMENT:   DESCRIPTION:  0000-ADABAS-ROUTINE.                            *
        ///COMMENT:      LOCATION:  PROCEDURE DIVISION.                             *
        ///COMMENT:                                                                 *
        ///COMMENT:      INCLUDES:  SWCSZP01  WORKING-STORAGE SECTION.              *
        ///COMMENT:                 SWCSZ053  WORKING-STORAGE SECTION.              *
        ///COMMENT:                 SWCTWA    LINKAGE SECTION.                      *
        ///COMMENT:                                                                 *
        ///COMMENT:       ACTIONS:  RECEIVE CASE-NUMBER.                            *
        ///COMMENT:                 READLOGICAL  NARRATIVE-DBF                      *
        ///COMMENT:                   USING CASE-NUMBER (AND DATE, IF SUPPLIED.)    *
        ///COMMENT:                                                                 *
        ///COMMENT:                 RETURN ABEND-FIELDS.                            *
        ///COMMENT:                                                                 *
        ///COMMENT:       CREATED:  27-MAY-97.                                      *
        ///COMMENT:            BY:  CTG/CEB.                                        *
        ///COMMENT:                                                                 *
        ///COMMENT: ** MAINTENANCE **************************************************
        ///COMMENT:                   CHANGE                                        *
        ///COMMENT:                   CONTRL                                        *
        ///COMMENT:  DATE     AUTHOR  NUMBER  DESCRIPTION                           *
        ///COMMENT:  -------  ------  ------  ------------------------------------- *
        ///COMMENT:  05/14    PLEAK   CQ35825 CHANGE ADABAS CALLS TO DB2            *
        ///COMMENT: *****************************************************************
        /// </remarks>
        private void M_0000_ADABAS_ROUTINE(string returnMethod = "")
        {
            WS.MV_ABEND_FIELDS.SetValueWithSpaces();                                                            //COBOL==> MOVE SPACES TO MV-ABEND-FIELDS.
            SetHandleCondtions(HandleCondition.ERROR, "M_9999_CICS_ABEND");                                     //COBOL==> EXEC CICS HANDLE CONDITION ERROR ( 9999-CICS-ABEND ) END-EXEC.
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:  INCLUDE NAME:  SWCSZ954 (FROM SWCSZ054).                      *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:      EAB NAME:  SWCSZ???.                                      *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:   DESCRIPTION:  ADABAS INITIALIZATION.                         *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:      LOCATION:  PROCEDURE DIVISION.                            *
                                                                                                                //COMMENT:                 MUST BE HARDCOPIED INTO EAB MAIN PROCEDURE     *
                                                                                                                //COMMENT:                   DIVISION INCLUDE SWCSZ???.                   *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:       ACTIONS:  RELEASES ANY OUTSTANDING COMMAND ID'S.         *
                                                                                                                //COMMENT:                 THIS ROUTINE REQUIRES INCLUDE SWCSZ053 IN THE  *
                                                                                                                //COMMENT:                   WORKING-STORAGE SECTION OF THIS PROGRAM.     *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:       CREATED:  07-OCT-96.                                     *
                                                                                                                //COMMENT:            BY:                                                 *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT: ** MAINTENANCE *************************************************
                                                                                                                //COMMENT:                   CHANGE                                       *
                                                                                                                //COMMENT:                   CONTRL                                       *
                                                                                                                //COMMENT:  DATE     AUTHOR  NUMBER  DESCRIPTION                          *
                                                                                                                //COMMENT:  -------  ------  ------  ------------------------------------ *
                                                                                                                //COMMENT:  05/14    LEAK    35825   REPLACED ADABAS CALLS WITH DB2       *
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT:     CALL 'ADASTWA' USING TWA CONTROL-BLOCK.
                                                                                                                //COMMENT:     CALL SRADALNK  USING DFHEIBLK DFHCOMMAREA TWA SRMODLNK.
                                                                                                                //COMMENT:     IF RESPONSE-CODE > ZERO AND NOT = 9
                                                                                                                //COMMENT:         MOVE 'A'           TO MV-ABEND-TYPE
                                                                                                                //COMMENT:         MOVE ZERO          TO MV-ADA-FILE-NUMBER
                                                                                                                //COMMENT:         MOVE 'INI'         TO MV-ADA-FILE-ACTION
                                                                                                                //COMMENT:         MOVE RESPONSE-CODE TO MV-ADA-RESPONSE-CD
                                                                                                                //COMMENT:         GO TO 0000-ADABAS-EXIT
                                                                                                                //COMMENT:     END-IF.
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT:  GET     SYSTEM DATE        *         YEAR/MONTH/DAY   (YYMMDD) *
                                                                                                                //COMMENT:                                                                 *
                                                                                                                //COMMENT:  APPEND  CENTURY            * CENTURY/YEAR/MONTH/DAY (CCYYMMDD) *
                                                                                                                //COMMENT: *****************************************************************
            Control.GetLatestDateTime(WS.MV_ABS_TIME);                                                          //COBOL==> EXEC CICS ASKTIME ABSTIME ( MV-ABS-TIME ) END-EXEC.
            DateConverter.ConvertABSTime(WS.MV_ABS_TIME, DateTimeFormat.YYMMDD, WS.MV_YYMM_X4, "", null, "");   //COBOL==> EXEC CICS FORMATTIME ABSTIME ( MV-ABS-TIME ) YYMMDD ( MV-YYMM-X4 ) END-EXEC.
            if (WS.MV_YY.IsGreaterThan(94))                                                                     //COBOL==> IF MV-YY > 94
            {
                WS.MV_CC.SetValue(19);                                                                              //COBOL==> MOVE 19 TO MV-CC
            }                                                                                                   //COBOL==> ELSE
            else
            {
                WS.MV_CC.SetValue(20);                                                                              //COBOL==> MOVE 20 TO MV-CC
            }                                                                                                   //COBOL==> END-IF.
            WS.NARR_CASE_NUMBER.SetValue(LS.CSE_CASE_NUMBER_0001);                                              //COBOL==> MOVE CSE-CASE-NUMBER-0001 TO NARR-CASE-NUMBER.
            WS.NARR_NARRATIVE_DATE.SetValue(LS.NARRATIVE_DATE_0001);                                            //COBOL==> MOVE NARRATIVE-DATE-0001 TO NARR-NARRATIVE-DATE.
                                                                                                                //COMMENT:     PERFORM 1100-READLOG-NARRATIVE-DBF
                                                                                                                //COMMENT:        THRU 1100-READLOG-EXIT.
                                                                                                                //COMMENT: *   PERFORM 1300-BUILD-NARRATIVE-AREA
                                                                                                                //COMMENT: *      THRU 1300-EXIT
                                                                                                                //COMMENT: *       UNTIL EOF184
                                                                                                                //COMMENT: *          OR CASE-NUMBER184
                                                                                                                //COMMENT: *                           NOT  = V-CASE-NUMBER184
                                                                                                                //COMMENT: *          OR EXP-GROUP-0001MA
                                                                                                                //COMMENT: *                           NOT  < 174.
                                                                                                                //COMMENT: **PLL START
            M_8100_DECLARE_NARR_CURSOR("M_8100_EXIT"); if (Control.ExitProgram) { return; }                       //COBOL==> PERFORM 8100-DECLARE-NARR-CURSOR THRU 8100-EXIT.
            if (DbConv.SQLCA.SQLCODE.IsEqualTo(0))                                                              //COBOL==> IF SQLCODE = 0
            {
                M_8110_OPEN_NARR_CURSOR("M_8110_EXIT"); if (Control.ExitProgram) { return; }                          //COBOL==> PERFORM 8110-OPEN-NARR-CURSOR THRU 8110-EXIT
            }                                                                                                   //COBOL==> END-IF.
            WS.WS_NARR_EOF_NO.SetValue(true);                                                                   //COBOL==> SET WS-NARR-EOF-NO TO TRUE.
            if (DbConv.SQLCA.SQLCODE.IsEqualTo(0))                                                              //COBOL==> IF SQLCODE = 0
            {
                while (!((WS.WS_NARR_EOF_YES.Value) || (LS.EXP_GROUP_0001MA.IsGreaterThanOrEqualTo(174))))          //COBOL==> PERFORM 8120-FETCH-NARRATIVE-AREA UNTIL WS-NARR-EOF-YES OR EXP-GROUP-0001MA NOT < 174.
                {
                    M_8120_FETCH_NARRATIVE_AREA(); if (Control.ExitProgram) { return; }
                }
            }
            M_8130_CLOSE_NARRATIVE("M_8130_EXIT"); if (Control.ExitProgram) { return; }                           //COBOL==> PERFORM 8130-CLOSE-NARRATIVE THRU 8130-EXIT.
            M_0000_ADABAS_EXIT(CheckGotoReturn(returnMethod)); return;                                          //COBOL==> GO TO 0000-ADABAS-EXIT.
        }
        /// <summary>
        /// Method M_1300_BUILD_NARRATIVE_AREA
        /// </summary>
        /// <remarks>
        ///COMMENT: 1100-READLOG-NARRATIVE-DBF.
        ///COMMENT:     @READLOGICAL184  FIRST.
        ///COMMENT:     IF RESPONSE-CODE184 > ZERO AND NOT EOF184
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 184              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RLF'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE184 TO MV-ADA-RESPONSE-CD
        ///COMMENT:         GO TO 0000-ADABAS-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT: 1100-READLOG-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: ***********************************************************
        ///COMMENT:        THIS PARAGRAPH IS PERFORMED TO BUILD THE KESSEP MAP
        ///COMMENT:        IT READS NARRATIVE-DBF AND DISPLAY NARRATIVES
        ///COMMENT:        IT IS PERFORMED AS AN ITERATION 56 TIMES
        ///COMMENT: ***********************************************************
        /// </remarks>
        private void M_1300_BUILD_NARRATIVE_AREA(string returnMethod = "")
        {
            //COMMENT:    IF NARRATIVE TYPE = Z,R,T THEN IGNORE
            //COMMENT:    Z=6 MO   R=RECEIPT  T=TICKLER
            if (((WS.NARR_NARRATIVE_TYPE.IsEqualTo("Z"))
             || (WS.NARR_NARRATIVE_TYPE.IsEqualTo("R")))
             || (WS.NARR_NARRATIVE_TYPE.IsEqualTo("T")))  //COBOL==> IF NARR-NARRATIVE-TYPE = 'Z' OR 'R' OR 'T'
            {
                M_1300_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1300-EXIT
            }                                                                                                   //COBOL==> END-IF.
            LS.EXP_GROUP_0001MA.Add(1);                                                                         //COBOL==> ADD 1 TO EXP-GROUP-0001MA.
            LS.NARRATIVE_DATE_0003[LS.EXP_GROUP_0001MA.AsInt()].SetValue(WS.NARR_NARRATIVE_DATE);               //COBOL==> MOVE NARR-NARRATIVE-DATE TO NARRATIVE-DATE-0003 ( EXP-GROUP-0001MA ) .
            LS.CSE_CASE_NUMBER_0003[LS.EXP_GROUP_0001MA.AsInt()].SetValue(WS.NARR_CASE_NUMBER);                 //COBOL==> MOVE NARR-CASE-NUMBER TO CSE-CASE-NUMBER-0003 ( EXP-GROUP-0001MA ) .
            LS.NARRATIVE_TYPE_0003[LS.EXP_GROUP_0001MA.AsInt()].SetValue(WS.NARR_NARRATIVE_TYPE);               //COBOL==> MOVE NARR-NARRATIVE-TYPE TO NARRATIVE-TYPE-0003 ( EXP-GROUP-0001MA ) .
            LS.NARRATIVE_DESC_0003[LS.EXP_GROUP_0001MA.AsInt()].SetValue(WS.NARR_NARRATIVE_DESC);               //COBOL==> MOVE NARR-NARRATIVE-DESC TO NARRATIVE-DESC-0003 ( EXP-GROUP-0001MA ) .
            LS.REGION_0003[LS.EXP_GROUP_0001MA.AsInt()].SetValue(WS.NARR_REGION);                               //COBOL==> MOVE NARR-REGION TO REGION-0003 ( EXP-GROUP-0001MA ) .
            LS.TEAM_0003[LS.EXP_GROUP_0001MA.AsInt()].SetValue(WS.NARR_TEAM_LETTER);                            //COBOL==> MOVE NARR-TEAM-LETTER TO TEAM-0003 ( EXP-GROUP-0001MA ) .
                                                                                                                //COMMENT: 1300-CONT.
                                                                                                                //COMMENT:     @READLOGICAL184.
            if (DbConv.SQLCA.SQLCODE.IsGreaterThan(0))                                                          //COBOL==> IF SQLCODE > 0
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(184);                                                                //COBOL==> MOVE 184 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RLF");                                                              //COBOL==> MOVE 'RLF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(DbConv.SQLCA.SQLCODE);                                               //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                M_0000_ADABAS_EXIT(CheckGotoReturn(returnMethod)); return;                                          //COBOL==> GO TO 0000-ADABAS-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_1300_BUILD_NARRATIVE_AREA") { M_1300_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1300_EXIT
        /// </summary>
        private void M_1300_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1300_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1300_EXIT") { M_8100_DECLARE_NARR_CURSOR(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8100_DECLARE_NARR_CURSOR
        /// </summary>
        /// <remarks>
        ///COMMENT: *****************************************************************
        ///COMMENT:  DECLARE CURSOR FOR KSD NARRATIVE DB2 TABLE ROUTINE             *
        ///COMMENT: *****************************************************************
        /// </remarks>
        private void M_8100_DECLARE_NARR_CURSOR(string returnMethod = "")
        {
            // Declare Relocated to Method SetUpProgram!                                                        //COBOL==> EXEC SQL DECLARE NARRATIVE CURSOR FOR SELECT CASE_NUMBER , NARRATIVE_TYPE , NARRATIVE_DATE , NARRATIVE_TIME , REGION , TEAM_LETTER , NARRATIVE_DESC FROM KSD_NARRATIVE WHERE CASE_NUMBER = :NARR-CASE-NUMBER AND NARRATIVE_DATE = :NARR-NARRATIVE-DATE ORDER BY CASE_NUMBER , NARRATIVE_DATE , NARRATIVE_TYPE END-EXEC.
            // EvaluateList !DbConv.SQLCA.SQLCODE!                                                              //COBOL==> EVALUATE SQLCODE
            if ((DbConv.SQLCA.SQLCODE.IsZeroes()))                                                              //COBOL==> WHEN 0
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(184);                                                                //COBOL==> MOVE 184 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RLF");                                                              //COBOL==> MOVE 'RLF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(DbConv.SQLCA.SQLCODE);                                               //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_8100_DECLARE_NARR_CURSOR") { M_8100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8100_EXIT
        /// </summary>
        private void M_8100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_8100_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_8100_EXIT") { M_8110_OPEN_NARR_CURSOR(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8110_OPEN_NARR_CURSOR
        /// </summary>
        /// <remarks>
        ///COMMENT: ****************************************************************
        ///COMMENT:  OPEN CURSOR FOR KSD NARRATIVE DB2 TABLE ROUTINE               *
        ///COMMENT: ****************************************************************
        /// </remarks>
        private void M_8110_OPEN_NARR_CURSOR(string returnMethod = "")
        {
            DbConv.OpenReader("NARRATIVE");                                                                     //COBOL==> EXEC SQL OPEN NARRATIVE END-EXEC.
                                                                                                                // EvaluateList !DbConv.SQLCA.SQLCODE!                                                              //COBOL==> EVALUATE SQLCODE
            if ((DbConv.SQLCA.SQLCODE.IsZeroes()))                                                              //COBOL==> WHEN 0
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(184);                                                                //COBOL==> MOVE 184 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RLF");                                                              //COBOL==> MOVE 'RLF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(DbConv.SQLCA.SQLCODE);                                               //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_8110_OPEN_NARR_CURSOR") { M_8110_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8110_EXIT
        /// </summary>
        private void M_8110_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_8110_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_8110_EXIT") { M_8120_FETCH_NARRATIVE_AREA(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8120_FETCH_NARRATIVE_AREA
        /// </summary>
        /// <remarks>
        ///COMMENT: *****************************************************************
        ///COMMENT:  FETCH CURSOR FOR KSD NARRATIVE DB2 TABLE ROUTINE               *
        ///COMMENT: *****************************************************************
        /// </remarks>
        private void M_8120_FETCH_NARRATIVE_AREA(string returnMethod = "")
        {
            DbConv.FetchReaderRow("NARRATIVE",                                                               //COBOL==> EXEC SQL FETCH NARRATIVE INTO :NARR-CASE-NUMBER , :NARR-NARRATIVE-TYPE , :NARR-NARRATIVE-DATE , :NARR-NARRATIVE-TIME , :NARR-REGION , :NARR-NARRATIVE-DESC END-EXEC.
                             WS.NARR_CASE_NUMBER, WS.NARR_NARRATIVE_TYPE, WS.NARR_NARRATIVE_DATE, WS.NARR_NARRATIVE_TIME, WS.NARR_REGION, WS.NARR_NARRATIVE_DESC);
            // EvaluateList !DbConv.SQLCA.SQLCODE!                                                              //COBOL==> EVALUATE SQLCODE
            if ((DbConv.SQLCA.SQLCODE.IsZeroes()))                                                              //COBOL==> WHEN 0
            {
                M_1300_BUILD_NARRATIVE_AREA("M_1300_EXIT"); if (Control.ExitProgram) { return; }                      //COBOL==> PERFORM 1300-BUILD-NARRATIVE-AREA THRU 1300-EXIT
            }                                                                                                //COBOL==> WHEN +100
            else
            if ((DbConv.SQLCA.SQLCODE.IsEqualTo(+100)))
            {
                WS.WS_NARR_EOF_YES.SetValue(true);                                                                  //COBOL==> SET WS-NARR-EOF-YES TO TRUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(184);                                                                //COBOL==> MOVE 184 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RLF");                                                              //COBOL==> MOVE 'RLF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(DbConv.SQLCA.SQLCODE);                                               //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_8120_FETCH_NARRATIVE_AREA") { M_8120_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8120_EXIT
        /// </summary>
        private void M_8120_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_8120_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_8120_EXIT") { M_8130_CLOSE_NARRATIVE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8130_CLOSE_NARRATIVE
        /// </summary>
        private void M_8130_CLOSE_NARRATIVE(string returnMethod = "")
        {
            DbConv.CloseReader("NARRATIVE");                                                                    //COBOL==> EXEC SQL CLOSE NARRATIVE END-EXEC.
                                                                                                                // EvaluateList !DbConv.SQLCA.SQLCODE!                                                              //COBOL==> EVALUATE SQLCODE
            if ((DbConv.SQLCA.SQLCODE.IsZeroes()))                                                              //COBOL==> WHEN 0
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(184);                                                                //COBOL==> MOVE 184 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RLF");                                                              //COBOL==> MOVE 'RLF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(DbConv.SQLCA.SQLCODE);                                               //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_8130_CLOSE_NARRATIVE") { M_8130_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8130_EXIT
        /// </summary>
        private void M_8130_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_8130_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_8130_EXIT") { M_9999_CICS_ABEND(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_9999_CICS_ABEND
        /// </summary>
        private void M_9999_CICS_ABEND(string returnMethod = "")
        {
            WS.MV_ABEND_TYPE.SetValue("C");                                                                     //COBOL==> MOVE 'C' TO MV-ABEND-TYPE.
            WS.MV_CICS_RESOURCE_NM.SetValue(Control.EIBRSRCE);                                                  //COBOL==> MOVE EIBRSRCE TO MV-CICS-RESOURCE-NM.
            WS.MV_CICS_FUNCTION_CD.SetValue(Control.EIBFN);                                                     //COBOL==> MOVE EIBFN TO MV-CICS-FUNCTION-CD.
            WS.MV_CICS_RESPONSE_CD.SetValue(Control.EIBRCODE);                                                  //COBOL==> MOVE EIBRCODE TO MV-CICS-RESPONSE-CD.
            if (returnMethod != "" && returnMethod != "M_9999_CICS_ABEND") { M_0000_ADABAS_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_ADABAS_EXIT
        /// </summary>
        private void M_0000_ADABAS_EXIT(string returnMethod = "")
        {
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                LS.TYPE_0002.SetValue(WS.MV_ABEND_TYPE);                                                            //COBOL==> MOVE MV-ABEND-TYPE TO TYPE-0002
                LS.ADABAS_FILE_NUMBER_0002.SetValue(WS.MV_ADA_FILE_NUMBER);                                         //COBOL==> MOVE MV-ADA-FILE-NUMBER TO ADABAS-FILE-NUMBER-0002
                LS.ADABAS_FILE_ACTION_0002.SetValue(WS.MV_ADA_FILE_ACTION);                                         //COBOL==> MOVE MV-ADA-FILE-ACTION TO ADABAS-FILE-ACTION-0002
                LS.ADABAS_RESPONSE_CD_0002.SetValue(WS.MV_ADA_RESPONSE_CD);                                         //COBOL==> MOVE MV-ADA-RESPONSE-CD TO ADABAS-RESPONSE-CD-0002
                LS.CICS_RESOURCE_NM_0002.SetValue(WS.MV_CICS_RESOURCE_NM);                                          //COBOL==> MOVE MV-CICS-RESOURCE-NM TO CICS-RESOURCE-NM-0002
                LS.CICS_FUNCTION_CD_0002.SetValue(WS.MV_CICS_FUNCTION_CD);                                          //COBOL==> MOVE MV-CICS-FUNCTION-CD TO CICS-FUNCTION-CD-0002
                LS.CICS_RESPONSE_CD_0002.SetValue(WS.MV_CICS_RESPONSE_CD);                                          //COBOL==> MOVE MV-CICS-RESPONSE-CD TO CICS-RESPONSE-CD-0002
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_0000_ADABAS_EXIT") { M_PARA_1044122623_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_1044122623_EXIT
        /// </summary>
        private void M_PARA_1044122623_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_1044122623_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_1044122623_EXIT") { M_PARA_1044122623_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_1044122623_INIT
        /// </summary>
        private void M_PARA_1044122623_INIT(string returnMethod = "")
        {
            LS.OUTPUT_0002EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE OUTPUT-0002EV
            WS.EXP_GROUP_0001PS.SetValueWithZeroes();                                                           //COBOL==> MOVE ZERO TO EXP-GROUP-0001PS
            LS.EXP_GROUP_0001RG.ResetToInitialValue();                                                          //COBOL==> INITIALIZE EXP-GROUP-0001RG .
            if (returnMethod != "" && returnMethod != "M_PARA_1044122623_INIT") { M_PARA_1044122623_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_1044122623_INIT_EXIT
        /// </summary>
        private void M_PARA_1044122623_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_1044122623_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
