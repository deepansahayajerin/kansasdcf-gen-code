#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2022
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2022-03-02 04:49:00 PM
   **        *   FROM COBOL PGM   :  SWEXGR17
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   ***************************************************************
                       SOURCE CODE GENERATED BY
                        ALLFUSION(R) GEN R7.6
            COPYRIGHT (C) 2009 CA.  ALL RIGHTS RESERVED.
       NAME: EAB_READ_CSE_PERSON_BATCH_ALL    DATE: 2009/12/29
       TARGET OS:   MVS                       TIME: 14:33:42
       TARGET DBMS: DB2                       USER: SWDPDJD
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
       HIGH PERFORMANCE VIEW PASSING SELECTED
       LAST-STATEMENT-NUM EXECUTION SELECTED
       ENFORCE DEFAULT VALUES WITH DBMS SELECTED
       INIT UNSPECIFIED OPTIONAL FIELDS TO NULL NOT SELECTED
       DYNAMIC LINK (Z/OS) PROPERTY SET TO "Yes"
   ***************************************************************
   ** MAINTENANCE *************************************************
                         CHANGE
      DATE      AUTHOR   CONTROL DESCRIPTION
    ---------- --------- ------- ----------------------------------
    03/24/2014 G.BRAMSON CQ35825 ADABAS TO DB2 KEES PHASE 3 CHANGES
    .......... ......... ....... KEEP ADABAS ERROR RESPONSE FIELDS.
   ****************************************************************
*/
#endregion
#region Using Directives
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Core;
using System;

/*  usings for referenced objects  */
#endregion

namespace GOV.KS.DCF.CSS.Common.BL
{
    #region Working Storage Class
    internal class SWEXGR17_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXGR17_ws_WorkingStorage";
            internal const string EXTERNAL_ACTION_BLOCK_WS = "EXTERNAL_ACTION_BLOCK_WS";
            internal const string MV_ABEND_FIELDS = "MV_ABEND_FIELDS";
            internal const string MV_ABEND_TYPE = "MV_ABEND_TYPE";
            internal const string MV_ABEND_TYPE_NONE = "MV_ABEND_TYPE_NONE";
            internal const string MV_ABEND_TYPE_ADABAS = "MV_ABEND_TYPE_ADABAS";
            internal const string MV_ABEND_ADABAS = "MV_ABEND_ADABAS";
            internal const string MV_ADA_FILE_NUMBER = "MV_ADA_FILE_NUMBER";
            internal const string MV_ADA_FILE_ACTION = "MV_ADA_FILE_ACTION";
            internal const string MV_ADA_RESPONSE_CD = "MV_ADA_RESPONSE_CD";
            internal const string MV_CCYYMMDD = "MV_CCYYMMDD";
            internal const string MV_COMPLIMENT_DATE = "MV_COMPLIMENT_DATE";
            internal const string MV_KCC_PTR = "MV_KCC_PTR";
            internal const string MV_CLIENT_INFO_NUMBER = "MV_CLIENT_INFO_NUMBER";
            internal const string MV_CLIENT_NUMBER_X10 = "MV_CLIENT_NUMBER_X10";
            internal const string MV_CLIENT_NUMBER = "MV_CLIENT_NUMBER";
            internal const string MV_DATE_OF_BIRTH_SEX = "MV_DATE_OF_BIRTH_SEX";
            internal const string MV_DATE_OF_BIRTH = "MV_DATE_OF_BIRTH";
            internal const string MV_SEX = "MV_SEX";
            internal const string MV_SSN_X9 = "MV_SSN_X9";
            internal const string MV_SSN = "MV_SSN";
            internal const string MV_CLIENT_NAME = "MV_CLIENT_NAME";
            internal const string MV_CLIENT_SURNAME = "MV_CLIENT_SURNAME";
            internal const string MV_CLIENT_GIVEN_NAME = "MV_CLIENT_GIVEN_NAME";
            internal const string MV_CLIENT_INITIAL = "MV_CLIENT_INITIAL";
            internal const string MV_CLIENT_POINTER = "MV_CLIENT_POINTER";
            internal const string MV_CLIENT_ID = "MV_CLIENT_ID";
            internal const string MV_VERIFIED_SSN_FLAG = "MV_VERIFIED_SSN_FLAG";
            internal const string MV_SYSTEM_PARTICIPATION = "MV_SYSTEM_PARTICIPATION";
            internal const string MV_SYS_PART_AE = "MV_SYS_PART_AE";
            internal const string MV_SYS_PART_CSE = "MV_SYS_PART_CSE";
            internal const string MV_SYS_PART_KANPAY = "MV_SYS_PART_KANPAY";
            internal const string MV_SYS_PART_KSCARES = "MV_SYS_PART_KSCARES";
            internal const string MV_SYS_PART_FACTS = "MV_SYS_PART_FACTS";
            internal const string WS_SWEXGCPR = "WS_SWEXGCPR";
            internal const string WS_PARM_AREA = "WS_PARM_AREA";
            internal const string WSI_INPUT_AREA = "WSI_INPUT_AREA";
            internal const string WSI_CLIENT_KEY = "WSI_CLIENT_KEY";
            internal const string WSI_CLIENT_NUMBER = "WSI_CLIENT_NUMBER";
            internal const string WSI_CLIENT_NAME = "WSI_CLIENT_NAME";
            internal const string WSI_CLIENT_SURNAME = "WSI_CLIENT_SURNAME";
            internal const string WSI_CLIENT_GIVEN_NAME = "WSI_CLIENT_GIVEN_NAME";
            internal const string WSI_CLIENT_INITIALS = "WSI_CLIENT_INITIALS";
            internal const string WSI_CLIENT_SSN = "WSI_CLIENT_SSN";
            internal const string WSO_OUTPUT_AREA = "WSO_OUTPUT_AREA";
            internal const string WSO_CLIENT_POINTER = "WSO_CLIENT_POINTER";
            internal const string WSO_CLIENT_NUMBER = "WSO_CLIENT_NUMBER";
            internal const string WSO_VERIFIED_SSN_FLAG = "WSO_VERIFIED_SSN_FLAG";
            internal const string WSO_SYSTEM_PARTICIPATION = "WSO_SYSTEM_PARTICIPATION";
            internal const string WSO_SYSTEM_AE = "WSO_SYSTEM_AE";
            internal const string WSO_SYSTEM_CS = "WSO_SYSTEM_CS";
            internal const string WSO_SYSTEM_KA = "WSO_SYSTEM_KA";
            internal const string WSO_SYSTEM_KS = "WSO_SYSTEM_KS";
            internal const string WSO_SYSTEM_FA = "WSO_SYSTEM_FA";
            internal const string WSO_ABEND_FIELDS = "WSO_ABEND_FIELDS";
            internal const string WSO_ABEND_TYPE = "WSO_ABEND_TYPE";
            internal const string WSO_ABEND_ADABAS = "WSO_ABEND_ADABAS";
            internal const string WSO_ADA_FILE_NUMBER = "WSO_ADA_FILE_NUMBER";
            internal const string WSO_ADA_FILE_ACTION = "WSO_ADA_FILE_ACTION";
            internal const string WSO_ADA_RESPONSE_CD = "WSO_ADA_RESPONSE_CD";
            internal const string WSO_ABEND_CICS = "WSO_ABEND_CICS";
            internal const string WSO_CICS_RESOURCE_NM = "WSO_CICS_RESOURCE_NM";
            internal const string WSO_CICS_FUNCTION_CD = "WSO_CICS_FUNCTION_CD";
            internal const string WSO_CICS_RESPONSE_CD = "WSO_CICS_RESPONSE_CD";
            internal const string WSO_RETURN_ERRORS = "WSO_RETURN_ERRORS";
            internal const string WSO_RETURN_PROG = "WSO_RETURN_PROG";
            internal const string WSO_RETURN_MSG = "WSO_RETURN_MSG";
            internal const string WSO_RETURN_VALUE = "WSO_RETURN_VALUE";
            internal const string WSO_RETURN_SQLCODE = "WSO_RETURN_SQLCODE";
            internal const string WS_MISC = "WS_MISC";
            internal const string WS_MSG_X = "WS_MSG_X";
            internal const string WS_MSG_PROG = "WS_MSG_PROG";
            internal const string WS_MSG_1 = "WS_MSG_1";
            internal const string WS_MSG = "WS_MSG";
            internal const string WS_MSG_CODE = "WS_MSG_CODE";
            internal const string WS_MSG_SQLCODE = "WS_MSG_SQLCODE";
            internal const string WS_MSG_2 = "WS_MSG_2";
            internal const string WS_MSG_FIELD = "WS_MSG_FIELD";
            internal const string WS_MSG_VALUE = "WS_MSG_VALUE";
            internal const string DBK1_KEY_FIELDS = "DBK1_KEY_FIELDS";
            internal const string DBK1_CLIENT_NUMBER = "DBK1_CLIENT_NUMBER";
            internal const string DBK1_CLIENT_NAME = "DBK1_CLIENT_NAME";
            internal const string DBK1_COUNT = "DBK1_COUNT";
            internal const string DBK1_CCYYMMDD_X = "DBK1_CCYYMMDD_X";
            internal const string DBK1_CCYY = "DBK1_CCYY";
            internal const string DBK1_MM = "DBK1_MM";
            internal const string DBK1_DD = "DBK1_DD";
            internal const string DBK1_CCYYMMDD = "DBK1_CCYYMMDD";
            internal const string DCLKSD_CLIENT_BASIC = "DCLKSD_CLIENT_BASIC";
            internal const string CLB_CLIENT_NUMBER = "CLB_CLIENT_NUMBER";
            internal const string CLB_CLIENT_GIVEN_NAME = "CLB_CLIENT_GIVEN_NAME";
            internal const string CLB_CLIENT_INITIALS = "CLB_CLIENT_INITIALS";
            internal const string CLB_CLIENT_SURNAME = "CLB_CLIENT_SURNAME";
            internal const string CLB_CIS_REPL_IND = "CLB_CIS_REPL_IND";
            internal const string CLB_WORK_PHONE = "CLB_WORK_PHONE";
            internal const string CLB_SSN = "CLB_SSN";
            internal const string CLB_GENDER = "CLB_GENDER";
            internal const string CLB_PARENT_RGHTS_SEV = "CLB_PARENT_RGHTS_SEV";
            internal const string CLB_PRNT_RGHTS_SEV_DT = "CLB_PRNT_RGHTS_SEV_DT";
            internal const string CLB_LEGAL_STATUS = "CLB_LEGAL_STATUS";
            internal const string CLB_INSURANCE_CODE = "CLB_INSURANCE_CODE";
            internal const string CLB_INITIAL_CUSTODY_DT = "CLB_INITIAL_CUSTODY_DT";
            internal const string CLB_HOME_PHONE = "CLB_HOME_PHONE";
            internal const string CLB_DATE_OF_BIRTH = "CLB_DATE_OF_BIRTH";
            internal const string CLB_CURR_PLACEMNT_DT = "CLB_CURR_PLACEMNT_DT";
            internal const string CLB_CURRENT_PLACEMENT = "CLB_CURRENT_PLACEMENT";
            internal const string CLB_CSEA_G_CAUSE_CODE = "CLB_CSEA_G_CAUSE_CODE";
            internal const string CLB_CSEA_G_CAUSE_CL_DT = "CLB_CSEA_G_CAUSE_CL_DT";
            internal const string CLB_CSEA_COOP_CODE = "CLB_CSEA_COOP_CODE";
            internal const string CLB_COUNTY_CRT_COMMIT = "CLB_COUNTY_CRT_COMMIT";
            internal const string CLB_MONTHS_ASST_AF = "CLB_MONTHS_ASST_AF";
            internal const string CLB_MONTHS_ASST_GA = "CLB_MONTHS_ASST_GA";
            internal const string CLB_MO_DEATH_DT = "CLB_MO_DEATH_DT";
            internal const string CLB_MO_PRT_DT = "CLB_MO_PRT_DT";
            internal const string CLB_FA_DEATH_DT = "CLB_FA_DEATH_DT";
            internal const string CLB_FA_PRT_DT = "CLB_FA_PRT_DT";
            internal const string CLB_MPI_ID = "CLB_MPI_ID";
            internal const string CLB_MED_COVERAGE_IND = "CLB_MED_COVERAGE_IND";
            internal const string CLB_INSURANCE_CARRIER = "CLB_INSURANCE_CARRIER";
            internal const string CLB_INSURANCE_POLCY_NO = "CLB_INSURANCE_POLCY_NO";
            internal const string CLB_SPOKEN_LANGUAGE = "CLB_SPOKEN_LANGUAGE";
            internal const string CLB_WRITTEN_LANGUAGE = "CLB_WRITTEN_LANGUAGE";
            internal const string CLB_STATE_OF_BIRTH = "CLB_STATE_OF_BIRTH";
            internal const string CLB_SCHOOL_DISTRICT = "CLB_SCHOOL_DISTRICT";
            internal const string CLB_ETHNIC_CLASS = "CLB_ETHNIC_CLASS";
            internal const string CLB_SUFFIX_NAME = "CLB_SUFFIX_NAME";
            internal const string CLB_EMPLOYER_NAME = "CLB_EMPLOYER_NAME";
            internal const string CLB_EARNED_INCOME_AMT = "CLB_EARNED_INCOME_AMT";
            internal const string CLB_INCOME_FREQUENCY = "CLB_INCOME_FREQUENCY";
            internal const string CLB_KEES_ABMS_ID = "CLB_KEES_ABMS_ID";
            internal const string CLB_EMAIL_ADDRESS = "CLB_EMAIL_ADDRESS";
            internal const string CLB_EMAIL_ADDRESS_LEN = "CLB_EMAIL_ADDRESS_LEN";
            internal const string CLB_EMAIL_ADDRESS_TEXT = "CLB_EMAIL_ADDRESS_TEXT";
            internal const string CLB_OCCUPATION = "CLB_OCCUPATION";
            internal const string CLB_OCCUPATION_LEN = "CLB_OCCUPATION_LEN";
            internal const string CLB_OCCUPATION_TEXT = "CLB_OCCUPATION_TEXT";
            internal const string CLB_CREATED_BY = "CLB_CREATED_BY";
            internal const string CLB_CREATED_TIMESTAMP = "CLB_CREATED_TIMESTAMP";
            internal const string CLB_LAST_MODIFIED_BY = "CLB_LAST_MODIFIED_BY";
            internal const string CLB_LAST_MODIFIED_TMST = "CLB_LAST_MODIFIED_TMST";
            internal const string DCLKSD_PARTICIPATION = "DCLKSD_PARTICIPATION";
            internal const string PAR1_KESSEP_TIME_STMP = "PAR1_KESSEP_TIME_STMP";
            internal const string PAR1_PART_END_DATE = "PAR1_PART_END_DATE";
            internal const string PAR1_PART_START_DATE = "PAR1_PART_START_DATE";
            internal const string PAR1_PART_CODE = "PAR1_PART_CODE";
            internal const string PAR1_PROGRAM_END_DATE = "PAR1_PROGRAM_END_DATE";
            internal const string PAR1_PROGRAM_SUBTYPE = "PAR1_PROGRAM_SUBTYPE";
            internal const string PAR1_RELATIONSHIP = "PAR1_RELATIONSHIP";
            internal const string PAR1_CREATED_BY = "PAR1_CREATED_BY";
            internal const string PAR1_CREATED_TIMESTAMP = "PAR1_CREATED_TIMESTAMP";
            internal const string PAR1_LAST_MODIFIED_BY = "PAR1_LAST_MODIFIED_BY";
            internal const string PAR1_LAST_MODIFIED_TMST = "PAR1_LAST_MODIFIED_TMST";
            internal const string PAR1_FK_CSB_CASE_NO = "PAR1_FK_CSB_CASE_NO";
            internal const string PAR1_FK_PGB_PROG_TYPE = "PAR1_FK_PGB_PROG_TYPE";
            internal const string PAR1_FK_CLB_CLIENT_NO = "PAR1_FK_CLB_CLIENT_NO";
        }
        #endregion

        #region Direct-access element properties
        public IGroup EXTERNAL_ACTION_BLOCK_WS { get { return GetElementByName<IGroup>(Names.EXTERNAL_ACTION_BLOCK_WS); } }
        public IGroup MV_ABEND_FIELDS { get { return GetElementByName<IGroup>(Names.MV_ABEND_FIELDS); } }
        public IField MV_ABEND_TYPE { get { return GetElementByName<IField>(Names.MV_ABEND_TYPE); } }
        public ICheckField MV_ABEND_TYPE_NONE { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_NONE); } }
        public ICheckField MV_ABEND_TYPE_ADABAS { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_ADABAS); } }
        public IGroup MV_ABEND_ADABAS { get { return GetElementByName<IGroup>(Names.MV_ABEND_ADABAS); } }
        public IField MV_ADA_FILE_NUMBER { get { return GetElementByName<IField>(Names.MV_ADA_FILE_NUMBER); } }
        public IField MV_ADA_FILE_ACTION { get { return GetElementByName<IField>(Names.MV_ADA_FILE_ACTION); } }
        public IField MV_ADA_RESPONSE_CD { get { return GetElementByName<IField>(Names.MV_ADA_RESPONSE_CD); } }
        public IField MV_CCYYMMDD { get { return GetElementByName<IField>(Names.MV_CCYYMMDD); } }
        public IField MV_COMPLIMENT_DATE { get { return GetElementByName<IField>(Names.MV_COMPLIMENT_DATE); } }
        public IField MV_KCC_PTR { get { return GetElementByName<IField>(Names.MV_KCC_PTR); } }
        public IField MV_CLIENT_INFO_NUMBER { get { return GetElementByName<IField>(Names.MV_CLIENT_INFO_NUMBER); } }
        public IGroup MV_CLIENT_NUMBER_X10 { get { return GetElementByName<IGroup>(Names.MV_CLIENT_NUMBER_X10); } }
        public IField MV_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.MV_CLIENT_NUMBER); } }
        public IGroup MV_DATE_OF_BIRTH_SEX { get { return GetElementByName<IGroup>(Names.MV_DATE_OF_BIRTH_SEX); } }
        public IField MV_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.MV_DATE_OF_BIRTH); } }
        public IField MV_SEX { get { return GetElementByName<IField>(Names.MV_SEX); } }
        public IGroup MV_SSN_X9 { get { return GetElementByName<IGroup>(Names.MV_SSN_X9); } }
        public IField MV_SSN { get { return GetElementByName<IField>(Names.MV_SSN); } }
        public IGroup MV_CLIENT_NAME { get { return GetElementByName<IGroup>(Names.MV_CLIENT_NAME); } }
        public IField MV_CLIENT_SURNAME { get { return GetElementByName<IField>(Names.MV_CLIENT_SURNAME); } }
        public IField MV_CLIENT_GIVEN_NAME { get { return GetElementByName<IField>(Names.MV_CLIENT_GIVEN_NAME); } }
        public IField MV_CLIENT_INITIAL { get { return GetElementByName<IField>(Names.MV_CLIENT_INITIAL); } }
        public IGroup MV_CLIENT_POINTER { get { return GetElementByName<IGroup>(Names.MV_CLIENT_POINTER); } }
        public IField MV_CLIENT_ID { get { return GetElementByName<IField>(Names.MV_CLIENT_ID); } }
        public IField MV_VERIFIED_SSN_FLAG { get { return GetElementByName<IField>(Names.MV_VERIFIED_SSN_FLAG); } }
        public IGroup MV_SYSTEM_PARTICIPATION { get { return GetElementByName<IGroup>(Names.MV_SYSTEM_PARTICIPATION); } }
        public IField MV_SYS_PART_AE { get { return GetElementByName<IField>(Names.MV_SYS_PART_AE); } }
        public IField MV_SYS_PART_CSE { get { return GetElementByName<IField>(Names.MV_SYS_PART_CSE); } }
        public IField MV_SYS_PART_KANPAY { get { return GetElementByName<IField>(Names.MV_SYS_PART_KANPAY); } }
        public IField MV_SYS_PART_KSCARES { get { return GetElementByName<IField>(Names.MV_SYS_PART_KSCARES); } }
        public IField MV_SYS_PART_FACTS { get { return GetElementByName<IField>(Names.MV_SYS_PART_FACTS); } }
        public IField WS_SWEXGCPR { get { return GetElementByName<IField>(Names.WS_SWEXGCPR); } }
        public IGroup WS_PARM_AREA { get { return GetElementByName<IGroup>(Names.WS_PARM_AREA); } }
        public IGroup WSI_INPUT_AREA { get { return GetElementByName<IGroup>(Names.WSI_INPUT_AREA); } }
        public IGroup WSI_CLIENT_KEY { get { return GetElementByName<IGroup>(Names.WSI_CLIENT_KEY); } }
        public IField WSI_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.WSI_CLIENT_NUMBER); } }
        public IGroup WSI_CLIENT_NAME { get { return GetElementByName<IGroup>(Names.WSI_CLIENT_NAME); } }
        public IField WSI_CLIENT_SURNAME { get { return GetElementByName<IField>(Names.WSI_CLIENT_SURNAME); } }
        public IField WSI_CLIENT_GIVEN_NAME { get { return GetElementByName<IField>(Names.WSI_CLIENT_GIVEN_NAME); } }
        public IField WSI_CLIENT_INITIALS { get { return GetElementByName<IField>(Names.WSI_CLIENT_INITIALS); } }
        public IField WSI_CLIENT_SSN { get { return GetElementByName<IField>(Names.WSI_CLIENT_SSN); } }
        public IGroup WSO_OUTPUT_AREA { get { return GetElementByName<IGroup>(Names.WSO_OUTPUT_AREA); } }
        public IGroup WSO_CLIENT_POINTER { get { return GetElementByName<IGroup>(Names.WSO_CLIENT_POINTER); } }
        public IField WSO_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.WSO_CLIENT_NUMBER); } }
        public IField WSO_VERIFIED_SSN_FLAG { get { return GetElementByName<IField>(Names.WSO_VERIFIED_SSN_FLAG); } }
        public IGroup WSO_SYSTEM_PARTICIPATION { get { return GetElementByName<IGroup>(Names.WSO_SYSTEM_PARTICIPATION); } }
        public IField WSO_SYSTEM_AE { get { return GetElementByName<IField>(Names.WSO_SYSTEM_AE); } }
        public IField WSO_SYSTEM_CS { get { return GetElementByName<IField>(Names.WSO_SYSTEM_CS); } }
        public IField WSO_SYSTEM_KA { get { return GetElementByName<IField>(Names.WSO_SYSTEM_KA); } }
        public IField WSO_SYSTEM_KS { get { return GetElementByName<IField>(Names.WSO_SYSTEM_KS); } }
        public IField WSO_SYSTEM_FA { get { return GetElementByName<IField>(Names.WSO_SYSTEM_FA); } }
        public IGroup WSO_ABEND_FIELDS { get { return GetElementByName<IGroup>(Names.WSO_ABEND_FIELDS); } }
        public IField WSO_ABEND_TYPE { get { return GetElementByName<IField>(Names.WSO_ABEND_TYPE); } }
        public IGroup WSO_ABEND_ADABAS { get { return GetElementByName<IGroup>(Names.WSO_ABEND_ADABAS); } }
        public IField WSO_ADA_FILE_NUMBER { get { return GetElementByName<IField>(Names.WSO_ADA_FILE_NUMBER); } }
        public IField WSO_ADA_FILE_ACTION { get { return GetElementByName<IField>(Names.WSO_ADA_FILE_ACTION); } }
        public IField WSO_ADA_RESPONSE_CD { get { return GetElementByName<IField>(Names.WSO_ADA_RESPONSE_CD); } }
        public IGroup WSO_ABEND_CICS { get { return GetElementByName<IGroup>(Names.WSO_ABEND_CICS); } }
        public IField WSO_CICS_RESOURCE_NM { get { return GetElementByName<IField>(Names.WSO_CICS_RESOURCE_NM); } }
        public IField WSO_CICS_FUNCTION_CD { get { return GetElementByName<IField>(Names.WSO_CICS_FUNCTION_CD); } }
        public IField WSO_CICS_RESPONSE_CD { get { return GetElementByName<IField>(Names.WSO_CICS_RESPONSE_CD); } }
        public IGroup WSO_RETURN_ERRORS { get { return GetElementByName<IGroup>(Names.WSO_RETURN_ERRORS); } }
        public IField WSO_RETURN_PROG { get { return GetElementByName<IField>(Names.WSO_RETURN_PROG); } }
        public IField WSO_RETURN_MSG { get { return GetElementByName<IField>(Names.WSO_RETURN_MSG); } }
        public IGroup WSO_RETURN_VALUE { get { return GetElementByName<IGroup>(Names.WSO_RETURN_VALUE); } }
        public IField WSO_RETURN_SQLCODE { get { return GetElementByName<IField>(Names.WSO_RETURN_SQLCODE); } }
        public IGroup WS_MISC { get { return GetElementByName<IGroup>(Names.WS_MISC); } }
        public IGroup WS_MSG_X { get { return GetElementByName<IGroup>(Names.WS_MSG_X); } }
        public IField WS_MSG_PROG { get { return GetElementByName<IField>(Names.WS_MSG_PROG); } }
        public IGroup WS_MSG_1 { get { return GetElementByName<IGroup>(Names.WS_MSG_1); } }
        public IField WS_MSG { get { return GetElementByName<IField>(Names.WS_MSG); } }
        public IGroup WS_MSG_CODE { get { return GetElementByName<IGroup>(Names.WS_MSG_CODE); } }
        public IField WS_MSG_SQLCODE { get { return GetElementByName<IField>(Names.WS_MSG_SQLCODE); } }
        public IGroup WS_MSG_2 { get { return GetElementByName<IGroup>(Names.WS_MSG_2); } }
        public IField WS_MSG_FIELD { get { return GetElementByName<IField>(Names.WS_MSG_FIELD); } }
        public IField WS_MSG_VALUE { get { return GetElementByName<IField>(Names.WS_MSG_VALUE); } }
        public IGroup DBK1_KEY_FIELDS { get { return GetElementByName<IGroup>(Names.DBK1_KEY_FIELDS); } }
        public IField DBK1_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.DBK1_CLIENT_NUMBER); } }
        public IField DBK1_CLIENT_NAME { get { return GetElementByName<IField>(Names.DBK1_CLIENT_NAME); } }
        public IField DBK1_COUNT { get { return GetElementByName<IField>(Names.DBK1_COUNT); } }
        public IGroup DBK1_CCYYMMDD_X { get { return GetElementByName<IGroup>(Names.DBK1_CCYYMMDD_X); } }
        public IField DBK1_CCYY { get { return GetElementByName<IField>(Names.DBK1_CCYY); } }
        public IField DBK1_MM { get { return GetElementByName<IField>(Names.DBK1_MM); } }
        public IField DBK1_DD { get { return GetElementByName<IField>(Names.DBK1_DD); } }
        public IField DBK1_CCYYMMDD { get { return GetElementByName<IField>(Names.DBK1_CCYYMMDD); } }
        public IGroup DCLKSD_CLIENT_BASIC { get { return GetElementByName<IGroup>(Names.DCLKSD_CLIENT_BASIC); } }
        public IField CLB_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.CLB_CLIENT_NUMBER); } }
        public IField CLB_CLIENT_GIVEN_NAME { get { return GetElementByName<IField>(Names.CLB_CLIENT_GIVEN_NAME); } }
        public IField CLB_CLIENT_INITIALS { get { return GetElementByName<IField>(Names.CLB_CLIENT_INITIALS); } }
        public IField CLB_CLIENT_SURNAME { get { return GetElementByName<IField>(Names.CLB_CLIENT_SURNAME); } }
        public IField CLB_CIS_REPL_IND { get { return GetElementByName<IField>(Names.CLB_CIS_REPL_IND); } }
        public IField CLB_WORK_PHONE { get { return GetElementByName<IField>(Names.CLB_WORK_PHONE); } }
        public IField CLB_SSN { get { return GetElementByName<IField>(Names.CLB_SSN); } }
        public IField CLB_GENDER { get { return GetElementByName<IField>(Names.CLB_GENDER); } }
        public IField CLB_PARENT_RGHTS_SEV { get { return GetElementByName<IField>(Names.CLB_PARENT_RGHTS_SEV); } }
        public IField CLB_PRNT_RGHTS_SEV_DT { get { return GetElementByName<IField>(Names.CLB_PRNT_RGHTS_SEV_DT); } }
        public IField CLB_LEGAL_STATUS { get { return GetElementByName<IField>(Names.CLB_LEGAL_STATUS); } }
        public IField CLB_INSURANCE_CODE { get { return GetElementByName<IField>(Names.CLB_INSURANCE_CODE); } }
        public IField CLB_INITIAL_CUSTODY_DT { get { return GetElementByName<IField>(Names.CLB_INITIAL_CUSTODY_DT); } }
        public IField CLB_HOME_PHONE { get { return GetElementByName<IField>(Names.CLB_HOME_PHONE); } }
        public IField CLB_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.CLB_DATE_OF_BIRTH); } }
        public IField CLB_CURR_PLACEMNT_DT { get { return GetElementByName<IField>(Names.CLB_CURR_PLACEMNT_DT); } }
        public IField CLB_CURRENT_PLACEMENT { get { return GetElementByName<IField>(Names.CLB_CURRENT_PLACEMENT); } }
        public IField CLB_CSEA_G_CAUSE_CODE { get { return GetElementByName<IField>(Names.CLB_CSEA_G_CAUSE_CODE); } }
        public IField CLB_CSEA_G_CAUSE_CL_DT { get { return GetElementByName<IField>(Names.CLB_CSEA_G_CAUSE_CL_DT); } }
        public IField CLB_CSEA_COOP_CODE { get { return GetElementByName<IField>(Names.CLB_CSEA_COOP_CODE); } }
        public IField CLB_COUNTY_CRT_COMMIT { get { return GetElementByName<IField>(Names.CLB_COUNTY_CRT_COMMIT); } }
        public IField CLB_MONTHS_ASST_AF { get { return GetElementByName<IField>(Names.CLB_MONTHS_ASST_AF); } }
        public IField CLB_MONTHS_ASST_GA { get { return GetElementByName<IField>(Names.CLB_MONTHS_ASST_GA); } }
        public IField CLB_MO_DEATH_DT { get { return GetElementByName<IField>(Names.CLB_MO_DEATH_DT); } }
        public IField CLB_MO_PRT_DT { get { return GetElementByName<IField>(Names.CLB_MO_PRT_DT); } }
        public IField CLB_FA_DEATH_DT { get { return GetElementByName<IField>(Names.CLB_FA_DEATH_DT); } }
        public IField CLB_FA_PRT_DT { get { return GetElementByName<IField>(Names.CLB_FA_PRT_DT); } }
        public IField CLB_MPI_ID { get { return GetElementByName<IField>(Names.CLB_MPI_ID); } }
        public IField CLB_MED_COVERAGE_IND { get { return GetElementByName<IField>(Names.CLB_MED_COVERAGE_IND); } }
        public IField CLB_INSURANCE_CARRIER { get { return GetElementByName<IField>(Names.CLB_INSURANCE_CARRIER); } }
        public IField CLB_INSURANCE_POLCY_NO { get { return GetElementByName<IField>(Names.CLB_INSURANCE_POLCY_NO); } }
        public IField CLB_SPOKEN_LANGUAGE { get { return GetElementByName<IField>(Names.CLB_SPOKEN_LANGUAGE); } }
        public IField CLB_WRITTEN_LANGUAGE { get { return GetElementByName<IField>(Names.CLB_WRITTEN_LANGUAGE); } }
        public IField CLB_STATE_OF_BIRTH { get { return GetElementByName<IField>(Names.CLB_STATE_OF_BIRTH); } }
        public IField CLB_SCHOOL_DISTRICT { get { return GetElementByName<IField>(Names.CLB_SCHOOL_DISTRICT); } }
        public IField CLB_ETHNIC_CLASS { get { return GetElementByName<IField>(Names.CLB_ETHNIC_CLASS); } }
        public IField CLB_SUFFIX_NAME { get { return GetElementByName<IField>(Names.CLB_SUFFIX_NAME); } }
        public IField CLB_EMPLOYER_NAME { get { return GetElementByName<IField>(Names.CLB_EMPLOYER_NAME); } }
        public IField CLB_EARNED_INCOME_AMT { get { return GetElementByName<IField>(Names.CLB_EARNED_INCOME_AMT); } }
        public IField CLB_INCOME_FREQUENCY { get { return GetElementByName<IField>(Names.CLB_INCOME_FREQUENCY); } }
        public IField CLB_KEES_ABMS_ID { get { return GetElementByName<IField>(Names.CLB_KEES_ABMS_ID); } }
        public IGroup CLB_EMAIL_ADDRESS { get { return GetElementByName<IGroup>(Names.CLB_EMAIL_ADDRESS); } }
        public IField CLB_EMAIL_ADDRESS_LEN { get { return GetElementByName<IField>(Names.CLB_EMAIL_ADDRESS_LEN); } }
        public IField CLB_EMAIL_ADDRESS_TEXT { get { return GetElementByName<IField>(Names.CLB_EMAIL_ADDRESS_TEXT); } }
        public IGroup CLB_OCCUPATION { get { return GetElementByName<IGroup>(Names.CLB_OCCUPATION); } }
        public IField CLB_OCCUPATION_LEN { get { return GetElementByName<IField>(Names.CLB_OCCUPATION_LEN); } }
        public IField CLB_OCCUPATION_TEXT { get { return GetElementByName<IField>(Names.CLB_OCCUPATION_TEXT); } }
        public IField CLB_CREATED_BY { get { return GetElementByName<IField>(Names.CLB_CREATED_BY); } }
        public IField CLB_CREATED_TIMESTAMP { get { return GetElementByName<IField>(Names.CLB_CREATED_TIMESTAMP); } }
        public IField CLB_LAST_MODIFIED_BY { get { return GetElementByName<IField>(Names.CLB_LAST_MODIFIED_BY); } }
        public IField CLB_LAST_MODIFIED_TMST { get { return GetElementByName<IField>(Names.CLB_LAST_MODIFIED_TMST); } }
        public IGroup DCLKSD_PARTICIPATION { get { return GetElementByName<IGroup>(Names.DCLKSD_PARTICIPATION); } }
        public IField PAR1_KESSEP_TIME_STMP { get { return GetElementByName<IField>(Names.PAR1_KESSEP_TIME_STMP); } }
        public IField PAR1_PART_END_DATE { get { return GetElementByName<IField>(Names.PAR1_PART_END_DATE); } }
        public IField PAR1_PART_START_DATE { get { return GetElementByName<IField>(Names.PAR1_PART_START_DATE); } }
        public IField PAR1_PART_CODE { get { return GetElementByName<IField>(Names.PAR1_PART_CODE); } }
        public IField PAR1_PROGRAM_END_DATE { get { return GetElementByName<IField>(Names.PAR1_PROGRAM_END_DATE); } }
        public IField PAR1_PROGRAM_SUBTYPE { get { return GetElementByName<IField>(Names.PAR1_PROGRAM_SUBTYPE); } }
        public IField PAR1_RELATIONSHIP { get { return GetElementByName<IField>(Names.PAR1_RELATIONSHIP); } }
        public IField PAR1_CREATED_BY { get { return GetElementByName<IField>(Names.PAR1_CREATED_BY); } }
        public IField PAR1_CREATED_TIMESTAMP { get { return GetElementByName<IField>(Names.PAR1_CREATED_TIMESTAMP); } }
        public IField PAR1_LAST_MODIFIED_BY { get { return GetElementByName<IField>(Names.PAR1_LAST_MODIFIED_BY); } }
        public IField PAR1_LAST_MODIFIED_TMST { get { return GetElementByName<IField>(Names.PAR1_LAST_MODIFIED_TMST); } }
        public IField PAR1_FK_CSB_CASE_NO { get { return GetElementByName<IField>(Names.PAR1_FK_CSB_CASE_NO); } }
        public IField PAR1_FK_PGB_PROG_TYPE { get { return GetElementByName<IField>(Names.PAR1_FK_PGB_PROG_TYPE); } }
        public IField PAR1_FK_CLB_CLIENT_NO { get { return GetElementByName<IField>(Names.PAR1_FK_CLB_CLIENT_NO); } }

        public CPY_SQLCA SQLCA = new CPY_SQLCA(null, true);
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.EXTERNAL_ACTION_BLOCK_WS, (EXTERNAL_ACTION_BLOCK_WS) =>
           {
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_ABEND_FIELDS, (MV_ABEND_FIELDS) =>
               {
                   MV_ABEND_FIELDS.CreateNewField(Names.MV_ABEND_TYPE, FieldType.String, 1)
                       .NewCheckField(Names.MV_ABEND_TYPE_NONE, SPACE)
                       .NewCheckField(Names.MV_ABEND_TYPE_ADABAS, "A")
                       ;
                   MV_ABEND_FIELDS.CreateNewGroup(Names.MV_ABEND_ADABAS, (MV_ABEND_ADABAS) =>
                   {
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_FILE_NUMBER, FieldType.UnsignedNumeric, 4);
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_FILE_ACTION, FieldType.String, 3);
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_RESPONSE_CD, FieldType.UnsignedNumeric, 4);
                   });
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_CCYYMMDD, FieldType.UnsignedNumeric, 8);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_COMPLIMENT_DATE, FieldType.UnsignedPackedDecimal, 9);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_KCC_PTR, FieldType.CompShort, 4);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_CLIENT_INFO_NUMBER, FieldType.String, 10);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CLIENT_NUMBER_X10, (MV_CLIENT_NUMBER_X10) =>
               {
                   MV_CLIENT_NUMBER_X10.CreateNewField(Names.MV_CLIENT_NUMBER, FieldType.UnsignedNumeric, 10);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_DATE_OF_BIRTH_SEX, (MV_DATE_OF_BIRTH_SEX) =>
               {
                   MV_DATE_OF_BIRTH_SEX.CreateNewField(Names.MV_DATE_OF_BIRTH, FieldType.String, 8);
                   MV_DATE_OF_BIRTH_SEX.CreateNewField(Names.MV_SEX, FieldType.String, 1);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_SSN_X9, (MV_SSN_X9) =>
               {
                   MV_SSN_X9.CreateNewField(Names.MV_SSN, FieldType.UnsignedNumeric, 9);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CLIENT_NAME, (MV_CLIENT_NAME) =>
               {
                   MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_SURNAME, FieldType.String, 17);
                   MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_GIVEN_NAME, FieldType.String, 12);
                   MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_INITIAL, FieldType.String, 1);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CLIENT_POINTER, (MV_CLIENT_POINTER) =>
               {
                   MV_CLIENT_POINTER.CreateNewField(Names.MV_CLIENT_ID, FieldType.String, 10);
                   MV_CLIENT_POINTER.CreateNewField(Names.MV_VERIFIED_SSN_FLAG, FieldType.String, 1);
                   MV_CLIENT_POINTER.CreateNewGroup(Names.MV_SYSTEM_PARTICIPATION, (MV_SYSTEM_PARTICIPATION) =>
                   {
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_AE, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_CSE, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_KANPAY, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_KSCARES, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_FACTS, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewFillerField(15, FillWith.Hashes);
                   });
               });
           });
            recordDef.CreateNewField(Names.WS_SWEXGCPR, FieldType.String, 8);

            recordDef.CreateNewGroup(Names.WS_PARM_AREA, (WS_PARM_AREA) =>
           {
               WS_PARM_AREA.CreateNewGroup(Names.WSI_INPUT_AREA, (WSI_INPUT_AREA) =>
               {
                   WSI_INPUT_AREA.CreateNewGroup(Names.WSI_CLIENT_KEY, (WSI_CLIENT_KEY) =>
                   {
                       WSI_CLIENT_KEY.CreateNewField(Names.WSI_CLIENT_NUMBER, FieldType.String, 10);
                       WSI_CLIENT_KEY.CreateNewGroup(Names.WSI_CLIENT_NAME, (WSI_CLIENT_NAME) =>
                       {
                           WSI_CLIENT_NAME.CreateNewField(Names.WSI_CLIENT_SURNAME, FieldType.String, 17);
                           WSI_CLIENT_NAME.CreateNewField(Names.WSI_CLIENT_GIVEN_NAME, FieldType.String, 12);
                           WSI_CLIENT_NAME.CreateNewField(Names.WSI_CLIENT_INITIALS, FieldType.String, 1);
                       });
                       WSI_CLIENT_KEY.CreateNewField(Names.WSI_CLIENT_SSN, FieldType.UnsignedNumeric, 9);
                   });
               });
               WS_PARM_AREA.CreateNewGroup(Names.WSO_OUTPUT_AREA, (WSO_OUTPUT_AREA) =>
               {
                   WSO_OUTPUT_AREA.CreateNewGroup(Names.WSO_CLIENT_POINTER, (WSO_CLIENT_POINTER) =>
                   {
                       WSO_CLIENT_POINTER.CreateNewField(Names.WSO_CLIENT_NUMBER, FieldType.String, 10);
                       WSO_CLIENT_POINTER.CreateNewField(Names.WSO_VERIFIED_SSN_FLAG, FieldType.String, 1);
                       WSO_CLIENT_POINTER.CreateNewGroup(Names.WSO_SYSTEM_PARTICIPATION, (WSO_SYSTEM_PARTICIPATION) =>
                       {
                           WSO_SYSTEM_PARTICIPATION.CreateNewField(Names.WSO_SYSTEM_AE, FieldType.String, 1);
                           WSO_SYSTEM_PARTICIPATION.CreateNewField(Names.WSO_SYSTEM_CS, FieldType.String, 1);
                           WSO_SYSTEM_PARTICIPATION.CreateNewField(Names.WSO_SYSTEM_KA, FieldType.String, 1);
                           WSO_SYSTEM_PARTICIPATION.CreateNewField(Names.WSO_SYSTEM_KS, FieldType.String, 1);
                           WSO_SYSTEM_PARTICIPATION.CreateNewField(Names.WSO_SYSTEM_FA, FieldType.String, 1);
                           WSO_SYSTEM_PARTICIPATION.CreateNewFillerField(15, FillWith.Hashes);
                       });
                   });
                   WSO_OUTPUT_AREA.CreateNewGroup(Names.WSO_ABEND_FIELDS, (WSO_ABEND_FIELDS) =>
                   {
                       WSO_ABEND_FIELDS.CreateNewField(Names.WSO_ABEND_TYPE, FieldType.String, 1);
                       WSO_ABEND_FIELDS.CreateNewGroup(Names.WSO_ABEND_ADABAS, (WSO_ABEND_ADABAS) =>
                       {
                           WSO_ABEND_ADABAS.CreateNewField(Names.WSO_ADA_FILE_NUMBER, FieldType.UnsignedNumeric, 4);
                           WSO_ABEND_ADABAS.CreateNewField(Names.WSO_ADA_FILE_ACTION, FieldType.String, 3);
                           WSO_ABEND_ADABAS.CreateNewField(Names.WSO_ADA_RESPONSE_CD, FieldType.UnsignedNumeric, 4);
                       });
                       WSO_ABEND_FIELDS.CreateNewGroup(Names.WSO_ABEND_CICS, (WSO_ABEND_CICS) =>
                       {
                           WSO_ABEND_CICS.CreateNewField(Names.WSO_CICS_RESOURCE_NM, FieldType.String, 8);
                           WSO_ABEND_CICS.CreateNewField(Names.WSO_CICS_FUNCTION_CD, FieldType.String, 2);
                           WSO_ABEND_CICS.CreateNewField(Names.WSO_CICS_RESPONSE_CD, FieldType.String, 6);
                       });
                   });
                   WSO_OUTPUT_AREA.CreateNewGroup(Names.WSO_RETURN_ERRORS, (WSO_RETURN_ERRORS) =>
                   {
                       WSO_RETURN_ERRORS.CreateNewField(Names.WSO_RETURN_PROG, FieldType.String, 10);
                       WSO_RETURN_ERRORS.CreateNewField(Names.WSO_RETURN_MSG, FieldType.String, 60);
                       WSO_RETURN_ERRORS.CreateNewGroup(Names.WSO_RETURN_VALUE, (WSO_RETURN_VALUE) =>
                       {
                           WSO_RETURN_VALUE.CreateNewField(Names.WSO_RETURN_SQLCODE, FieldType.SignedNumeric, 9);
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.WS_MISC, (WS_MISC) =>
           {
               WS_MISC.CreateNewGroup(Names.WS_MSG_X, (WS_MSG_X) =>
               {
                   WS_MSG_X.CreateNewField(Names.WS_MSG_PROG, FieldType.String, 10);
                   IGroup WS_MSG_1_local = (IGroup)WS_MSG_X.CreateNewGroup(Names.WS_MSG_1, (WS_MSG_1) =>
                   {
                       WS_MSG_1.CreateNewField(Names.WS_MSG, FieldType.String, 50);
                       WS_MSG_1.CreateNewGroup(Names.WS_MSG_CODE, (WS_MSG_CODE) =>
                       {
                           WS_MSG_CODE.CreateNewField(Names.WS_MSG_SQLCODE, FieldType.NumericEdited, "---------9", 10);
                       });
                   });
                   WS_MSG_X.CreateNewGroupRedefine(Names.WS_MSG_2, WS_MSG_1_local, (WS_MSG_2) =>
                   {
                       WS_MSG_2.CreateNewField(Names.WS_MSG_FIELD, FieldType.String, 25);
                       WS_MSG_2.CreateNewField(Names.WS_MSG_VALUE, FieldType.String, 35);
                   });
               });
           });

            recordDef.CreateNewGroup(Names.DBK1_KEY_FIELDS, (DBK1_KEY_FIELDS) =>
           {
               DBK1_KEY_FIELDS.CreateNewField(Names.DBK1_CLIENT_NUMBER, FieldType.String, 10);
               DBK1_KEY_FIELDS.CreateNewField(Names.DBK1_CLIENT_NAME, FieldType.String, 30);
               DBK1_KEY_FIELDS.CreateNewField(Names.DBK1_COUNT, FieldType.CompInt, 9);
               IGroup DBK1_CCYYMMDD_X_local = (IGroup)DBK1_KEY_FIELDS.CreateNewGroup(Names.DBK1_CCYYMMDD_X, (DBK1_CCYYMMDD_X) =>
               {
                   DBK1_CCYYMMDD_X.CreateNewField(Names.DBK1_CCYY, FieldType.UnsignedNumeric, 4);
                   DBK1_CCYYMMDD_X.CreateNewFillerField(FieldType.String, 1, "-");
                   DBK1_CCYYMMDD_X.CreateNewField(Names.DBK1_MM, FieldType.UnsignedNumeric, 2);
                   DBK1_CCYYMMDD_X.CreateNewFillerField(FieldType.String, 1, "-");
                   DBK1_CCYYMMDD_X.CreateNewField(Names.DBK1_DD, FieldType.UnsignedNumeric, 2);
               });
               DBK1_KEY_FIELDS.CreateNewFieldRedefine(Names.DBK1_CCYYMMDD, FieldType.String, DBK1_CCYYMMDD_X_local, 10);
           });

            recordDef.CreateNewGroup(Names.DCLKSD_CLIENT_BASIC, (DCLKSD_CLIENT_BASIC) =>
           {
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_NUMBER, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_GIVEN_NAME, FieldType.String, 12);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_INITIALS, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_SURNAME, FieldType.String, 17);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CIS_REPL_IND, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_WORK_PHONE, FieldType.PackedDecimal, 10, null, 0);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_SSN, FieldType.CompInt, 9);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_GENDER, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_PARENT_RGHTS_SEV, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_PRNT_RGHTS_SEV_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_LEGAL_STATUS, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_INSURANCE_CODE, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_INITIAL_CUSTODY_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_HOME_PHONE, FieldType.PackedDecimal, 10, null, 0);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_DATE_OF_BIRTH, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CURR_PLACEMNT_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CURRENT_PLACEMENT, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CSEA_G_CAUSE_CODE, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CSEA_G_CAUSE_CL_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CSEA_COOP_CODE, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_COUNTY_CRT_COMMIT, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MONTHS_ASST_AF, FieldType.CompInt, 9);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MONTHS_ASST_GA, FieldType.CompInt, 9);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MO_DEATH_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MO_PRT_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_FA_DEATH_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_FA_PRT_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MPI_ID, FieldType.String, 38);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MED_COVERAGE_IND, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_INSURANCE_CARRIER, FieldType.String, 30);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_INSURANCE_POLCY_NO, FieldType.String, 30);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_SPOKEN_LANGUAGE, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_WRITTEN_LANGUAGE, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_STATE_OF_BIRTH, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_SCHOOL_DISTRICT, FieldType.String, 3);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_ETHNIC_CLASS, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_SUFFIX_NAME, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_EMPLOYER_NAME, FieldType.String, 28);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_EARNED_INCOME_AMT, FieldType.PackedDecimal, 8, null, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_INCOME_FREQUENCY, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_KEES_ABMS_ID, FieldType.String, 38);
               DCLKSD_CLIENT_BASIC.CreateNewGroup(Names.CLB_EMAIL_ADDRESS, (CLB_EMAIL_ADDRESS) =>
               {
                   CLB_EMAIL_ADDRESS.CreateNewField(Names.CLB_EMAIL_ADDRESS_LEN, FieldType.CompShort, 4);
                   CLB_EMAIL_ADDRESS.CreateNewField(Names.CLB_EMAIL_ADDRESS_TEXT, FieldType.String, 100);
               });
               DCLKSD_CLIENT_BASIC.CreateNewGroup(Names.CLB_OCCUPATION, (CLB_OCCUPATION) =>
               {
                   CLB_OCCUPATION.CreateNewField(Names.CLB_OCCUPATION_LEN, FieldType.CompShort, 4);
                   CLB_OCCUPATION.CreateNewField(Names.CLB_OCCUPATION_TEXT, FieldType.String, 100);
               });
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CREATED_BY, FieldType.String, 8);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CREATED_TIMESTAMP, FieldType.String, 26);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_LAST_MODIFIED_BY, FieldType.String, 8);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_LAST_MODIFIED_TMST, FieldType.String, 26);
           });

            recordDef.CreateNewGroup(Names.DCLKSD_PARTICIPATION, (DCLKSD_PARTICIPATION) =>
           {
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_KESSEP_TIME_STMP, FieldType.String, 20);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_PART_END_DATE, FieldType.String, 10);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_PART_START_DATE, FieldType.String, 10);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_PART_CODE, FieldType.String, 2);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_PROGRAM_END_DATE, FieldType.String, 10);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_PROGRAM_SUBTYPE, FieldType.String, 2);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_RELATIONSHIP, FieldType.String, 2);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_CREATED_BY, FieldType.String, 8);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_CREATED_TIMESTAMP, FieldType.String, 26);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_LAST_MODIFIED_BY, FieldType.String, 8);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_LAST_MODIFIED_TMST, FieldType.String, 26);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_FK_CSB_CASE_NO, FieldType.String, 8);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_FK_PGB_PROG_TYPE, FieldType.String, 2);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_FK_CLB_CLIENT_NO, FieldType.String, 10);
           });


        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            SQLCA.InitializeWithLowValues();
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXGR17_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXGR17_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string GLOBDATA = "GLOBDATA";
            internal const string PSMGR_IEF_COMMAND = "PSMGR_IEF_COMMAND";
            internal const string PSMGR_IEF_COMMAND_1 = "PSMGR_IEF_COMMAND_1";
            internal const string PSMGR_IEF_COMMAND_2 = "PSMGR_IEF_COMMAND_2";
            internal const string PSMGR_IEF_TRANCODE = "PSMGR_IEF_TRANCODE";
            internal const string PSMGR_EXIT_STATE = "PSMGR_EXIT_STATE";
            internal const string PSMGR_EXIT_INFOMSG = "PSMGR_EXIT_INFOMSG";
            internal const string PSMGR_USER_ID = "PSMGR_USER_ID";
            internal const string PSMGR_TERMINAL_ID = "PSMGR_TERMINAL_ID";
            internal const string PSMGR_PRINTER_ID = "PSMGR_PRINTER_ID";
            internal const string PSMGR_CURRENT_DATE = "PSMGR_CURRENT_DATE";
            internal const string PSMGR_CURRENT_TIME = "PSMGR_CURRENT_TIME";
            internal const string PSMGR_RUNTIME_TYPE = "PSMGR_RUNTIME_TYPE";
            internal const string PSMGR_FUNCTION_DATA = "PSMGR_FUNCTION_DATA";
            internal const string PSMGR_FUNC_ERRMSG = "PSMGR_FUNC_ERRMSG";
            internal const string PSMGR_FUNC_NAME = "PSMGR_FUNC_NAME";
            internal const string PSMGR_FUNC_IN_DATE = "PSMGR_FUNC_IN_DATE";
            internal const string PSMGR_FUNC_IN_DDURA = "PSMGR_FUNC_IN_DDURA";
            internal const string DDURA_YEAR = "DDURA_YEAR";
            internal const string DDURA_Y_MISS = "DDURA_Y_MISS";
            internal const string DDURA_YYYY = "DDURA_YYYY";
            internal const string DDURA_MONTH = "DDURA_MONTH";
            internal const string DDURA_M_MISS = "DDURA_M_MISS";
            internal const string DDURA_MM = "DDURA_MM";
            internal const string DDURA_DAY = "DDURA_DAY";
            internal const string DDURA_D_MISS = "DDURA_D_MISS";
            internal const string DDURA_DD = "DDURA_DD";
            internal const string PSMGR_FUNC_OUT_DATE = "PSMGR_FUNC_OUT_DATE";
            internal const string PSMGR_FUNC_IN_TIME = "PSMGR_FUNC_IN_TIME";
            internal const string PSMGR_FUNC_IN_TDURA = "PSMGR_FUNC_IN_TDURA";
            internal const string TDURA_HOUR = "TDURA_HOUR";
            internal const string TDURA_H_MISS = "TDURA_H_MISS";
            internal const string TDURA_HH = "TDURA_HH";
            internal const string TDURA_MINUTE = "TDURA_MINUTE";
            internal const string TDURA_M_MISS = "TDURA_M_MISS";
            internal const string TDURA_MM = "TDURA_MM";
            internal const string TDURA_SECOND = "TDURA_SECOND";
            internal const string TDURA_S_MISS = "TDURA_S_MISS";
            internal const string TDURA_SS = "TDURA_SS";
            internal const string PSMGR_FUNC_OUT_TIME = "PSMGR_FUNC_OUT_TIME";
            internal const string PSMGR_IEF_NEXTTRAN = "PSMGR_IEF_NEXTTRAN";
            internal const string PSMGR_EXIT_MSGTYPE = "PSMGR_EXIT_MSGTYPE";
            internal const string PSMGR_IEF_DEBUG_FLAGS = "PSMGR_IEF_DEBUG_FLAGS";
            internal const string PSMGR_IEF_DEBUG = "PSMGR_IEF_DEBUG";
            internal const string PSMGR_DEBUG_ON = "PSMGR_DEBUG_ON";
            internal const string PSMGR_ENVIRONMENT_DATA = "PSMGR_ENVIRONMENT_DATA";
            internal const string PSMGR_PCB_CNT = "PSMGR_PCB_CNT";
            internal const string PSMGR_PCB_ENTRY = "PSMGR_PCB_ENTRY";
            internal const string PSMGR_PCB_ADR = "PSMGR_PCB_ADR";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string PSMGR_ERROR_DATA = "PSMGR_ERROR_DATA";
            internal const string ERROR_ACTION_NAME = "ERROR_ACTION_NAME";
            internal const string ERROR_ENCOUNTERED_SW = "ERROR_ENCOUNTERED_SW";
            internal const string VIEW_OVERFLOW_SW = "VIEW_OVERFLOW_SW";
            internal const string PSMGR_DASG_DATA = "PSMGR_DASG_DATA";
            internal const string ACTION_ID_X = "ACTION_ID_X";
            internal const string ACTION_ID = "ACTION_ID";
            internal const string ATTRIBUTE_ID_X = "ATTRIBUTE_ID_X";
            internal const string ATTRIBUTE_ID = "ATTRIBUTE_ID";
            internal const string STATUS_FLAG = "STATUS_FLAG";
            internal const string WHEN_SUCCESSFUL_SF = "WHEN_SUCCESSFUL_SF";
            internal const string FATAL_ERROR_SF = "FATAL_ERROR_SF";
            internal const string DB_ERROR_SF = "DB_ERROR_SF";
            internal const string ABORT_SHOW_DBMS_MSG_SF = "ABORT_SHOW_DBMS_MSG_SF";
            internal const string ABORT_SHOW_USER_MSG_SF = "ABORT_SHOW_USER_MSG_SF";
            internal const string RETRY_TRAN_REQUESTED_SF = "RETRY_TRAN_REQUESTED_SF";
            internal const string PSTEP_USE_FAILURE = "PSTEP_USE_FAILURE";
            internal const string ASYNC_WHEN_AVAILABLE_SF = "ASYNC_WHEN_AVAILABLE_SF";
            internal const string ASYNC_WHEN_ACCEPTED_SF = "ASYNC_WHEN_ACCEPTED_SF";
            internal const string ASYNC_WHEN_NOT_ACCEPTED_SF = "ASYNC_WHEN_NOT_ACCEPTED_SF";
            internal const string ASYNC_WHEN_INVALID_ID_SF = "ASYNC_WHEN_INVALID_ID_SF";
            internal const string ASYNC_WHEN_PENDING_SF = "ASYNC_WHEN_PENDING_SF";
            internal const string ASYNC_WHEN_SERVER_ERROR_SF = "ASYNC_WHEN_SERVER_ERROR_SF";
            internal const string ASYNC_WHEN_COMM_ERROR_SF = "ASYNC_WHEN_COMM_ERROR_SF";
            internal const string LAST_STATUS = "LAST_STATUS";
            internal const string DB_ERROR_FL_LS = "DB_ERROR_FL_LS";
            internal const string DB_DEADLOCK_TIMOUT_FL_LS = "DB_DEADLOCK_TIMOUT_FL_LS";
            internal const string DUPLICATE_FOUND_FL_LS = "DUPLICATE_FOUND_FL_LS";
            internal const string INVALID_DATAA_FL_LS = "INVALID_DATAA_FL_LS";
            internal const string INVALID_DATAB_TYPE_FL_LS = "INVALID_DATAB_TYPE_FL_LS";
            internal const string INVALID_DATAB_PERM_FL_LS = "INVALID_DATAB_PERM_FL_LS";
            internal const string FATAL_ERROR_FL_LS = "FATAL_ERROR_FL_LS";
            internal const string NOT_FOUND_FL_LS = "NOT_FOUND_FL_LS";
            internal const string NOT_UNIQUE_FL_LS = "NOT_UNIQUE_FL_LS";
            internal const string IEF_FUNCTION_ERROR_FL_LS = "IEF_FUNCTION_ERROR_FL_LS";
            internal const string IEF_DURATION_ERROR_FL_LS = "IEF_DURATION_ERROR_FL_LS";
            internal const string USED_PSTEP_NOT_FOUND = "USED_PSTEP_NOT_FOUND";
            internal const string USED_PSTEP_ROUTING_ERR = "USED_PSTEP_ROUTING_ERR";
            internal const string USED_PSTEP_SND_FMT_ERR = "USED_PSTEP_SND_FMT_ERR";
            internal const string USED_PSTEP_ENCRYPT_ERR = "USED_PSTEP_ENCRYPT_ERR";
            internal const string USED_PSTEP_SND_BFR_ERR = "USED_PSTEP_SND_BFR_ERR";
            internal const string USED_PSTEP_RCV_BFR_ERR = "USED_PSTEP_RCV_BFR_ERR";
            internal const string USED_PSTEP_RCV_FMT_ERR = "USED_PSTEP_RCV_FMT_ERR";
            internal const string USED_PSTEP_TIRSECR_ERR = "USED_PSTEP_TIRSECR_ERR";
            internal const string USED_PSTEP_TOKEN_ERR = "USED_PSTEP_TOKEN_ERR";
            internal const string USED_PSTEP_SEND_MAX_SIZE = "USED_PSTEP_SEND_MAX_SIZE";
            internal const string USED_PSTEP_SECG_ERR = "USED_PSTEP_SECG_ERR";
            internal const string USED_PSTEP_ALLOC_ERR = "USED_PSTEP_ALLOC_ERR";
            internal const string USED_PSTEP_CONNECT_ERR = "USED_PSTEP_CONNECT_ERR";
            internal const string USED_PSTEP_XERR = "USED_PSTEP_XERR";
            internal const string USED_PSTEP_RCV_UA_ERR = "USED_PSTEP_RCV_UA_ERR";
            internal const string USED_PSTEP_RCV_ES_ERR = "USED_PSTEP_RCV_ES_ERR";
            internal const string USED_PSTEP_XFAL = "USED_PSTEP_XFAL";
            internal const string USED_PSTEP_SETOA_ERR = "USED_PSTEP_SETOA_ERR";
            internal const string USED_PSTEP_RCV_VIEW_ERR = "USED_PSTEP_RCV_VIEW_ERR";
            internal const string USED_PSTEP_DECRYPT_ERR = "USED_PSTEP_DECRYPT_ERR";
            internal const string SAVE_SQLCA = "SAVE_SQLCA";
            internal const string PSMGR_DEBUG_DATA = "PSMGR_DEBUG_DATA";
            internal const string PSMGR_TRACE_ADR = "PSMGR_TRACE_ADR";
            internal const string LAST_STATEMENT_X = "LAST_STATEMENT_X";
            internal const string LAST_STATEMENT_NUM = "LAST_STATEMENT_NUM";
            internal const string CUR_AB_ID = "CUR_AB_ID";
            internal const string CUR_AB_NAME = "CUR_AB_NAME";
            internal const string PSMGR_TIRDATE_SAVEAREA = "PSMGR_TIRDATE_SAVEAREA";
            internal const string PSMGR_TIRDATE_CMCB = "PSMGR_TIRDATE_CMCB";
            internal const string PSMGR_TIRDATE_DATE = "PSMGR_TIRDATE_DATE";
            internal const string PSMGR_TIRDATE_TIME = "PSMGR_TIRDATE_TIME";
            internal const string PSMGR_TIRDATE_INC = "PSMGR_TIRDATE_INC";
            internal const string PSMGR_TIRDATE_RC = "PSMGR_TIRDATE_RC";
            internal const string PSMGR_TIRDATE_OK = "PSMGR_TIRDATE_OK";
            internal const string PSMGR_TIRDATE_WARNING = "PSMGR_TIRDATE_WARNING";
            internal const string PSMGR_TIRDATE_ERROR = "PSMGR_TIRDATE_ERROR";
            internal const string PSMGR_TIRDATE_REQ = "PSMGR_TIRDATE_REQ";
            internal const string PSMGR_TIRDATE_DATEF = "PSMGR_TIRDATE_DATEF";
            internal const string PSMGR_TIRDATE_TIMEF = "PSMGR_TIRDATE_TIMEF";
            internal const string PSMGR_TIRDATE_RETMSG = "PSMGR_TIRDATE_RETMSG";
            internal const string PSMGR_TIRDATE_TSTAMP = "PSMGR_TIRDATE_TSTAMP";
            internal const string PSMGR_TIRDATE_DATE_Z = "PSMGR_TIRDATE_DATE_Z";
            internal const string PSMGR_TIRDATE_TIME_Z = "PSMGR_TIRDATE_TIME_Z";
            internal const string PSMGR_TIRDATE_SKIP_VAL = "PSMGR_TIRDATE_SKIP_VAL";
            internal const string PSMGR_ROLLBACK_RQSTED = "PSMGR_ROLLBACK_RQSTED";
            internal const string ROLLBACK_RQSTED = "ROLLBACK_RQSTED";
            internal const string ABEND_RQSTED = "ABEND_RQSTED";
            internal const string TERMINATE_RQSTED = "TERMINATE_RQSTED";
            internal const string TIRTRCE_SAVE_AREA = "TIRTRCE_SAVE_AREA";
            internal const string TOP_INDX = "TOP_INDX";
            internal const string BOTTOM_INDX = "BOTTOM_INDX";
            internal const string END_INDX = "END_INDX";
            internal const string LAST_STMT = "LAST_STMT";
            internal const string TOP_OF_CALL = "TOP_OF_CALL";
            internal const string TRACE_BREAK_POINT = "TRACE_BREAK_POINT";
            internal const string TRACE_BREAK_POINT_STATUS = "TRACE_BREAK_POINT_STATUS";
            internal const string LAST_AB_NAME = "LAST_AB_NAME";
            internal const string COLOR = "COLOR";
            internal const string COLORT = "COLORT";
            internal const string HILITE = "HILITE";
            internal const string TRACE_ON_OFF = "TRACE_ON_OFF";
            internal const string CASCADE_DELETE_FLAGS = "CASCADE_DELETE_FLAGS";
            internal const string V1PRESENT = "V1PRESENT";
            internal const string V2PRESENT = "V2PRESENT";
            internal const string CASCADE1 = "CASCADE1";
            internal const string CASCADE2 = "CASCADE2";
            internal const string PROCESSQ_FLAG = "PROCESSQ_FLAG";
            internal const string PSMGR_ACTIVE_DIALECT = "PSMGR_ACTIVE_DIALECT";
            internal const string DIALECT_NAME = "DIALECT_NAME";
            internal const string MESSAGE_TABLE_NAME = "MESSAGE_TABLE_NAME";
            internal const string TRANSLATE_TABLE_NAME = "TRANSLATE_TABLE_NAME";
            internal const string PSMGR_FUNCTION_DATA_EXT = "PSMGR_FUNCTION_DATA_EXT";
            internal const string PSMGR_FUNC_IN_TIMESTAMP = "PSMGR_FUNC_IN_TIMESTAMP";
            internal const string PSMGR_FUNC_IN_TSDURA = "PSMGR_FUNC_IN_TSDURA";
            internal const string TSDURA_MICROSECOND = "TSDURA_MICROSECOND";
            internal const string TSDURA_M_MISS = "TSDURA_M_MISS";
            internal const string TSDURA_MS = "TSDURA_MS";
            internal const string PSMGR_FUNC_OUT_TIMESTAMP = "PSMGR_FUNC_OUT_TIMESTAMP";
            internal const string PSMGR_CICS_FAIL_SW = "PSMGR_CICS_FAIL_SW";
            internal const string INHIBIT_CICS_RECEIVE = "INHIBIT_CICS_RECEIVE";
            internal const string CLIENT_USERID = "CLIENT_USERID";
            internal const string CLIENT_PASSWORD = "CLIENT_PASSWORD";
            internal const string LOAD_MODULE_NAME = "LOAD_MODULE_NAME";
            internal const string INSTRUMENT_CODE = "INSTRUMENT_CODE";
            internal const string TX_RETRY_LIMIT = "TX_RETRY_LIMIT";
            internal const string TX_TIMEOUT = "TX_TIMEOUT";
            internal const string PSMGR_EXTRA_ERRINFO = "PSMGR_EXTRA_ERRINFO";
            internal const string ERRINFO_BUF_SIZE = "ERRINFO_BUF_SIZE";
            internal const string ERRINFO_MSG_SIZE = "ERRINFO_MSG_SIZE";
            internal const string ERRINFO_BUF_ADDR = "ERRINFO_BUF_ADDR";
            internal const string TX_RETRY_COUNT = "TX_RETRY_COUNT";
            internal const string TX_USER_RETRY_ALLOWED = "TX_USER_RETRY_ALLOWED";
            internal const string PSMGR_PSTEP_USE_PTRS = "PSMGR_PSTEP_USE_PTRS";
            internal const string PSTEP_FAIL_MSG_PTR = "PSTEP_FAIL_MSG_PTR";
            internal const string PSTEP_GURB_REST_PTR = "PSTEP_GURB_REST_PTR";
            internal const string PSTEP_LIPS_PTR = "PSTEP_LIPS_PTR";
            internal const string PSTEP_TBL_PTR = "PSTEP_TBL_PTR";
            internal const string PSTEP_DDF_PTR = "PSTEP_DDF_PTR";
            internal const string PSTEP_COMM_ID = "PSTEP_COMM_ID";
            internal const string PSTEP_APPL_LIST_PTR = "PSTEP_APPL_LIST_PTR";
            internal const string PSTEP_CURR_PST_PTR = "PSTEP_CURR_PST_PTR";
            internal const string PSMGR_PSTEP_USE_SYSFLDS = "PSMGR_PSTEP_USE_SYSFLDS";
            internal const string PSMGR_EIBERRCD = "PSMGR_EIBERRCD";
            internal const string PSMGR_EIBFN = "PSMGR_EIBFN";
            internal const string PSMGR_EIBRESP = "PSMGR_EIBRESP";
            internal const string PSMGR_EIBRESP2 = "PSMGR_EIBRESP2";
            internal const string PSMGR_ASYNC_DATA = "PSMGR_ASYNC_DATA";
            internal const string ASYNC_MODE = "ASYNC_MODE";
            internal const string FLOW_TYPE_SYNC = "FLOW_TYPE_SYNC";
            internal const string FLOW_TYPE_ASYNC = "FLOW_TYPE_ASYNC";
            internal const string FLOW_TYPE_NO_RESPONSE = "FLOW_TYPE_NO_RESPONSE";
            internal const string ASYNC_FLOW_STATUS_TABLE_PTR = "ASYNC_FLOW_STATUS_TABLE_PTR";
            internal const string ASYNC_SERVER_LOC_TABLE_PTR = "ASYNC_SERVER_LOC_TABLE_PTR";
            internal const string IMPORT_0001EV = "IMPORT_0001EV";
            internal const string CSE_PERSONS_WORK_SET_0001ET = "CSE_PERSONS_WORK_SET_0001ET";
            internal const string NUMBER_0001AS = "NUMBER_0001AS";
            internal const string NUMBER_0001 = "NUMBER_0001";
            internal const string NUMBER_0001XX = "NUMBER_0001XX";
            internal const string IMPORT_CURRENT_0002EV = "IMPORT_CURRENT_0002EV";
            internal const string DATE_WORK_AREA_0002ET = "DATE_WORK_AREA_0002ET";
            internal const string DATE_0002AS = "DATE_0002AS";
            internal const string DATE_0002 = "DATE_0002";
            internal const string DATE_0002XX = "DATE_0002XX";
            internal const string EXPORT_0003EV = "EXPORT_0003EV";
            internal const string CSE_PERSONS_WORK_SET_0003ET = "CSE_PERSONS_WORK_SET_0003ET";
            internal const string SEX_0003AS = "SEX_0003AS";
            internal const string SEX_0003 = "SEX_0003";
            internal const string SEX_0003XX = "SEX_0003XX";
            internal const string DOB_0003AS = "DOB_0003AS";
            internal const string DOB_0003 = "DOB_0003";
            internal const string DOB_0003XX = "DOB_0003XX";
            internal const string SSN_0003AS = "SSN_0003AS";
            internal const string SSN_0003 = "SSN_0003";
            internal const string SSN_0003XX = "SSN_0003XX";
            internal const string FIRST_NAME_0003AS = "FIRST_NAME_0003AS";
            internal const string FIRST_NAME_0003 = "FIRST_NAME_0003";
            internal const string FIRST_NAME_0003XX = "FIRST_NAME_0003XX";
            internal const string MIDDLE_INITIAL_0003AS = "MIDDLE_INITIAL_0003AS";
            internal const string MIDDLE_INITIAL_0003 = "MIDDLE_INITIAL_0003";
            internal const string MIDDLE_INITIAL_0003XX = "MIDDLE_INITIAL_0003XX";
            internal const string LAST_NAME_0003AS = "LAST_NAME_0003AS";
            internal const string LAST_NAME_0003 = "LAST_NAME_0003";
            internal const string LAST_NAME_0003XX = "LAST_NAME_0003XX";
            internal const string NUMBER_0003AS = "NUMBER_0003AS";
            internal const string NUMBER_0003 = "NUMBER_0003";
            internal const string NUMBER_0003XX = "NUMBER_0003XX";
            internal const string REPLICATION_INDICATOR_0003AS = "REPLICATION_INDICATOR_0003AS";
            internal const string REPLICATION_INDICATOR_0003 = "REPLICATION_INDICATOR_0003";
            internal const string REPLICATION_INDICATOR_0003XX = "REPLICATION_INDICATOR_0003XX";
            internal const string EXPORT_0004EV = "EXPORT_0004EV";
            internal const string ABEND_DATA_0004ET = "ABEND_DATA_0004ET";
            internal const string TYPE_0004AS = "TYPE_0004AS";
            internal const string TYPE_0004 = "TYPE_0004";
            internal const string TYPE_0004XX = "TYPE_0004XX";
            internal const string ADABAS_FILE_NUMBER_0004AS = "ADABAS_FILE_NUMBER_0004AS";
            internal const string ADABAS_FILE_NUMBER_0004 = "ADABAS_FILE_NUMBER_0004";
            internal const string ADABAS_FILE_NUMBER_0004XX = "ADABAS_FILE_NUMBER_0004XX";
            internal const string ADABAS_FILE_ACTION_0004AS = "ADABAS_FILE_ACTION_0004AS";
            internal const string ADABAS_FILE_ACTION_0004 = "ADABAS_FILE_ACTION_0004";
            internal const string ADABAS_FILE_ACTION_0004XX = "ADABAS_FILE_ACTION_0004XX";
            internal const string ADABAS_RESPONSE_CD_0004AS = "ADABAS_RESPONSE_CD_0004AS";
            internal const string ADABAS_RESPONSE_CD_0004 = "ADABAS_RESPONSE_CD_0004";
            internal const string ADABAS_RESPONSE_CD_0004XX = "ADABAS_RESPONSE_CD_0004XX";
            internal const string EXPORT_AE_0005EV = "EXPORT_AE_0005EV";
            internal const string IEF_SUPPLIED_0005ET = "IEF_SUPPLIED_0005ET";
            internal const string FLAG_0005AS = "FLAG_0005AS";
            internal const string FLAG_0005 = "FLAG_0005";
            internal const string FLAG_0005XX = "FLAG_0005XX";
            internal const string EXPORT_CSE_0006EV = "EXPORT_CSE_0006EV";
            internal const string IEF_SUPPLIED_0006ET = "IEF_SUPPLIED_0006ET";
            internal const string FLAG_0006AS = "FLAG_0006AS";
            internal const string FLAG_0006 = "FLAG_0006";
            internal const string FLAG_0006XX = "FLAG_0006XX";
            internal const string EXPORT_KANPAY_0007EV = "EXPORT_KANPAY_0007EV";
            internal const string IEF_SUPPLIED_0007ET = "IEF_SUPPLIED_0007ET";
            internal const string FLAG_0007AS = "FLAG_0007AS";
            internal const string FLAG_0007 = "FLAG_0007";
            internal const string FLAG_0007XX = "FLAG_0007XX";
            internal const string EXPORT_KSCARES_0008EV = "EXPORT_KSCARES_0008EV";
            internal const string IEF_SUPPLIED_0008ET = "IEF_SUPPLIED_0008ET";
            internal const string FLAG_0008AS = "FLAG_0008AS";
            internal const string FLAG_0008 = "FLAG_0008";
            internal const string FLAG_0008XX = "FLAG_0008XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup GLOBDATA { get { return GetElementByName<IGroup>(Names.GLOBDATA); } }
        public IGroup PSMGR_IEF_COMMAND { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_COMMAND); } }
        public IField PSMGR_IEF_COMMAND_1 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_1); } }
        public IField PSMGR_IEF_COMMAND_2 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_2); } }
        public IField PSMGR_IEF_TRANCODE { get { return GetElementByName<IField>(Names.PSMGR_IEF_TRANCODE); } }
        public IField PSMGR_EXIT_STATE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_STATE); } }
        public IField PSMGR_EXIT_INFOMSG { get { return GetElementByName<IField>(Names.PSMGR_EXIT_INFOMSG); } }
        public IField PSMGR_USER_ID { get { return GetElementByName<IField>(Names.PSMGR_USER_ID); } }
        public IField PSMGR_TERMINAL_ID { get { return GetElementByName<IField>(Names.PSMGR_TERMINAL_ID); } }
        public IField PSMGR_PRINTER_ID { get { return GetElementByName<IField>(Names.PSMGR_PRINTER_ID); } }
        public IField PSMGR_CURRENT_DATE { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_DATE); } }
        public IField PSMGR_CURRENT_TIME { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_TIME); } }
        public IField PSMGR_RUNTIME_TYPE { get { return GetElementByName<IField>(Names.PSMGR_RUNTIME_TYPE); } }
        public IGroup PSMGR_FUNCTION_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA); } }
        public IField PSMGR_FUNC_ERRMSG { get { return GetElementByName<IField>(Names.PSMGR_FUNC_ERRMSG); } }
        public IField PSMGR_FUNC_NAME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_NAME); } }
        public IField PSMGR_FUNC_IN_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_DATE); } }
        public IGroup PSMGR_FUNC_IN_DDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_DDURA); } }
        public IGroup DDURA_YEAR { get { return GetElementByName<IGroup>(Names.DDURA_YEAR); } }
        public IField DDURA_Y_MISS { get { return GetElementByName<IField>(Names.DDURA_Y_MISS); } }
        public IField DDURA_YYYY { get { return GetElementByName<IField>(Names.DDURA_YYYY); } }
        public IGroup DDURA_MONTH { get { return GetElementByName<IGroup>(Names.DDURA_MONTH); } }
        public IField DDURA_M_MISS { get { return GetElementByName<IField>(Names.DDURA_M_MISS); } }
        public IField DDURA_MM { get { return GetElementByName<IField>(Names.DDURA_MM); } }
        public IGroup DDURA_DAY { get { return GetElementByName<IGroup>(Names.DDURA_DAY); } }
        public IField DDURA_D_MISS { get { return GetElementByName<IField>(Names.DDURA_D_MISS); } }
        public IField DDURA_DD { get { return GetElementByName<IField>(Names.DDURA_DD); } }
        public IField PSMGR_FUNC_OUT_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_DATE); } }
        public IField PSMGR_FUNC_IN_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIME); } }
        public IGroup PSMGR_FUNC_IN_TDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TDURA); } }
        public IGroup TDURA_HOUR { get { return GetElementByName<IGroup>(Names.TDURA_HOUR); } }
        public IField TDURA_H_MISS { get { return GetElementByName<IField>(Names.TDURA_H_MISS); } }
        public IField TDURA_HH { get { return GetElementByName<IField>(Names.TDURA_HH); } }
        public IGroup TDURA_MINUTE { get { return GetElementByName<IGroup>(Names.TDURA_MINUTE); } }
        public IField TDURA_M_MISS { get { return GetElementByName<IField>(Names.TDURA_M_MISS); } }
        public IField TDURA_MM { get { return GetElementByName<IField>(Names.TDURA_MM); } }
        public IGroup TDURA_SECOND { get { return GetElementByName<IGroup>(Names.TDURA_SECOND); } }
        public IField TDURA_S_MISS { get { return GetElementByName<IField>(Names.TDURA_S_MISS); } }
        public IField TDURA_SS { get { return GetElementByName<IField>(Names.TDURA_SS); } }
        public IField PSMGR_FUNC_OUT_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIME); } }
        public IField PSMGR_IEF_NEXTTRAN { get { return GetElementByName<IField>(Names.PSMGR_IEF_NEXTTRAN); } }
        public IField PSMGR_EXIT_MSGTYPE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_MSGTYPE); } }
        public IGroup PSMGR_IEF_DEBUG_FLAGS { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_DEBUG_FLAGS); } }
        public IField PSMGR_IEF_DEBUG { get { return GetElementByName<IField>(Names.PSMGR_IEF_DEBUG); } }
        public ICheckField PSMGR_DEBUG_ON { get { return GetElementByName<ICheckField>(Names.PSMGR_DEBUG_ON); } }
        public IGroup PSMGR_ENVIRONMENT_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ENVIRONMENT_DATA); } }
        public IField PSMGR_PCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_PCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_PCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_PCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_PCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_PCB_ADR); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup PSMGR_ERROR_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ERROR_DATA); } }
        public IField ERROR_ACTION_NAME { get { return GetElementByName<IField>(Names.ERROR_ACTION_NAME); } }
        public IField ERROR_ENCOUNTERED_SW { get { return GetElementByName<IField>(Names.ERROR_ENCOUNTERED_SW); } }
        public IField VIEW_OVERFLOW_SW { get { return GetElementByName<IField>(Names.VIEW_OVERFLOW_SW); } }
        public IGroup PSMGR_DASG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DASG_DATA); } }
        public IGroup ACTION_ID_X { get { return GetElementByName<IGroup>(Names.ACTION_ID_X); } }
        public IField ACTION_ID { get { return GetElementByName<IField>(Names.ACTION_ID); } }
        public IGroup ATTRIBUTE_ID_X { get { return GetElementByName<IGroup>(Names.ATTRIBUTE_ID_X); } }
        public IField ATTRIBUTE_ID { get { return GetElementByName<IField>(Names.ATTRIBUTE_ID); } }
        public IField STATUS_FLAG { get { return GetElementByName<IField>(Names.STATUS_FLAG); } }
        public ICheckField WHEN_SUCCESSFUL_SF { get { return GetElementByName<ICheckField>(Names.WHEN_SUCCESSFUL_SF); } }
        public ICheckField FATAL_ERROR_SF { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_SF); } }
        public ICheckField DB_ERROR_SF { get { return GetElementByName<ICheckField>(Names.DB_ERROR_SF); } }
        public ICheckField ABORT_SHOW_DBMS_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_DBMS_MSG_SF); } }
        public ICheckField ABORT_SHOW_USER_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_USER_MSG_SF); } }
        public ICheckField RETRY_TRAN_REQUESTED_SF { get { return GetElementByName<ICheckField>(Names.RETRY_TRAN_REQUESTED_SF); } }
        public ICheckField PSTEP_USE_FAILURE { get { return GetElementByName<ICheckField>(Names.PSTEP_USE_FAILURE); } }
        public ICheckField ASYNC_WHEN_AVAILABLE_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_AVAILABLE_SF); } }
        public ICheckField ASYNC_WHEN_ACCEPTED_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_ACCEPTED_SF); } }
        public ICheckField ASYNC_WHEN_NOT_ACCEPTED_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_NOT_ACCEPTED_SF); } }
        public ICheckField ASYNC_WHEN_INVALID_ID_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_INVALID_ID_SF); } }
        public ICheckField ASYNC_WHEN_PENDING_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_PENDING_SF); } }
        public ICheckField ASYNC_WHEN_SERVER_ERROR_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_SERVER_ERROR_SF); } }
        public ICheckField ASYNC_WHEN_COMM_ERROR_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_COMM_ERROR_SF); } }
        public IField LAST_STATUS { get { return GetElementByName<IField>(Names.LAST_STATUS); } }
        public ICheckField DB_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_ERROR_FL_LS); } }
        public ICheckField DB_DEADLOCK_TIMOUT_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_DEADLOCK_TIMOUT_FL_LS); } }
        public ICheckField DUPLICATE_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.DUPLICATE_FOUND_FL_LS); } }
        public ICheckField INVALID_DATAA_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAA_FL_LS); } }
        public ICheckField INVALID_DATAB_TYPE_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_TYPE_FL_LS); } }
        public ICheckField INVALID_DATAB_PERM_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_PERM_FL_LS); } }
        public ICheckField FATAL_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_FL_LS); } }
        public ICheckField NOT_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_FOUND_FL_LS); } }
        public ICheckField NOT_UNIQUE_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_UNIQUE_FL_LS); } }
        public ICheckField IEF_FUNCTION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_FUNCTION_ERROR_FL_LS); } }
        public ICheckField IEF_DURATION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_DURATION_ERROR_FL_LS); } }
        public ICheckField USED_PSTEP_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_NOT_FOUND); } }
        public ICheckField USED_PSTEP_ROUTING_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ROUTING_ERR); } }
        public ICheckField USED_PSTEP_SND_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_FMT_ERR); } }
        public ICheckField USED_PSTEP_ENCRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ENCRYPT_ERR); } }
        public ICheckField USED_PSTEP_SND_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_FMT_ERR); } }
        public ICheckField USED_PSTEP_TIRSECR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TIRSECR_ERR); } }
        public ICheckField USED_PSTEP_TOKEN_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TOKEN_ERR); } }
        public ICheckField USED_PSTEP_SEND_MAX_SIZE { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SEND_MAX_SIZE); } }
        public ICheckField USED_PSTEP_SECG_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SECG_ERR); } }
        public ICheckField USED_PSTEP_ALLOC_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ALLOC_ERR); } }
        public ICheckField USED_PSTEP_CONNECT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_CONNECT_ERR); } }
        public ICheckField USED_PSTEP_XERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XERR); } }
        public ICheckField USED_PSTEP_RCV_UA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_UA_ERR); } }
        public ICheckField USED_PSTEP_RCV_ES_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_ES_ERR); } }
        public ICheckField USED_PSTEP_XFAL { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XFAL); } }
        public ICheckField USED_PSTEP_SETOA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SETOA_ERR); } }
        public ICheckField USED_PSTEP_RCV_VIEW_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_VIEW_ERR); } }
        public ICheckField USED_PSTEP_DECRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_DECRYPT_ERR); } }
        public IField SAVE_SQLCA { get { return GetElementByName<IField>(Names.SAVE_SQLCA); } }
        public IGroup PSMGR_DEBUG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DEBUG_DATA); } }
        public IField PSMGR_TRACE_ADR { get { return GetElementByName<IField>(Names.PSMGR_TRACE_ADR); } }
        public IGroup LAST_STATEMENT_X { get { return GetElementByName<IGroup>(Names.LAST_STATEMENT_X); } }
        public IField LAST_STATEMENT_NUM { get { return GetElementByName<IField>(Names.LAST_STATEMENT_NUM); } }
        public IField CUR_AB_ID { get { return GetElementByName<IField>(Names.CUR_AB_ID); } }
        public IField CUR_AB_NAME { get { return GetElementByName<IField>(Names.CUR_AB_NAME); } }
        public IField PSMGR_TIRDATE_SAVEAREA { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SAVEAREA); } }
        public IGroup PSMGR_TIRDATE_CMCB { get { return GetElementByName<IGroup>(Names.PSMGR_TIRDATE_CMCB); } }
        public IField PSMGR_TIRDATE_DATE { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE); } }
        public IField PSMGR_TIRDATE_TIME { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME); } }
        public IField PSMGR_TIRDATE_INC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_INC); } }
        public IField PSMGR_TIRDATE_RC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RC); } }
        public ICheckField PSMGR_TIRDATE_OK { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_OK); } }
        public ICheckField PSMGR_TIRDATE_WARNING { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_WARNING); } }
        public ICheckField PSMGR_TIRDATE_ERROR { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_ERROR); } }
        public IField PSMGR_TIRDATE_REQ { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_REQ); } }
        public IField PSMGR_TIRDATE_DATEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATEF); } }
        public IField PSMGR_TIRDATE_TIMEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIMEF); } }
        public IField PSMGR_TIRDATE_RETMSG { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RETMSG); } }
        public IField PSMGR_TIRDATE_TSTAMP { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TSTAMP); } }
        public IField PSMGR_TIRDATE_DATE_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE_Z); } }
        public IField PSMGR_TIRDATE_TIME_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME_Z); } }
        public IField PSMGR_TIRDATE_SKIP_VAL { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SKIP_VAL); } }
        public IField PSMGR_ROLLBACK_RQSTED { get { return GetElementByName<IField>(Names.PSMGR_ROLLBACK_RQSTED); } }
        public ICheckField ROLLBACK_RQSTED { get { return GetElementByName<ICheckField>(Names.ROLLBACK_RQSTED); } }
        public ICheckField ABEND_RQSTED { get { return GetElementByName<ICheckField>(Names.ABEND_RQSTED); } }
        public ICheckField TERMINATE_RQSTED { get { return GetElementByName<ICheckField>(Names.TERMINATE_RQSTED); } }
        public IGroup TIRTRCE_SAVE_AREA { get { return GetElementByName<IGroup>(Names.TIRTRCE_SAVE_AREA); } }
        public IField TOP_INDX { get { return GetElementByName<IField>(Names.TOP_INDX); } }
        public IField BOTTOM_INDX { get { return GetElementByName<IField>(Names.BOTTOM_INDX); } }
        public IField END_INDX { get { return GetElementByName<IField>(Names.END_INDX); } }
        public IField LAST_STMT { get { return GetElementByName<IField>(Names.LAST_STMT); } }
        public IField TOP_OF_CALL { get { return GetElementByName<IField>(Names.TOP_OF_CALL); } }
        public IField TRACE_BREAK_POINT { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT); } }
        public IField TRACE_BREAK_POINT_STATUS { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT_STATUS); } }
        public IField LAST_AB_NAME { get { return GetElementByName<IField>(Names.LAST_AB_NAME); } }
        public IField COLOR { get { return GetElementByName<IField>(Names.COLOR); } }
        public IField COLORT { get { return GetElementByName<IField>(Names.COLORT); } }
        public IField HILITE { get { return GetElementByName<IField>(Names.HILITE); } }
        public IField TRACE_ON_OFF { get { return GetElementByName<IField>(Names.TRACE_ON_OFF); } }
        public IGroup CASCADE_DELETE_FLAGS { get { return GetElementByName<IGroup>(Names.CASCADE_DELETE_FLAGS); } }
        public IField V1PRESENT { get { return GetElementByName<IField>(Names.V1PRESENT); } }
        public IField V2PRESENT { get { return GetElementByName<IField>(Names.V2PRESENT); } }
        public IField CASCADE1 { get { return GetElementByName<IField>(Names.CASCADE1); } }
        public IField CASCADE2 { get { return GetElementByName<IField>(Names.CASCADE2); } }
        public IField PROCESSQ_FLAG { get { return GetElementByName<IField>(Names.PROCESSQ_FLAG); } }
        public IGroup PSMGR_ACTIVE_DIALECT { get { return GetElementByName<IGroup>(Names.PSMGR_ACTIVE_DIALECT); } }
        public IField DIALECT_NAME { get { return GetElementByName<IField>(Names.DIALECT_NAME); } }
        public IField MESSAGE_TABLE_NAME { get { return GetElementByName<IField>(Names.MESSAGE_TABLE_NAME); } }
        public IField TRANSLATE_TABLE_NAME { get { return GetElementByName<IField>(Names.TRANSLATE_TABLE_NAME); } }
        public IGroup PSMGR_FUNCTION_DATA_EXT { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA_EXT); } }
        public IField PSMGR_FUNC_IN_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIMESTAMP); } }
        public IGroup PSMGR_FUNC_IN_TSDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TSDURA); } }
        public IGroup TSDURA_MICROSECOND { get { return GetElementByName<IGroup>(Names.TSDURA_MICROSECOND); } }
        public IField TSDURA_M_MISS { get { return GetElementByName<IField>(Names.TSDURA_M_MISS); } }
        public IField TSDURA_MS { get { return GetElementByName<IField>(Names.TSDURA_MS); } }
        public IField PSMGR_FUNC_OUT_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIMESTAMP); } }
        public IField PSMGR_CICS_FAIL_SW { get { return GetElementByName<IField>(Names.PSMGR_CICS_FAIL_SW); } }
        public ICheckField INHIBIT_CICS_RECEIVE { get { return GetElementByName<ICheckField>(Names.INHIBIT_CICS_RECEIVE); } }
        public IField CLIENT_USERID { get { return GetElementByName<IField>(Names.CLIENT_USERID); } }
        public IField CLIENT_PASSWORD { get { return GetElementByName<IField>(Names.CLIENT_PASSWORD); } }
        public IField LOAD_MODULE_NAME { get { return GetElementByName<IField>(Names.LOAD_MODULE_NAME); } }
        public IField INSTRUMENT_CODE { get { return GetElementByName<IField>(Names.INSTRUMENT_CODE); } }
        public IField TX_RETRY_LIMIT { get { return GetElementByName<IField>(Names.TX_RETRY_LIMIT); } }
        public IField TX_TIMEOUT { get { return GetElementByName<IField>(Names.TX_TIMEOUT); } }
        public IGroup PSMGR_EXTRA_ERRINFO { get { return GetElementByName<IGroup>(Names.PSMGR_EXTRA_ERRINFO); } }
        public IField ERRINFO_BUF_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_BUF_SIZE); } }
        public IField ERRINFO_MSG_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_MSG_SIZE); } }
        public IField ERRINFO_BUF_ADDR { get { return GetElementByName<IField>(Names.ERRINFO_BUF_ADDR); } }
        public IField TX_RETRY_COUNT { get { return GetElementByName<IField>(Names.TX_RETRY_COUNT); } }
        public IField TX_USER_RETRY_ALLOWED { get { return GetElementByName<IField>(Names.TX_USER_RETRY_ALLOWED); } }
        public IGroup PSMGR_PSTEP_USE_PTRS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_PTRS); } }
        public IField PSTEP_FAIL_MSG_PTR { get { return GetElementByName<IField>(Names.PSTEP_FAIL_MSG_PTR); } }
        public IField PSTEP_GURB_REST_PTR { get { return GetElementByName<IField>(Names.PSTEP_GURB_REST_PTR); } }
        public IField PSTEP_LIPS_PTR { get { return GetElementByName<IField>(Names.PSTEP_LIPS_PTR); } }
        public IField PSTEP_TBL_PTR { get { return GetElementByName<IField>(Names.PSTEP_TBL_PTR); } }
        public IField PSTEP_DDF_PTR { get { return GetElementByName<IField>(Names.PSTEP_DDF_PTR); } }
        public IField PSTEP_COMM_ID { get { return GetElementByName<IField>(Names.PSTEP_COMM_ID); } }
        public IField PSTEP_APPL_LIST_PTR { get { return GetElementByName<IField>(Names.PSTEP_APPL_LIST_PTR); } }
        public IField PSTEP_CURR_PST_PTR { get { return GetElementByName<IField>(Names.PSTEP_CURR_PST_PTR); } }
        public IGroup PSMGR_PSTEP_USE_SYSFLDS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_SYSFLDS); } }
        public IField PSMGR_EIBERRCD { get { return GetElementByName<IField>(Names.PSMGR_EIBERRCD); } }
        public IField PSMGR_EIBFN { get { return GetElementByName<IField>(Names.PSMGR_EIBFN); } }
        public IField PSMGR_EIBRESP { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP); } }
        public IField PSMGR_EIBRESP2 { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP2); } }
        public IGroup PSMGR_ASYNC_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ASYNC_DATA); } }
        public IField ASYNC_MODE { get { return GetElementByName<IField>(Names.ASYNC_MODE); } }
        public ICheckField FLOW_TYPE_SYNC { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_SYNC); } }
        public ICheckField FLOW_TYPE_ASYNC { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_ASYNC); } }
        public ICheckField FLOW_TYPE_NO_RESPONSE { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_NO_RESPONSE); } }
        public IField ASYNC_FLOW_STATUS_TABLE_PTR { get { return GetElementByName<IField>(Names.ASYNC_FLOW_STATUS_TABLE_PTR); } }
        public IField ASYNC_SERVER_LOC_TABLE_PTR { get { return GetElementByName<IField>(Names.ASYNC_SERVER_LOC_TABLE_PTR); } }
        public IGroup IMPORT_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_0001EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0001ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0001ET); } }
        public IField NUMBER_0001AS { get { return GetElementByName<IField>(Names.NUMBER_0001AS); } }
        public IField NUMBER_0001 { get { return GetElementByName<IField>(Names.NUMBER_0001); } }
        public IField NUMBER_0001XX { get { return GetElementByName<IField>(Names.NUMBER_0001XX); } }
        public IGroup IMPORT_CURRENT_0002EV { get { return GetElementByName<IGroup>(Names.IMPORT_CURRENT_0002EV); } }
        public IGroup DATE_WORK_AREA_0002ET { get { return GetElementByName<IGroup>(Names.DATE_WORK_AREA_0002ET); } }
        public IField DATE_0002AS { get { return GetElementByName<IField>(Names.DATE_0002AS); } }
        public IField DATE_0002 { get { return GetElementByName<IField>(Names.DATE_0002); } }
        public IField DATE_0002XX { get { return GetElementByName<IField>(Names.DATE_0002XX); } }
        public IGroup EXPORT_0003EV { get { return GetElementByName<IGroup>(Names.EXPORT_0003EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0003ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0003ET); } }
        public IField SEX_0003AS { get { return GetElementByName<IField>(Names.SEX_0003AS); } }
        public IField SEX_0003 { get { return GetElementByName<IField>(Names.SEX_0003); } }
        public IField SEX_0003XX { get { return GetElementByName<IField>(Names.SEX_0003XX); } }
        public IField DOB_0003AS { get { return GetElementByName<IField>(Names.DOB_0003AS); } }
        public IField DOB_0003 { get { return GetElementByName<IField>(Names.DOB_0003); } }
        public IField DOB_0003XX { get { return GetElementByName<IField>(Names.DOB_0003XX); } }
        public IField SSN_0003AS { get { return GetElementByName<IField>(Names.SSN_0003AS); } }
        public IField SSN_0003 { get { return GetElementByName<IField>(Names.SSN_0003); } }
        public IField SSN_0003XX { get { return GetElementByName<IField>(Names.SSN_0003XX); } }
        public IField FIRST_NAME_0003AS { get { return GetElementByName<IField>(Names.FIRST_NAME_0003AS); } }
        public IField FIRST_NAME_0003 { get { return GetElementByName<IField>(Names.FIRST_NAME_0003); } }
        public IField FIRST_NAME_0003XX { get { return GetElementByName<IField>(Names.FIRST_NAME_0003XX); } }
        public IField MIDDLE_INITIAL_0003AS { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0003AS); } }
        public IField MIDDLE_INITIAL_0003 { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0003); } }
        public IField MIDDLE_INITIAL_0003XX { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0003XX); } }
        public IField LAST_NAME_0003AS { get { return GetElementByName<IField>(Names.LAST_NAME_0003AS); } }
        public IField LAST_NAME_0003 { get { return GetElementByName<IField>(Names.LAST_NAME_0003); } }
        public IField LAST_NAME_0003XX { get { return GetElementByName<IField>(Names.LAST_NAME_0003XX); } }
        public IField NUMBER_0003AS { get { return GetElementByName<IField>(Names.NUMBER_0003AS); } }
        public IField NUMBER_0003 { get { return GetElementByName<IField>(Names.NUMBER_0003); } }
        public IField NUMBER_0003XX { get { return GetElementByName<IField>(Names.NUMBER_0003XX); } }
        public IField REPLICATION_INDICATOR_0003AS { get { return GetElementByName<IField>(Names.REPLICATION_INDICATOR_0003AS); } }
        public IField REPLICATION_INDICATOR_0003 { get { return GetElementByName<IField>(Names.REPLICATION_INDICATOR_0003); } }
        public IField REPLICATION_INDICATOR_0003XX { get { return GetElementByName<IField>(Names.REPLICATION_INDICATOR_0003XX); } }
        public IGroup EXPORT_0004EV { get { return GetElementByName<IGroup>(Names.EXPORT_0004EV); } }
        public IGroup ABEND_DATA_0004ET { get { return GetElementByName<IGroup>(Names.ABEND_DATA_0004ET); } }
        public IField TYPE_0004AS { get { return GetElementByName<IField>(Names.TYPE_0004AS); } }
        public IField TYPE_0004 { get { return GetElementByName<IField>(Names.TYPE_0004); } }
        public IField TYPE_0004XX { get { return GetElementByName<IField>(Names.TYPE_0004XX); } }
        public IField ADABAS_FILE_NUMBER_0004AS { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0004AS); } }
        public IField ADABAS_FILE_NUMBER_0004 { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0004); } }
        public IField ADABAS_FILE_NUMBER_0004XX { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0004XX); } }
        public IField ADABAS_FILE_ACTION_0004AS { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0004AS); } }
        public IField ADABAS_FILE_ACTION_0004 { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0004); } }
        public IField ADABAS_FILE_ACTION_0004XX { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0004XX); } }
        public IField ADABAS_RESPONSE_CD_0004AS { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0004AS); } }
        public IField ADABAS_RESPONSE_CD_0004 { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0004); } }
        public IField ADABAS_RESPONSE_CD_0004XX { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0004XX); } }
        public IGroup EXPORT_AE_0005EV { get { return GetElementByName<IGroup>(Names.EXPORT_AE_0005EV); } }
        public IGroup IEF_SUPPLIED_0005ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0005ET); } }
        public IField FLAG_0005AS { get { return GetElementByName<IField>(Names.FLAG_0005AS); } }
        public IField FLAG_0005 { get { return GetElementByName<IField>(Names.FLAG_0005); } }
        public IField FLAG_0005XX { get { return GetElementByName<IField>(Names.FLAG_0005XX); } }
        public IGroup EXPORT_CSE_0006EV { get { return GetElementByName<IGroup>(Names.EXPORT_CSE_0006EV); } }
        public IGroup IEF_SUPPLIED_0006ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0006ET); } }
        public IField FLAG_0006AS { get { return GetElementByName<IField>(Names.FLAG_0006AS); } }
        public IField FLAG_0006 { get { return GetElementByName<IField>(Names.FLAG_0006); } }
        public IField FLAG_0006XX { get { return GetElementByName<IField>(Names.FLAG_0006XX); } }
        public IGroup EXPORT_KANPAY_0007EV { get { return GetElementByName<IGroup>(Names.EXPORT_KANPAY_0007EV); } }
        public IGroup IEF_SUPPLIED_0007ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0007ET); } }
        public IField FLAG_0007AS { get { return GetElementByName<IField>(Names.FLAG_0007AS); } }
        public IField FLAG_0007 { get { return GetElementByName<IField>(Names.FLAG_0007); } }
        public IField FLAG_0007XX { get { return GetElementByName<IField>(Names.FLAG_0007XX); } }
        public IGroup EXPORT_KSCARES_0008EV { get { return GetElementByName<IGroup>(Names.EXPORT_KSCARES_0008EV); } }
        public IGroup IEF_SUPPLIED_0008ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0008ET); } }
        public IField FLAG_0008AS { get { return GetElementByName<IField>(Names.FLAG_0008AS); } }
        public IField FLAG_0008 { get { return GetElementByName<IField>(Names.FLAG_0008); } }
        public IField FLAG_0008XX { get { return GetElementByName<IField>(Names.FLAG_0008XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.GLOBDATA, (GLOBDATA) =>
           {
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_COMMAND, (PSMGR_IEF_COMMAND) =>
               {
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_1, FieldType.String, 8);
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_2, FieldType.String, 72);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_TRANCODE, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_STATE, FieldType.PackedDecimal, 11);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_INFOMSG, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_USER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_TERMINAL_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_PRINTER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_DATE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_TIME, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_RUNTIME_TYPE, FieldType.String, 4);
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA, (PSMGR_FUNCTION_DATA) =>
               {
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_ERRMSG, FieldType.String, 4);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_NAME, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_DDURA, (PSMGR_FUNC_IN_DDURA) =>
                   {
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_YEAR, (DDURA_YEAR) =>
                       {
                           DDURA_YEAR.CreateNewField(Names.DDURA_Y_MISS, FieldType.String, 1);
                           DDURA_YEAR.CreateNewField(Names.DDURA_YYYY, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_MONTH, (DDURA_MONTH) =>
                       {
                           DDURA_MONTH.CreateNewField(Names.DDURA_M_MISS, FieldType.String, 1);
                           DDURA_MONTH.CreateNewField(Names.DDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_DAY, (DDURA_DAY) =>
                       {
                           DDURA_DAY.CreateNewField(Names.DDURA_D_MISS, FieldType.String, 1);
                           DDURA_DAY.CreateNewField(Names.DDURA_DD, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_TIME, FieldType.String, 6);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_TDURA, (PSMGR_FUNC_IN_TDURA) =>
                   {
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_HOUR, (TDURA_HOUR) =>
                       {
                           TDURA_HOUR.CreateNewField(Names.TDURA_H_MISS, FieldType.String, 1);
                           TDURA_HOUR.CreateNewField(Names.TDURA_HH, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_MINUTE, (TDURA_MINUTE) =>
                       {
                           TDURA_MINUTE.CreateNewField(Names.TDURA_M_MISS, FieldType.String, 1);
                           TDURA_MINUTE.CreateNewField(Names.TDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_SECOND, (TDURA_SECOND) =>
                       {
                           TDURA_SECOND.CreateNewField(Names.TDURA_S_MISS, FieldType.String, 1);
                           TDURA_SECOND.CreateNewField(Names.TDURA_SS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_TIME, FieldType.String, 6);
               });
               GLOBDATA.CreateNewFillerField(2, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_NEXTTRAN, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_MSGTYPE, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(11, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_DEBUG_FLAGS, (PSMGR_IEF_DEBUG_FLAGS) =>
               {
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewField(Names.PSMGR_IEF_DEBUG, FieldType.String, 1)
                       .NewCheckField(Names.PSMGR_DEBUG_ON, "Y")
                       ;
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewFillerField(15, FillWith.Hashes);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ENVIRONMENT_DATA, (PSMGR_ENVIRONMENT_DATA) =>
               {
                   PSMGR_ENVIRONMENT_DATA.CreateNewField(Names.PSMGR_PCB_CNT, FieldType.CompInt, 9);
                   PSMGR_ENVIRONMENT_DATA.CreateNewGroupArray(Names.PSMGR_PCB_ENTRY, 255, (PSMGR_PCB_ENTRY) =>
                   {
                       PSMGR_PCB_ENTRY.CreateNewField(Names.PSMGR_PCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
               {
                   PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
                   PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
                   {
                       PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ERROR_DATA, (PSMGR_ERROR_DATA) =>
               {
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ACTION_NAME, FieldType.String, 32);
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ENCOUNTERED_SW, FieldType.String, 1);
                   PSMGR_ERROR_DATA.CreateNewField(Names.VIEW_OVERFLOW_SW, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DASG_DATA, (PSMGR_DASG_DATA) =>
               {
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ACTION_ID_X, (ACTION_ID_X) =>
                   {
                       ACTION_ID_X.CreateNewField(Names.ACTION_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ATTRIBUTE_ID_X, (ATTRIBUTE_ID_X) =>
                   {
                       ATTRIBUTE_ID_X.CreateNewField(Names.ATTRIBUTE_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewField(Names.STATUS_FLAG, FieldType.String, 2)
                       .NewCheckField(Names.WHEN_SUCCESSFUL_SF, SPACES)
                       .NewCheckField(Names.FATAL_ERROR_SF, "FE")
                       .NewCheckField(Names.DB_ERROR_SF, "DB")
                       .NewCheckField(Names.ABORT_SHOW_DBMS_MSG_SF, "AB")
                       .NewCheckField(Names.ABORT_SHOW_USER_MSG_SF, "AM")
                       .NewCheckField(Names.RETRY_TRAN_REQUESTED_SF, "RT")
                       .NewCheckField(Names.PSTEP_USE_FAILURE, "PU")
                       .NewCheckField(Names.ASYNC_WHEN_AVAILABLE_SF, SPACES)
                       .NewCheckField(Names.ASYNC_WHEN_ACCEPTED_SF, SPACES)
                       .NewCheckField(Names.ASYNC_WHEN_NOT_ACCEPTED_SF, "NA")
                       .NewCheckField(Names.ASYNC_WHEN_INVALID_ID_SF, "II")
                       .NewCheckField(Names.ASYNC_WHEN_PENDING_SF, "PE")
                       .NewCheckField(Names.ASYNC_WHEN_SERVER_ERROR_SF, "SS")
                       .NewCheckField(Names.ASYNC_WHEN_COMM_ERROR_SF, "CE")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.LAST_STATUS, FieldType.String, 2)
                       .NewCheckField(Names.DB_ERROR_FL_LS, "DB")
                       .NewCheckField(Names.DB_DEADLOCK_TIMOUT_FL_LS, "DT")
                       .NewCheckField(Names.DUPLICATE_FOUND_FL_LS, "DF")
                       .NewCheckField(Names.INVALID_DATAA_FL_LS, "IA")
                       .NewCheckField(Names.INVALID_DATAB_TYPE_FL_LS, "BT")
                       .NewCheckField(Names.INVALID_DATAB_PERM_FL_LS, "BP")
                       .NewCheckField(Names.FATAL_ERROR_FL_LS, "FE")
                       .NewCheckField(Names.NOT_FOUND_FL_LS, "NF")
                       .NewCheckField(Names.NOT_UNIQUE_FL_LS, "NU")
                       .NewCheckField(Names.IEF_FUNCTION_ERROR_FL_LS, "IE")
                       .NewCheckField(Names.IEF_DURATION_ERROR_FL_LS, "DE")
                       .NewCheckField(Names.USED_PSTEP_NOT_FOUND, "PO")
                       .NewCheckField(Names.USED_PSTEP_ROUTING_ERR, "PX")
                       .NewCheckField(Names.USED_PSTEP_SND_FMT_ERR, "PF")
                       .NewCheckField(Names.USED_PSTEP_ENCRYPT_ERR, "PN")
                       .NewCheckField(Names.USED_PSTEP_SND_BFR_ERR, "PS")
                       .NewCheckField(Names.USED_PSTEP_RCV_BFR_ERR, "PR")
                       .NewCheckField(Names.USED_PSTEP_RCV_FMT_ERR, "PU")
                       .NewCheckField(Names.USED_PSTEP_TIRSECR_ERR, "PE")
                       .NewCheckField(Names.USED_PSTEP_TOKEN_ERR, "PT")
                       .NewCheckField(Names.USED_PSTEP_SEND_MAX_SIZE, "PM")
                       .NewCheckField(Names.USED_PSTEP_SECG_ERR, "PB")
                       .NewCheckField(Names.USED_PSTEP_ALLOC_ERR, "PA")
                       .NewCheckField(Names.USED_PSTEP_CONNECT_ERR, "PC")
                       .NewCheckField(Names.USED_PSTEP_XERR, "PD")
                       .NewCheckField(Names.USED_PSTEP_RCV_UA_ERR, "PH")
                       .NewCheckField(Names.USED_PSTEP_RCV_ES_ERR, "PI")
                       .NewCheckField(Names.USED_PSTEP_XFAL, "PJ")
                       .NewCheckField(Names.USED_PSTEP_SETOA_ERR, "PK")
                       .NewCheckField(Names.USED_PSTEP_RCV_VIEW_ERR, "PL")
                       .NewCheckField(Names.USED_PSTEP_DECRYPT_ERR, "PP")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.SAVE_SQLCA, FieldType.String, 255);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DEBUG_DATA, (PSMGR_DEBUG_DATA) =>
               {
                   PSMGR_DEBUG_DATA.CreateNewField(Names.PSMGR_TRACE_ADR, FieldType.CompInt, 9);
                   PSMGR_DEBUG_DATA.CreateNewGroup(Names.LAST_STATEMENT_X, (LAST_STATEMENT_X) =>
                   {
                       LAST_STATEMENT_X.CreateNewField(Names.LAST_STATEMENT_NUM, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_ID, FieldType.String, 10);
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_NAME, FieldType.String, 32);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_TIRDATE_SAVEAREA, FieldType.String, 12);
               GLOBDATA.CreateNewGroup(Names.PSMGR_TIRDATE_CMCB, (PSMGR_TIRDATE_CMCB) =>
               {
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATE, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIME, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(8, FillWith.Hashes);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_INC, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RC, FieldType.CompShort, 4)
                       .NewCheckField(Names.PSMGR_TIRDATE_OK, +0)
                       .NewCheckField(Names.PSMGR_TIRDATE_WARNING, +4)
                       .NewCheckField(Names.PSMGR_TIRDATE_ERROR, +8)
                       ;
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_REQ, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIMEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RETMSG, FieldType.String, 60);

                   IField PSMGR_TIRDATE_TSTAMP_local = PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TSTAMP, FieldType.String, 20);
                   PSMGR_TIRDATE_CMCB.CreateNewGroupRedefine("FILLER_d9", PSMGR_TIRDATE_TSTAMP_local, (FILLER_d9) =>
                   {
                       FILLER_d9.CreateNewField(Names.PSMGR_TIRDATE_DATE_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d9.CreateNewField(Names.PSMGR_TIRDATE_TIME_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d9.CreateNewFillerField(4, FillWith.Hashes);
                   });
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_SKIP_VAL, FieldType.String, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(95, FillWith.Hashes);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_ROLLBACK_RQSTED, FieldType.String, 1)
                   .NewCheckField(Names.ROLLBACK_RQSTED, "R")
                   .NewCheckField(Names.ABEND_RQSTED, "A")
                   .NewCheckField(Names.TERMINATE_RQSTED, "T")
                   ;
               GLOBDATA.CreateNewGroup(Names.TIRTRCE_SAVE_AREA, (TIRTRCE_SAVE_AREA) =>
               {
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.BOTTOM_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.END_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_STMT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_OF_CALL, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT_STATUS, FieldType.String, 3);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_AB_NAME, FieldType.String, 32);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLOR, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLORT, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.HILITE, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_ON_OFF, FieldType.String, 3);
               });
               GLOBDATA.CreateNewGroup(Names.CASCADE_DELETE_FLAGS, (CASCADE_DELETE_FLAGS) =>
               {
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V1PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V2PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE1, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE2, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.PROCESSQ_FLAG, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ACTIVE_DIALECT, (PSMGR_ACTIVE_DIALECT) =>
               {
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.DIALECT_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.MESSAGE_TABLE_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.TRANSLATE_TABLE_NAME, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA_EXT, (PSMGR_FUNCTION_DATA_EXT) =>
               {
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_IN_TIMESTAMP, FieldType.String, 20);
                   PSMGR_FUNCTION_DATA_EXT.CreateNewGroup(Names.PSMGR_FUNC_IN_TSDURA, (PSMGR_FUNC_IN_TSDURA) =>
                   {
                       PSMGR_FUNC_IN_TSDURA.CreateNewGroup(Names.TSDURA_MICROSECOND, (TSDURA_MICROSECOND) =>
                       {
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_M_MISS, FieldType.String, 1);
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_MS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_OUT_TIMESTAMP, FieldType.String, 20);
               });
               GLOBDATA.CreateNewFillerField(8, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_CICS_FAIL_SW, FieldType.String, 1)
                   .NewCheckField(Names.INHIBIT_CICS_RECEIVE, "I")
                   ;
               GLOBDATA.CreateNewField(Names.CLIENT_USERID, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.CLIENT_PASSWORD, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.LOAD_MODULE_NAME, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.INSTRUMENT_CODE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_RETRY_LIMIT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_TIMEOUT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewGroup(Names.PSMGR_EXTRA_ERRINFO, (PSMGR_EXTRA_ERRINFO) =>
               {
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_MSG_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_ADDR, FieldType.String, 8);
               });
               GLOBDATA.CreateNewField(Names.TX_RETRY_COUNT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_USER_RETRY_ALLOWED, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(3, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_PTRS, (PSMGR_PSTEP_USE_PTRS) =>
               {
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_FAIL_MSG_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_GURB_REST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_LIPS_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_TBL_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_DDF_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_COMM_ID, FieldType.String, 8);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_APPL_LIST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_CURR_PST_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_SYSFLDS, (PSMGR_PSTEP_USE_SYSFLDS) =>
               {
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBERRCD, FieldType.String, 4);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBFN, FieldType.String, 2);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP, FieldType.String, 8);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP2, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ASYNC_DATA, (PSMGR_ASYNC_DATA) =>
               {
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_MODE, FieldType.String, 1)
                       .NewCheckField(Names.FLOW_TYPE_SYNC, SPACE)
                       .NewCheckField(Names.FLOW_TYPE_ASYNC, "A")
                       .NewCheckField(Names.FLOW_TYPE_NO_RESPONSE, "N")
                       ;
                   PSMGR_ASYNC_DATA.CreateNewFillerField(1, FillWith.Hashes);
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_FLOW_STATUS_TABLE_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_SERVER_LOC_TABLE_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewFillerField(189, FillWith.Hashes);
           });

            recordDef.CreateNewGroup(Names.IMPORT_0001EV, (IMPORT_0001EV) =>
           {
               IMPORT_0001EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0001ET, (CSE_PERSONS_WORK_SET_0001ET) =>
               {
                   CSE_PERSONS_WORK_SET_0001ET.CreateNewField(Names.NUMBER_0001AS, FieldType.String, 1);

                   IField NUMBER_0001_local = CSE_PERSONS_WORK_SET_0001ET.CreateNewField(Names.NUMBER_0001, FieldType.String, 10);
                   CSE_PERSONS_WORK_SET_0001ET.CreateNewFieldRedefine(Names.NUMBER_0001XX, FieldType.String, NUMBER_0001_local, 10);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_CURRENT_0002EV, (IMPORT_CURRENT_0002EV) =>
           {
               IMPORT_CURRENT_0002EV.CreateNewGroup(Names.DATE_WORK_AREA_0002ET, (DATE_WORK_AREA_0002ET) =>
               {
                   DATE_WORK_AREA_0002ET.CreateNewField(Names.DATE_0002AS, FieldType.String, 1);

                   IField DATE_0002_local = DATE_WORK_AREA_0002ET.CreateNewField(Names.DATE_0002, FieldType.SignedNumeric, 8);
                   DATE_WORK_AREA_0002ET.CreateNewFieldRedefine(Names.DATE_0002XX, FieldType.String, DATE_0002_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0003EV, (EXPORT_0003EV) =>
           {
               EXPORT_0003EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0003ET, (CSE_PERSONS_WORK_SET_0003ET) =>
               {
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.SEX_0003AS, FieldType.String, 1);

                   IField SEX_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.SEX_0003, FieldType.String, 1);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.SEX_0003XX, FieldType.String, SEX_0003_local, 1);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.DOB_0003AS, FieldType.String, 1);

                   IField DOB_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.DOB_0003, FieldType.SignedNumeric, 8);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.DOB_0003XX, FieldType.String, DOB_0003_local, 8);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.SSN_0003AS, FieldType.String, 1);

                   IField SSN_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.SSN_0003, FieldType.String, 9);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.SSN_0003XX, FieldType.String, SSN_0003_local, 9);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.FIRST_NAME_0003AS, FieldType.String, 1);

                   IField FIRST_NAME_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.FIRST_NAME_0003, FieldType.String, 12);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.FIRST_NAME_0003XX, FieldType.String, FIRST_NAME_0003_local, 12);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.MIDDLE_INITIAL_0003AS, FieldType.String, 1);

                   IField MIDDLE_INITIAL_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.MIDDLE_INITIAL_0003, FieldType.String, 1);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.MIDDLE_INITIAL_0003XX, FieldType.String, MIDDLE_INITIAL_0003_local, 1);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.LAST_NAME_0003AS, FieldType.String, 1);

                   IField LAST_NAME_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.LAST_NAME_0003, FieldType.String, 17);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.LAST_NAME_0003XX, FieldType.String, LAST_NAME_0003_local, 17);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.NUMBER_0003AS, FieldType.String, 1);

                   IField NUMBER_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.NUMBER_0003, FieldType.String, 10);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.NUMBER_0003XX, FieldType.String, NUMBER_0003_local, 10);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.REPLICATION_INDICATOR_0003AS, FieldType.String, 1);

                   IField REPLICATION_INDICATOR_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.REPLICATION_INDICATOR_0003, FieldType.String, 1);
                   CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.REPLICATION_INDICATOR_0003XX, FieldType.String, REPLICATION_INDICATOR_0003_local, 1);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0004EV, (EXPORT_0004EV) =>
           {
               EXPORT_0004EV.CreateNewGroup(Names.ABEND_DATA_0004ET, (ABEND_DATA_0004ET) =>
               {
                   ABEND_DATA_0004ET.CreateNewField(Names.TYPE_0004AS, FieldType.String, 1);

                   IField TYPE_0004_local = ABEND_DATA_0004ET.CreateNewField(Names.TYPE_0004, FieldType.String, 1);
                   ABEND_DATA_0004ET.CreateNewFieldRedefine(Names.TYPE_0004XX, FieldType.String, TYPE_0004_local, 1);
                   ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_FILE_NUMBER_0004AS, FieldType.String, 1);

                   IField ADABAS_FILE_NUMBER_0004_local = ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_FILE_NUMBER_0004, FieldType.String, 4);
                   ABEND_DATA_0004ET.CreateNewFieldRedefine(Names.ADABAS_FILE_NUMBER_0004XX, FieldType.String, ADABAS_FILE_NUMBER_0004_local, 4);
                   ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_FILE_ACTION_0004AS, FieldType.String, 1);

                   IField ADABAS_FILE_ACTION_0004_local = ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_FILE_ACTION_0004, FieldType.String, 3);
                   ABEND_DATA_0004ET.CreateNewFieldRedefine(Names.ADABAS_FILE_ACTION_0004XX, FieldType.String, ADABAS_FILE_ACTION_0004_local, 3);
                   ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_RESPONSE_CD_0004AS, FieldType.String, 1);

                   IField ADABAS_RESPONSE_CD_0004_local = ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_RESPONSE_CD_0004, FieldType.String, 4);
                   ABEND_DATA_0004ET.CreateNewFieldRedefine(Names.ADABAS_RESPONSE_CD_0004XX, FieldType.String, ADABAS_RESPONSE_CD_0004_local, 4);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_AE_0005EV, (EXPORT_AE_0005EV) =>
           {
               EXPORT_AE_0005EV.CreateNewGroup(Names.IEF_SUPPLIED_0005ET, (IEF_SUPPLIED_0005ET) =>
               {
                   IEF_SUPPLIED_0005ET.CreateNewField(Names.FLAG_0005AS, FieldType.String, 1);

                   IField FLAG_0005_local = IEF_SUPPLIED_0005ET.CreateNewField(Names.FLAG_0005, FieldType.String, 1);
                   IEF_SUPPLIED_0005ET.CreateNewFieldRedefine(Names.FLAG_0005XX, FieldType.String, FLAG_0005_local, 1);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_CSE_0006EV, (EXPORT_CSE_0006EV) =>
           {
               EXPORT_CSE_0006EV.CreateNewGroup(Names.IEF_SUPPLIED_0006ET, (IEF_SUPPLIED_0006ET) =>
               {
                   IEF_SUPPLIED_0006ET.CreateNewField(Names.FLAG_0006AS, FieldType.String, 1);

                   IField FLAG_0006_local = IEF_SUPPLIED_0006ET.CreateNewField(Names.FLAG_0006, FieldType.String, 1);
                   IEF_SUPPLIED_0006ET.CreateNewFieldRedefine(Names.FLAG_0006XX, FieldType.String, FLAG_0006_local, 1);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_KANPAY_0007EV, (EXPORT_KANPAY_0007EV) =>
           {
               EXPORT_KANPAY_0007EV.CreateNewGroup(Names.IEF_SUPPLIED_0007ET, (IEF_SUPPLIED_0007ET) =>
               {
                   IEF_SUPPLIED_0007ET.CreateNewField(Names.FLAG_0007AS, FieldType.String, 1);

                   IField FLAG_0007_local = IEF_SUPPLIED_0007ET.CreateNewField(Names.FLAG_0007, FieldType.String, 1);
                   IEF_SUPPLIED_0007ET.CreateNewFieldRedefine(Names.FLAG_0007XX, FieldType.String, FLAG_0007_local, 1);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_KSCARES_0008EV, (EXPORT_KSCARES_0008EV) =>
           {
               EXPORT_KSCARES_0008EV.CreateNewGroup(Names.IEF_SUPPLIED_0008ET, (IEF_SUPPLIED_0008ET) =>
               {
                   IEF_SUPPLIED_0008ET.CreateNewField(Names.FLAG_0008AS, FieldType.String, 1);

                   IField FLAG_0008_local = IEF_SUPPLIED_0008ET.CreateNewField(Names.FLAG_0008, FieldType.String, 1);
                   IEF_SUPPLIED_0008ET.CreateNewFieldRedefine(Names.FLAG_0008XX, FieldType.String, FLAG_0008_local, 1);
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(IEF_RUNTIME_PARM1, args, 0);
            SetPassedParm(IEF_RUNTIME_PARM2, args, 1);
            SetPassedParm(GLOBDATA, args, 2);
            SetPassedParm(IMPORT_0001EV, args, 3);
            SetPassedParm(IMPORT_CURRENT_0002EV, args, 4);
            SetPassedParm(EXPORT_0003EV, args, 5);
            SetPassedParm(EXPORT_0004EV, args, 6);
            SetPassedParm(EXPORT_AE_0005EV, args, 7);
            SetPassedParm(EXPORT_CSE_0006EV, args, 8);
            SetPassedParm(EXPORT_KANPAY_0007EV, args, 9);
            SetPassedParm(EXPORT_KSCARES_0008EV, args, 10);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(IEF_RUNTIME_PARM1, args, 0);
            SetReturnParm(IEF_RUNTIME_PARM2, args, 1);
            SetReturnParm(GLOBDATA, args, 2);
            SetReturnParm(IMPORT_0001EV, args, 3);
            SetReturnParm(IMPORT_CURRENT_0002EV, args, 4);
            SetReturnParm(EXPORT_0003EV, args, 5);
            SetReturnParm(EXPORT_0004EV, args, 6);
            SetReturnParm(EXPORT_AE_0005EV, args, 7);
            SetReturnParm(EXPORT_CSE_0006EV, args, 8);
            SetReturnParm(EXPORT_KANPAY_0007EV, args, 9);
            SetReturnParm(EXPORT_KSCARES_0008EV, args, 10);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXGR17 : EABBase
    {

        #region Public Constructors
        public SWEXGR17()
            : base()
        {
            this.ProgramName.SetValue("SWEXGR17");

            WS = new SWEXGR17_ws();
            LS = new SWEXGR17_ls();
            DbConv.SQLCA.Record = WS.SQLCA.Record;

        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXGR17_ws WS;

        //==== Linkage Section Data Class ========================================
        private SWEXGR17_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING IEF-RUNTIME-PARM1 , IEF-RUNTIME-PARM2 , GLOBDATA , IMPORT-0001EV , IMPORT-CURRENT-0002EV , EXPORT-0003EV , EXPORT-0004EV , EXPORT-AE-0005EV , EXPORT-CSE-0006EV , EXPORT-KANPAY-0007EV , EXPORT-KSCARES-0008EV.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0309595259(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0309595259
        /// </summary>
        private void M_MAIN_0309595259(string returnMethod = "")
        {
            M_PARA_0309595259_INIT("M_PARA_0309595259_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0309595259-INIT THRU PARA-0309595259-INIT-EXIT
            M_PARA_0309595259("M_PARA_0309595259_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0309595259 THRU PARA-0309595259-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0309595259
        /// </summary>
        private void M_PARA_0309595259(string returnMethod = "")
        {
            if (returnMethod != "" && returnMethod != "M_PARA_0309595259") { M_0000_DATABASE_ROUTINE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_DATABASE_ROUTINE
        /// </summary>
        /// <remarks>
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT: *****************************************
        ///COMMENT: THIS CODE SWCSZG72 IS PART OF SWEXGR17 *
        ///COMMENT: *****************************************
        ///COMMENT: ****************************************************************
        ///COMMENT:                                                                *
        ///COMMENT:   DESCRIPTION:  0000-DATABASE-ROUTINE.                         *
        ///COMMENT:      LOCATION:  PROCEDURE DIVISION.                            *
        ///COMMENT:                                                                *
        ///COMMENT: ** GQB 03/24/2014 - ADDED NEW COMMENTS FOR DB2
        ///COMMENT:       ACTIONS:  RECEIVE CLIENT-NUMBER.
        ///COMMENT:                 GET INFO FROM CLIENT BASIC AND CLIENT TABLES.
        ///COMMENT:                 BUILD CLIENT POINTER USING SYSTEM PART TABLE,
        ///COMMENT:                 BY CLIENT NUMBER, CLIENT NAME, CLIENT SSN.
        ///COMMENT:                 CHECK KSD_PARTICIPATION TO SEE IF CLIENT
        ///COMMENT:                 IS ON AN OPEN PROGRAM.
        ///COMMENT:                 IF YES, SET AE INDICATOR TO 'O'
        ///COMMENT: ****************************************************************
        ///COMMENT:                 'O' INDICATES OWNERSHIP BY ANOTHER SYSTEM,
        ///COMMENT:                 PREVENTING CSE FROM CHANGING THE EXISTING
        ///COMMENT:                 KSD_CLIENT_BASIC DATA.
        ///COMMENT: ****************************************************************
        ///COMMENT:                 RETURN  CLIENT-SURNAME                         *
        ///COMMENT:                         CLIENT-FIRST-NAME                      *
        ///COMMENT:                         CLIENT-MIDDLE-INITIAL                  *
        ///COMMENT:                         CLIENT-SOCIAL-SECURITY-NUMBER          *
        ///COMMENT:                         CLIENT-DATE-OF-BIRTH                   *
        ///COMMENT:                         CLIENT-SEX                             *
        ///COMMENT:                         CLIENT-SYSTEM-PARTICIPATION-INDICATORS *
        ///COMMENT:                         ABEND-FIELDS.                          *
        ///COMMENT:                                                                *
        ///COMMENT:       CREATED:  18-JUL-95.                                     *
        ///COMMENT:            BY:  CTG/CEB.                                       *
        ///COMMENT:                                                                *
        ///COMMENT: ** MAINTENANCE *************************************************
        ///COMMENT:                       CHANGE
        ///COMMENT:    DATE      AUTHOR   CONTROL DESCRIPTION
        ///COMMENT:  ---------- --------- ------- ----------------------------------
        ///COMMENT:  03/24/2014 G.BRAMSON CQ35825 ADABAS TO DB2 KEES PHASE 3 CHANGES
        ///COMMENT:  .......... ......... ....... KEEP ADABAS ERROR RESPONSE FIELDS.
        ///COMMENT:  08/29/2017 RKM               ADDED WITH UR TO QUERIES
        ///COMMENT: ****************************************************************
        /// </remarks>
        private void M_0000_DATABASE_ROUTINE(string returnMethod = "")
        {
            //COMMENT: ** GQB 03/24/2014 - ADDED CODE FOR DISPLAY
            WS.WS_MSG_X.SetValue("*SWEXGR17*");                                                                 //COBOL==> MOVE '*SWEXGR17*' TO WS-MSG-X.
                                                                                                                //COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY ***
                                                                                                                //COMMENT:     MOVE 'PROGRAM STARTED...' TO WS-MSG-1.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
            WS.MV_ABEND_FIELDS.SetValueWithSpaces();                                                            //COBOL==> MOVE SPACES TO MV-ABEND-FIELDS.
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:  INCLUDE NAME:  SWCSZG72 (FROM SWEXGR17).                      *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:      EAB NAME:  SWEXGR17.                                      *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:   DESCRIPTION:  ADABAS INITIALIZATION.                         *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:       ACTIONS:  RELEASES ANY OUTSTANDING COMMAND ID'S.         *
                                                                                                                //COMMENT:                 THIS ROUTINE REQUIRES INCLUDE SWCSZ053 IN THE  *
                                                                                                                //COMMENT:                   WORKING-STORAGE SECTION OF THIS PROGRAM.     *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:       CREATED:  2009-12-29.                                    *
                                                                                                                //COMMENT:            BY:  DDUPREE.                                       *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT: ** MAINTENANCE *************************************************
                                                                                                                //COMMENT:                   CHANGE                                       *
                                                                                                                //COMMENT:                   CONTRL                                       *
                                                                                                                //COMMENT:  DATE     AUTHOR  NUMBER  DESCRIPTION                          *
                                                                                                                //COMMENT:  -------  ------  ------  ------------------------------------ *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT: ****************************************************************
            WS.MV_CCYYMMDD.SetValue(LS.DATE_0002);                                                              //COBOL==> MOVE DATE-0002 TO MV-CCYYMMDD.
                                                                                                                //COMMENT: ** GQB 03/25/2014 - CREATE TODAYS DATE IN DB2 FORMAT
            WS.DBK1_CCYY.SetValue(WS.MV_CCYYMMDD.GetSubstring(1, 4));                                           //COBOL==> MOVE DATE-0002XX ( 1:4 ) TO DBK1-CCYY.       //Replacement Code: 3/3/2022
            WS.DBK1_MM.SetValue(WS.MV_CCYYMMDD.GetSubstring(5, 2));                                             //COBOL==> MOVE DATE-0002XX ( 5:2 ) TO DBK1-MM.       //Replacement Code: 3/3/2022
            WS.DBK1_DD.SetValue(WS.MV_CCYYMMDD.GetSubstring(7, 2));                                             //COBOL==> MOVE DATE-0002XX ( 7:2 ) TO DBK1-DD.       //Replacement Code: 3/3/2022
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT: *** MOVE IMPORT FIELDS TO WORKING-STORAGE FIELDS.
                                                                                                                //COMMENT: *****************************************************************
            WS.MV_CLIENT_NUMBER_X10.SetValue(LS.NUMBER_0001);                                                   //COBOL==> MOVE NUMBER-0001 TO MV-CLIENT-NUMBER-X10.
                                                                                                                //COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY ***
                                                                                                                //COMMENT:     MOVE 'IMPORT CLIENT NO        =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-CLIENT-NUMBER-X10        TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT: ** GQB 03/25/2014 - READ CLIENT BASIC
            WS.DBK1_CLIENT_NUMBER.SetValue(LS.NUMBER_0001);                                                     //COBOL==> MOVE NUMBER-0001 TO DBK1-CLIENT-NUMBER.
            M_7100_SELECT_CLIENT_BASIC("M_7100_EXIT"); if (Control.ExitProgram) { return; }                       //COBOL==> PERFORM 7100-SELECT-CLIENT-BASIC THRU 7100-EXIT.
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT: ** GQB 03/25/2014 - SUBROUTINE FOR CLIENT POINTER INFORMATION
            WS.WS_PARM_AREA.ResetToInitialValue();                                                              //COBOL==> INITIALIZE WS-PARM-AREA.
            WS.WSI_CLIENT_NUMBER.SetValue(LS.NUMBER_0001);                                                      //COBOL==> MOVE NUMBER-0001 TO WSI-CLIENT-NUMBER.
            WS.WSI_CLIENT_SURNAME.SetValue(WS.CLB_CLIENT_SURNAME);                                              //COBOL==> MOVE CLB-CLIENT-SURNAME TO WSI-CLIENT-SURNAME.
            WS.WSI_CLIENT_GIVEN_NAME.SetValue(WS.CLB_CLIENT_GIVEN_NAME);                                        //COBOL==> MOVE CLB-CLIENT-GIVEN-NAME TO WSI-CLIENT-GIVEN-NAME.
            WS.WSI_CLIENT_INITIALS.SetValue(WS.CLB_CLIENT_INITIALS);                                            //COBOL==> MOVE CLB-CLIENT-INITIALS TO WSI-CLIENT-INITIALS.
            WS.WSI_CLIENT_SSN.SetValue(WS.CLB_SSN);                                                             //COBOL==> MOVE CLB-SSN TO WSI-CLIENT-SSN.
            WS.WS_SWEXGCPR.SetValue("SWEXGCPR");                                                                //COBOL==> MOVE 'SWEXGCPR' TO WS-SWEXGCPR.
                                                                                                                //COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY ***
                                                                                                                //COMMENT:     MOVE 'IMPORT CPR - CLNT NO    =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE WSI-CLIENT-NUMBER           TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT:     MOVE 'IMPORT CPR - CLNT NAME  =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE WSI-CLIENT-NAME             TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT:     MOVE 'IMPORT CPR - SSN        =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE WSI-CLIENT-SSN              TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
            Control.Call(WS.WS_SWEXGCPR.AsString(), WS.WS_PARM_AREA); if (Control.ExitProgram) return;         //COBOL==> CALL WS-SWEXGCPR USING WS-PARM-AREA.
            WS.MV_ABEND_FIELDS.SetValue(WS.WSO_ABEND_FIELDS);                                                   //COBOL==> MOVE WSO-ABEND-FIELDS TO MV-ABEND-FIELDS.
                                                                                                                //COMMENT: ** GQB DISPLAY ERROR MESSAGE FROM SWEXGCPR ***
                                                                                                                //COMMENT:     IF WSO-RETURN-MSG > SPACE
                                                                                                                //COMMENT:        MOVE WSO-RETURN-ERRORS TO WS-MSG-1
                                                                                                                //COMMENT:        MOVE WSO-RETURN-SQLCODE TO WS-MSG-SQLCODE
                                                                                                                //COMMENT:        DISPLAY WS-MSG-X
                                                                                                                //COMMENT:     END-IF.
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT: ** GQB 03/25/2014 - MOVE CLIENT INFO TO WORKING STORAGE AREA
            WS.MV_DATE_OF_BIRTH.SetValueOfSubstring(1, 4, WS.CLB_DATE_OF_BIRTH.GetSubstring(1, 4).AsString());  //COBOL==> MOVE CLB-DATE-OF-BIRTH ( 1:4 ) TO MV-DATE-OF-BIRTH ( 1:4 ) .
            WS.MV_DATE_OF_BIRTH.SetValueOfSubstring(5, 2, WS.CLB_DATE_OF_BIRTH.GetSubstring(6, 2).AsString());  //COBOL==> MOVE CLB-DATE-OF-BIRTH ( 6:2 ) TO MV-DATE-OF-BIRTH ( 5:2 ) .
            WS.MV_DATE_OF_BIRTH.SetValueOfSubstring(7, 2, WS.CLB_DATE_OF_BIRTH.GetSubstring(9, 2).AsString());  //COBOL==> MOVE CLB-DATE-OF-BIRTH ( 9:2 ) TO MV-DATE-OF-BIRTH ( 7:2 ) .
            WS.MV_SEX.SetValue(WS.CLB_GENDER);                                                                  //COBOL==> MOVE CLB-GENDER TO MV-SEX.
            WS.MV_SSN.SetValue(WS.CLB_SSN);                                                                     //COBOL==> MOVE CLB-SSN TO MV-SSN.
            WS.MV_CLIENT_SURNAME.SetValue(WS.CLB_CLIENT_SURNAME);                                               //COBOL==> MOVE CLB-CLIENT-SURNAME TO MV-CLIENT-SURNAME.
            WS.MV_CLIENT_GIVEN_NAME.SetValue(WS.CLB_CLIENT_GIVEN_NAME);                                         //COBOL==> MOVE CLB-CLIENT-GIVEN-NAME TO MV-CLIENT-GIVEN-NAME.
            WS.MV_CLIENT_INITIAL.SetValue(WS.CLB_CLIENT_INITIALS);                                              //COBOL==> MOVE CLB-CLIENT-INITIALS TO MV-CLIENT-INITIAL.
            WS.MV_CLIENT_POINTER.SetValue(WS.WSO_CLIENT_POINTER);                                               //COBOL==> MOVE WSO-CLIENT-POINTER TO MV-CLIENT-POINTER.
                                                                                                                //COMMENT: ** GQB 03/25/2014 - CHECK PARTICIPATION TABLE
            M_7200_CHECK_AE_PARTICIPATION("M_7200_EXIT"); if (Control.ExitProgram) { return; }                    //COBOL==> PERFORM 7200-CHECK-AE-PARTICIPATION THRU 7200-EXIT.
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (WS.DBK1_COUNT.IsGreaterThan(ZEROS))                                                             //COBOL==> IF DBK1-COUNT > ZERO
            {
                WS.MV_SYS_PART_AE.SetValue("O");                                                                    //COBOL==> MOVE 'O' TO MV-SYS-PART-AE
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT: *** MOVE WORKING-STORAGE FIELDS TO EXPORT FIELDS.
                                                                                                                //COMMENT: *****************************************************************
            LS.SEX_0003.SetValue(WS.MV_SEX);                                                                    //COBOL==> MOVE MV-SEX TO SEX-0003.
            WS.MV_DATE_OF_BIRTH.SetValue("00000000");                                                           //COBOL==> MOVE '00000000' TO MV-DATE-OF-BIRTH.
            if (WS.MV_DATE_OF_BIRTH.IsGreaterThan("00010101"))                                                  //COBOL==> IF MV-DATE-OF-BIRTH > '00010101'
            {
                LS.DOB_0003XX.SetValue(WS.MV_DATE_OF_BIRTH);                                                        //COBOL==> MOVE MV-DATE-OF-BIRTH TO DOB-0003XX
            }                                                                                                   //COBOL==> END-IF.
            LS.SSN_0003.SetValue(WS.MV_SSN_X9);                                                                 //COBOL==> MOVE MV-SSN-X9 TO SSN-0003.
            LS.FIRST_NAME_0003.SetValue(WS.MV_CLIENT_GIVEN_NAME);                                               //COBOL==> MOVE MV-CLIENT-GIVEN-NAME TO FIRST-NAME-0003.
            LS.MIDDLE_INITIAL_0003.SetValue(WS.MV_CLIENT_INITIAL);                                              //COBOL==> MOVE MV-CLIENT-INITIAL TO MIDDLE-INITIAL-0003.
            LS.LAST_NAME_0003.SetValue(WS.MV_CLIENT_SURNAME);                                                   //COBOL==> MOVE MV-CLIENT-SURNAME TO LAST-NAME-0003.
            LS.NUMBER_0003.SetValue(WS.MV_CLIENT_NUMBER_X10);                                                   //COBOL==> MOVE MV-CLIENT-NUMBER-X10 TO NUMBER-0003.
            LS.FLAG_0005.SetValue(WS.MV_SYS_PART_AE);                                                           //COBOL==> MOVE MV-SYS-PART-AE TO FLAG-0005.
            LS.FLAG_0006.SetValue(WS.MV_SYS_PART_CSE);                                                          //COBOL==> MOVE MV-SYS-PART-CSE TO FLAG-0006.
            LS.FLAG_0007.SetValue(WS.MV_SYS_PART_KANPAY);                                                       //COBOL==> MOVE MV-SYS-PART-KANPAY TO FLAG-0007.
            LS.FLAG_0008.SetValue(WS.MV_SYS_PART_KSCARES);                                                      //COBOL==> MOVE MV-SYS-PART-KSCARES TO FLAG-0008.
                                                                                                                //COMMENT:     MOVE MV-REPL-IND          TO REPLICATION-INDICATOR-0003.
                                                                                                                //COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY ***
                                                                                                                //COMMENT:     MOVE 'EXPORT SEX              =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SEX                      TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT:     MOVE 'EXPORT DATE OF BIRTH    =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-DATE-OF-BIRTH            TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT:     MOVE 'EXPORT SSN              =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SSN-X9                   TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT:     MOVE 'EXPORT CLIENT NAME      =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-CLIENT-NAME              TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY CLIENT POINTER SHORT ***
                                                                                                                //COMMENT:     MOVE 'EXPORT CLIENT POINTER   =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-CLIENT-POINTER           TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY CLIENT POINTER DETAIL ***
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - CLIENT ID    =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-CLIENT-ID                TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - VERFD SSN FLG=' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-VERIFIED-SSN-FLAG        TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - SYS PART AE  =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SYS-PART-AE              TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - SYS PART CSE =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SYS-PART-CSE             TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - SYS PART KAN =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SYS-PART-KANPAY          TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - SYS PART KSC =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SYS-PART-KSCARES         TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - SYS PART FAC =' TO WS-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SYS-PART-FACTS           TO WS-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS-MSG-X.
                                                                                                                //COMMENT: *****************************************************************
            M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT.
        }
        /// <summary>
        /// Method M_7100_SELECT_CLIENT_BASIC
        /// </summary>
        /// <remarks>
        ///COMMENT: ** GQB 03/25/2014 - READ CLIENT BASIC INFO FROM DB2
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_7100_SELECT_CLIENT_BASIC(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            DbConv.ExecuteSqlQueryWithUR("SELECT CLIENT_NUMBER , CLIENT_GIVEN_NAME , CLIENT_INITIALS , CLIENT_SURNAME , CIS_REPL_IND , SSN , GENDER , DATE_OF_BIRTH INTO {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} FROM KSD_CLIENT_BASIC WHERE CLIENT_NUMBER = {8} ",  //COBOL==> EXEC SQL SELECT CLIENT_NUMBER , CLIENT_GIVEN_NAME , CLIENT_INITIALS , CLIENT_SURNAME , CIS_REPL_IND , SSN , GENDER , DATE_OF_BIRTH INTO :CLB-CLIENT-NUMBER , :CLB-CLIENT-GIVEN-NAME , :CLB-CLIENT-INITIALS , :CLB-CLIENT-SURNAME , :CLB-CIS-REPL-IND , :CLB-SSN , :CLB-GENDER , :CLB-DATE-OF-BIRTH FROM KSD_CLIENT_BASIC WHERE CLIENT_NUMBER = :DBK1-CLIENT-NUMBER WITH UR END-EXEC.
                                 WS.CLB_CLIENT_NUMBER, WS.CLB_CLIENT_GIVEN_NAME, WS.CLB_CLIENT_INITIALS, WS.CLB_CLIENT_SURNAME, WS.CLB_CIS_REPL_IND, WS.CLB_SSN, WS.CLB_GENDER, WS.CLB_DATE_OF_BIRTH, WS.DBK1_CLIENT_NUMBER);
            // EvaluateList !DbConv.SQLCA.SQLCODE!                                                              //COBOL==> EVALUATE SQLCODE
            if ((DbConv.SQLCA.SQLCODE.IsZeroes()))                                                              //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN 100
            else
            if ((DbConv.SQLCA.SQLCODE.IsEqualTo(100)))
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(154);                                                                //COBOL==> MOVE 154 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RI");                                                               //COBOL==> MOVE 'RI' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValueWithZeroes();                                                         //COBOL==> MOVE ZERO TO MV-ADA-RESPONSE-CD
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(154);                                                                //COBOL==> MOVE 154 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RI");                                                               //COBOL==> MOVE 'RI' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(DbConv.SQLCA.SQLCODE);                                               //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_7100_SELECT_CLIENT_BASIC") { M_7100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_7100_EXIT
        /// </summary>
        private void M_7100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_7100_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_7100_EXIT") { M_7200_CHECK_AE_PARTICIPATION(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_7200_CHECK_AE_PARTICIPATION
        /// </summary>
        /// <remarks>
        ///COMMENT: ** GQB 03/25/2014 - CHECK PARTICIPATION TABLE
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_7200_CHECK_AE_PARTICIPATION(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            WS.DBK1_COUNT.ResetToInitialValue();                                                                //COBOL==> INITIALIZE DBK1-COUNT.
            DbConv.ExecuteSqlQueryWithUR("SELECT COUNT ( * ) INTO {0} FROM KSD_PARTICIPATION WHERE FK_CLB_CLIENT_NO = {1} AND PART_START_DATE <= {2} AND PART_END_DATE >= {3} ",  //COBOL==> EXEC SQL SELECT COUNT ( * ) INTO :DBK1-COUNT FROM KSD_PARTICIPATION WHERE FK_CLB_CLIENT_NO = :DBK1-CLIENT-NUMBER AND PART_START_DATE <= :DBK1-CCYYMMDD AND PART_END_DATE >= :DBK1-CCYYMMDD WITH UR END-EXEC.
                                 WS.DBK1_COUNT, WS.DBK1_CLIENT_NUMBER, WS.DBK1_CCYYMMDD, WS.DBK1_CCYYMMDD);
            if ((!(DbConv.SQLCA.SQLCODE.IsEqualTo(0)))
             && (!(DbConv.SQLCA.SQLCODE.IsEqualTo(100))))  //COBOL==> IF SQLCODE NOT = ZERO AND SQLCODE NOT = 100
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(161);                                                                //COBOL==> MOVE 161 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RLF");                                                              //COBOL==> MOVE 'RLF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(DbConv.SQLCA.SQLCODE);                                               //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_7200_CHECK_AE_PARTICIPATION") { M_7200_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_7200_EXIT
        /// </summary>
        private void M_7200_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_7200_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_7200_EXIT") { M_0000_DATABASE_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_DATABASE_EXIT
        /// </summary>
        private void M_0000_DATABASE_EXIT(string returnMethod = "")
        {
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                LS.TYPE_0004.SetValue(WS.MV_ABEND_TYPE);                                                            //COBOL==> MOVE MV-ABEND-TYPE TO TYPE-0004
                LS.ADABAS_FILE_NUMBER_0004.SetValue(WS.MV_ADA_FILE_NUMBER);                                         //COBOL==> MOVE MV-ADA-FILE-NUMBER TO ADABAS-FILE-NUMBER-0004
                LS.ADABAS_FILE_ACTION_0004.SetValue(WS.MV_ADA_FILE_ACTION);                                         //COBOL==> MOVE MV-ADA-FILE-ACTION TO ADABAS-FILE-ACTION-0004
                LS.ADABAS_RESPONSE_CD_0004.SetValue(WS.MV_ADA_RESPONSE_CD);                                         //COBOL==> MOVE MV-ADA-RESPONSE-CD TO ADABAS-RESPONSE-CD-0004
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod == "M_0000_DATABASE_EXIT") { return; }                                             //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_0000_DATABASE_EXIT") { M_PARA_0309595259_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0309595259_EXIT
        /// </summary>
        /// <remarks>
        ///COMMENT: ** GQB 03/24/2014
        ///COMMENT: **************************************************************
        ///COMMENT:  ORIGINAL PROGRAM USING ADABAS - COMMENTED OUT
        ///COMMENT: **************************************************************
        ///COMMENT:                                                                *
        ///COMMENT: *****************************************
        ///COMMENT: THIS CODE SWCSZG72 IS PART OF SWEXGR17 *
        ///COMMENT: *****************************************
        ///COMMENT: ****************************************************************
        ///COMMENT:                                                                *
        ///COMMENT:   DESCRIPTION:  0000-ADABAS-ROUTINE.                           *
        ///COMMENT:      LOCATION:  PROCEDURE DIVISION.                            *
        ///COMMENT:                                                                *
        ///COMMENT:       ACTIONS:  RECEIVE CLIENT-NUMBER.                         *
        ///COMMENT:                 READISN CLIENT-BASIC-DBF.                      *
        ///COMMENT:                 IF CLIENT-NUMBER IS VALID,                     *
        ///COMMENT:                     READLOGICAL CLIENT-DBF                     *
        ///COMMENT:                         USING CLIENT-ID-KEY                    *
        ///COMMENT:                     CHECK PARTICIPATION-DBF TO SEE IF          *
        ///COMMENT:                         CLIENT IS ON AN OPEN PROGRAM           *
        ///COMMENT:                     IF YES, SET AE INDICATOR TO 'O'            *
        ///COMMENT:                     ELSE                                       *
        ///COMMENT:                         CHECK KSC-PARTICIPATION-DBF TO SEE IF  *
        ///COMMENT:                             CLIENT IS ON AN OPEN PROGRAM       *
        ///COMMENT:                         IF YES, SET KSC INDICATOR TO 'O'.      *
        ///COMMENT: ****************************************************************
        ///COMMENT:                 'O' INDICATES OWNERSHIP BY ANOTHER SYSTEM,     *
        ///COMMENT:                     PREVENTING CSE FROM CHANGING THE EXISTING  *
        ///COMMENT:                     CLIENT-BASIC-DBF DATA.                     *
        ///COMMENT: ****************************************************************
        ///COMMENT:                 RETURN  CLIENT-SURNAME                         *
        ///COMMENT:                         CLIENT-FIRST-NAME                      *
        ///COMMENT:                         CLIENT-MIDDLE-INITIAL                  *
        ///COMMENT:                         CLIENT-SOCIAL-SECURITY-NUMBER          *
        ///COMMENT:                         CLIENT-DATE-OF-BIRTH                   *
        ///COMMENT:                         CLIENT-SEX                             *
        ///COMMENT:                         CLIENT-SYSTEM-PARTICIPATION-INDICATORS *
        ///COMMENT:                         ABEND-FIELDS.                          *
        ///COMMENT:                                                                *
        ///COMMENT:       CREATED:  18-JUL-95.                                     *
        ///COMMENT:            BY:  CTG/CEB.                                       *
        ///COMMENT:                                                                *
        ///COMMENT: ** MAINTENANCE *************************************************
        ///COMMENT:                   CHANGE                                       *
        ///COMMENT:                   CONTRL                                       *
        ///COMMENT:  DATE     AUTHOR  NUMBER  DESCRIPTION                          *
        ///COMMENT:  -------  ------  ------  ------------------------------------ *
        ///COMMENT:                                                                *
        ///COMMENT: ****************************************************************
        ///COMMENT: 0000-ADABAS-ROUTINE.
        ///COMMENT:     MOVE SPACES TO MV-ABEND-FIELDS.
        ///COMMENT: ****************************************************************
        ///COMMENT:                                                                *
        ///COMMENT:  INCLUDE NAME:  SWCSZG72 (FROM SWEXGR17).                      *
        ///COMMENT:                                                                *
        ///COMMENT:      EAB NAME:  SWEXGR17.                                      *
        ///COMMENT:                                                                *
        ///COMMENT:   DESCRIPTION:  ADABAS INITIALIZATION.                         *
        ///COMMENT:                                                                *
        ///COMMENT:       ACTIONS:  RELEASES ANY OUTSTANDING COMMAND ID'S.         *
        ///COMMENT:                 THIS ROUTINE REQUIRES INCLUDE SWCSZ053 IN THE  *
        ///COMMENT:                   WORKING-STORAGE SECTION OF THIS PROGRAM.     *
        ///COMMENT:                                                                *
        ///COMMENT:       CREATED:  2009-12-29.                                    *
        ///COMMENT:            BY:  DDUPREE.                                       *
        ///COMMENT:                                                                *
        ///COMMENT: ** MAINTENANCE *************************************************
        ///COMMENT:                   CHANGE                                       *
        ///COMMENT:                   CONTRL                                       *
        ///COMMENT:  DATE     AUTHOR  NUMBER  DESCRIPTION                          *
        ///COMMENT:  -------  ------  ------  ------------------------------------ *
        ///COMMENT:                                                                *
        ///COMMENT: ****************************************************************
        ///COMMENT:     MOVE DATE-0002 TO MV-CCYYMMDD.
        ///COMMENT:     COMPUTE MV-COMPLIMENT-DATE = 99999999 - MV-CCYYMMDD.
        ///COMMENT: *****************************************************************
        ///COMMENT: *** MOVE IMPORT FIELDS TO WORKING-STORAGE FIELDS.
        ///COMMENT: *****************************************************************
        ///COMMENT:     MOVE NUMBER-0001 TO MV-CLIENT-NUMBER-X10.
        ///COMMENT: *****************************************************************
        ///COMMENT: *****************************************************************
        ///COMMENT:     PERFORM 1154-READISN-CLIENT-BASIC-DBF
        ///COMMENT:        THRU 1154-READISN-EXIT.
        ///COMMENT:     IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:         GO TO 0000-ADABAS-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE CLIENT-NUMBER154     TO V-CLIENT-ID-KEY149.
        ///COMMENT:     MOVE CLIENT-INFO154       TO V-CLIENT-NAME149.
        ///COMMENT:     MOVE SSN154               TO V-SSN149.
        ///COMMENT:     MOVE DATE-OF-BIRTH154     TO MV-DATE-OF-BIRTH.
        ///COMMENT:     MOVE SEX154               TO MV-SEX.
        ///COMMENT:     MOVE MV-DATE-OF-BIRTH-SEX TO V-DATE-OF-BIRTH-SEX149.
        ///COMMENT:     PERFORM 8154-RELISN-CLIENT-BASIC-DBF
        ///COMMENT:        THRU 8154-RELISN-EXIT.
        ///COMMENT:     IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:          GO TO 0000-ADABAS-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     PERFORM 1149F-READLOG-CLIENT-DBF
        ///COMMENT:        THRU 1149F-READLOG-EXIT.
        ///COMMENT:     IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:         GO TO 0000-ADABAS-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE SPACES               TO CLIENT-POINTER-11-31149.
        ///COMMENT:     IF EOF149 OR
        ///COMMENT:        CLIENT-ID-KEY149 NOT = V-CLIENT-ID-KEY149
        ///COMMENT:         MOVE 'A'   TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 149   TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE ' NF' TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE ZERO  TO MV-ADA-RESPONSE-CD
        ///COMMENT:         GO TO 0000-ADABAS-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE '00000000'           TO MV-DATE-OF-BIRTH.
        ///COMMENT:     IF DATE-OF-BIRTH154 NUMERIC AND
        ///COMMENT:        DATE-OF-BIRTH154 > '00000000'
        ///COMMENT:         MOVE DATE-OF-BIRTH154 TO MV-DATE-OF-BIRTH
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE SSN154               TO MV-SSN.
        ///COMMENT:     MOVE CLIENT-INFO154       TO MV-CLIENT-NAME.
        ///COMMENT:     MOVE CIS-REPL-IND154      TO MV-REPL-IND.
        ///COMMENT:     MOVE CLIENT-POINTER149    TO MV-CLIENT-POINTER.
        ///COMMENT:     PERFORM 7000-CHECK-AE-PARTICIPATION
        ///COMMENT:        THRU 7000-EXIT.
        ///COMMENT:     IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:         GO TO 0000-ADABAS-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT: *****************************************************************
        ///COMMENT: *** MOVE WORKING-STORAGE FIELDS TO EXPORT FIELDS.
        ///COMMENT: *****************************************************************
        ///COMMENT:     MOVE MV-SEX               TO SEX-0003.
        ///COMMENT:     MOVE MV-DATE-OF-BIRTH     TO DOB-0003XX.
        ///COMMENT:     MOVE MV-SSN-X9            TO SSN-0003.
        ///COMMENT:     MOVE MV-CLIENT-GIVEN-NAME TO FIRST-NAME-0003.
        ///COMMENT:     MOVE MV-CLIENT-INITIAL    TO MIDDLE-INITIAL-0003.
        ///COMMENT:     MOVE MV-CLIENT-SURNAME    TO LAST-NAME-0003.
        ///COMMENT:     MOVE MV-CLIENT-NUMBER-X10 TO NUMBER-0003.
        ///COMMENT:     MOVE MV-SYS-PART-AE       TO FLAG-0005.
        ///COMMENT:     MOVE MV-SYS-PART-CSE      TO FLAG-0006.
        ///COMMENT:     MOVE MV-SYS-PART-KANPAY   TO FLAG-0007.
        ///COMMENT:     MOVE MV-SYS-PART-KSCARES  TO FLAG-0008.
        ///COMMENT:     MOVE MV-REPL-IND          TO REPLICATION-INDICATOR-0003.
        ///COMMENT: *****************************************************************
        ///COMMENT: *****************************************************************
        ///COMMENT:     GO TO 0000-ADABAS-EXIT.
        ///COMMENT: 1149F-READLOG-CLIENT-DBF.
        ///COMMENT:     @READLOGICAL149  FIRST.
        ///COMMENT:     IF RESPONSE-CODE149 > ZERO AND NOT EOF149
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 149              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RLF'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE149 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 1149F-READLOG-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 1154-READISN-CLIENT-BASIC-DBF.
        ///COMMENT:     @READISN154  ISN = MV-CLIENT-NUMBER.
        ///COMMENT:     IF RESPONSE-CODE154 > ZERO
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 154              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RI '            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE154 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 1154-READISN-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 8154-RELISN-CLIENT-BASIC-DBF.
        ///COMMENT:      @RELISN154.
        ///COMMENT:      IF RESPONSE-CODE154 > ZERO
        ///COMMENT:         MOVE 'A'               TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 154               TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE ' RI'             TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE154  TO MV-ADA-RESPONSE-CD
        ///COMMENT:      END-IF.
        ///COMMENT: 8154-RELISN-EXIT.
        ///COMMENT:      EXIT.
        ///COMMENT: 7000-CHECK-AE-PARTICIPATION.
        ///COMMENT:     MOVE MV-CLIENT-NUMBER-X10 TO V-CLIENT-NUMBER161.
        ///COMMENT:     PERFORM 8161F-READLOG-PART-DBF
        ///COMMENT:        THRU 8161F-READLOG-EXIT.
        ///COMMENT: 7000-CHECK-AE-PART-LOOP.
        ///COMMENT:     IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:         GO TO 7000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     IF EOF161 OR
        ///COMMENT:        CLIENT-NUMBER161 NOT = V-CLIENT-NUMBER161
        ///COMMENT:         GO TO 7000-CHECK-KSC-CASE-COMP
        ///COMMENT:     END-IF.
        ///COMMENT: *************************** WILL OPEN   AFTER  TODAY ************
        ///COMMENT:     IF PART-START-DATE161 > MV-CCYYMMDD OR
        ///COMMENT: *************************** WAS  CLOSED BEFORE TODAY ************
        ///COMMENT:        PART-END-DATE161   < MV-CCYYMMDD
        ///COMMENT:         GO TO 7000-CHECK-AE-PART-CONT
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE 'O' TO MV-SYS-PART-AE.
        ///COMMENT:     GO TO 7000-EXIT.
        ///COMMENT: 7000-CHECK-AE-PART-CONT.
        ///COMMENT:     PERFORM 8161N-READLOG-PART-DBF
        ///COMMENT:        THRU 8161N-READLOG-EXIT.
        ///COMMENT:     GO TO 7000-CHECK-AE-PART-LOOP.
        ///COMMENT: 7000-CHECK-KSC-CASE-COMP.
        ///COMMENT: *****************************************************************
        ///COMMENT: *** REMOVE THE NEXT STATEMENT IF YOU NEED TO CHECK KSC OWNERSHIP.
        ///COMMENT: *** GO TO 7000-EXIT.
        ///COMMENT: *****************************************************************
        ///COMMENT:     MOVE MV-CLIENT-NUMBER-X10 TO V-CLIENT-INFO114.
        ///COMMENT:     PERFORM 8114F-READLOG-KCC-DBF
        ///COMMENT:        THRU 8114F-EXIT.
        ///COMMENT: 7000-CHECK-KSC-CASE-COMP-LOOP.
        ///COMMENT:     IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:         GO TO 7000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     IF EOF114 OR
        ///COMMENT: ****************************** WAS CLOSED BEFORE TODAY **********
        ///COMMENT:        CASE-CLOSE-DT-COMP114 > MV-COMPLIMENT-DATE
        ///COMMENT:         GO TO 7000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE SPACES TO MV-CLIENT-INFO-NUMBER.
        ///COMMENT:     PERFORM
        ///COMMENT:         VARYING MV-KCC-PTR FROM 1 BY 1
        ///COMMENT:           UNTIL MV-KCC-PTR > C-CLIENT-INFO114
        ///COMMENT:              OR MV-CLIENT-INFO-NUMBER =
        ///COMMENT:                 MV-CLIENT-NUMBER-X10
        ///COMMENT:         MOVE CLIENT-INFO114 (MV-KCC-PTR) TO
        ///COMMENT:              MV-CLIENT-INFO-NUMBER
        ///COMMENT:     END-PERFORM.
        ///COMMENT:     IF MV-CLIENT-INFO-NUMBER NOT = MV-CLIENT-NUMBER-X10
        ///COMMENT:         GO TO 7000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT: ************************ WILL OPEN AFTER TODAY ******************
        ///COMMENT:     IF CASE-OPEN-DT114 > MV-CCYYMMDD
        ///COMMENT:         GO TO 7000-CHECK-KSC-CASE-COMP-CONT
        ///COMMENT:     END-IF.
        ///COMMENT: 7000-CHECK-KSC-PARTICIPATION.
        ///COMMENT:     MOVE MV-CLIENT-NUMBER-X10 TO V-CLIENT-ID113.
        ///COMMENT:     PERFORM 8113F-READLOG-KPART-DBF
        ///COMMENT:        THRU 8113F-EXIT.
        ///COMMENT: 7000-CHECK-KSC-PART-LOOP.
        ///COMMENT:     IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:         GO TO 7000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     IF EOF113 OR
        ///COMMENT:        CLIENT-ID113 NOT = V-CLIENT-ID113
        ///COMMENT:         GO TO 7000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT: ************************* WILL OPEN   AFTER  TODAY **************
        ///COMMENT:     IF PART-OPEN-DT113  > MV-CCYYMMDD OR
        ///COMMENT: ************************* WAS  CLOSED BEFORE TODAY **************
        ///COMMENT:        PART-CLOSE-DT113 < MV-CCYYMMDD
        ///COMMENT:         GO TO 7000-CHECK-KSC-PART-CONT
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE 'O' TO MV-SYS-PART-KSCARES.
        ///COMMENT:     GO TO 7000-EXIT.
        ///COMMENT: 7000-CHECK-KSC-PART-CONT.
        ///COMMENT:     PERFORM 8113N-READLOG-KPART-DBF
        ///COMMENT:        THRU 8113N-EXIT.
        ///COMMENT:     GO TO 7000-CHECK-KSC-PART-LOOP.
        ///COMMENT: 7000-CHECK-KSC-CASE-COMP-CONT.
        ///COMMENT:     PERFORM 8114N-READLOG-KCC-DBF
        ///COMMENT:        THRU 8114N-EXIT.
        ///COMMENT:     GO TO 7000-CHECK-KSC-CASE-COMP-LOOP.
        ///COMMENT: 7000-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 8113F-READLOG-KPART-DBF.
        ///COMMENT:     @READLOGICAL113   FIRST.
        ///COMMENT:     IF RESPONSE-CODE113 > ZERO AND NOT EOF113
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 113              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RLF'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE113 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 8113F-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 8113N-READLOG-KPART-DBF.
        ///COMMENT:     @READLOGICAL113.
        ///COMMENT:     IF RESPONSE-CODE113 > ZERO AND NOT EOF113
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 113              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RL '            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE113 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 8113N-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 8114F-READLOG-KCC-DBF.
        ///COMMENT:     @READLOGICAL114   FIRST.
        ///COMMENT:     IF RESPONSE-CODE114 > ZERO AND NOT EOF114
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 114              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RLF'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE114 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 8114F-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 8114N-READLOG-KCC-DBF.
        ///COMMENT:     @READLOGICAL114.
        ///COMMENT:     IF RESPONSE-CODE114 > ZERO AND NOT EOF114
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 114              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RL '            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE114 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 8114N-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 8161F-READLOG-PART-DBF.
        ///COMMENT:     @READLOGICAL161   FIRST.
        ///COMMENT:     IF RESPONSE-CODE161 > ZERO AND NOT EOF161
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 161              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RLF'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE161 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 8161F-READLOG-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 8161N-READLOG-PART-DBF.
        ///COMMENT:     @READLOGICAL161.
        ///COMMENT:     IF RESPONSE-CODE161 > ZERO AND NOT EOF161
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 161              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RL '            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE161 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 8161N-READLOG-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 0000-ADABAS-EXIT.
        ///COMMENT:     IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:         MOVE MV-ABEND-TYPE       TO TYPE-0004
        ///COMMENT:         MOVE MV-ADA-FILE-NUMBER  TO ADABAS-FILE-NUMBER-0004
        ///COMMENT:         MOVE MV-ADA-FILE-ACTION  TO ADABAS-FILE-ACTION-0004
        ///COMMENT:         MOVE MV-ADA-RESPONSE-CD  TO ADABAS-RESPONSE-CD-0004
        ///COMMENT:     END-IF.
        ///COMMENT:     EXIT.
        /// </remarks>
        private void M_PARA_0309595259_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0309595259_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0309595259_EXIT") { M_PARA_0309595259_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0309595259_INIT
        /// </summary>
        private void M_PARA_0309595259_INIT(string returnMethod = "")
        {
            LS.EXPORT_0003EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0003EV
            LS.EXPORT_0004EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0004EV
            LS.EXPORT_AE_0005EV.ResetToInitialValue();                                                          //COBOL==> INITIALIZE EXPORT-AE-0005EV
            LS.EXPORT_CSE_0006EV.ResetToInitialValue();                                                         //COBOL==> INITIALIZE EXPORT-CSE-0006EV
            LS.EXPORT_KANPAY_0007EV.ResetToInitialValue();                                                      //COBOL==> INITIALIZE EXPORT-KANPAY-0007EV
            LS.EXPORT_KSCARES_0008EV.ResetToInitialValue();                                                     //COBOL==> INITIALIZE EXPORT-KSCARES-0008EV .
            if (returnMethod != "" && returnMethod != "M_PARA_0309595259_INIT") { M_PARA_0309595259_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0309595259_INIT_EXIT
        /// </summary>
        private void M_PARA_0309595259_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0309595259_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
