#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2021
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2021-12-07 03:13:25 PM
   **        *   FROM COBOL PGM   :  SWEXGE05
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                              COOL:GEN
               COPYRIGHT 2001, STERLING SOFTWARE, INC.
       NAME: CO_B800_HARDCOPY_REPORT          DATE: 2001/01/26
       TARGET OS:   MVS                       TIME: 14:30:33
       TARGET DBMS: DB2                       USER: SWSRGAD
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
       HIGH PERFORMANCE VIEW PASSING NOT SELECTED
       NO LAST-STATEMENT-NUM EXECUTION SELECTED
       ENFORCE DEFAULT VALUES WITH DBMS NOT SELECTED
       INIT UNSPECIFIED OPTIONAL FIELDS TO NULL NOT SELECTED
   **************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.IO.Common;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
using MDSY.Framework.IO.Common;
#endregion

namespace GOV.KS.DCF.CSS.Common.BL
{
    #region File Section Class
    internal class SWEXGE05_fd : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string FileSection = "SWEXGE05_fd_FileSection";
            internal const string RPT_FILE = "RPT_FILE";
            internal const string RPT_REC = "RPT_REC";
            internal const string RPT_REC_DATA = "RPT_REC_DATA";
        }
        #endregion

        #region Direct-access element properties
        public IFileLink RPT_FILE { get; set; }
        public IGroup RPT_REC { get { return GetElementByName<IGroup>(Names.RPT_REC); } }
        public IField RPT_REC_DATA { get { return GetElementByName<IField>(Names.RPT_REC_DATA); } }


        internal SWEXGE05_ws WS;
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the FileSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.RPT_REC, (RPT_REC) =>
           {
               RPT_REC.CreateNewField(Names.RPT_REC_DATA, FieldType.String, 132);
           });

        }

        protected override string GetRecordName()
        {
            return Names.FileSection;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            IFileHandler FileHandler = InversionContainer.GetImplementingObject<IFileHandler>();

            RPT_FILE = FileHandler.GetFile("RPTFL");
            RPT_FILE.StatusField = WS.RPT_FILE_STAT;
            RPT_FILE.AssociatedBuffer = RPT_REC;
        }
        #endregion

        #region Constructors
        public SWEXGE05_fd(SWEXGE05_ws ws)
            : base()
        {
            this.WS = ws;
            Initialize();

        }
        #endregion
    }
    #endregion File Section Class
    #region Working Storage Class
    internal class SWEXGE05_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXGE05_ws_WorkingStorage";
            internal const string RPT_FILE_STAT = "RPT_FILE_STAT";
        }
        #endregion

        #region Direct-access element properties
        public IField RPT_FILE_STAT { get { return GetElementByName<IField>(Names.RPT_FILE_STAT); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.RPT_FILE_STAT, FieldType.String, 2);

        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXGE05_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXGE05_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string W_IA = "W_IA";
            internal const string A_0363088934_IA = "A_0363088934_IA";
            internal const string IMPORT_0001EV = "IMPORT_0001EV";
            internal const string EAB_FILE_HANDLING_0001ET = "EAB_FILE_HANDLING_0001ET";
            internal const string ACTION_0001 = "ACTION_0001";
            internal const string ACTION_0001XX = "ACTION_0001XX";
            internal const string IMPORT_0002EV = "IMPORT_0002EV";
            internal const string REPORT_DATA_0002ET = "REPORT_DATA_0002ET";
            internal const string LINE_TEXT_0002 = "LINE_TEXT_0002";
            internal const string LINE_TEXT_0002XX = "LINE_TEXT_0002XX";
            internal const string W_OA = "W_OA";
            internal const string A_0363088935_OA = "A_0363088935_OA";
            internal const string EXPORT_0003EV = "EXPORT_0003EV";
            internal const string EAB_FILE_HANDLING_0003ET = "EAB_FILE_HANDLING_0003ET";
            internal const string STATUS_0003 = "STATUS_0003";
            internal const string STATUS_0003XX = "STATUS_0003XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup W_IA { get { return GetElementByName<IGroup>(Names.W_IA); } }
        public IGroup A_0363088934_IA { get { return GetElementByName<IGroup>(Names.A_0363088934_IA); } }
        public IGroup IMPORT_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_0001EV); } }
        public IGroup EAB_FILE_HANDLING_0001ET { get { return GetElementByName<IGroup>(Names.EAB_FILE_HANDLING_0001ET); } }
        public IField ACTION_0001 { get { return GetElementByName<IField>(Names.ACTION_0001); } }
        public IField ACTION_0001XX { get { return GetElementByName<IField>(Names.ACTION_0001XX); } }
        public IGroup IMPORT_0002EV { get { return GetElementByName<IGroup>(Names.IMPORT_0002EV); } }
        public IGroup REPORT_DATA_0002ET { get { return GetElementByName<IGroup>(Names.REPORT_DATA_0002ET); } }
        public IField LINE_TEXT_0002 { get { return GetElementByName<IField>(Names.LINE_TEXT_0002); } }
        public IField LINE_TEXT_0002XX { get { return GetElementByName<IField>(Names.LINE_TEXT_0002XX); } }
        public IGroup W_OA { get { return GetElementByName<IGroup>(Names.W_OA); } }
        public IGroup A_0363088935_OA { get { return GetElementByName<IGroup>(Names.A_0363088935_OA); } }
        public IGroup EXPORT_0003EV { get { return GetElementByName<IGroup>(Names.EXPORT_0003EV); } }
        public IGroup EAB_FILE_HANDLING_0003ET { get { return GetElementByName<IGroup>(Names.EAB_FILE_HANDLING_0003ET); } }
        public IField STATUS_0003 { get { return GetElementByName<IField>(Names.STATUS_0003); } }
        public IField STATUS_0003XX { get { return GetElementByName<IField>(Names.STATUS_0003XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
           {
               PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
               PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
               {
                   PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
               });
           });

            recordDef.CreateNewGroup(Names.W_IA, (W_IA) =>
           {
               W_IA.CreateNewGroup(Names.A_0363088934_IA, (A_0363088934_IA) =>
               {
                   A_0363088934_IA.CreateNewGroup(Names.IMPORT_0001EV, (IMPORT_0001EV) =>
                   {
                       IMPORT_0001EV.CreateNewGroup(Names.EAB_FILE_HANDLING_0001ET, (EAB_FILE_HANDLING_0001ET) =>
                       {

                           IField ACTION_0001_local = EAB_FILE_HANDLING_0001ET.CreateNewField(Names.ACTION_0001, FieldType.String, 8);
                           EAB_FILE_HANDLING_0001ET.CreateNewFieldRedefine(Names.ACTION_0001XX, FieldType.String, ACTION_0001_local, 8);
                       });
                   });
                   A_0363088934_IA.CreateNewGroup(Names.IMPORT_0002EV, (IMPORT_0002EV) =>
                   {
                       IMPORT_0002EV.CreateNewGroup(Names.REPORT_DATA_0002ET, (REPORT_DATA_0002ET) =>
                       {

                           IField LINE_TEXT_0002_local = REPORT_DATA_0002ET.CreateNewField(Names.LINE_TEXT_0002, FieldType.String, 132);
                           REPORT_DATA_0002ET.CreateNewFieldRedefine(Names.LINE_TEXT_0002XX, FieldType.String, LINE_TEXT_0002_local, 132);
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.W_OA, (W_OA) =>
           {
               W_OA.CreateNewGroup(Names.A_0363088935_OA, (A_0363088935_OA) =>
               {
                   A_0363088935_OA.CreateNewGroup(Names.EXPORT_0003EV, (EXPORT_0003EV) =>
                   {
                       EXPORT_0003EV.CreateNewGroup(Names.EAB_FILE_HANDLING_0003ET, (EAB_FILE_HANDLING_0003ET) =>
                       {

                           IField STATUS_0003_local = EAB_FILE_HANDLING_0003ET.CreateNewField(Names.STATUS_0003, FieldType.String, 8);
                           EAB_FILE_HANDLING_0003ET.CreateNewFieldRedefine(Names.STATUS_0003XX, FieldType.String, STATUS_0003_local, 8);
                       });
                   });
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(IEF_RUNTIME_PARM1, args, 0);
            SetPassedParm(IEF_RUNTIME_PARM2, args, 1);
            SetPassedParm(W_IA, args, 2);
            SetPassedParm(W_OA, args, 3);
            SetPassedParm(PSMGR_EAB_DATA, args, 4);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(IEF_RUNTIME_PARM1, args, 0);
            SetReturnParm(IEF_RUNTIME_PARM2, args, 1);
            SetReturnParm(W_IA, args, 2);
            SetReturnParm(W_OA, args, 3);
            SetReturnParm(PSMGR_EAB_DATA, args, 4);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXGE05 : EABBase
    {

        #region Public Constructors
        public SWEXGE05()
            : base()
        {
            this.ProgramName.SetValue("SWEXGE05");

            WS = new SWEXGE05_ws();
            FD = new SWEXGE05_fd(WS);
            LS = new SWEXGE05_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXGE05_ws WS;

        //==== File Data Class ========================================
        private SWEXGE05_fd FD;

        //==== Linkage Section Data Class ========================================
        private SWEXGE05_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING IEF-RUNTIME-PARM1 , IEF-RUNTIME-PARM2 , W-IA , W-OA , PSMGR-EAB-DATA.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0363088931(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0363088931
        /// </summary>
        private void M_MAIN_0363088931(string returnMethod = "")
        {
            M_PARA_0363088931_INIT("M_PARA_0363088931_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0363088931-INIT THRU PARA-0363088931-INIT-EXIT
            M_PARA_0363088931("M_PARA_0363088931_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0363088931 THRU PARA-0363088931-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0363088931
        /// </summary>
        private void M_PARA_0363088931(string returnMethod = "")
        {
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            //COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            // EvaluateList !LS.ACTION_0001!                                                                    //COBOL==> EVALUATE ACTION-0001
            if ((LS.ACTION_0001.IsEqualTo("OPEN")))                                                             //COBOL==> WHEN 'OPEN'
            {
                FD.RPT_FILE.OpenFile(FileAccessMode.Write);                                                         //COBOL==> OPEN OUTPUT RPT-FILE
                if (WS.RPT_FILE_STAT.IsEqualTo("00"))                                                               //COBOL==> IF RPT-FILE-STAT = '00'
                {
                    LS.STATUS_0003.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0003
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.STATUS_0003.SetValue(WS.RPT_FILE_STAT);                                                          //COBOL==> MOVE RPT-FILE-STAT TO STATUS-0003
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                //COBOL==> WHEN 'WRITE'
            else
            if ((LS.ACTION_0001.IsEqualTo("WRITE")))
            {
                FD.RPT_REC_DATA.SetValue(LS.LINE_TEXT_0002);                                                        //COBOL==> MOVE LINE-TEXT-0002 TO RPT-REC-DATA
                FD.RPT_FILE.WriteLine(FD.RPT_REC.AsBytes);                                                          //COBOL==> WRITE RPT-REC
                if (WS.RPT_FILE_STAT.IsEqualTo("00"))                                                               //COBOL==> IF RPT-FILE-STAT = '00'
                {
                    LS.STATUS_0003.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0003
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.STATUS_0003.SetValue(WS.RPT_FILE_STAT);                                                          //COBOL==> MOVE RPT-FILE-STAT TO STATUS-0003
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                //COBOL==> WHEN 'CLOSE'
            else
            if ((LS.ACTION_0001.IsEqualTo("CLOSE")))
            {
                FD.RPT_FILE.CloseFile();                                                                            //COBOL==> CLOSE RPT-FILE
                if (WS.RPT_FILE_STAT.IsEqualTo("00"))                                                               //COBOL==> IF RPT-FILE-STAT = '00'
                {
                    LS.STATUS_0003.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0003
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.STATUS_0003.SetValue(WS.RPT_FILE_STAT);                                                          //COBOL==> MOVE RPT-FILE-STAT TO STATUS-0003
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                LS.STATUS_0003.SetValue("99");                                                                      //COBOL==> MOVE '99' TO STATUS-0003
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_PARA_0363088931") { M_PARA_0363088931_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0363088931_EXIT
        /// </summary>
        private void M_PARA_0363088931_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0363088931_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0363088931_EXIT") { M_PARA_0363088931_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0363088931_INIT
        /// </summary>
        private void M_PARA_0363088931_INIT(string returnMethod = "")
        {
            LS.EXPORT_0003EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0003EV .
            if (returnMethod != "" && returnMethod != "M_PARA_0363088931_INIT") { M_PARA_0363088931_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0363088931_INIT_EXIT
        /// </summary>
        private void M_PARA_0363088931_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0363088931_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
