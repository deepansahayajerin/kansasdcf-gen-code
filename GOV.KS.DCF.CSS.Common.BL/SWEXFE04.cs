#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2021
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2021-12-07 03:11:33 PM
   **        *   FROM COBOL PGM   :  SWEXFE04
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                              COOL:GEN
               COPYRIGHT 1999, STERLING SOFTWARE, INC.
       NAME: EAB_WRITE_FED_REFUND_RECORD      DATE: 1999/02/26
       TARGET OS:   MVS                       TIME: 15:40:53
       TARGET DBMS: DB2                       USER: SWSRPDP
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
       HIGH PERFORMANCE VIEW PASSING NOT SELECTED
       LAST-STATEMENT-NUM EXECUTION SELECTED
       ENFORCE DEFAULT VALUES WITH DBMS SELECTED
       INIT UNSPECIFIED OPTIONAL FIELDS TO NULL NOT SELECTED
   **************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.IO.Common;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
using MDSY.Framework.IO.Common;
#endregion

namespace GOV.KS.DCF.CSS.Common.BL
{
    #region File Section Class
    internal class SWEXFE04_fd : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string FileSection = "SWEXFE04_fd_FileSection";
            internal const string OUTFILE = "OUTFILE";
            internal const string OUTFILE_REC = "OUTFILE_REC";
        }
        #endregion

        #region Direct-access element properties
        public IFileLink OUTFILE { get; set; }
        public IField OUTFILE_REC { get { return GetElementByName<IField>(Names.OUTFILE_REC); } }


        internal SWEXFE04_ws WS;
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the FileSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.OUTFILE_REC, FieldType.String, 245);

        }

        protected override string GetRecordName()
        {
            return Names.FileSection;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            IFileHandler FileHandler = InversionContainer.GetImplementingObject<IFileHandler>();

            OUTFILE = FileHandler.GetFile("OUTFILE");
            OUTFILE.StatusField = WS.OUTFILE_STAT;
            OUTFILE.AssociatedBuffer = OUTFILE_REC;
            OUTFILE.RecordLength = 245;
        }
        #endregion

        #region Constructors
        public SWEXFE04_fd(SWEXFE04_ws ws)
            : base()
        {
            this.WS = ws;
            Initialize();

        }
        #endregion
    }
    #endregion File Section Class
    #region Working Storage Class
    internal class SWEXFE04_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXFE04_ws_WorkingStorage";
            internal const string OUTFILE_STAT = "OUTFILE_STAT";
            internal const string WS_OUTFILE_REC = "WS_OUTFILE_REC";
            internal const string WS_SUBMITTING_STATE = "WS_SUBMITTING_STATE";
            internal const string WS_LOCAL_CODE = "WS_LOCAL_CODE";
            internal const string WS_SSN = "WS_SSN";
            internal const string WS_CASE_NUMBER = "WS_CASE_NUMBER";
            internal const string WS_LAST_NAME = "WS_LAST_NAME";
            internal const string WS_FIRST_NAME = "WS_FIRST_NAME";
            internal const string WS_REFUND_AMT = "WS_REFUND_AMT";
            internal const string WS_TRANSACTION_TYPE = "WS_TRANSACTION_TYPE";
            internal const string WS_CASE_TYPE = "WS_CASE_TYPE";
            internal const string WS_TRANSFER_STATE = "WS_TRANSFER_STATE";
            internal const string WS_TRANSFER_LOCAL = "WS_TRANSFER_LOCAL";
            internal const string WS_PROCESSING_YEAR = "WS_PROCESSING_YEAR";
            internal const string WS_ADDRESS_LINE1 = "WS_ADDRESS_LINE1";
            internal const string WS_ADDRESS_LINE2 = "WS_ADDRESS_LINE2";
            internal const string WS_CITY = "WS_CITY";
            internal const string WS_STATE = "WS_STATE";
            internal const string WS_ZIP_9 = "WS_ZIP_9";
            internal const string WS_DATE_ISS_PRE_OFFSET = "WS_DATE_ISS_PRE_OFFSET";
            internal const string WS_OFFSET_EXCLUSION = "WS_OFFSET_EXCLUSION";
            internal const string WS_FILLER = "WS_FILLER";
            internal const string WS_TOTAL_RECORD = "WS_TOTAL_RECORD";
            internal const string WS_SUBMITTING_STATE_T = "WS_SUBMITTING_STATE_T";
            internal const string WS_CONTROL = "WS_CONTROL";
            internal const string WS_TOTAL_TANF_REC = "WS_TOTAL_TANF_REC";
            internal const string WS_TOTAL_NON_TANF_REC = "WS_TOTAL_NON_TANF_REC";
            internal const string WS_AMT_TANF_REC = "WS_AMT_TANF_REC";
            internal const string WS_AMT_NON_TANF_REC = "WS_AMT_NON_TANF_REC";
            internal const string FUNC_0828378317_ESC_FLAG = "FUNC_0828378317_ESC_FLAG";
        }
        #endregion

        #region Direct-access element properties
        public IField OUTFILE_STAT { get { return GetExternalElementByName<IField>(Names.OUTFILE_STAT); } }
        public IGroup WS_OUTFILE_REC { get { return GetElementByName<IGroup>(Names.WS_OUTFILE_REC); } }
        public IField WS_SUBMITTING_STATE { get { return GetElementByName<IField>(Names.WS_SUBMITTING_STATE); } }
        public IField WS_LOCAL_CODE { get { return GetElementByName<IField>(Names.WS_LOCAL_CODE); } }
        public IField WS_SSN { get { return GetElementByName<IField>(Names.WS_SSN); } }
        public IField WS_CASE_NUMBER { get { return GetElementByName<IField>(Names.WS_CASE_NUMBER); } }
        public IField WS_LAST_NAME { get { return GetElementByName<IField>(Names.WS_LAST_NAME); } }
        public IField WS_FIRST_NAME { get { return GetElementByName<IField>(Names.WS_FIRST_NAME); } }
        public IField WS_REFUND_AMT { get { return GetElementByName<IField>(Names.WS_REFUND_AMT); } }
        public IField WS_TRANSACTION_TYPE { get { return GetElementByName<IField>(Names.WS_TRANSACTION_TYPE); } }
        public IField WS_CASE_TYPE { get { return GetElementByName<IField>(Names.WS_CASE_TYPE); } }
        public IField WS_TRANSFER_STATE { get { return GetElementByName<IField>(Names.WS_TRANSFER_STATE); } }
        public IField WS_TRANSFER_LOCAL { get { return GetElementByName<IField>(Names.WS_TRANSFER_LOCAL); } }
        public IField WS_PROCESSING_YEAR { get { return GetElementByName<IField>(Names.WS_PROCESSING_YEAR); } }
        public IField WS_ADDRESS_LINE1 { get { return GetElementByName<IField>(Names.WS_ADDRESS_LINE1); } }
        public IField WS_ADDRESS_LINE2 { get { return GetElementByName<IField>(Names.WS_ADDRESS_LINE2); } }
        public IField WS_CITY { get { return GetElementByName<IField>(Names.WS_CITY); } }
        public IField WS_STATE { get { return GetElementByName<IField>(Names.WS_STATE); } }
        public IField WS_ZIP_9 { get { return GetElementByName<IField>(Names.WS_ZIP_9); } }
        public IField WS_DATE_ISS_PRE_OFFSET { get { return GetElementByName<IField>(Names.WS_DATE_ISS_PRE_OFFSET); } }
        public IField WS_OFFSET_EXCLUSION { get { return GetElementByName<IField>(Names.WS_OFFSET_EXCLUSION); } }
        public IField WS_FILLER { get { return GetElementByName<IField>(Names.WS_FILLER); } }
        public IGroup WS_TOTAL_RECORD { get { return GetElementByName<IGroup>(Names.WS_TOTAL_RECORD); } }
        public IField WS_SUBMITTING_STATE_T { get { return GetElementByName<IField>(Names.WS_SUBMITTING_STATE_T); } }
        public IField WS_CONTROL { get { return GetElementByName<IField>(Names.WS_CONTROL); } }
        public IField WS_TOTAL_TANF_REC { get { return GetElementByName<IField>(Names.WS_TOTAL_TANF_REC); } }
        public IField WS_TOTAL_NON_TANF_REC { get { return GetElementByName<IField>(Names.WS_TOTAL_NON_TANF_REC); } }
        public IField WS_AMT_TANF_REC { get { return GetElementByName<IField>(Names.WS_AMT_TANF_REC); } }
        public IField WS_AMT_NON_TANF_REC { get { return GetElementByName<IField>(Names.WS_AMT_NON_TANF_REC); } }
        public IField FUNC_0828378317_ESC_FLAG { get { return GetElementByName<IField>(Names.FUNC_0828378317_ESC_FLAG); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            WsExternals.Instance.CreateNewField(Names.OUTFILE_STAT, FieldType.UnsignedNumeric, 2);

            recordDef.CreateNewGroup(Names.WS_OUTFILE_REC, (WS_OUTFILE_REC) =>
           {
               WS_OUTFILE_REC.CreateNewField(Names.WS_SUBMITTING_STATE, FieldType.String, 2);
               WS_OUTFILE_REC.CreateNewField(Names.WS_LOCAL_CODE, FieldType.String, 3);
               WS_OUTFILE_REC.CreateNewField(Names.WS_SSN, FieldType.String, 9);
               WS_OUTFILE_REC.CreateNewField(Names.WS_CASE_NUMBER, FieldType.String, 15);
               WS_OUTFILE_REC.CreateNewField(Names.WS_LAST_NAME, FieldType.String, 20);
               WS_OUTFILE_REC.CreateNewField(Names.WS_FIRST_NAME, FieldType.String, 15);
               WS_OUTFILE_REC.CreateNewField(Names.WS_REFUND_AMT, FieldType.String, 8);
               WS_OUTFILE_REC.CreateNewField(Names.WS_TRANSACTION_TYPE, FieldType.String, 1);
               WS_OUTFILE_REC.CreateNewField(Names.WS_CASE_TYPE, FieldType.String, 1);
               WS_OUTFILE_REC.CreateNewField(Names.WS_TRANSFER_STATE, FieldType.String, 2);
               WS_OUTFILE_REC.CreateNewField(Names.WS_TRANSFER_LOCAL, FieldType.String, 3);
               WS_OUTFILE_REC.CreateNewField(Names.WS_PROCESSING_YEAR, FieldType.String, 4);
               WS_OUTFILE_REC.CreateNewField(Names.WS_ADDRESS_LINE1, FieldType.String, 30);
               WS_OUTFILE_REC.CreateNewField(Names.WS_ADDRESS_LINE2, FieldType.String, 30);
               WS_OUTFILE_REC.CreateNewField(Names.WS_CITY, FieldType.String, 25);
               WS_OUTFILE_REC.CreateNewField(Names.WS_STATE, FieldType.String, 2);
               WS_OUTFILE_REC.CreateNewField(Names.WS_ZIP_9, FieldType.String, 9);
               WS_OUTFILE_REC.CreateNewField(Names.WS_DATE_ISS_PRE_OFFSET, FieldType.String, 8);
               WS_OUTFILE_REC.CreateNewField(Names.WS_OFFSET_EXCLUSION, FieldType.String, 40);
               WS_OUTFILE_REC.CreateNewField(Names.WS_FILLER, FieldType.String, 18);
           });

            recordDef.CreateNewGroup(Names.WS_TOTAL_RECORD, (WS_TOTAL_RECORD) =>
           {
               WS_TOTAL_RECORD.CreateNewField(Names.WS_SUBMITTING_STATE_T, FieldType.String, 2, "KS");
               WS_TOTAL_RECORD.CreateNewField(Names.WS_CONTROL, FieldType.String, 3, "CTL");
               WS_TOTAL_RECORD.CreateNewField(Names.WS_TOTAL_TANF_REC, FieldType.UnsignedNumeric, 9, ZERO);
               WS_TOTAL_RECORD.CreateNewField(Names.WS_TOTAL_NON_TANF_REC, FieldType.UnsignedNumeric, 9, ZERO);
               WS_TOTAL_RECORD.CreateNewField(Names.WS_AMT_TANF_REC, FieldType.UnsignedNumeric, 11, ZERO);
               WS_TOTAL_RECORD.CreateNewField(Names.WS_AMT_NON_TANF_REC, FieldType.UnsignedNumeric, 11, ZERO);
               WS_TOTAL_RECORD.CreateNewFillerField(FieldType.String, 200, SPACES);
           });
            recordDef.CreateNewField(Names.FUNC_0828378317_ESC_FLAG, FieldType.String, 1);

        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXFE04_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXFE04_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string W_IA = "W_IA";
            internal const string A_0828378320_IA = "A_0828378320_IA";
            internal const string IMPORT_0001EV = "IMPORT_0001EV";
            internal const string FDSO_NTFY_FED_REF_TAPE__0001ET = "FDSO_NTFY_FED_REF_TAPE__0001ET";
            internal const string SUBMITTING_STATE_0001AS = "SUBMITTING_STATE_0001AS";
            internal const string SUBMITTING_STATE_0001 = "SUBMITTING_STATE_0001";
            internal const string SUBMITTING_STATE_0001XX = "SUBMITTING_STATE_0001XX";
            internal const string LOCAL_CODE_0001AS = "LOCAL_CODE_0001AS";
            internal const string LOCAL_CODE_0001 = "LOCAL_CODE_0001";
            internal const string LOCAL_CODE_0001XX = "LOCAL_CODE_0001XX";
            internal const string SSN_0001AS = "SSN_0001AS";
            internal const string SSN_0001 = "SSN_0001";
            internal const string SSN_0001XX = "SSN_0001XX";
            internal const string CASE_NUMBER_0001AS = "CASE_NUMBER_0001AS";
            internal const string CASE_NUMBER_0001 = "CASE_NUMBER_0001";
            internal const string CASE_NUMBER_0001XX = "CASE_NUMBER_0001XX";
            internal const string LAST_NAME_0001AS = "LAST_NAME_0001AS";
            internal const string LAST_NAME_0001 = "LAST_NAME_0001";
            internal const string LAST_NAME_0001XX = "LAST_NAME_0001XX";
            internal const string FIRST_NAME_0001AS = "FIRST_NAME_0001AS";
            internal const string FIRST_NAME_0001 = "FIRST_NAME_0001";
            internal const string FIRST_NAME_0001XX = "FIRST_NAME_0001XX";
            internal const string REFUND_AMOUNT_0001AS = "REFUND_AMOUNT_0001AS";
            internal const string REFUND_AMOUNT_0001 = "REFUND_AMOUNT_0001";
            internal const string REFUND_AMOUNT_0001XX = "REFUND_AMOUNT_0001XX";
            internal const string TRANSACTION_TYPE_0001AS = "TRANSACTION_TYPE_0001AS";
            internal const string TRANSACTION_TYPE_0001 = "TRANSACTION_TYPE_0001";
            internal const string TRANSACTION_TYPE_0001XX = "TRANSACTION_TYPE_0001XX";
            internal const string CASE_TYPE_0001AS = "CASE_TYPE_0001AS";
            internal const string CASE_TYPE_0001 = "CASE_TYPE_0001";
            internal const string CASE_TYPE_0001XX = "CASE_TYPE_0001XX";
            internal const string TRANSFER_STATE_0001AS = "TRANSFER_STATE_0001AS";
            internal const string TRANSFER_STATE_0001 = "TRANSFER_STATE_0001";
            internal const string TRANSFER_STATE_0001XX = "TRANSFER_STATE_0001XX";
            internal const string TRANSFER_LOCAL_CODE_0001AS = "TRANSFER_LOCAL_CODE_0001AS";
            internal const string TRANSFER_LOCAL_CODE_0001 = "TRANSFER_LOCAL_CODE_0001";
            internal const string TRANSFER_LOCAL_CODE_0001XX = "TRANSFER_LOCAL_CODE_0001XX";
            internal const string PROCESS_YEAR_0001AS = "PROCESS_YEAR_0001AS";
            internal const string PROCESS_YEAR_0001 = "PROCESS_YEAR_0001";
            internal const string PROCESS_YEAR_0001XX = "PROCESS_YEAR_0001XX";
            internal const string ADDRESS_LINE1_0001AS = "ADDRESS_LINE1_0001AS";
            internal const string ADDRESS_LINE1_0001 = "ADDRESS_LINE1_0001";
            internal const string ADDRESS_LINE1_0001XX = "ADDRESS_LINE1_0001XX";
            internal const string ADDRESS_LINE2_0001AS = "ADDRESS_LINE2_0001AS";
            internal const string ADDRESS_LINE2_0001 = "ADDRESS_LINE2_0001";
            internal const string ADDRESS_LINE2_0001XX = "ADDRESS_LINE2_0001XX";
            internal const string CITY_0001AS = "CITY_0001AS";
            internal const string CITY_0001 = "CITY_0001";
            internal const string CITY_0001XX = "CITY_0001XX";
            internal const string STATE_CODE_0001AS = "STATE_CODE_0001AS";
            internal const string STATE_CODE_0001 = "STATE_CODE_0001";
            internal const string STATE_CODE_0001XX = "STATE_CODE_0001XX";
            internal const string ZIP_CODE_9_0001AS = "ZIP_CODE_9_0001AS";
            internal const string ZIP_CODE_9_0001 = "ZIP_CODE_9_0001";
            internal const string ZIP_CODE_9_0001XX = "ZIP_CODE_9_0001XX";
            internal const string DATE_ISSUED_PRE_OFFSET_0001AS = "DATE_ISSUED_PRE_OFFSET_0001AS";
            internal const string DATE_ISSUED_PRE_OFFSET_0001 = "DATE_ISSUED_PRE_OFFSET_0001";
            internal const string DATE_ISSUED_PRE_OFFSET_0001XX = "DATE_ISSUED_PRE_OFFSET_0001XX";
            internal const string OFFSET_EXCLUSION_INDICA_0002AS = "OFFSET_EXCLUSION_INDICA_0002AS";
            internal const string OFFSET_EXCLUSION_INDICATO_0002 = "OFFSET_EXCLUSION_INDICATO_0002";
            internal const string OFFSET_EXCLUSION_INDICA_0002XX = "OFFSET_EXCLUSION_INDICA_0002XX";
            internal const string FILLER_0002AS = "FILLER_0002AS";
            internal const string FILLER_0002 = "FILLER_0002";
            internal const string FILLER_0002XX = "FILLER_0002XX";
            internal const string IMPORT_EXTERNAL_PARMS_0003EV = "IMPORT_EXTERNAL_PARMS_0003EV";
            internal const string EXTERNAL_0003ET = "EXTERNAL_0003ET";
            internal const string FILE_INSTRUCTION_0003AS = "FILE_INSTRUCTION_0003AS";
            internal const string FILE_INSTRUCTION_0003 = "FILE_INSTRUCTION_0003";
            internal const string FILE_INSTRUCTION_0003XX = "FILE_INSTRUCTION_0003XX";
            internal const string NUMERIC_RETURN_CODE_0003AS = "NUMERIC_RETURN_CODE_0003AS";
            internal const string NUMERIC_RETURN_CODE_0003 = "NUMERIC_RETURN_CODE_0003";
            internal const string NUMERIC_RETURN_CODE_0003XX = "NUMERIC_RETURN_CODE_0003XX";
            internal const string TEXT_RETURN_CODE_0003AS = "TEXT_RETURN_CODE_0003AS";
            internal const string TEXT_RETURN_CODE_0003 = "TEXT_RETURN_CODE_0003";
            internal const string TEXT_RETURN_CODE_0003XX = "TEXT_RETURN_CODE_0003XX";
            internal const string TEXT_LINE_130_0003AS = "TEXT_LINE_130_0003AS";
            internal const string TEXT_LINE_130_0003 = "TEXT_LINE_130_0003";
            internal const string TEXT_LINE_130_0003XX = "TEXT_LINE_130_0003XX";
            internal const string TEXT_LINE_80_0003AS = "TEXT_LINE_80_0003AS";
            internal const string TEXT_LINE_80_0003 = "TEXT_LINE_80_0003";
            internal const string TEXT_LINE_80_0003XX = "TEXT_LINE_80_0003XX";
            internal const string TEXT_LINE_8_0003AS = "TEXT_LINE_8_0003AS";
            internal const string TEXT_LINE_8_0003 = "TEXT_LINE_8_0003";
            internal const string TEXT_LINE_8_0003XX = "TEXT_LINE_8_0003XX";
            internal const string W_OA = "W_OA";
            internal const string A_0828378321_OA = "A_0828378321_OA";
            internal const string EXPORT_EXTERNAL_PARMS_0004EV = "EXPORT_EXTERNAL_PARMS_0004EV";
            internal const string EXTERNAL_0004ET = "EXTERNAL_0004ET";
            internal const string FILE_INSTRUCTION_0004AS = "FILE_INSTRUCTION_0004AS";
            internal const string FILE_INSTRUCTION_0004 = "FILE_INSTRUCTION_0004";
            internal const string FILE_INSTRUCTION_0004XX = "FILE_INSTRUCTION_0004XX";
            internal const string NUMERIC_RETURN_CODE_0004AS = "NUMERIC_RETURN_CODE_0004AS";
            internal const string NUMERIC_RETURN_CODE_0004 = "NUMERIC_RETURN_CODE_0004";
            internal const string NUMERIC_RETURN_CODE_0004XX = "NUMERIC_RETURN_CODE_0004XX";
            internal const string TEXT_RETURN_CODE_0004AS = "TEXT_RETURN_CODE_0004AS";
            internal const string TEXT_RETURN_CODE_0004 = "TEXT_RETURN_CODE_0004";
            internal const string TEXT_RETURN_CODE_0004XX = "TEXT_RETURN_CODE_0004XX";
            internal const string TEXT_LINE_130_0004AS = "TEXT_LINE_130_0004AS";
            internal const string TEXT_LINE_130_0004 = "TEXT_LINE_130_0004";
            internal const string TEXT_LINE_130_0004XX = "TEXT_LINE_130_0004XX";
            internal const string TEXT_LINE_80_0004AS = "TEXT_LINE_80_0004AS";
            internal const string TEXT_LINE_80_0004 = "TEXT_LINE_80_0004";
            internal const string TEXT_LINE_80_0004XX = "TEXT_LINE_80_0004XX";
            internal const string TEXT_LINE_8_0004AS = "TEXT_LINE_8_0004AS";
            internal const string TEXT_LINE_8_0004 = "TEXT_LINE_8_0004";
            internal const string TEXT_LINE_8_0004XX = "TEXT_LINE_8_0004XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup W_IA { get { return GetElementByName<IGroup>(Names.W_IA); } }
        public IGroup A_0828378320_IA { get { return GetElementByName<IGroup>(Names.A_0828378320_IA); } }
        public IGroup IMPORT_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_0001EV); } }
        public IGroup FDSO_NTFY_FED_REF_TAPE__0001ET { get { return GetElementByName<IGroup>(Names.FDSO_NTFY_FED_REF_TAPE__0001ET); } }
        public IField SUBMITTING_STATE_0001AS { get { return GetElementByName<IField>(Names.SUBMITTING_STATE_0001AS); } }
        public IField SUBMITTING_STATE_0001 { get { return GetElementByName<IField>(Names.SUBMITTING_STATE_0001); } }
        public IField SUBMITTING_STATE_0001XX { get { return GetElementByName<IField>(Names.SUBMITTING_STATE_0001XX); } }
        public IField LOCAL_CODE_0001AS { get { return GetElementByName<IField>(Names.LOCAL_CODE_0001AS); } }
        public IField LOCAL_CODE_0001 { get { return GetElementByName<IField>(Names.LOCAL_CODE_0001); } }
        public IField LOCAL_CODE_0001XX { get { return GetElementByName<IField>(Names.LOCAL_CODE_0001XX); } }
        public IField SSN_0001AS { get { return GetElementByName<IField>(Names.SSN_0001AS); } }
        public IField SSN_0001 { get { return GetElementByName<IField>(Names.SSN_0001); } }
        public IField SSN_0001XX { get { return GetElementByName<IField>(Names.SSN_0001XX); } }
        public IField CASE_NUMBER_0001AS { get { return GetElementByName<IField>(Names.CASE_NUMBER_0001AS); } }
        public IField CASE_NUMBER_0001 { get { return GetElementByName<IField>(Names.CASE_NUMBER_0001); } }
        public IField CASE_NUMBER_0001XX { get { return GetElementByName<IField>(Names.CASE_NUMBER_0001XX); } }
        public IField LAST_NAME_0001AS { get { return GetElementByName<IField>(Names.LAST_NAME_0001AS); } }
        public IField LAST_NAME_0001 { get { return GetElementByName<IField>(Names.LAST_NAME_0001); } }
        public IField LAST_NAME_0001XX { get { return GetElementByName<IField>(Names.LAST_NAME_0001XX); } }
        public IField FIRST_NAME_0001AS { get { return GetElementByName<IField>(Names.FIRST_NAME_0001AS); } }
        public IField FIRST_NAME_0001 { get { return GetElementByName<IField>(Names.FIRST_NAME_0001); } }
        public IField FIRST_NAME_0001XX { get { return GetElementByName<IField>(Names.FIRST_NAME_0001XX); } }
        public IField REFUND_AMOUNT_0001AS { get { return GetElementByName<IField>(Names.REFUND_AMOUNT_0001AS); } }
        public IField REFUND_AMOUNT_0001 { get { return GetElementByName<IField>(Names.REFUND_AMOUNT_0001); } }
        public IField REFUND_AMOUNT_0001XX { get { return GetElementByName<IField>(Names.REFUND_AMOUNT_0001XX); } }
        public IField TRANSACTION_TYPE_0001AS { get { return GetElementByName<IField>(Names.TRANSACTION_TYPE_0001AS); } }
        public IField TRANSACTION_TYPE_0001 { get { return GetElementByName<IField>(Names.TRANSACTION_TYPE_0001); } }
        public IField TRANSACTION_TYPE_0001XX { get { return GetElementByName<IField>(Names.TRANSACTION_TYPE_0001XX); } }
        public IField CASE_TYPE_0001AS { get { return GetElementByName<IField>(Names.CASE_TYPE_0001AS); } }
        public IField CASE_TYPE_0001 { get { return GetElementByName<IField>(Names.CASE_TYPE_0001); } }
        public IField CASE_TYPE_0001XX { get { return GetElementByName<IField>(Names.CASE_TYPE_0001XX); } }
        public IField TRANSFER_STATE_0001AS { get { return GetElementByName<IField>(Names.TRANSFER_STATE_0001AS); } }
        public IField TRANSFER_STATE_0001 { get { return GetElementByName<IField>(Names.TRANSFER_STATE_0001); } }
        public IField TRANSFER_STATE_0001XX { get { return GetElementByName<IField>(Names.TRANSFER_STATE_0001XX); } }
        public IField TRANSFER_LOCAL_CODE_0001AS { get { return GetElementByName<IField>(Names.TRANSFER_LOCAL_CODE_0001AS); } }
        public IField TRANSFER_LOCAL_CODE_0001 { get { return GetElementByName<IField>(Names.TRANSFER_LOCAL_CODE_0001); } }
        public IField TRANSFER_LOCAL_CODE_0001XX { get { return GetElementByName<IField>(Names.TRANSFER_LOCAL_CODE_0001XX); } }
        public IField PROCESS_YEAR_0001AS { get { return GetElementByName<IField>(Names.PROCESS_YEAR_0001AS); } }
        public IField PROCESS_YEAR_0001 { get { return GetElementByName<IField>(Names.PROCESS_YEAR_0001); } }
        public IField PROCESS_YEAR_0001XX { get { return GetElementByName<IField>(Names.PROCESS_YEAR_0001XX); } }
        public IField ADDRESS_LINE1_0001AS { get { return GetElementByName<IField>(Names.ADDRESS_LINE1_0001AS); } }
        public IField ADDRESS_LINE1_0001 { get { return GetElementByName<IField>(Names.ADDRESS_LINE1_0001); } }
        public IField ADDRESS_LINE1_0001XX { get { return GetElementByName<IField>(Names.ADDRESS_LINE1_0001XX); } }
        public IField ADDRESS_LINE2_0001AS { get { return GetElementByName<IField>(Names.ADDRESS_LINE2_0001AS); } }
        public IField ADDRESS_LINE2_0001 { get { return GetElementByName<IField>(Names.ADDRESS_LINE2_0001); } }
        public IField ADDRESS_LINE2_0001XX { get { return GetElementByName<IField>(Names.ADDRESS_LINE2_0001XX); } }
        public IField CITY_0001AS { get { return GetElementByName<IField>(Names.CITY_0001AS); } }
        public IField CITY_0001 { get { return GetElementByName<IField>(Names.CITY_0001); } }
        public IField CITY_0001XX { get { return GetElementByName<IField>(Names.CITY_0001XX); } }
        public IField STATE_CODE_0001AS { get { return GetElementByName<IField>(Names.STATE_CODE_0001AS); } }
        public IField STATE_CODE_0001 { get { return GetElementByName<IField>(Names.STATE_CODE_0001); } }
        public IField STATE_CODE_0001XX { get { return GetElementByName<IField>(Names.STATE_CODE_0001XX); } }
        public IField ZIP_CODE_9_0001AS { get { return GetElementByName<IField>(Names.ZIP_CODE_9_0001AS); } }
        public IField ZIP_CODE_9_0001 { get { return GetElementByName<IField>(Names.ZIP_CODE_9_0001); } }
        public IField ZIP_CODE_9_0001XX { get { return GetElementByName<IField>(Names.ZIP_CODE_9_0001XX); } }
        public IField DATE_ISSUED_PRE_OFFSET_0001AS { get { return GetElementByName<IField>(Names.DATE_ISSUED_PRE_OFFSET_0001AS); } }
        public IField DATE_ISSUED_PRE_OFFSET_0001 { get { return GetElementByName<IField>(Names.DATE_ISSUED_PRE_OFFSET_0001); } }
        public IField DATE_ISSUED_PRE_OFFSET_0001XX { get { return GetElementByName<IField>(Names.DATE_ISSUED_PRE_OFFSET_0001XX); } }
        public IField OFFSET_EXCLUSION_INDICA_0002AS { get { return GetElementByName<IField>(Names.OFFSET_EXCLUSION_INDICA_0002AS); } }
        public IField OFFSET_EXCLUSION_INDICATO_0002 { get { return GetElementByName<IField>(Names.OFFSET_EXCLUSION_INDICATO_0002); } }
        public IField OFFSET_EXCLUSION_INDICA_0002XX { get { return GetElementByName<IField>(Names.OFFSET_EXCLUSION_INDICA_0002XX); } }
        public IField FILLER_0002AS { get { return GetElementByName<IField>(Names.FILLER_0002AS); } }
        public IField FILLER_0002 { get { return GetElementByName<IField>(Names.FILLER_0002); } }
        public IField FILLER_0002XX { get { return GetElementByName<IField>(Names.FILLER_0002XX); } }
        public IGroup IMPORT_EXTERNAL_PARMS_0003EV { get { return GetElementByName<IGroup>(Names.IMPORT_EXTERNAL_PARMS_0003EV); } }
        public IGroup EXTERNAL_0003ET { get { return GetElementByName<IGroup>(Names.EXTERNAL_0003ET); } }
        public IField FILE_INSTRUCTION_0003AS { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0003AS); } }
        public IField FILE_INSTRUCTION_0003 { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0003); } }
        public IField FILE_INSTRUCTION_0003XX { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0003XX); } }
        public IField NUMERIC_RETURN_CODE_0003AS { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0003AS); } }
        public IField NUMERIC_RETURN_CODE_0003 { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0003); } }
        public IField NUMERIC_RETURN_CODE_0003XX { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0003XX); } }
        public IField TEXT_RETURN_CODE_0003AS { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0003AS); } }
        public IField TEXT_RETURN_CODE_0003 { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0003); } }
        public IField TEXT_RETURN_CODE_0003XX { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0003XX); } }
        public IField TEXT_LINE_130_0003AS { get { return GetElementByName<IField>(Names.TEXT_LINE_130_0003AS); } }
        public IField TEXT_LINE_130_0003 { get { return GetElementByName<IField>(Names.TEXT_LINE_130_0003); } }
        public IField TEXT_LINE_130_0003XX { get { return GetElementByName<IField>(Names.TEXT_LINE_130_0003XX); } }
        public IField TEXT_LINE_80_0003AS { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0003AS); } }
        public IField TEXT_LINE_80_0003 { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0003); } }
        public IField TEXT_LINE_80_0003XX { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0003XX); } }
        public IField TEXT_LINE_8_0003AS { get { return GetElementByName<IField>(Names.TEXT_LINE_8_0003AS); } }
        public IField TEXT_LINE_8_0003 { get { return GetElementByName<IField>(Names.TEXT_LINE_8_0003); } }
        public IField TEXT_LINE_8_0003XX { get { return GetElementByName<IField>(Names.TEXT_LINE_8_0003XX); } }
        public IGroup W_OA { get { return GetElementByName<IGroup>(Names.W_OA); } }
        public IGroup A_0828378321_OA { get { return GetElementByName<IGroup>(Names.A_0828378321_OA); } }
        public IGroup EXPORT_EXTERNAL_PARMS_0004EV { get { return GetElementByName<IGroup>(Names.EXPORT_EXTERNAL_PARMS_0004EV); } }
        public IGroup EXTERNAL_0004ET { get { return GetElementByName<IGroup>(Names.EXTERNAL_0004ET); } }
        public IField FILE_INSTRUCTION_0004AS { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0004AS); } }
        public IField FILE_INSTRUCTION_0004 { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0004); } }
        public IField FILE_INSTRUCTION_0004XX { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0004XX); } }
        public IField NUMERIC_RETURN_CODE_0004AS { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0004AS); } }
        public IField NUMERIC_RETURN_CODE_0004 { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0004); } }
        public IField NUMERIC_RETURN_CODE_0004XX { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0004XX); } }
        public IField TEXT_RETURN_CODE_0004AS { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0004AS); } }
        public IField TEXT_RETURN_CODE_0004 { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0004); } }
        public IField TEXT_RETURN_CODE_0004XX { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0004XX); } }
        public IField TEXT_LINE_130_0004AS { get { return GetElementByName<IField>(Names.TEXT_LINE_130_0004AS); } }
        public IField TEXT_LINE_130_0004 { get { return GetElementByName<IField>(Names.TEXT_LINE_130_0004); } }
        public IField TEXT_LINE_130_0004XX { get { return GetElementByName<IField>(Names.TEXT_LINE_130_0004XX); } }
        public IField TEXT_LINE_80_0004AS { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0004AS); } }
        public IField TEXT_LINE_80_0004 { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0004); } }
        public IField TEXT_LINE_80_0004XX { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0004XX); } }
        public IField TEXT_LINE_8_0004AS { get { return GetElementByName<IField>(Names.TEXT_LINE_8_0004AS); } }
        public IField TEXT_LINE_8_0004 { get { return GetElementByName<IField>(Names.TEXT_LINE_8_0004); } }
        public IField TEXT_LINE_8_0004XX { get { return GetElementByName<IField>(Names.TEXT_LINE_8_0004XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
           {
               PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
               PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
               {
                   PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
               });
           });

            recordDef.CreateNewGroup(Names.W_IA, (W_IA) =>
           {
               W_IA.CreateNewGroup(Names.A_0828378320_IA, (A_0828378320_IA) =>
               {
                   A_0828378320_IA.CreateNewGroup(Names.IMPORT_0001EV, (IMPORT_0001EV) =>
                   {
                       IMPORT_0001EV.CreateNewGroup(Names.FDSO_NTFY_FED_REF_TAPE__0001ET, (FDSO_NTFY_FED_REF_TAPE__0001ET) =>
                       {
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.SUBMITTING_STATE_0001AS, FieldType.String, 1);

                           IField SUBMITTING_STATE_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.SUBMITTING_STATE_0001, FieldType.String, 2);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.SUBMITTING_STATE_0001XX, FieldType.String, SUBMITTING_STATE_0001_local, 2);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.LOCAL_CODE_0001AS, FieldType.String, 1);

                           IField LOCAL_CODE_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.LOCAL_CODE_0001, FieldType.String, 3);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.LOCAL_CODE_0001XX, FieldType.String, LOCAL_CODE_0001_local, 3);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.SSN_0001AS, FieldType.String, 1);

                           IField SSN_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.SSN_0001, FieldType.SignedNumeric, 9);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.SSN_0001XX, FieldType.String, SSN_0001_local, 9);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.CASE_NUMBER_0001AS, FieldType.String, 1);

                           IField CASE_NUMBER_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.CASE_NUMBER_0001, FieldType.String, 15);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.CASE_NUMBER_0001XX, FieldType.String, CASE_NUMBER_0001_local, 15);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.LAST_NAME_0001AS, FieldType.String, 1);

                           IField LAST_NAME_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.LAST_NAME_0001, FieldType.String, 20);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.LAST_NAME_0001XX, FieldType.String, LAST_NAME_0001_local, 20);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.FIRST_NAME_0001AS, FieldType.String, 1);

                           IField FIRST_NAME_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.FIRST_NAME_0001, FieldType.String, 15);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.FIRST_NAME_0001XX, FieldType.String, FIRST_NAME_0001_local, 15);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.REFUND_AMOUNT_0001AS, FieldType.String, 1);

                           IField REFUND_AMOUNT_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.REFUND_AMOUNT_0001, FieldType.SignedNumeric, 8);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.REFUND_AMOUNT_0001XX, FieldType.String, REFUND_AMOUNT_0001_local, 8);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.TRANSACTION_TYPE_0001AS, FieldType.String, 1);

                           IField TRANSACTION_TYPE_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.TRANSACTION_TYPE_0001, FieldType.String, 1);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.TRANSACTION_TYPE_0001XX, FieldType.String, TRANSACTION_TYPE_0001_local, 1);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.CASE_TYPE_0001AS, FieldType.String, 1);

                           IField CASE_TYPE_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.CASE_TYPE_0001, FieldType.String, 1);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.CASE_TYPE_0001XX, FieldType.String, CASE_TYPE_0001_local, 1);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.TRANSFER_STATE_0001AS, FieldType.String, 1);

                           IField TRANSFER_STATE_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.TRANSFER_STATE_0001, FieldType.String, 2);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.TRANSFER_STATE_0001XX, FieldType.String, TRANSFER_STATE_0001_local, 2);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.TRANSFER_LOCAL_CODE_0001AS, FieldType.String, 1);

                           IField TRANSFER_LOCAL_CODE_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.TRANSFER_LOCAL_CODE_0001, FieldType.String, 3);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.TRANSFER_LOCAL_CODE_0001XX, FieldType.String, TRANSFER_LOCAL_CODE_0001_local, 3);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.PROCESS_YEAR_0001AS, FieldType.String, 1);

                           IField PROCESS_YEAR_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.PROCESS_YEAR_0001, FieldType.String, 4);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.PROCESS_YEAR_0001XX, FieldType.String, PROCESS_YEAR_0001_local, 4);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.ADDRESS_LINE1_0001AS, FieldType.String, 1);

                           IField ADDRESS_LINE1_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.ADDRESS_LINE1_0001, FieldType.String, 30);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.ADDRESS_LINE1_0001XX, FieldType.String, ADDRESS_LINE1_0001_local, 30);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.ADDRESS_LINE2_0001AS, FieldType.String, 1);

                           IField ADDRESS_LINE2_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.ADDRESS_LINE2_0001, FieldType.String, 30);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.ADDRESS_LINE2_0001XX, FieldType.String, ADDRESS_LINE2_0001_local, 30);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.CITY_0001AS, FieldType.String, 1);

                           IField CITY_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.CITY_0001, FieldType.String, 25);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.CITY_0001XX, FieldType.String, CITY_0001_local, 25);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.STATE_CODE_0001AS, FieldType.String, 1);

                           IField STATE_CODE_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.STATE_CODE_0001, FieldType.String, 2);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.STATE_CODE_0001XX, FieldType.String, STATE_CODE_0001_local, 2);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.ZIP_CODE_9_0001AS, FieldType.String, 1);

                           IField ZIP_CODE_9_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.ZIP_CODE_9_0001, FieldType.String, 9);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.ZIP_CODE_9_0001XX, FieldType.String, ZIP_CODE_9_0001_local, 9);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.DATE_ISSUED_PRE_OFFSET_0001AS, FieldType.String, 1);

                           IField DATE_ISSUED_PRE_OFFSET_0001_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.DATE_ISSUED_PRE_OFFSET_0001, FieldType.String, 8);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.DATE_ISSUED_PRE_OFFSET_0001XX, FieldType.String, DATE_ISSUED_PRE_OFFSET_0001_local, 8);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.OFFSET_EXCLUSION_INDICA_0002AS, FieldType.String, 1);

                           IField OFFSET_EXCLUSION_INDICATO_0002_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.OFFSET_EXCLUSION_INDICATO_0002, FieldType.String, 40);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.OFFSET_EXCLUSION_INDICA_0002XX, FieldType.String, OFFSET_EXCLUSION_INDICATO_0002_local, 40);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.FILLER_0002AS, FieldType.String, 1);

                           IField FILLER_0002_local = FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewField(Names.FILLER_0002, FieldType.String, 18);
                           FDSO_NTFY_FED_REF_TAPE__0001ET.CreateNewFieldRedefine(Names.FILLER_0002XX, FieldType.String, FILLER_0002_local, 18);
                       });
                   });
                   A_0828378320_IA.CreateNewGroup(Names.IMPORT_EXTERNAL_PARMS_0003EV, (IMPORT_EXTERNAL_PARMS_0003EV) =>
                   {
                       IMPORT_EXTERNAL_PARMS_0003EV.CreateNewGroup(Names.EXTERNAL_0003ET, (EXTERNAL_0003ET) =>
                       {
                           EXTERNAL_0003ET.CreateNewField(Names.FILE_INSTRUCTION_0003AS, FieldType.String, 1);

                           IField FILE_INSTRUCTION_0003_local = EXTERNAL_0003ET.CreateNewField(Names.FILE_INSTRUCTION_0003, FieldType.String, 10);
                           EXTERNAL_0003ET.CreateNewFieldRedefine(Names.FILE_INSTRUCTION_0003XX, FieldType.String, FILE_INSTRUCTION_0003_local, 10);
                           EXTERNAL_0003ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0003AS, FieldType.String, 1);

                           IField NUMERIC_RETURN_CODE_0003_local = EXTERNAL_0003ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0003, FieldType.SignedNumeric, 2);
                           EXTERNAL_0003ET.CreateNewFieldRedefine(Names.NUMERIC_RETURN_CODE_0003XX, FieldType.String, NUMERIC_RETURN_CODE_0003_local, 2);
                           EXTERNAL_0003ET.CreateNewField(Names.TEXT_RETURN_CODE_0003AS, FieldType.String, 1);

                           IField TEXT_RETURN_CODE_0003_local = EXTERNAL_0003ET.CreateNewField(Names.TEXT_RETURN_CODE_0003, FieldType.String, 2);
                           EXTERNAL_0003ET.CreateNewFieldRedefine(Names.TEXT_RETURN_CODE_0003XX, FieldType.String, TEXT_RETURN_CODE_0003_local, 2);
                           EXTERNAL_0003ET.CreateNewField(Names.TEXT_LINE_130_0003AS, FieldType.String, 1);

                           IField TEXT_LINE_130_0003_local = EXTERNAL_0003ET.CreateNewField(Names.TEXT_LINE_130_0003, FieldType.String, 130);
                           EXTERNAL_0003ET.CreateNewFieldRedefine(Names.TEXT_LINE_130_0003XX, FieldType.String, TEXT_LINE_130_0003_local, 130);
                           EXTERNAL_0003ET.CreateNewField(Names.TEXT_LINE_80_0003AS, FieldType.String, 1);

                           IField TEXT_LINE_80_0003_local = EXTERNAL_0003ET.CreateNewField(Names.TEXT_LINE_80_0003, FieldType.String, 130);
                           EXTERNAL_0003ET.CreateNewFieldRedefine(Names.TEXT_LINE_80_0003XX, FieldType.String, TEXT_LINE_80_0003_local, 130);
                           EXTERNAL_0003ET.CreateNewField(Names.TEXT_LINE_8_0003AS, FieldType.String, 1);

                           IField TEXT_LINE_8_0003_local = EXTERNAL_0003ET.CreateNewField(Names.TEXT_LINE_8_0003, FieldType.String, 8);
                           EXTERNAL_0003ET.CreateNewFieldRedefine(Names.TEXT_LINE_8_0003XX, FieldType.String, TEXT_LINE_8_0003_local, 8);
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.W_OA, (W_OA) =>
           {
               W_OA.CreateNewGroup(Names.A_0828378321_OA, (A_0828378321_OA) =>
               {
                   A_0828378321_OA.CreateNewGroup(Names.EXPORT_EXTERNAL_PARMS_0004EV, (EXPORT_EXTERNAL_PARMS_0004EV) =>
                   {
                       EXPORT_EXTERNAL_PARMS_0004EV.CreateNewGroup(Names.EXTERNAL_0004ET, (EXTERNAL_0004ET) =>
                       {
                           EXTERNAL_0004ET.CreateNewField(Names.FILE_INSTRUCTION_0004AS, FieldType.String, 1);

                           IField FILE_INSTRUCTION_0004_local = EXTERNAL_0004ET.CreateNewField(Names.FILE_INSTRUCTION_0004, FieldType.String, 10);
                           EXTERNAL_0004ET.CreateNewFieldRedefine(Names.FILE_INSTRUCTION_0004XX, FieldType.String, FILE_INSTRUCTION_0004_local, 10);
                           EXTERNAL_0004ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0004AS, FieldType.String, 1);

                           IField NUMERIC_RETURN_CODE_0004_local = EXTERNAL_0004ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0004, FieldType.SignedNumeric, 2);
                           EXTERNAL_0004ET.CreateNewFieldRedefine(Names.NUMERIC_RETURN_CODE_0004XX, FieldType.String, NUMERIC_RETURN_CODE_0004_local, 2);
                           EXTERNAL_0004ET.CreateNewField(Names.TEXT_RETURN_CODE_0004AS, FieldType.String, 1);

                           IField TEXT_RETURN_CODE_0004_local = EXTERNAL_0004ET.CreateNewField(Names.TEXT_RETURN_CODE_0004, FieldType.String, 2);
                           EXTERNAL_0004ET.CreateNewFieldRedefine(Names.TEXT_RETURN_CODE_0004XX, FieldType.String, TEXT_RETURN_CODE_0004_local, 2);
                           EXTERNAL_0004ET.CreateNewField(Names.TEXT_LINE_130_0004AS, FieldType.String, 1);

                           IField TEXT_LINE_130_0004_local = EXTERNAL_0004ET.CreateNewField(Names.TEXT_LINE_130_0004, FieldType.String, 130);
                           EXTERNAL_0004ET.CreateNewFieldRedefine(Names.TEXT_LINE_130_0004XX, FieldType.String, TEXT_LINE_130_0004_local, 130);
                           EXTERNAL_0004ET.CreateNewField(Names.TEXT_LINE_80_0004AS, FieldType.String, 1);

                           IField TEXT_LINE_80_0004_local = EXTERNAL_0004ET.CreateNewField(Names.TEXT_LINE_80_0004, FieldType.String, 130);
                           EXTERNAL_0004ET.CreateNewFieldRedefine(Names.TEXT_LINE_80_0004XX, FieldType.String, TEXT_LINE_80_0004_local, 130);
                           EXTERNAL_0004ET.CreateNewField(Names.TEXT_LINE_8_0004AS, FieldType.String, 1);

                           IField TEXT_LINE_8_0004_local = EXTERNAL_0004ET.CreateNewField(Names.TEXT_LINE_8_0004, FieldType.String, 8);
                           EXTERNAL_0004ET.CreateNewFieldRedefine(Names.TEXT_LINE_8_0004XX, FieldType.String, TEXT_LINE_8_0004_local, 8);
                       });
                   });
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(IEF_RUNTIME_PARM1, args, 0);
            SetPassedParm(IEF_RUNTIME_PARM2, args, 1);
            SetPassedParm(W_IA, args, 2);
            SetPassedParm(W_OA, args, 3);
            SetPassedParm(PSMGR_EAB_DATA, args, 4);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(IEF_RUNTIME_PARM1, args, 0);
            SetReturnParm(IEF_RUNTIME_PARM2, args, 1);
            SetReturnParm(W_IA, args, 2);
            SetReturnParm(W_OA, args, 3);
            SetReturnParm(PSMGR_EAB_DATA, args, 4);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXFE04 : EABBase
    {

        #region Public Constructors
        public SWEXFE04()
            : base()
        {
            this.ProgramName.SetValue("SWEXFE04");

            WS = new SWEXFE04_ws();
            FD = new SWEXFE04_fd(WS);
            LS = new SWEXFE04_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXFE04_ws WS;

        //==== File Data Class ========================================
        private SWEXFE04_fd FD;

        //==== Linkage Section Data Class ========================================
        private SWEXFE04_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING IEF-RUNTIME-PARM1 , IEF-RUNTIME-PARM2 , W-IA , W-OA , PSMGR-EAB-DATA.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0828378317(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0828378317
        /// </summary>
        private void M_MAIN_0828378317(string returnMethod = "")
        {
            M_PARA_0828378317_INIT("M_PARA_0828378317_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0828378317-INIT THRU PARA-0828378317-INIT-EXIT
            M_PARA_0828378317("M_PARA_0828378317_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0828378317 THRU PARA-0828378317-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0828378317
        /// </summary>
        private void M_PARA_0828378317(string returnMethod = "")
        {
            if (returnMethod != "" && returnMethod != "M_PARA_0828378317") { M_1000_EAB_CODE_MAIN(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1000_EAB_CODE_MAIN
        /// </summary>
        /// <remarks>
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT:     .
        /// </remarks>
        private void M_1000_EAB_CODE_MAIN(string returnMethod = "")
        {
            // EvaluateList !LS.FILE_INSTRUCTION_0003!                                                          //COBOL==> EVALUATE FILE-INSTRUCTION-0003
            if ((LS.FILE_INSTRUCTION_0003.IsEqualTo("OPEN")))                                                   //COBOL==> WHEN 'OPEN'
            {
                M_1100_OPEN_FILES("M_1100_EXIT"); if (Control.ExitProgram) { return; }                                //COBOL==> PERFORM 1100-OPEN-FILES THRU 1100-EXIT
                M_9999_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 9999-EXIT
            }                                                                                                //COBOL==> WHEN 'WRITE'
            else
            if ((LS.FILE_INSTRUCTION_0003.IsEqualTo("WRITE")))
            {
                M_1300_WRITE_REC("M_1300_EXIT"); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM 1300-WRITE-REC THRU 1300-EXIT
                M_9999_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 9999-EXIT
            }                                                                                                //COBOL==> WHEN 'CLOSE'
            else
            if ((LS.FILE_INSTRUCTION_0003.IsEqualTo("CLOSE")))
            {
                M_1400_CLOSE_FILES("M_1400_EXIT"); if (Control.ExitProgram) { return; }                               //COBOL==> PERFORM 1400-CLOSE-FILES THRU 1400-EXIT
                M_9999_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 9999-EXIT
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("FN");                                                            //COBOL==> MOVE 'FN' TO TEXT-RETURN-CODE-0003
                LS.NUMERIC_RETURN_CODE_0003.SetValue("01");                                                         //COBOL==> MOVE '01' TO NUMERIC-RETURN-CODE-0003
                M_9999_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 9999-EXIT
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_1000_EAB_CODE_MAIN") { M_1100_OPEN_FILES(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1100_OPEN_FILES
        /// </summary>
        /// <remarks>
        ///COMMENT:    OPEN THE FILES
        /// </remarks>
        private void M_1100_OPEN_FILES(string returnMethod = "")
        {
            FD.OUTFILE.OpenFile(FileAccessMode.Write);                                                          //COBOL==> OPEN OUTPUT OUTFILE.
            if (!(WS.OUTFILE_STAT.IsEqualTo(0)))                                                                //COBOL==> IF OUTFILE-STAT NOT = 0
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("O2");                                                            //COBOL==> MOVE 'O2' TO TEXT-RETURN-CODE-0003
                LS.NUMERIC_RETURN_CODE_0003.SetValue(WS.OUTFILE_STAT);                                              //COBOL==> MOVE OUTFILE-STAT TO NUMERIC-RETURN-CODE-0003
                M_1100_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1100-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_1100_OPEN_FILES") { M_1100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1100_EXIT
        /// </summary>
        private void M_1100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1100_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1100_EXIT") { M_1300_WRITE_REC(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1300_WRITE_REC
        /// </summary>
        /// <remarks>
        ///COMMENT:    WRITE THE RECORD.
        /// </remarks>
        private void M_1300_WRITE_REC(string returnMethod = "")
        {
            WS.WS_SUBMITTING_STATE.SetValue(LS.SUBMITTING_STATE_0001);                                          //COBOL==> MOVE SUBMITTING-STATE-0001 TO WS-SUBMITTING-STATE.
            WS.WS_LOCAL_CODE.SetValue(LS.LOCAL_CODE_0001);                                                      //COBOL==> MOVE LOCAL-CODE-0001 TO WS-LOCAL-CODE.
            WS.WS_SSN.SetValue(LS.SSN_0001);                                                                    //COBOL==> MOVE SSN-0001 TO WS-SSN.
            WS.WS_CASE_NUMBER.SetValue(LS.CASE_NUMBER_0001);                                                    //COBOL==> MOVE CASE-NUMBER-0001 TO WS-CASE-NUMBER.
            WS.WS_LAST_NAME.SetValue(LS.LAST_NAME_0001);                                                        //COBOL==> MOVE LAST-NAME-0001 TO WS-LAST-NAME.
            WS.WS_FIRST_NAME.SetValue(LS.FIRST_NAME_0001);                                                      //COBOL==> MOVE FIRST-NAME-0001 TO WS-FIRST-NAME.
            WS.WS_REFUND_AMT.SetValue(LS.REFUND_AMOUNT_0001);                                                   //COBOL==> MOVE REFUND-AMOUNT-0001 TO WS-REFUND-AMT.
            WS.WS_TRANSACTION_TYPE.SetValue(LS.TRANSACTION_TYPE_0001);                                          //COBOL==> MOVE TRANSACTION-TYPE-0001 TO WS-TRANSACTION-TYPE.
            WS.WS_CASE_TYPE.SetValue(LS.CASE_TYPE_0001);                                                        //COBOL==> MOVE CASE-TYPE-0001 TO WS-CASE-TYPE.
            WS.WS_TRANSFER_STATE.SetValue(LS.TRANSFER_STATE_0001);                                              //COBOL==> MOVE TRANSFER-STATE-0001 TO WS-TRANSFER-STATE.
            WS.WS_TRANSFER_LOCAL.SetValue(LS.TRANSFER_LOCAL_CODE_0001);                                         //COBOL==> MOVE TRANSFER-LOCAL-CODE-0001 TO WS-TRANSFER-LOCAL.
            WS.WS_PROCESSING_YEAR.SetValue(LS.PROCESS_YEAR_0001);                                               //COBOL==> MOVE PROCESS-YEAR-0001 TO WS-PROCESSING-YEAR.
            WS.WS_ADDRESS_LINE1.SetValue(LS.ADDRESS_LINE1_0001);                                                //COBOL==> MOVE ADDRESS-LINE1-0001 TO WS-ADDRESS-LINE1.
            WS.WS_ADDRESS_LINE2.SetValue(LS.ADDRESS_LINE2_0001);                                                //COBOL==> MOVE ADDRESS-LINE2-0001 TO WS-ADDRESS-LINE2.
            WS.WS_CITY.SetValue(LS.CITY_0001);                                                                  //COBOL==> MOVE CITY-0001 TO WS-CITY.
            WS.WS_STATE.SetValue(LS.STATE_CODE_0001);                                                           //COBOL==> MOVE STATE-CODE-0001 TO WS-STATE.
            WS.WS_ZIP_9.SetValue(LS.ZIP_CODE_9_0001);                                                           //COBOL==> MOVE ZIP-CODE-9-0001 TO WS-ZIP-9.
            WS.WS_DATE_ISS_PRE_OFFSET.SetValue(LS.DATE_ISSUED_PRE_OFFSET_0001);                                 //COBOL==> MOVE DATE-ISSUED-PRE-OFFSET-0001 TO WS-DATE-ISS-PRE-OFFSET.
            WS.WS_OFFSET_EXCLUSION.SetValue(LS.OFFSET_EXCLUSION_INDICATO_0002);                                 //COBOL==> MOVE OFFSET-EXCLUSION-INDICATO-0002 TO WS-OFFSET-EXCLUSION.
            WS.WS_FILLER.SetValue(LS.FILLER_0002);                                                              //COBOL==> MOVE FILLER-0002 TO WS-FILLER.
            FD.OUTFILE.WriteLine(WS.WS_OUTFILE_REC.AsBytes);                                                    //COBOL==> WRITE OUTFILE-REC FROM WS-OUTFILE-REC.
            if (!(WS.OUTFILE_STAT.IsEqualTo(0)))                                                                //COBOL==> IF OUTFILE-STAT NOT = 0
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("W1");                                                            //COBOL==> MOVE 'W1' TO TEXT-RETURN-CODE-0003
                LS.NUMERIC_RETURN_CODE_0003.SetValue(WS.OUTFILE_STAT);                                              //COBOL==> MOVE OUTFILE-STAT TO NUMERIC-RETURN-CODE-0003
            }                                                                                                   //COBOL==> END-IF.
            if (WS.WS_CASE_TYPE.IsEqualTo("N"))                                                                 //COBOL==> IF WS-CASE-TYPE = 'N'
            {
                WS.WS_TOTAL_NON_TANF_REC.SetComputeValue(WS.WS_TOTAL_NON_TANF_REC.AsDecimal() + 1m);                //COBOL==> COMPUTE WS-TOTAL-NON-TANF-REC = WS-TOTAL-NON-TANF-REC + 1
                WS.WS_AMT_NON_TANF_REC.SetComputeValue(WS.WS_AMT_NON_TANF_REC.AsDecimal() + LS.REFUND_AMOUNT_0001.AsDecimal());  //COBOL==> COMPUTE WS-AMT-NON-TANF-REC = WS-AMT-NON-TANF-REC + REFUND-AMOUNT-0001
            }                                                                                                   //COBOL==> ELSE
            else
            {
                WS.WS_TOTAL_TANF_REC.SetComputeValue(WS.WS_TOTAL_TANF_REC.AsDecimal() + 1m);                        //COBOL==> COMPUTE WS-TOTAL-TANF-REC = WS-TOTAL-TANF-REC + 1
                WS.WS_AMT_TANF_REC.SetComputeValue(WS.WS_AMT_TANF_REC.AsDecimal() + LS.REFUND_AMOUNT_0001.AsDecimal());  //COBOL==> COMPUTE WS-AMT-TANF-REC = WS-AMT-TANF-REC + REFUND-AMOUNT-0001
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_1300_WRITE_REC") { M_1300_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1300_EXIT
        /// </summary>
        private void M_1300_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1300_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1300_EXIT") { M_1400_CLOSE_FILES(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1400_CLOSE_FILES
        /// </summary>
        /// <remarks>
        ///COMMENT:    CLOSE THE FILES
        /// </remarks>
        private void M_1400_CLOSE_FILES(string returnMethod = "")
        {
            FD.OUTFILE.WriteLine(WS.WS_TOTAL_RECORD.AsBytes);                                                   //COBOL==> WRITE OUTFILE-REC FROM WS-TOTAL-RECORD.
            if (!(WS.OUTFILE_STAT.IsEqualTo(0)))                                                                //COBOL==> IF OUTFILE-STAT NOT = 0
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("W2");                                                            //COBOL==> MOVE 'W2' TO TEXT-RETURN-CODE-0003
                LS.NUMERIC_RETURN_CODE_0003.SetValue(WS.OUTFILE_STAT);                                              //COBOL==> MOVE OUTFILE-STAT TO NUMERIC-RETURN-CODE-0003
            }                                                                                                   //COBOL==> END-IF.
            FD.OUTFILE.CloseFile();                                                                             //COBOL==> CLOSE OUTFILE.
            if (!(WS.OUTFILE_STAT.IsEqualTo(0)))                                                                //COBOL==> IF OUTFILE-STAT NOT = 0
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("C1");                                                            //COBOL==> MOVE 'C1' TO TEXT-RETURN-CODE-0003
                LS.NUMERIC_RETURN_CODE_0003.SetValue(WS.OUTFILE_STAT);                                              //COBOL==> MOVE OUTFILE-STAT TO NUMERIC-RETURN-CODE-0003
                M_1400_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1400-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_1400_CLOSE_FILES") { M_1400_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1400_EXIT
        /// </summary>
        private void M_1400_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1400_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1400_EXIT") { M_PARA_0828378317_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0828378317_EXIT
        /// </summary>
        private void M_PARA_0828378317_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0828378317_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0828378317_EXIT") { M_PARA_0828378317_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0828378317_INIT
        /// </summary>
        private void M_PARA_0828378317_INIT(string returnMethod = "")
        {
            LS.EXPORT_EXTERNAL_PARMS_0004EV.ResetToInitialValue();                                              //COBOL==> INITIALIZE EXPORT-EXTERNAL-PARMS-0004EV .
            if (returnMethod != "" && returnMethod != "M_PARA_0828378317_INIT") { M_9999_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_9999_EXIT
        /// </summary>
        private void M_9999_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_9999_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_9999_EXIT") { M_PARA_0828378317_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0828378317_INIT_EXIT
        /// </summary>
        private void M_PARA_0828378317_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0828378317_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
