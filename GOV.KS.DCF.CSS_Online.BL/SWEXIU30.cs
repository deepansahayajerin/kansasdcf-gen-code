#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2021
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2021-11-16 12:43:04 PM
   **        *   FROM COBOL PGM   :  SWEXIU30
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                   INFORMATION ENGINEERING FACILITY (TM)
                       TEXAS INSTRUMENTS INC.
                COPYRIGHT (C) TEXAS INSTRUMENTS INC. 1997
       NAME: EAB_UPDATE_PA_REFERRAL           DATE: 97/06/25
       TARGET OS:   MVS                       TIME: 10:29:50
       TARGET DBMS: DB2                       USER: SWMTSXC
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
   **************************************************************
   **************************************************************
   ** MAINTENANCE *** MAINTENANCE *** MAINTENANCE *** MAINTENANCE **
                         CHANGE
    DATE      AUTHOR     CONTROL DESCRIPTION
    --------  ---------- ------- ----------------------------------
    05/2014   JCHRISTIAN CQ35825 ADABAS TO DB2 KEES PHASE 3 CHANGES.
   REPLACE READS OF ADABAS CLIENT-DBF AND CLIENT-BASIC-DBF TABLES
   WITH READS OF DB2 DATA SYNC TABLES KSD_CLIENT AND
   KSD_CLIENT-BASIC. OBTAIN SYSTEM PARTICIPATION FLAGS FROM NEW
   DB2 DATA SYNC TABLE KSD_SYSTEM_PART.  MODIFY ERROR HANDLING TO
   CHECK DB2 ERROR CODES BUT CONTINUE TO USE EXISTING ADABAS EXPORT
   ABEND FIELDS.  REMOVE/COMMENT UNNECESSARY ADABAS SPECIFIC CODE.
   ****************************************************************
   ****************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.UI.Angular;
using MDSY.Framework.Control.CICS;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
using GOV.KS.DCF.CSS.Common.BL;

/*  usings for referenced objects  */
#endregion

namespace GOV.KS.DCF.CSS.Online.BL
{
    #region Working Storage Class
    internal class SWEXIU30_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXIU30_ws_WorkingStorage";
            internal const string FUNC_0734790484_ESC_FLAG = "FUNC_0734790484_ESC_FLAG";
            internal const string EXTERNAL_ACTION_BLOCK_WS = "EXTERNAL_ACTION_BLOCK_WS";
            internal const string MV_ABEND_FIELDS = "MV_ABEND_FIELDS";
            internal const string MV_ABEND_TYPE = "MV_ABEND_TYPE";
            internal const string MV_ABEND_TYPE_NONE = "MV_ABEND_TYPE_NONE";
            internal const string MV_ABEND_TYPE_ADABAS = "MV_ABEND_TYPE_ADABAS";
            internal const string MV_ABEND_TYPE_CICS = "MV_ABEND_TYPE_CICS";
            internal const string MV_ABEND_ADABAS = "MV_ABEND_ADABAS";
            internal const string MV_ADA_FILE_NUMBER = "MV_ADA_FILE_NUMBER";
            internal const string MV_ADA_FILE_ACTION = "MV_ADA_FILE_ACTION";
            internal const string MV_ADA_RESPONSE_CD = "MV_ADA_RESPONSE_CD";
            internal const string MV_ABEND_CICS = "MV_ABEND_CICS";
            internal const string MV_CICS_RESOURCE_NM = "MV_CICS_RESOURCE_NM";
            internal const string MV_CICS_FUNCTION_CD = "MV_CICS_FUNCTION_CD";
            internal const string MV_CICS_RESPONSE_CD = "MV_CICS_RESPONSE_CD";
            internal const string MV_ABS_TIME = "MV_ABS_TIME";
            internal const string MV_CCYYMMDD_X8 = "MV_CCYYMMDD_X8";
            internal const string MV_CC = "MV_CC";
            internal const string MV_YYMMDD_X6 = "MV_YYMMDD_X6";
            internal const string MV_YY = "MV_YY";
            internal const string MV_MM = "MV_MM";
            internal const string MV_DD = "MV_DD";
            internal const string MV_YYMMDD = "MV_YYMMDD";
            internal const string MV_CURRENT_CCYY = "MV_CURRENT_CCYY";
            internal const string MV_CURRENT_MMDD = "MV_CURRENT_MMDD";
            internal const string MV_CCYYMMDD = "MV_CCYYMMDD";
            internal const string I_MV_CCYYMMDD = "I_MV_CCYYMMDD";
            internal const string I_YYYY = "I_YYYY";
            internal const string I_MM = "I_MM";
            internal const string I_DD = "I_DD";
            internal const string O_MV_CCYYMMDD = "O_MV_CCYYMMDD";
            internal const string O_YYYY = "O_YYYY";
            internal const string O_MM = "O_MM";
            internal const string O_DD = "O_DD";
            internal const string MV_COMPLIMENT_DATE = "MV_COMPLIMENT_DATE";
            internal const string MV_CLIENT_NUMBER_X10 = "MV_CLIENT_NUMBER_X10";
            internal const string MV_CLIENT_NUMBER = "MV_CLIENT_NUMBER";
            internal const string CSE_CASE_NUMBER = "CSE_CASE_NUMBER";
            internal const string CSE_CASE_NUMBER_X10 = "CSE_CASE_NUMBER_X10";
            internal const string MV_CSE_CASE_NUMBER = "MV_CSE_CASE_NUMBER";
            internal const string MV_AP_CLIENT_NUMBER_X10 = "MV_AP_CLIENT_NUMBER_X10";
            internal const string MV_AP_CLIENT_NUMBER = "MV_AP_CLIENT_NUMBER";
            internal const string MV_AR_AP_NUMBER = "MV_AR_AP_NUMBER";
            internal const string MV_AR_NUMBER = "MV_AR_NUMBER";
            internal const string MV_AP_NUMBER = "MV_AP_NUMBER";
            internal const string MV_REFERRAL_NUMBER = "MV_REFERRAL_NUMBER";
            internal const string MV_REFERRAL_CASE = "MV_REFERRAL_CASE";
            internal const string MV_REFERRAL_AP = "MV_REFERRAL_AP";
            internal const string MV_REFERRAL_SOURCE = "MV_REFERRAL_SOURCE";
            internal const string MV_REFERRAL_SOURCE_VALID = "MV_REFERRAL_SOURCE_VALID";
            internal const string MV_REFERRAL_KAE = "MV_REFERRAL_KAE";
            internal const string MV_REFERRAL_KSC = "MV_REFERRAL_KSC";
            internal const string MV_REFERRAL_KES = "MV_REFERRAL_KES";
            internal const string MV_DATE_OF_BIRTH_SEX = "MV_DATE_OF_BIRTH_SEX";
            internal const string MV_DATE_OF_BIRTH = "MV_DATE_OF_BIRTH";
            internal const string MV_SEX = "MV_SEX";
            internal const string MV_SAVE_KEY_CLIENT_POINTER = "MV_SAVE_KEY_CLIENT_POINTER";
            internal const string MV_CLIENT_POINTER = "MV_CLIENT_POINTER";
            internal const string MV_CLIENT_ID = "MV_CLIENT_ID";
            internal const string MV_VERIFIED_SSN_FLAG = "MV_VERIFIED_SSN_FLAG";
            internal const string MV_SYSTEM_PARTICIPATION = "MV_SYSTEM_PARTICIPATION";
            internal const string MV_SYS_PART_AE = "MV_SYS_PART_AE";
            internal const string MV_SYS_PART_CSE = "MV_SYS_PART_CSE";
            internal const string MV_SYS_PART_KANPAY = "MV_SYS_PART_KANPAY";
            internal const string MV_SYS_PART_KSCARES = "MV_SYS_PART_KSCARES";
            internal const string DCLKSD_REFERRAL = "DCLKSD_REFERRAL";
            internal const string REF_FK_CSB_CASE_NO = "REF_FK_CSB_CASE_NO";
            internal const string REF_AP_NUMBER = "REF_AP_NUMBER";
            internal const string REF_REFERRAL_TYPE = "REF_REFERRAL_TYPE";
            internal const string REF_REFERRAL_DATE = "REF_REFERRAL_DATE";
            internal const string REF_PI_CLIENT_NUMBER = "REF_PI_CLIENT_NUMBER";
            internal const string REF_CSE_CASE_NUMBER = "REF_CSE_CASE_NUMBER";
            internal const string REF_CSE_ESTABLISH_DATE = "REF_CSE_ESTABLISH_DATE";
            internal const string REF_AP_CLIENT_NUMBER = "REF_AP_CLIENT_NUMBER";
            internal const string REF_SYSTEM_ORIGIN = "REF_SYSTEM_ORIGIN";
            internal const string REF_LAST_MODIFIED_BY = "REF_LAST_MODIFIED_BY";
            internal const string REF_LAST_MODIFIED_TMST = "REF_LAST_MODIFIED_TMST";
            internal const string DCLKSD_CLIENT = "DCLKSD_CLIENT";
            internal const string CLIENT_SSN = "CLIENT_SSN";
            internal const string CLIENT_DATE_OF_BIRTH = "CLIENT_DATE_OF_BIRTH";
            internal const string CLIENT_GENDER = "CLIENT_GENDER";
            internal const string CLIENT_VERIFIED_SSN_FLAG = "CLIENT_VERIFIED_SSN_FLAG";
            internal const string CLIENT_NAME = "CLIENT_NAME";
            internal const string CLIENT_FK_CLB_CLIENT_NO = "CLIENT_FK_CLB_CLIENT_NO";
            internal const string DCLKSD_CLIENT_BASIC = "DCLKSD_CLIENT_BASIC";
            internal const string CLB_CLIENT_NUMBER = "CLB_CLIENT_NUMBER";
            internal const string CLB_CLIENT_GIVEN_NAME = "CLB_CLIENT_GIVEN_NAME";
            internal const string CLB_CLIENT_INITIALS = "CLB_CLIENT_INITIALS";
            internal const string CLB_CLIENT_SURNAME = "CLB_CLIENT_SURNAME";
            internal const string CLB_SSN = "CLB_SSN";
            internal const string CLB_GENDER = "CLB_GENDER";
            internal const string CLB_DATE_OF_BIRTH = "CLB_DATE_OF_BIRTH";
            internal const string CLB_SUFFIX_NAME = "CLB_SUFFIX_NAME";
            internal const string DCLKSD_SYSTEM_PART = "DCLKSD_SYSTEM_PART";
            internal const string SP_SYSTEM_CODE = "SP_SYSTEM_CODE";
            internal const string SP_PARTICIPATION_FLAG = "SP_PARTICIPATION_FLAG";
            internal const string SP_CREATED_TIMESTAMP = "SP_CREATED_TIMESTAMP";
            internal const string SP_CREATED_BY = "SP_CREATED_BY";
            internal const string SP_LAST_MODIFIED_BY = "SP_LAST_MODIFIED_BY";
            internal const string SP_LAST_MODIFIED_TMST = "SP_LAST_MODIFIED_TMST";
            internal const string SP_FK_CLB_CLIENT_NO = "SP_FK_CLB_CLIENT_NO";
            internal const string SP_FK_CLI_CLIENT_NAME = "SP_FK_CLI_CLIENT_NAME";
            internal const string SP_FK_CLI_SSN = "SP_FK_CLI_SSN";
            internal const string WS9_SYSTEM_CODES = "WS9_SYSTEM_CODES";
            internal const string WS9_SYSTEM_CODE_AE = "WS9_SYSTEM_CODE_AE";
            internal const string WS9_SYSTEM_CODE_CS = "WS9_SYSTEM_CODE_CS";
            internal const string WS9_SYSTEM_CODE_KA = "WS9_SYSTEM_CODE_KA";
            internal const string WS9_SYSTEM_CODE_KS = "WS9_SYSTEM_CODE_KS";
            internal const string WS9_SYSTEM_CODE_FA = "WS9_SYSTEM_CODE_FA";
            internal const string CL188_SWITCHES = "CL188_SWITCHES";
            internal const string CL188_EOF_SW = "CL188_EOF_SW";
            internal const string CL188_EOF_NOT_FOUND = "CL188_EOF_NOT_FOUND";
            internal const string CL188_EOF_NO = "CL188_EOF_NO";
            internal const string CL188_EOF_YES = "CL188_EOF_YES";
            internal const string CL149_EOF_SW = "CL149_EOF_SW";
            internal const string CL149_EOF_NOT_FOUND = "CL149_EOF_NOT_FOUND";
            internal const string CL149_EOF_NO = "CL149_EOF_NO";
            internal const string CL149_EOF_YES = "CL149_EOF_YES";
            internal const string CL154_EOF_SW = "CL154_EOF_SW";
            internal const string CL154_EOF_NOT_FOUND = "CL154_EOF_NOT_FOUND";
            internal const string CL154_EOF_NO = "CL154_EOF_NO";
            internal const string CL154_EOF_YES = "CL154_EOF_YES";
            internal const string CLSYS_EOF_SW = "CLSYS_EOF_SW";
            internal const string CLSYS_EOF_NOT_FOUND = "CLSYS_EOF_NOT_FOUND";
            internal const string CLSYS_EOF_NO = "CLSYS_EOF_NO";
            internal const string CLSYS_EOF_YES = "CLSYS_EOF_YES";
            internal const string WS_MISC = "WS_MISC";
            internal const string WS_MSG_X = "WS_MSG_X";
            internal const string WS_MSG_PROG = "WS_MSG_PROG";
            internal const string WS_MSG_1 = "WS_MSG_1";
            internal const string WS_MSG = "WS_MSG";
            internal const string WS_MSG_CODE = "WS_MSG_CODE";
            internal const string WS_MSG_SQLCODE = "WS_MSG_SQLCODE";
            internal const string WS_MSG_2 = "WS_MSG_2";
            internal const string WS_MSG_FIELD = "WS_MSG_FIELD";
            internal const string WS_MSG_VALUE = "WS_MSG_VALUE";
            internal const string WS_DATE_ADA = "WS_DATE_ADA";
            internal const string WS_DATE_DB2 = "WS_DATE_DB2";
            internal const string MV_CLIENT_NAME = "MV_CLIENT_NAME";
            internal const string MV_CLIENT_SURNAME = "MV_CLIENT_SURNAME";
            internal const string MV_CLIENT_GIVEN_NAME = "MV_CLIENT_GIVEN_NAME";
            internal const string MV_CLIENT_INITIAL = "MV_CLIENT_INITIAL";
            internal const string WS_CSE_PART = "WS_CSE_PART";
            internal const string WS_PROGRAM = "WS_PROGRAM";
            internal const string WS_COMMIT = "WS_COMMIT";
            internal const string CONTROL_BLOCK = "CONTROL_BLOCK";
            internal const string COMMAND_CODE = "COMMAND_CODE";
            internal const string COMMAND_ID = "COMMAND_ID";
            internal const string FILE_NUMBER = "FILE_NUMBER";
            internal const string RESPONSE_CODE = "RESPONSE_CODE";
            internal const string ISN = "ISN";
            internal const string ISN_LOWER_LIMIT = "ISN_LOWER_LIMIT";
            internal const string ISN_QUANTITY = "ISN_QUANTITY";
            internal const string FORMAT_BUFFER_LENGTH = "FORMAT_BUFFER_LENGTH";
            internal const string RECORD_BUFFER_LENGTH = "RECORD_BUFFER_LENGTH";
            internal const string SEARCH_BUFFER_LENGTH = "SEARCH_BUFFER_LENGTH";
            internal const string VALUE_BUFFER_LENGTH = "VALUE_BUFFER_LENGTH";
            internal const string ISN_BUFFER_LENGTH = "ISN_BUFFER_LENGTH";
            internal const string COMMAND_OPTION_1 = "COMMAND_OPTION_1";
            internal const string COMMAND_OPTION_2 = "COMMAND_OPTION_2";
            internal const string ADDITIONS_1 = "ADDITIONS_1";
            internal const string ADDITIONS_2 = "ADDITIONS_2";
            internal const string ADDITIONS_3 = "ADDITIONS_3";
            internal const string ADDITIONS_4 = "ADDITIONS_4";
            internal const string COMMAND_TIME = "COMMAND_TIME";
            internal const string USER_AREA = "USER_AREA";
        }
        #endregion

        #region Direct-access element properties
        public IField FUNC_0734790484_ESC_FLAG { get { return GetElementByName<IField>(Names.FUNC_0734790484_ESC_FLAG); } }
        public IGroup EXTERNAL_ACTION_BLOCK_WS { get { return GetElementByName<IGroup>(Names.EXTERNAL_ACTION_BLOCK_WS); } }
        public IGroup MV_ABEND_FIELDS { get { return GetElementByName<IGroup>(Names.MV_ABEND_FIELDS); } }
        public IField MV_ABEND_TYPE { get { return GetElementByName<IField>(Names.MV_ABEND_TYPE); } }
        public ICheckField MV_ABEND_TYPE_NONE { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_NONE); } }
        public ICheckField MV_ABEND_TYPE_ADABAS { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_ADABAS); } }
        public ICheckField MV_ABEND_TYPE_CICS { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_CICS); } }
        public IGroup MV_ABEND_ADABAS { get { return GetElementByName<IGroup>(Names.MV_ABEND_ADABAS); } }
        public IField MV_ADA_FILE_NUMBER { get { return GetElementByName<IField>(Names.MV_ADA_FILE_NUMBER); } }
        public IField MV_ADA_FILE_ACTION { get { return GetElementByName<IField>(Names.MV_ADA_FILE_ACTION); } }
        public IField MV_ADA_RESPONSE_CD { get { return GetElementByName<IField>(Names.MV_ADA_RESPONSE_CD); } }
        public IGroup MV_ABEND_CICS { get { return GetElementByName<IGroup>(Names.MV_ABEND_CICS); } }
        public IField MV_CICS_RESOURCE_NM { get { return GetElementByName<IField>(Names.MV_CICS_RESOURCE_NM); } }
        public IField MV_CICS_FUNCTION_CD { get { return GetElementByName<IField>(Names.MV_CICS_FUNCTION_CD); } }
        public IField MV_CICS_RESPONSE_CD { get { return GetElementByName<IField>(Names.MV_CICS_RESPONSE_CD); } }
        public IField MV_ABS_TIME { get { return GetElementByName<IField>(Names.MV_ABS_TIME); } }
        public IGroup MV_CCYYMMDD_X8 { get { return GetElementByName<IGroup>(Names.MV_CCYYMMDD_X8); } }
        public IField MV_CC { get { return GetElementByName<IField>(Names.MV_CC); } }
        public IGroup MV_YYMMDD_X6 { get { return GetElementByName<IGroup>(Names.MV_YYMMDD_X6); } }
        public IField MV_YY { get { return GetElementByName<IField>(Names.MV_YY); } }
        public IField MV_MM { get { return GetElementByName<IField>(Names.MV_MM); } }
        public IField MV_DD { get { return GetElementByName<IField>(Names.MV_DD); } }
        public IField MV_YYMMDD { get { return GetElementByName<IField>(Names.MV_YYMMDD); } }
        public IField MV_CURRENT_CCYY { get { return GetElementByName<IField>(Names.MV_CURRENT_CCYY); } }
        public IField MV_CURRENT_MMDD { get { return GetElementByName<IField>(Names.MV_CURRENT_MMDD); } }
        public IField MV_CCYYMMDD { get { return GetElementByName<IField>(Names.MV_CCYYMMDD); } }
        public IGroup I_MV_CCYYMMDD { get { return GetElementByName<IGroup>(Names.I_MV_CCYYMMDD); } }
        public IField I_YYYY { get { return GetElementByName<IField>(Names.I_YYYY); } }
        public IField I_MM { get { return GetElementByName<IField>(Names.I_MM); } }
        public IField I_DD { get { return GetElementByName<IField>(Names.I_DD); } }
        public IGroup O_MV_CCYYMMDD { get { return GetElementByName<IGroup>(Names.O_MV_CCYYMMDD); } }
        public IField O_YYYY { get { return GetElementByName<IField>(Names.O_YYYY); } }
        public IField O_MM { get { return GetElementByName<IField>(Names.O_MM); } }
        public IField O_DD { get { return GetElementByName<IField>(Names.O_DD); } }
        public IField MV_COMPLIMENT_DATE { get { return GetElementByName<IField>(Names.MV_COMPLIMENT_DATE); } }
        public IGroup MV_CLIENT_NUMBER_X10 { get { return GetElementByName<IGroup>(Names.MV_CLIENT_NUMBER_X10); } }
        public IField MV_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.MV_CLIENT_NUMBER); } }
        public IGroup CSE_CASE_NUMBER { get { return GetElementByName<IGroup>(Names.CSE_CASE_NUMBER); } }
        public IField CSE_CASE_NUMBER_X10 { get { return GetElementByName<IField>(Names.CSE_CASE_NUMBER_X10); } }
        public IField MV_CSE_CASE_NUMBER { get { return GetElementByName<IField>(Names.MV_CSE_CASE_NUMBER); } }
        public IGroup MV_AP_CLIENT_NUMBER_X10 { get { return GetElementByName<IGroup>(Names.MV_AP_CLIENT_NUMBER_X10); } }
        public IField MV_AP_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.MV_AP_CLIENT_NUMBER); } }
        public IGroup MV_AR_AP_NUMBER { get { return GetElementByName<IGroup>(Names.MV_AR_AP_NUMBER); } }
        public IField MV_AR_NUMBER { get { return GetElementByName<IField>(Names.MV_AR_NUMBER); } }
        public IField MV_AP_NUMBER { get { return GetElementByName<IField>(Names.MV_AP_NUMBER); } }
        public IGroup MV_REFERRAL_NUMBER { get { return GetElementByName<IGroup>(Names.MV_REFERRAL_NUMBER); } }
        public IField MV_REFERRAL_CASE { get { return GetElementByName<IField>(Names.MV_REFERRAL_CASE); } }
        public IField MV_REFERRAL_AP { get { return GetElementByName<IField>(Names.MV_REFERRAL_AP); } }
        public IField MV_REFERRAL_SOURCE { get { return GetElementByName<IField>(Names.MV_REFERRAL_SOURCE); } }
        public ICheckField MV_REFERRAL_SOURCE_VALID { get { return GetElementByName<ICheckField>(Names.MV_REFERRAL_SOURCE_VALID); } }
        public ICheckField MV_REFERRAL_KAE { get { return GetElementByName<ICheckField>(Names.MV_REFERRAL_KAE); } }
        public ICheckField MV_REFERRAL_KSC { get { return GetElementByName<ICheckField>(Names.MV_REFERRAL_KSC); } }
        public ICheckField MV_REFERRAL_KES { get { return GetElementByName<ICheckField>(Names.MV_REFERRAL_KES); } }
        public IGroup MV_DATE_OF_BIRTH_SEX { get { return GetElementByName<IGroup>(Names.MV_DATE_OF_BIRTH_SEX); } }
        public IField MV_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.MV_DATE_OF_BIRTH); } }
        public IField MV_SEX { get { return GetElementByName<IField>(Names.MV_SEX); } }
        public IField MV_SAVE_KEY_CLIENT_POINTER { get { return GetElementByName<IField>(Names.MV_SAVE_KEY_CLIENT_POINTER); } }
        public IGroup MV_CLIENT_POINTER { get { return GetElementByName<IGroup>(Names.MV_CLIENT_POINTER); } }
        public IField MV_CLIENT_ID { get { return GetElementByName<IField>(Names.MV_CLIENT_ID); } }
        public IField MV_VERIFIED_SSN_FLAG { get { return GetElementByName<IField>(Names.MV_VERIFIED_SSN_FLAG); } }
        public IGroup MV_SYSTEM_PARTICIPATION { get { return GetElementByName<IGroup>(Names.MV_SYSTEM_PARTICIPATION); } }
        public IField MV_SYS_PART_AE { get { return GetElementByName<IField>(Names.MV_SYS_PART_AE); } }
        public IField MV_SYS_PART_CSE { get { return GetElementByName<IField>(Names.MV_SYS_PART_CSE); } }
        public IField MV_SYS_PART_KANPAY { get { return GetElementByName<IField>(Names.MV_SYS_PART_KANPAY); } }
        public IField MV_SYS_PART_KSCARES { get { return GetElementByName<IField>(Names.MV_SYS_PART_KSCARES); } }
        public IGroup DCLKSD_REFERRAL { get { return GetElementByName<IGroup>(Names.DCLKSD_REFERRAL); } }
        public IField REF_FK_CSB_CASE_NO { get { return GetElementByName<IField>(Names.REF_FK_CSB_CASE_NO); } }
        public IField REF_AP_NUMBER { get { return GetElementByName<IField>(Names.REF_AP_NUMBER); } }
        public IField REF_REFERRAL_TYPE { get { return GetElementByName<IField>(Names.REF_REFERRAL_TYPE); } }
        public IField REF_REFERRAL_DATE { get { return GetElementByName<IField>(Names.REF_REFERRAL_DATE); } }
        public IField REF_PI_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.REF_PI_CLIENT_NUMBER); } }
        public IField REF_CSE_CASE_NUMBER { get { return GetElementByName<IField>(Names.REF_CSE_CASE_NUMBER); } }
        public IField REF_CSE_ESTABLISH_DATE { get { return GetElementByName<IField>(Names.REF_CSE_ESTABLISH_DATE); } }
        public IField REF_AP_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.REF_AP_CLIENT_NUMBER); } }
        public IField REF_SYSTEM_ORIGIN { get { return GetElementByName<IField>(Names.REF_SYSTEM_ORIGIN); } }
        public IField REF_LAST_MODIFIED_BY { get { return GetElementByName<IField>(Names.REF_LAST_MODIFIED_BY); } }
        public IField REF_LAST_MODIFIED_TMST { get { return GetElementByName<IField>(Names.REF_LAST_MODIFIED_TMST); } }
        public IGroup DCLKSD_CLIENT { get { return GetElementByName<IGroup>(Names.DCLKSD_CLIENT); } }
        public IField CLIENT_SSN { get { return GetElementByName<IField>(Names.CLIENT_SSN); } }
        public IField CLIENT_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.CLIENT_DATE_OF_BIRTH); } }
        public IField CLIENT_GENDER { get { return GetElementByName<IField>(Names.CLIENT_GENDER); } }
        public IField CLIENT_VERIFIED_SSN_FLAG { get { return GetElementByName<IField>(Names.CLIENT_VERIFIED_SSN_FLAG); } }
        public IField CLIENT_NAME { get { return GetElementByName<IField>(Names.CLIENT_NAME); } }
        public IField CLIENT_FK_CLB_CLIENT_NO { get { return GetElementByName<IField>(Names.CLIENT_FK_CLB_CLIENT_NO); } }
        public IGroup DCLKSD_CLIENT_BASIC { get { return GetElementByName<IGroup>(Names.DCLKSD_CLIENT_BASIC); } }
        public IField CLB_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.CLB_CLIENT_NUMBER); } }
        public IField CLB_CLIENT_GIVEN_NAME { get { return GetElementByName<IField>(Names.CLB_CLIENT_GIVEN_NAME); } }
        public IField CLB_CLIENT_INITIALS { get { return GetElementByName<IField>(Names.CLB_CLIENT_INITIALS); } }
        public IField CLB_CLIENT_SURNAME { get { return GetElementByName<IField>(Names.CLB_CLIENT_SURNAME); } }
        public IField CLB_SSN { get { return GetElementByName<IField>(Names.CLB_SSN); } }
        public IField CLB_GENDER { get { return GetElementByName<IField>(Names.CLB_GENDER); } }
        public IField CLB_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.CLB_DATE_OF_BIRTH); } }
        public IField CLB_SUFFIX_NAME { get { return GetElementByName<IField>(Names.CLB_SUFFIX_NAME); } }
        public IGroup DCLKSD_SYSTEM_PART { get { return GetElementByName<IGroup>(Names.DCLKSD_SYSTEM_PART); } }
        public IField SP_SYSTEM_CODE { get { return GetElementByName<IField>(Names.SP_SYSTEM_CODE); } }
        public IField SP_PARTICIPATION_FLAG { get { return GetElementByName<IField>(Names.SP_PARTICIPATION_FLAG); } }
        public IField SP_CREATED_TIMESTAMP { get { return GetElementByName<IField>(Names.SP_CREATED_TIMESTAMP); } }
        public IField SP_CREATED_BY { get { return GetElementByName<IField>(Names.SP_CREATED_BY); } }
        public IField SP_LAST_MODIFIED_BY { get { return GetElementByName<IField>(Names.SP_LAST_MODIFIED_BY); } }
        public IField SP_LAST_MODIFIED_TMST { get { return GetElementByName<IField>(Names.SP_LAST_MODIFIED_TMST); } }
        public IField SP_FK_CLB_CLIENT_NO { get { return GetElementByName<IField>(Names.SP_FK_CLB_CLIENT_NO); } }
        public IField SP_FK_CLI_CLIENT_NAME { get { return GetElementByName<IField>(Names.SP_FK_CLI_CLIENT_NAME); } }
        public IField SP_FK_CLI_SSN { get { return GetElementByName<IField>(Names.SP_FK_CLI_SSN); } }
        public IGroup WS9_SYSTEM_CODES { get { return GetElementByName<IGroup>(Names.WS9_SYSTEM_CODES); } }
        public IField WS9_SYSTEM_CODE_AE { get { return GetElementByName<IField>(Names.WS9_SYSTEM_CODE_AE); } }
        public IField WS9_SYSTEM_CODE_CS { get { return GetElementByName<IField>(Names.WS9_SYSTEM_CODE_CS); } }
        public IField WS9_SYSTEM_CODE_KA { get { return GetElementByName<IField>(Names.WS9_SYSTEM_CODE_KA); } }
        public IField WS9_SYSTEM_CODE_KS { get { return GetElementByName<IField>(Names.WS9_SYSTEM_CODE_KS); } }
        public IField WS9_SYSTEM_CODE_FA { get { return GetElementByName<IField>(Names.WS9_SYSTEM_CODE_FA); } }
        public IGroup CL188_SWITCHES { get { return GetElementByName<IGroup>(Names.CL188_SWITCHES); } }
        public IField CL188_EOF_SW { get { return GetElementByName<IField>(Names.CL188_EOF_SW); } }
        public ICheckField CL188_EOF_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.CL188_EOF_NOT_FOUND); } }
        public ICheckField CL188_EOF_NO { get { return GetElementByName<ICheckField>(Names.CL188_EOF_NO); } }
        public ICheckField CL188_EOF_YES { get { return GetElementByName<ICheckField>(Names.CL188_EOF_YES); } }
        public IField CL149_EOF_SW { get { return GetElementByName<IField>(Names.CL149_EOF_SW); } }
        public ICheckField CL149_EOF_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.CL149_EOF_NOT_FOUND); } }
        public ICheckField CL149_EOF_NO { get { return GetElementByName<ICheckField>(Names.CL149_EOF_NO); } }
        public ICheckField CL149_EOF_YES { get { return GetElementByName<ICheckField>(Names.CL149_EOF_YES); } }
        public IField CL154_EOF_SW { get { return GetElementByName<IField>(Names.CL154_EOF_SW); } }
        public ICheckField CL154_EOF_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.CL154_EOF_NOT_FOUND); } }
        public ICheckField CL154_EOF_NO { get { return GetElementByName<ICheckField>(Names.CL154_EOF_NO); } }
        public ICheckField CL154_EOF_YES { get { return GetElementByName<ICheckField>(Names.CL154_EOF_YES); } }
        public IField CLSYS_EOF_SW { get { return GetElementByName<IField>(Names.CLSYS_EOF_SW); } }
        public ICheckField CLSYS_EOF_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.CLSYS_EOF_NOT_FOUND); } }
        public ICheckField CLSYS_EOF_NO { get { return GetElementByName<ICheckField>(Names.CLSYS_EOF_NO); } }
        public ICheckField CLSYS_EOF_YES { get { return GetElementByName<ICheckField>(Names.CLSYS_EOF_YES); } }
        public IGroup WS_MISC { get { return GetElementByName<IGroup>(Names.WS_MISC); } }
        public IGroup WS_MSG_X { get { return GetElementByName<IGroup>(Names.WS_MSG_X); } }
        public IField WS_MSG_PROG { get { return GetElementByName<IField>(Names.WS_MSG_PROG); } }
        public IGroup WS_MSG_1 { get { return GetElementByName<IGroup>(Names.WS_MSG_1); } }
        public IField WS_MSG { get { return GetElementByName<IField>(Names.WS_MSG); } }
        public IGroup WS_MSG_CODE { get { return GetElementByName<IGroup>(Names.WS_MSG_CODE); } }
        public IField WS_MSG_SQLCODE { get { return GetElementByName<IField>(Names.WS_MSG_SQLCODE); } }
        public IGroup WS_MSG_2 { get { return GetElementByName<IGroup>(Names.WS_MSG_2); } }
        public IField WS_MSG_FIELD { get { return GetElementByName<IField>(Names.WS_MSG_FIELD); } }
        public IField WS_MSG_VALUE { get { return GetElementByName<IField>(Names.WS_MSG_VALUE); } }
        public IField WS_DATE_ADA { get { return GetElementByName<IField>(Names.WS_DATE_ADA); } }
        public IField WS_DATE_DB2 { get { return GetElementByName<IField>(Names.WS_DATE_DB2); } }
        public IGroup MV_CLIENT_NAME { get { return GetElementByName<IGroup>(Names.MV_CLIENT_NAME); } }
        public IField MV_CLIENT_SURNAME { get { return GetElementByName<IField>(Names.MV_CLIENT_SURNAME); } }
        public IField MV_CLIENT_GIVEN_NAME { get { return GetElementByName<IField>(Names.MV_CLIENT_GIVEN_NAME); } }
        public IField MV_CLIENT_INITIAL { get { return GetElementByName<IField>(Names.MV_CLIENT_INITIAL); } }
        public IField WS_CSE_PART { get { return GetElementByName<IField>(Names.WS_CSE_PART); } }
        public IField WS_PROGRAM { get { return GetElementByName<IField>(Names.WS_PROGRAM); } }
        public IField WS_COMMIT { get { return GetElementByName<IField>(Names.WS_COMMIT); } }
        public IGroup CONTROL_BLOCK { get { return GetElementByName<IGroup>(Names.CONTROL_BLOCK); } }
        public IField COMMAND_CODE { get { return GetElementByName<IField>(Names.COMMAND_CODE); } }
        public IField COMMAND_ID { get { return GetElementByName<IField>(Names.COMMAND_ID); } }
        public IField FILE_NUMBER { get { return GetElementByName<IField>(Names.FILE_NUMBER); } }
        public IField RESPONSE_CODE { get { return GetElementByName<IField>(Names.RESPONSE_CODE); } }
        public IField ISN { get { return GetElementByName<IField>(Names.ISN); } }
        public IField ISN_LOWER_LIMIT { get { return GetElementByName<IField>(Names.ISN_LOWER_LIMIT); } }
        public IField ISN_QUANTITY { get { return GetElementByName<IField>(Names.ISN_QUANTITY); } }
        public IField FORMAT_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.FORMAT_BUFFER_LENGTH); } }
        public IField RECORD_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.RECORD_BUFFER_LENGTH); } }
        public IField SEARCH_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.SEARCH_BUFFER_LENGTH); } }
        public IField VALUE_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.VALUE_BUFFER_LENGTH); } }
        public IField ISN_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.ISN_BUFFER_LENGTH); } }
        public IField COMMAND_OPTION_1 { get { return GetElementByName<IField>(Names.COMMAND_OPTION_1); } }
        public IField COMMAND_OPTION_2 { get { return GetElementByName<IField>(Names.COMMAND_OPTION_2); } }
        public IField ADDITIONS_1 { get { return GetElementByName<IField>(Names.ADDITIONS_1); } }
        public IField ADDITIONS_2 { get { return GetElementByName<IField>(Names.ADDITIONS_2); } }
        public IField ADDITIONS_3 { get { return GetElementByName<IField>(Names.ADDITIONS_3); } }
        public IField ADDITIONS_4 { get { return GetElementByName<IField>(Names.ADDITIONS_4); } }
        public IField COMMAND_TIME { get { return GetElementByName<IField>(Names.COMMAND_TIME); } }
        public IField USER_AREA { get { return GetElementByName<IField>(Names.USER_AREA); } }

        public CPY_SQLCA SQLCA = new CPY_SQLCA(null, true);
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.FUNC_0734790484_ESC_FLAG, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.EXTERNAL_ACTION_BLOCK_WS, (EXTERNAL_ACTION_BLOCK_WS) =>
           {
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_ABEND_FIELDS, (MV_ABEND_FIELDS) =>
               {
                   MV_ABEND_FIELDS.CreateNewField(Names.MV_ABEND_TYPE, FieldType.String, 1)
                       .NewCheckField(Names.MV_ABEND_TYPE_NONE, SPACE)
                       .NewCheckField(Names.MV_ABEND_TYPE_ADABAS, "A")
                       .NewCheckField(Names.MV_ABEND_TYPE_CICS, "C")
                       ;
                   MV_ABEND_FIELDS.CreateNewGroup(Names.MV_ABEND_ADABAS, (MV_ABEND_ADABAS) =>
                   {
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_FILE_NUMBER, FieldType.UnsignedNumeric, 4);
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_FILE_ACTION, FieldType.String, 3);
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_RESPONSE_CD, FieldType.UnsignedNumeric, 4);
                   });
                   MV_ABEND_FIELDS.CreateNewGroup(Names.MV_ABEND_CICS, (MV_ABEND_CICS) =>
                   {
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_RESOURCE_NM, FieldType.String, 8);
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_FUNCTION_CD, FieldType.String, 2);
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_RESPONSE_CD, FieldType.String, 6);
                   });
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_ABS_TIME, FieldType.PackedDecimal, 15);
               IGroup MV_CCYYMMDD_X8_local = (IGroup)EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CCYYMMDD_X8, (MV_CCYYMMDD_X8) =>
               {
                   MV_CCYYMMDD_X8.CreateNewField(Names.MV_CC, FieldType.UnsignedNumeric, 2);
                   IGroup MV_YYMMDD_X6_local = (IGroup)MV_CCYYMMDD_X8.CreateNewGroup(Names.MV_YYMMDD_X6, (MV_YYMMDD_X6) =>
                   {
                       MV_YYMMDD_X6.CreateNewField(Names.MV_YY, FieldType.UnsignedNumeric, 2);
                       MV_YYMMDD_X6.CreateNewField(Names.MV_MM, FieldType.UnsignedNumeric, 2);
                       MV_YYMMDD_X6.CreateNewField(Names.MV_DD, FieldType.UnsignedNumeric, 2);
                       MV_YYMMDD_X6.CreateNewFillerField(2, FillWith.Hashes);
                   });
                   MV_CCYYMMDD_X8.CreateNewGroupRedefine("FILLER_d2", MV_YYMMDD_X6_local, (FILLER_d2) =>
                   {
                       FILLER_d2.CreateNewField(Names.MV_YYMMDD, FieldType.UnsignedNumeric, 6);
                       FILLER_d2.CreateNewFillerField(2, FillWith.Hashes);
                   });
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroupRedefine("FILLER_d4", MV_CCYYMMDD_X8_local, (FILLER_d4) =>
               {
                   FILLER_d4.CreateNewField(Names.MV_CURRENT_CCYY, FieldType.UnsignedNumeric, 4);
                   FILLER_d4.CreateNewField(Names.MV_CURRENT_MMDD, FieldType.UnsignedNumeric, 4);
                   FILLER_d4.CreateNewFillerField(2, FillWith.Hashes);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroupRedefine("FILLER_d6", MV_CCYYMMDD_X8_local, (FILLER_d6) =>
               {

                   IField MV_CCYYMMDD_local = FILLER_d6.CreateNewField(Names.MV_CCYYMMDD, FieldType.UnsignedNumeric, 8);
                   FILLER_d6.CreateNewGroupRedefine(Names.I_MV_CCYYMMDD, MV_CCYYMMDD_local, (I_MV_CCYYMMDD) =>
                   {
                       I_MV_CCYYMMDD.CreateNewField(Names.I_YYYY, FieldType.String, 4);
                       I_MV_CCYYMMDD.CreateNewField(Names.I_MM, FieldType.String, 2);
                       I_MV_CCYYMMDD.CreateNewField(Names.I_DD, FieldType.String, 2);
                   });
                   FILLER_d6.CreateNewFillerField(2, FillWith.Hashes);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.O_MV_CCYYMMDD, (O_MV_CCYYMMDD) =>
               {
                   O_MV_CCYYMMDD.CreateNewField(Names.O_YYYY, FieldType.String, 4);
                   O_MV_CCYYMMDD.CreateNewFillerField(FieldType.String, 1, "-");
                   O_MV_CCYYMMDD.CreateNewField(Names.O_MM, FieldType.String, 2);
                   O_MV_CCYYMMDD.CreateNewFillerField(FieldType.String, 1, "-");
                   O_MV_CCYYMMDD.CreateNewField(Names.O_DD, FieldType.String, 2);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_COMPLIMENT_DATE, FieldType.UnsignedPackedDecimal, 9);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CLIENT_NUMBER_X10, (MV_CLIENT_NUMBER_X10) =>
               {
                   MV_CLIENT_NUMBER_X10.CreateNewField(Names.MV_CLIENT_NUMBER, FieldType.UnsignedNumeric, 10);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewFillerField(FieldType.String, 10, "CSE-CASE");
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.CSE_CASE_NUMBER, (CSE_CASE_NUMBER) =>
               {
                   CSE_CASE_NUMBER.CreateNewField(Names.CSE_CASE_NUMBER_X10, FieldType.String, 10);
                   CSE_CASE_NUMBER.CreateNewFillerField(2, FillWith.Hashes);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewFillerField(FieldType.String, 10, "MV-CS-CASE");
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_CSE_CASE_NUMBER, FieldType.String, 10);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_AP_CLIENT_NUMBER_X10, (MV_AP_CLIENT_NUMBER_X10) =>
               {
                   MV_AP_CLIENT_NUMBER_X10.CreateNewField(Names.MV_AP_CLIENT_NUMBER, FieldType.UnsignedNumeric, 10);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_AR_AP_NUMBER, (MV_AR_AP_NUMBER) =>
               {
                   MV_AR_AP_NUMBER.CreateNewField(Names.MV_AR_NUMBER, FieldType.String, 10);
                   MV_AR_AP_NUMBER.CreateNewField(Names.MV_AP_NUMBER, FieldType.UnsignedNumeric, 2);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewFillerField(FieldType.String, 10, "MV-REFERRA");
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_REFERRAL_NUMBER, (MV_REFERRAL_NUMBER) =>
               {
                   MV_REFERRAL_NUMBER.CreateNewField(Names.MV_REFERRAL_CASE, FieldType.String, 8);
                   MV_REFERRAL_NUMBER.CreateNewField(Names.MV_REFERRAL_AP, FieldType.UnsignedNumeric, 2);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_REFERRAL_SOURCE, FieldType.String, 3)
                   .NewCheckField(Names.MV_REFERRAL_SOURCE_VALID, "KAE", "KSC", "KES")
                   .NewCheckField(Names.MV_REFERRAL_KAE, "KAE")
                   .NewCheckField(Names.MV_REFERRAL_KSC, "KSC")
                   .NewCheckField(Names.MV_REFERRAL_KES, "KES")
                   ;
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_DATE_OF_BIRTH_SEX, (MV_DATE_OF_BIRTH_SEX) =>
               {
                   MV_DATE_OF_BIRTH_SEX.CreateNewField(Names.MV_DATE_OF_BIRTH, FieldType.String, 8);
                   MV_DATE_OF_BIRTH_SEX.CreateNewField(Names.MV_SEX, FieldType.String, 1);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_SAVE_KEY_CLIENT_POINTER, FieldType.String, 21);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CLIENT_POINTER, (MV_CLIENT_POINTER) =>
               {
                   MV_CLIENT_POINTER.CreateNewField(Names.MV_CLIENT_ID, FieldType.String, 10);
                   MV_CLIENT_POINTER.CreateNewField(Names.MV_VERIFIED_SSN_FLAG, FieldType.String, 1);
                   MV_CLIENT_POINTER.CreateNewGroup(Names.MV_SYSTEM_PARTICIPATION, (MV_SYSTEM_PARTICIPATION) =>
                   {
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_AE, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_CSE, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_KANPAY, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_KSCARES, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewFillerField(16, FillWith.Hashes);
                   });
               });
           });

            recordDef.CreateNewGroup(Names.DCLKSD_REFERRAL, (DCLKSD_REFERRAL) =>
           {
               DCLKSD_REFERRAL.CreateNewField(Names.REF_FK_CSB_CASE_NO, FieldType.String, 8);
               DCLKSD_REFERRAL.CreateNewField(Names.REF_AP_NUMBER, FieldType.CompShort, 4);
               DCLKSD_REFERRAL.CreateNewField(Names.REF_REFERRAL_TYPE, FieldType.String, 1);
               DCLKSD_REFERRAL.CreateNewField(Names.REF_REFERRAL_DATE, FieldType.String, 10);
               DCLKSD_REFERRAL.CreateNewField(Names.REF_PI_CLIENT_NUMBER, FieldType.String, 10);
               DCLKSD_REFERRAL.CreateNewField(Names.REF_CSE_CASE_NUMBER, FieldType.String, 12);
               DCLKSD_REFERRAL.CreateNewField(Names.REF_CSE_ESTABLISH_DATE, FieldType.String, 10);
               DCLKSD_REFERRAL.CreateNewField(Names.REF_AP_CLIENT_NUMBER, FieldType.String, 10);
               DCLKSD_REFERRAL.CreateNewField(Names.REF_SYSTEM_ORIGIN, FieldType.String, 3);
               DCLKSD_REFERRAL.CreateNewField(Names.REF_LAST_MODIFIED_BY, FieldType.String, 8);
               DCLKSD_REFERRAL.CreateNewField(Names.REF_LAST_MODIFIED_TMST, FieldType.String, 26);
           });

            recordDef.CreateNewGroup(Names.DCLKSD_CLIENT, (DCLKSD_CLIENT) =>
           {
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_SSN, FieldType.CompInt, 9);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_DATE_OF_BIRTH, FieldType.String, 10);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_GENDER, FieldType.String, 1);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_VERIFIED_SSN_FLAG, FieldType.String, 1);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_NAME, FieldType.String, 30);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_FK_CLB_CLIENT_NO, FieldType.String, 10);
           });

            recordDef.CreateNewGroup(Names.DCLKSD_CLIENT_BASIC, (DCLKSD_CLIENT_BASIC) =>
           {
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_NUMBER, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_GIVEN_NAME, FieldType.String, 12);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_INITIALS, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_SURNAME, FieldType.String, 17);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_SSN, FieldType.CompInt, 9);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_GENDER, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_DATE_OF_BIRTH, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_SUFFIX_NAME, FieldType.String, 10);
           });

            recordDef.CreateNewGroup(Names.DCLKSD_SYSTEM_PART, (DCLKSD_SYSTEM_PART) =>
           {
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SP_SYSTEM_CODE, FieldType.String, 2);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SP_PARTICIPATION_FLAG, FieldType.String, 1);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SP_CREATED_TIMESTAMP, FieldType.String, 26);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SP_CREATED_BY, FieldType.String, 8);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SP_LAST_MODIFIED_BY, FieldType.String, 8);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SP_LAST_MODIFIED_TMST, FieldType.String, 26);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SP_FK_CLB_CLIENT_NO, FieldType.String, 10);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SP_FK_CLI_CLIENT_NAME, FieldType.String, 30);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SP_FK_CLI_SSN, FieldType.CompInt, 9);
           });

            recordDef.CreateNewGroup(Names.WS9_SYSTEM_CODES, (WS9_SYSTEM_CODES) =>
           {
               WS9_SYSTEM_CODES.CreateNewField(Names.WS9_SYSTEM_CODE_AE, FieldType.String, 2, "AE");
               WS9_SYSTEM_CODES.CreateNewField(Names.WS9_SYSTEM_CODE_CS, FieldType.String, 2, "CS");
               WS9_SYSTEM_CODES.CreateNewField(Names.WS9_SYSTEM_CODE_KA, FieldType.String, 2, "KA");
               WS9_SYSTEM_CODES.CreateNewField(Names.WS9_SYSTEM_CODE_KS, FieldType.String, 2, "KS");
               WS9_SYSTEM_CODES.CreateNewField(Names.WS9_SYSTEM_CODE_FA, FieldType.String, 2, "FA");
           });

            recordDef.CreateNewGroup(Names.CL188_SWITCHES, (CL188_SWITCHES) =>
           {
               CL188_SWITCHES.CreateNewField(Names.CL188_EOF_SW, FieldType.String, 1, "N")
                   .NewCheckField(Names.CL188_EOF_NOT_FOUND, SPACE)
                   .NewCheckField(Names.CL188_EOF_NO, "N")
                   .NewCheckField(Names.CL188_EOF_YES, "Y")
                   ;
               CL188_SWITCHES.CreateNewField(Names.CL149_EOF_SW, FieldType.String, 1, "N")
                   .NewCheckField(Names.CL149_EOF_NOT_FOUND, SPACE)
                   .NewCheckField(Names.CL149_EOF_NO, "N")
                   .NewCheckField(Names.CL149_EOF_YES, "Y")
                   ;
               CL188_SWITCHES.CreateNewField(Names.CL154_EOF_SW, FieldType.String, 1, "N")
                   .NewCheckField(Names.CL154_EOF_NOT_FOUND, SPACE)
                   .NewCheckField(Names.CL154_EOF_NO, "N")
                   .NewCheckField(Names.CL154_EOF_YES, "Y")
                   ;
               CL188_SWITCHES.CreateNewField(Names.CLSYS_EOF_SW, FieldType.String, 1, "N")
                   .NewCheckField(Names.CLSYS_EOF_NOT_FOUND, SPACE)
                   .NewCheckField(Names.CLSYS_EOF_NO, "N")
                   .NewCheckField(Names.CLSYS_EOF_YES, "Y")
                   ;
           });

            recordDef.CreateNewGroup(Names.WS_MISC, (WS_MISC) =>
           {
               WS_MISC.CreateNewGroup(Names.WS_MSG_X, (WS_MSG_X) =>
               {
                   WS_MSG_X.CreateNewField(Names.WS_MSG_PROG, FieldType.String, 10);
                   IGroup WS_MSG_1_local = (IGroup)WS_MSG_X.CreateNewGroup(Names.WS_MSG_1, (WS_MSG_1) =>
                   {
                       WS_MSG_1.CreateNewField(Names.WS_MSG, FieldType.String, 50);
                       WS_MSG_1.CreateNewGroup(Names.WS_MSG_CODE, (WS_MSG_CODE) =>
                       {
                           WS_MSG_CODE.CreateNewField(Names.WS_MSG_SQLCODE, FieldType.NumericEdited, "---------9", 10);
                       });
                   });
                   WS_MSG_X.CreateNewGroupRedefine(Names.WS_MSG_2, WS_MSG_1_local, (WS_MSG_2) =>
                   {
                       WS_MSG_2.CreateNewField(Names.WS_MSG_FIELD, FieldType.String, 25);
                       WS_MSG_2.CreateNewField(Names.WS_MSG_VALUE, FieldType.String, 35);
                   });
               });
               WS_MISC.CreateNewField(Names.WS_DATE_ADA, FieldType.String, 8);
               WS_MISC.CreateNewField(Names.WS_DATE_DB2, FieldType.String, 10);
               WS_MISC.CreateNewGroup(Names.MV_CLIENT_NAME, (MV_CLIENT_NAME) =>
               {
                   MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_SURNAME, FieldType.String, 17);
                   MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_GIVEN_NAME, FieldType.String, 12);
                   MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_INITIAL, FieldType.String, 1);
               });
               WS_MISC.CreateNewField(Names.WS_CSE_PART, FieldType.String, 2, "CS");
               WS_MISC.CreateNewField(Names.WS_PROGRAM, FieldType.String, 8, "SWEXIU30");
               WS_MISC.CreateNewField(Names.WS_COMMIT, FieldType.String, 1, "N");
           });

            recordDef.CreateNewGroup(Names.CONTROL_BLOCK, (CONTROL_BLOCK) =>
           {
               CONTROL_BLOCK.CreateNewFillerField(FieldType.String, 2, "AP");
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_CODE, FieldType.String, 2, "RC");
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_ID, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.FILE_NUMBER, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.RESPONSE_CODE, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN_LOWER_LIMIT, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN_QUANTITY, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.FORMAT_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.RECORD_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.SEARCH_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.VALUE_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_OPTION_1, FieldType.String, 1, SPACE);
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_OPTION_2, FieldType.String, 1, SPACE);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_1, FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_2, FieldType.String, 4, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_3, FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_4, FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewFillerField(FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_TIME, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.USER_AREA, FieldType.String, 4, SPACES);
           });


        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            SQLCA.InitializeWithLowValues();
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXIU30_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXIU30_ls_LinkageSection";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string W_IA = "W_IA";
            internal const string A_0734790487_IA = "A_0734790487_IA";
            internal const string IMPORT_CURRENT_0001EV = "IMPORT_CURRENT_0001EV";
            internal const string DATE_WORK_AREA_0001ET = "DATE_WORK_AREA_0001ET";
            internal const string DATE_0001AS = "DATE_0001AS";
            internal const string DATE_0001 = "DATE_0001";
            internal const string DATE_0001XX = "DATE_0001XX";
            internal const string IMPORT_0002EV = "IMPORT_0002EV";
            internal const string CASE_0002ET = "CASE_0002ET";
            internal const string NUMBER_0002AS = "NUMBER_0002AS";
            internal const string NUMBER_0002 = "NUMBER_0002";
            internal const string NUMBER_0002XX = "NUMBER_0002XX";
            internal const string IMPORT_0003EV = "IMPORT_0003EV";
            internal const string CSE_PERSONS_WORK_SET_0003ET = "CSE_PERSONS_WORK_SET_0003ET";
            internal const string NUMBER_0003AS = "NUMBER_0003AS";
            internal const string NUMBER_0003 = "NUMBER_0003";
            internal const string NUMBER_0003XX = "NUMBER_0003XX";
            internal const string IMPORT_0004EV = "IMPORT_0004EV";
            internal const string PA_REFERRAL_0004ET = "PA_REFERRAL_0004ET";
            internal const string CASE_NUMBER_0004AS = "CASE_NUMBER_0004AS";
            internal const string CASE_NUMBER_0004 = "CASE_NUMBER_0004";
            internal const string CASE_NUMBER_0004XX = "CASE_NUMBER_0004XX";
            internal const string FROM_0004AS = "FROM_0004AS";
            internal const string FROM_0004 = "FROM_0004";
            internal const string FROM_0004XX = "FROM_0004XX";
            internal const string W_OA = "W_OA";
            internal const string A_0734790488_OA = "A_0734790488_OA";
            internal const string EXPORT_0005EV = "EXPORT_0005EV";
            internal const string ABEND_DATA_0005ET = "ABEND_DATA_0005ET";
            internal const string TYPE_0005AS = "TYPE_0005AS";
            internal const string TYPE_0005 = "TYPE_0005";
            internal const string TYPE_0005XX = "TYPE_0005XX";
            internal const string ADABAS_FILE_NUMBER_0005AS = "ADABAS_FILE_NUMBER_0005AS";
            internal const string ADABAS_FILE_NUMBER_0005 = "ADABAS_FILE_NUMBER_0005";
            internal const string ADABAS_FILE_NUMBER_0005XX = "ADABAS_FILE_NUMBER_0005XX";
            internal const string ADABAS_FILE_ACTION_0005AS = "ADABAS_FILE_ACTION_0005AS";
            internal const string ADABAS_FILE_ACTION_0005 = "ADABAS_FILE_ACTION_0005";
            internal const string ADABAS_FILE_ACTION_0005XX = "ADABAS_FILE_ACTION_0005XX";
            internal const string ADABAS_RESPONSE_CD_0005AS = "ADABAS_RESPONSE_CD_0005AS";
            internal const string ADABAS_RESPONSE_CD_0005 = "ADABAS_RESPONSE_CD_0005";
            internal const string ADABAS_RESPONSE_CD_0005XX = "ADABAS_RESPONSE_CD_0005XX";
            internal const string CICS_RESOURCE_NM_0005AS = "CICS_RESOURCE_NM_0005AS";
            internal const string CICS_RESOURCE_NM_0005 = "CICS_RESOURCE_NM_0005";
            internal const string CICS_RESOURCE_NM_0005XX = "CICS_RESOURCE_NM_0005XX";
            internal const string CICS_FUNCTION_CD_0005AS = "CICS_FUNCTION_CD_0005AS";
            internal const string CICS_FUNCTION_CD_0005 = "CICS_FUNCTION_CD_0005";
            internal const string CICS_FUNCTION_CD_0005XX = "CICS_FUNCTION_CD_0005XX";
            internal const string CICS_RESPONSE_CD_0005AS = "CICS_RESPONSE_CD_0005AS";
            internal const string CICS_RESPONSE_CD_0005 = "CICS_RESPONSE_CD_0005";
            internal const string CICS_RESPONSE_CD_0005XX = "CICS_RESPONSE_CD_0005XX";
            internal const string TWA = "TWA";
            internal const string TWA_ADABAS_PARMS = "TWA_ADABAS_PARMS";
            internal const string TWA_CICS_PARMS = "TWA_CICS_PARMS";
            internal const string TWA_PROGRAM_ID = "TWA_PROGRAM_ID";
            internal const string TWA_ADDR_LIST = "TWA_ADDR_LIST";
        }
        #endregion

        #region Direct-access element properties
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup W_IA { get { return GetElementByName<IGroup>(Names.W_IA); } }
        public IGroup A_0734790487_IA { get { return GetElementByName<IGroup>(Names.A_0734790487_IA); } }
        public IGroup IMPORT_CURRENT_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_CURRENT_0001EV); } }
        public IGroup DATE_WORK_AREA_0001ET { get { return GetElementByName<IGroup>(Names.DATE_WORK_AREA_0001ET); } }
        public IField DATE_0001AS { get { return GetElementByName<IField>(Names.DATE_0001AS); } }
        public IField DATE_0001 { get { return GetElementByName<IField>(Names.DATE_0001); } }
        public IField DATE_0001XX { get { return GetElementByName<IField>(Names.DATE_0001XX); } }
        public IGroup IMPORT_0002EV { get { return GetElementByName<IGroup>(Names.IMPORT_0002EV); } }
        public IGroup CASE_0002ET { get { return GetElementByName<IGroup>(Names.CASE_0002ET); } }
        public IField NUMBER_0002AS { get { return GetElementByName<IField>(Names.NUMBER_0002AS); } }
        public IField NUMBER_0002 { get { return GetElementByName<IField>(Names.NUMBER_0002); } }
        public IField NUMBER_0002XX { get { return GetElementByName<IField>(Names.NUMBER_0002XX); } }
        public IGroup IMPORT_0003EV { get { return GetElementByName<IGroup>(Names.IMPORT_0003EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0003ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0003ET); } }
        public IField NUMBER_0003AS { get { return GetElementByName<IField>(Names.NUMBER_0003AS); } }
        public IField NUMBER_0003 { get { return GetElementByName<IField>(Names.NUMBER_0003); } }
        public IField NUMBER_0003XX { get { return GetElementByName<IField>(Names.NUMBER_0003XX); } }
        public IGroup IMPORT_0004EV { get { return GetElementByName<IGroup>(Names.IMPORT_0004EV); } }
        public IGroup PA_REFERRAL_0004ET { get { return GetElementByName<IGroup>(Names.PA_REFERRAL_0004ET); } }
        public IField CASE_NUMBER_0004AS { get { return GetElementByName<IField>(Names.CASE_NUMBER_0004AS); } }
        public IField CASE_NUMBER_0004 { get { return GetElementByName<IField>(Names.CASE_NUMBER_0004); } }
        public IField CASE_NUMBER_0004XX { get { return GetElementByName<IField>(Names.CASE_NUMBER_0004XX); } }
        public IField FROM_0004AS { get { return GetElementByName<IField>(Names.FROM_0004AS); } }
        public IField FROM_0004 { get { return GetElementByName<IField>(Names.FROM_0004); } }
        public IField FROM_0004XX { get { return GetElementByName<IField>(Names.FROM_0004XX); } }
        public IGroup W_OA { get { return GetElementByName<IGroup>(Names.W_OA); } }
        public IGroup A_0734790488_OA { get { return GetElementByName<IGroup>(Names.A_0734790488_OA); } }
        public IGroup EXPORT_0005EV { get { return GetElementByName<IGroup>(Names.EXPORT_0005EV); } }
        public IGroup ABEND_DATA_0005ET { get { return GetElementByName<IGroup>(Names.ABEND_DATA_0005ET); } }
        public IField TYPE_0005AS { get { return GetElementByName<IField>(Names.TYPE_0005AS); } }
        public IField TYPE_0005 { get { return GetElementByName<IField>(Names.TYPE_0005); } }
        public IField TYPE_0005XX { get { return GetElementByName<IField>(Names.TYPE_0005XX); } }
        public IField ADABAS_FILE_NUMBER_0005AS { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0005AS); } }
        public IField ADABAS_FILE_NUMBER_0005 { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0005); } }
        public IField ADABAS_FILE_NUMBER_0005XX { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0005XX); } }
        public IField ADABAS_FILE_ACTION_0005AS { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0005AS); } }
        public IField ADABAS_FILE_ACTION_0005 { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0005); } }
        public IField ADABAS_FILE_ACTION_0005XX { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0005XX); } }
        public IField ADABAS_RESPONSE_CD_0005AS { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0005AS); } }
        public IField ADABAS_RESPONSE_CD_0005 { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0005); } }
        public IField ADABAS_RESPONSE_CD_0005XX { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0005XX); } }
        public IField CICS_RESOURCE_NM_0005AS { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0005AS); } }
        public IField CICS_RESOURCE_NM_0005 { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0005); } }
        public IField CICS_RESOURCE_NM_0005XX { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0005XX); } }
        public IField CICS_FUNCTION_CD_0005AS { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0005AS); } }
        public IField CICS_FUNCTION_CD_0005 { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0005); } }
        public IField CICS_FUNCTION_CD_0005XX { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0005XX); } }
        public IField CICS_RESPONSE_CD_0005AS { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0005AS); } }
        public IField CICS_RESPONSE_CD_0005 { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0005); } }
        public IField CICS_RESPONSE_CD_0005XX { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0005XX); } }
        public IGroup TWA { get { return GetElementByName<IGroup>(Names.TWA); } }
        public IGroup TWA_ADABAS_PARMS { get { return GetElementByName<IGroup>(Names.TWA_ADABAS_PARMS); } }
        public IGroup TWA_CICS_PARMS { get { return GetElementByName<IGroup>(Names.TWA_CICS_PARMS); } }
        public IField TWA_PROGRAM_ID { get { return GetElementByName<IField>(Names.TWA_PROGRAM_ID); } }
        public IGroup TWA_ADDR_LIST { get { return GetElementByName<IGroup>(Names.TWA_ADDR_LIST); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
           {
               PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
               PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
               {
                   PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
               });
           });

            recordDef.CreateNewGroup(Names.W_IA, (W_IA) =>
           {
               W_IA.CreateNewGroup(Names.A_0734790487_IA, (A_0734790487_IA) =>
               {
                   A_0734790487_IA.CreateNewGroup(Names.IMPORT_CURRENT_0001EV, (IMPORT_CURRENT_0001EV) =>
                   {
                       IMPORT_CURRENT_0001EV.CreateNewGroup(Names.DATE_WORK_AREA_0001ET, (DATE_WORK_AREA_0001ET) =>
                       {
                           DATE_WORK_AREA_0001ET.CreateNewField(Names.DATE_0001AS, FieldType.String, 1);

                           IField DATE_0001_local = DATE_WORK_AREA_0001ET.CreateNewField(Names.DATE_0001, FieldType.SignedNumeric, 8);
                           DATE_WORK_AREA_0001ET.CreateNewFieldRedefine(Names.DATE_0001XX, FieldType.String, DATE_0001_local, 8);
                       });
                   });
                   A_0734790487_IA.CreateNewGroup(Names.IMPORT_0002EV, (IMPORT_0002EV) =>
                   {
                       IMPORT_0002EV.CreateNewGroup(Names.CASE_0002ET, (CASE_0002ET) =>
                       {
                           CASE_0002ET.CreateNewField(Names.NUMBER_0002AS, FieldType.String, 1);

                           IField NUMBER_0002_local = CASE_0002ET.CreateNewField(Names.NUMBER_0002, FieldType.String, 10);
                           CASE_0002ET.CreateNewFieldRedefine(Names.NUMBER_0002XX, FieldType.String, NUMBER_0002_local, 10);
                       });
                   });
                   A_0734790487_IA.CreateNewGroup(Names.IMPORT_0003EV, (IMPORT_0003EV) =>
                   {
                       IMPORT_0003EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0003ET, (CSE_PERSONS_WORK_SET_0003ET) =>
                       {
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.NUMBER_0003AS, FieldType.String, 1);

                           IField NUMBER_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.NUMBER_0003, FieldType.String, 10);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.NUMBER_0003XX, FieldType.String, NUMBER_0003_local, 10);
                       });
                   });
                   A_0734790487_IA.CreateNewGroup(Names.IMPORT_0004EV, (IMPORT_0004EV) =>
                   {
                       IMPORT_0004EV.CreateNewGroup(Names.PA_REFERRAL_0004ET, (PA_REFERRAL_0004ET) =>
                       {
                           PA_REFERRAL_0004ET.CreateNewField(Names.CASE_NUMBER_0004AS, FieldType.String, 1);

                           IField CASE_NUMBER_0004_local = PA_REFERRAL_0004ET.CreateNewField(Names.CASE_NUMBER_0004, FieldType.String, 10);
                           PA_REFERRAL_0004ET.CreateNewFieldRedefine(Names.CASE_NUMBER_0004XX, FieldType.String, CASE_NUMBER_0004_local, 10);
                           PA_REFERRAL_0004ET.CreateNewField(Names.FROM_0004AS, FieldType.String, 1);

                           IField FROM_0004_local = PA_REFERRAL_0004ET.CreateNewField(Names.FROM_0004, FieldType.String, 3);
                           PA_REFERRAL_0004ET.CreateNewFieldRedefine(Names.FROM_0004XX, FieldType.String, FROM_0004_local, 3);
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.W_OA, (W_OA) =>
           {
               W_OA.CreateNewGroup(Names.A_0734790488_OA, (A_0734790488_OA) =>
               {
                   A_0734790488_OA.CreateNewGroup(Names.EXPORT_0005EV, (EXPORT_0005EV) =>
                   {
                       EXPORT_0005EV.CreateNewGroup(Names.ABEND_DATA_0005ET, (ABEND_DATA_0005ET) =>
                       {
                           ABEND_DATA_0005ET.CreateNewField(Names.TYPE_0005AS, FieldType.String, 1);

                           IField TYPE_0005_local = ABEND_DATA_0005ET.CreateNewField(Names.TYPE_0005, FieldType.String, 1);
                           ABEND_DATA_0005ET.CreateNewFieldRedefine(Names.TYPE_0005XX, FieldType.String, TYPE_0005_local, 1);
                           ABEND_DATA_0005ET.CreateNewField(Names.ADABAS_FILE_NUMBER_0005AS, FieldType.String, 1);

                           IField ADABAS_FILE_NUMBER_0005_local = ABEND_DATA_0005ET.CreateNewField(Names.ADABAS_FILE_NUMBER_0005, FieldType.String, 4);
                           ABEND_DATA_0005ET.CreateNewFieldRedefine(Names.ADABAS_FILE_NUMBER_0005XX, FieldType.String, ADABAS_FILE_NUMBER_0005_local, 4);
                           ABEND_DATA_0005ET.CreateNewField(Names.ADABAS_FILE_ACTION_0005AS, FieldType.String, 1);

                           IField ADABAS_FILE_ACTION_0005_local = ABEND_DATA_0005ET.CreateNewField(Names.ADABAS_FILE_ACTION_0005, FieldType.String, 3);
                           ABEND_DATA_0005ET.CreateNewFieldRedefine(Names.ADABAS_FILE_ACTION_0005XX, FieldType.String, ADABAS_FILE_ACTION_0005_local, 3);
                           ABEND_DATA_0005ET.CreateNewField(Names.ADABAS_RESPONSE_CD_0005AS, FieldType.String, 1);

                           IField ADABAS_RESPONSE_CD_0005_local = ABEND_DATA_0005ET.CreateNewField(Names.ADABAS_RESPONSE_CD_0005, FieldType.String, 4);
                           ABEND_DATA_0005ET.CreateNewFieldRedefine(Names.ADABAS_RESPONSE_CD_0005XX, FieldType.String, ADABAS_RESPONSE_CD_0005_local, 4);
                           ABEND_DATA_0005ET.CreateNewField(Names.CICS_RESOURCE_NM_0005AS, FieldType.String, 1);

                           IField CICS_RESOURCE_NM_0005_local = ABEND_DATA_0005ET.CreateNewField(Names.CICS_RESOURCE_NM_0005, FieldType.String, 8);
                           ABEND_DATA_0005ET.CreateNewFieldRedefine(Names.CICS_RESOURCE_NM_0005XX, FieldType.String, CICS_RESOURCE_NM_0005_local, 8);
                           ABEND_DATA_0005ET.CreateNewField(Names.CICS_FUNCTION_CD_0005AS, FieldType.String, 1);

                           IField CICS_FUNCTION_CD_0005_local = ABEND_DATA_0005ET.CreateNewField(Names.CICS_FUNCTION_CD_0005, FieldType.String, 2);
                           ABEND_DATA_0005ET.CreateNewFieldRedefine(Names.CICS_FUNCTION_CD_0005XX, FieldType.String, CICS_FUNCTION_CD_0005_local, 2);
                           ABEND_DATA_0005ET.CreateNewField(Names.CICS_RESPONSE_CD_0005AS, FieldType.String, 1);

                           IField CICS_RESPONSE_CD_0005_local = ABEND_DATA_0005ET.CreateNewField(Names.CICS_RESPONSE_CD_0005, FieldType.String, 6);
                           ABEND_DATA_0005ET.CreateNewFieldRedefine(Names.CICS_RESPONSE_CD_0005XX, FieldType.String, CICS_RESPONSE_CD_0005_local, 6);
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.TWA, (TWA) =>
           {
               IGroup TWA_ADABAS_PARMS_local = (IGroup)TWA.CreateNewGroup(Names.TWA_ADABAS_PARMS, (TWA_ADABAS_PARMS) =>
               {
                   TWA_ADABAS_PARMS.CreateNewFieldArray("FILLER_d17", 7, FieldType.CompInt, 4);
               });
               TWA.CreateNewGroupRedefine(Names.TWA_CICS_PARMS, TWA_ADABAS_PARMS_local, (TWA_CICS_PARMS) =>
               {
                   TWA_CICS_PARMS.CreateNewField(Names.TWA_PROGRAM_ID, FieldType.String, 8);
                   TWA_CICS_PARMS.CreateNewGroup(Names.TWA_ADDR_LIST, (TWA_ADDR_LIST) =>
                   {
                       TWA_ADDR_LIST.CreateNewFieldArray("FILLER_d18", 5, FieldType.CompInt, 4);
                   });
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(W_IA, args, 0);
            SetPassedParm(W_OA, args, 1);
            SetPassedParm(PSMGR_EAB_DATA, args, 2);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(W_IA, args, 0);
            SetReturnParm(W_OA, args, 1);
            SetReturnParm(PSMGR_EAB_DATA, args, 2);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXIU30 : OnlineProgramBase
    {

        #region Public Constructors
        public SWEXIU30()
            : base()
        {
            this.ProgramName = "SWEXIU30";

            WS = new SWEXIU30_ws();
            LS = new SWEXIU30_ls();
            DbConv = new DBConversation();
            DbConv.SQLCA.Record = WS.SQLCA.Record;

        }

        public SWEXIU30(OnlineControl controlData) : base(controlData)
        {
            this.ProgramName = "SWEXIU30";

            WS = new SWEXIU30_ws();
            LS = new SWEXIU30_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXIU30_ws WS;

        //==== Linkage Section Data Class ========================================
        private SWEXIU30_ls LS;
        private DBConversation DbConv;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING W-IA , W-OA , PSMGR-EAB-DATA.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                SetData();
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
            finally
            {
                Data.CloseConnection();
            }
        }
        #endregion

        #region Private Methods

        private void SetData()
        {
            LS.InitializeWithLowValues();
            WS.InitializeWithLowValues();
        }

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0734790484(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0734790484
        /// </summary>
        private void M_MAIN_0734790484(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 STARTED ***************************'.
            M_PARA_0734790484_INIT("M_PARA_0734790484_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0734790484-INIT THRU PARA-0734790484-INIT-EXIT
            M_PARA_0734790484("M_PARA_0734790484_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0734790484 THRU PARA-0734790484-EXIT
                                                                                                                  //COMMENT:     DISPLAY '*** SWEXIU30 ENDED *****************************'.
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0734790484
        /// </summary>
        private void M_PARA_0734790484(string returnMethod = "")
        {
            WS.FUNC_0734790484_ESC_FLAG.SetValue("N");                                                          //COBOL==> MOVE 'N' TO FUNC-0734790484-ESC-FLAG.
            if (returnMethod != "" && returnMethod != "M_PARA_0734790484") { M_0000_ADABAS_ROUTINE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_ADABAS_ROUTINE
        /// </summary>
        /// <remarks>
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT: ****************************************************************
        ///COMMENT:                                                                *
        ///COMMENT:  INCLUDE NAME:  SWCSZG27.                                      *
        ///COMMENT:      EAB NAME:  SWEXIU30.                                      *
        ///COMMENT:   DESCRIPTION:  0000-ADABAS-ROUTINE.                           *
        ///COMMENT:      LOCATION:  PROCEDURE DIVISION.                            *
        ///COMMENT:                                                                *
        ///COMMENT:      INCLUDES:  SWCSZG25  WORKING-STORAGE SECTION.             *
        ///COMMENT:                 SWCSZ053  WORKING-STORAGE SECTION.             *
        ///COMMENT:                                                                *
        ///COMMENT:       ACTIONS:  RECEIVE CSE-CASE-NUMBER                        *
        ///COMMENT:                         AP-CLIENT-NUMBER                       *
        ///COMMENT:                         REFERRAL-NUMBER                        *
        ///COMMENT:                         REFERRAL-SOURCE.                       *
        ///COMMENT:                 READ REFERRAL-DBF.                             *
        ///COMMENT:                     IF REFERRAL-SOURCE = 'KAE'                 *
        ///COMMENT:                         USE     CASE-KEY.                      *
        ///COMMENT:                     IF REFERRAL-SOURCE = 'KSC'                 *
        ///COMMENT:                         USE KSC-CASE-KEY.                      *
        ///COMMENT:                 READISN CLIENT-BASIC-DBF                       *
        ///COMMENT:                     USING AP-CLIENT-NUMBER.                    *
        ///COMMENT:                 IF AP-CLIENT-NUMBER IS VALID,                  *
        ///COMMENT:                     READLOGICAL CLIENT-DBF                     *
        ///COMMENT:                         USING CLIENT-ID-KEY.                   *
        ///COMMENT:                 IF CSE-FLAG NOT = 'Y'                          *
        ///COMMENT:                     SET TO 'Y' AND UPDATE CLIENT-DBF.          *
        ///COMMENT:                 IF AP-CLIENT-NUMBER IS VALID,                  *
        ///COMMENT:                     MOVE IT TO REFERRAL-DBF.                   *
        ///COMMENT:                 IF CSE-CASE-NUMBER > '0000000000'              *
        ///COMMENT:                     MOVE IT TO REFERRAL-DBF AND                *
        ///COMMENT:                     MOVE FORMATTED SYSTEM-DATE                 *
        ///COMMENT:                         TO REFERRAL-DBF.                       *
        ///COMMENT:                 UPDATE REFERRAL-DBF.                           *
        ///COMMENT:                 RETURN ABEND-FIELDS.                           *
        ///COMMENT:                                                                *
        ///COMMENT:       CREATED:  30-MAY-96.                                     *
        ///COMMENT:            BY:  CTG/CEB.                                       *
        ///COMMENT:                                                                *
        ///COMMENT: ** MAINTENANCE *************************************************
        ///COMMENT:                   CHANGE                                       *
        ///COMMENT:                   CONTRL                                       *
        ///COMMENT:  DATE     AUTHOR  NUMBER  DESCRIPTION                          *
        ///COMMENT:  -------  ------  ------  ------------------------------------ *
        ///COMMENT:                                                                *
        ///COMMENT:  05/2014   JCHRISTIAN CQ35825 ADABAS TO DB2 KEES PHASE 3 CHANGES.
        ///COMMENT: REPLACE READS OF ADABAS CLIENT-DBF AND CLIENT-BASIC-DBF TABLES
        ///COMMENT: WITH READS OF DB2 DATA SYNC TABLES KSD_CLIENT AND
        ///COMMENT: KSD_CLIENT-BASIC. OBTAIN SYSTEM PARTICIPATION FLAGS FROM NEW
        ///COMMENT: DB2 DATA SYNC TABLE KSD_SYSTEM_PART.  MODIFY ERROR HANDLING TO
        ///COMMENT: CHECK DB2 ERROR CODES BUT CONTINUE TO USE EXISTING ADABAS EXPORT
        ///COMMENT: ABEND FIELDS.  REMOVE/COMMENT UNNECESSARY ADABAS SPECIFIC CODE.
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        /// </remarks>
        private void M_0000_ADABAS_ROUTINE(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 ENTERED ******************'.
            WS.MV_ABEND_FIELDS.SetValueWithSpaces();                                                            //COBOL==> MOVE SPACES TO MV-ABEND-FIELDS.
            SetHandleCondtions(HandleCondition.ERROR, "M_9999_CICS_ABEND");                                     //COBOL==> EXEC CICS HANDLE CONDITION ERROR ( 9999-CICS-ABEND ) END-EXEC.
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:  INCLUDE NAME:  SWCSZ954 (FROM SWCSZ054).                      *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:      EAB NAME:  SWCSZ???.                                      *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:   DESCRIPTION:  ADABAS INITIALIZATION.                         *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:      LOCATION:  PROCEDURE DIVISION.                            *
                                                                                                                //COMMENT:                 MUST BE HARDCOPIED INTO EAB MAIN PROCEDURE     *
                                                                                                                //COMMENT:                   DIVISION INCLUDE SWCSZ???.                   *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:       ACTIONS:  RELEASES ANY OUTSTANDING COMMAND ID'S.         *
                                                                                                                //COMMENT:                 THIS ROUTINE REQUIRES INCLUDE SWCSZ053 IN THE  *
                                                                                                                //COMMENT:                   WORKING-STORAGE SECTION OF THIS PROGRAM.     *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:       CREATED:  21-AUG-95.                                     *
                                                                                                                //COMMENT:            BY:  CTG/CEB.                                       *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT: ** MAINTENANCE *************************************************
                                                                                                                //COMMENT:                   CHANGE                                       *
                                                                                                                //COMMENT:                   CONTRL                                       *
                                                                                                                //COMMENT:  DATE     AUTHOR  NUMBER  DESCRIPTION                          *
                                                                                                                //COMMENT:  -------  ------  ------  ------------------------------------ *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT:     COMMENT OUT ADABAS CODE 201405
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT:     CALL 'ADASTWA' USING TWA CONTROL-BLOCK.
                                                                                                                //COMMENT:     CALL SRADALNK  USING DFHEIBLK DFHCOMMAREA TWA SRMODLNK.
                                                                                                                //COMMENT:     IF RESPONSE-CODE > ZERO AND NOT = 9
                                                                                                                //COMMENT:         MOVE 'A'           TO MV-ABEND-TYPE
                                                                                                                //COMMENT:         MOVE ZERO          TO MV-ADA-FILE-NUMBER
                                                                                                                //COMMENT:         MOVE 'INI'         TO MV-ADA-FILE-ACTION
                                                                                                                //COMMENT:         MOVE RESPONSE-CODE TO MV-ADA-RESPONSE-CD
                                                                                                                //COMMENT:         GO TO 0000-ADABAS-EXIT
                                                                                                                //COMMENT:     END-IF.
                                                                                                                //COMMENT: ****************************************************************
            Control.GetLatestDateTime(WS.MV_ABS_TIME);                                                          //COBOL==> EXEC CICS ASKTIME ABSTIME ( MV-ABS-TIME ) END-EXEC.
            DateConverter.ConvertABSTime(WS.MV_ABS_TIME, DateTimeFormat.YYMMDD, WS.MV_YYMMDD_X6, "", null, ""); //COBOL==> EXEC CICS FORMATTIME ABSTIME ( MV-ABS-TIME ) YYMMDD ( MV-YYMMDD-X6 ) END-EXEC.
            if (WS.MV_YY.IsGreaterThan(94))                                                                     //COBOL==> IF MV-YY > 94
            {
                WS.MV_CC.SetValue(19);                                                                              //COBOL==> MOVE 19 TO MV-CC
            }                                                                                                   //COBOL==> ELSE
            else
            {
                WS.MV_CC.SetValue(20);                                                                              //COBOL==> MOVE 20 TO MV-CC
            }                                                                                                   //COBOL==> END-IF.
            WS.MV_CCYYMMDD.SetValue(LS.DATE_0001);                                                              //COBOL==> MOVE DATE-0001 TO MV-CCYYMMDD.
            WS.MV_COMPLIMENT_DATE.SetComputeValue(99999999m - WS.MV_CCYYMMDD.AsDecimal());                      //COBOL==> COMPUTE MV-COMPLIMENT-DATE = 99999999 - MV-CCYYMMDD.
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT: *** MOVE IMPORT FIELDS TO WORKING-STORAGE FIELDS.
                                                                                                                //COMMENT: *****************************************************************
            WS.MV_CSE_CASE_NUMBER.SetValue(LS.NUMBER_0002);                                                     //COBOL==> MOVE NUMBER-0002 TO MV-CSE-CASE-NUMBER.
            WS.MV_AP_CLIENT_NUMBER_X10.SetValue(LS.NUMBER_0003);                                                //COBOL==> MOVE NUMBER-0003 TO MV-AP-CLIENT-NUMBER-X10.
            WS.MV_REFERRAL_NUMBER.SetValue(LS.CASE_NUMBER_0004);                                                //COBOL==> MOVE CASE-NUMBER-0004 TO MV-REFERRAL-NUMBER.
            WS.MV_REFERRAL_SOURCE.SetValue(LS.FROM_0004);                                                       //COBOL==> MOVE FROM-0004 TO MV-REFERRAL-SOURCE.
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT: *****************************************************************
            if (!(WS.MV_REFERRAL_SOURCE_VALID.Value))                                                          //COBOL==> IF NOT MV-REFERRAL-SOURCE-VALID
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(188);                                                                //COBOL==> MOVE 188 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("SRC");                                                              //COBOL==> MOVE 'SRC' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValueWithZeroes();                                                         //COBOL==> MOVE ZERO TO MV-ADA-RESPONSE-CD
                M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT: NEW SOURCE CODE BEGIN *******************************************
                                                                                                                //COMMENT: *****************************************************************
            M_AA005_DECLARE_REF_CURSOR("M_AA005_EXIT"); if (Control.ExitProgram) { return; }                      //COBOL==> PERFORM AA005-DECLARE-REF-CURSOR THRU AA005-EXIT.
            M_AA010_OPEN_REF_CURSOR("M_AA010_EXIT"); if (Control.ExitProgram) { return; }                         //COBOL==> PERFORM AA010-OPEN-REF-CURSOR THRU AA010-EXIT.
            while (!(WS.CL188_EOF_YES.Value))                                                                   //COBOL==> PERFORM AA020-FETCH-REFERRAL THRU AA020-EXIT UNTIL CL188-EOF-YES.
            {
                M_AA020_FETCH_REFERRAL("M_AA020_EXIT"); if (Control.ExitProgram) { return; }
            }
            M_AA030_CLOSE_REF_VIEW("M_AA030_EXIT"); if (Control.ExitProgram) { return; }                          //COBOL==> PERFORM AA030-CLOSE-REF-VIEW THRU AA030-EXIT.
                                                                                                                  //COMMENT: SET FLAG TO KNOW TO COMMIT DATABASE DATA CHANGES WHERE THE
                                                                                                                  //COMMENT: CHANGE OCCURS.
                                                                                                                  //COMMENT: NO COMMITS SHOULD BE PERFORMED IN COBOL PROGRAMS
                                                                                                                  //COMMENT:     IF WS-COMMIT EQUAL 'Y'
                                                                                                                  //COMMENT:         EXEC SQL
                                                                                                                  //COMMENT:             COMMIT
                                                                                                                  //COMMENT:         END-EXEC
                                                                                                                  //COMMENT:     END-IF.
            M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT.
        }
        /// <summary>
        /// Method M_AA005_DECLARE_REF_CURSOR
        /// </summary>
        private void M_AA005_DECLARE_REF_CURSOR(string returnMethod = "")
        {
            //COMMENT: DECLARE VIEW FOR ACCESSING ALL KSD_REFERRAL TABLE ROWS
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 AA005    *****************'.
            WS.REF_FK_CSB_CASE_NO.SetValue(WS.MV_REFERRAL_CASE);                                                //COBOL==> MOVE MV-REFERRAL-CASE TO REF-FK-CSB-CASE-NO.
            WS.REF_AP_NUMBER.SetValue(WS.MV_REFERRAL_AP);                                                       //COBOL==> MOVE MV-REFERRAL-AP TO REF-AP-NUMBER.
            DbConv.SetQueryText("REF-VIEW", "SELECT FK_CSB_CASE_NO, AP_NUMBER, REFERRAL_TYPE, REFERRAL_DATE, PI_CLIENT_NUMBER, CSE_CASE_NUMBER, CSE_ESTABLISH_DATE, AP_CLIENT_NUMBER, SYSTEM_ORIGIN, LAST_MODIFIED_BY, LAST_MODIFIED_TMST FROM KSD_REFERRAL WHERE ( FK_CSB_CASE_NO = {0}  ) AND ( AP_NUMBER = {1}  ) ORDER BY FK_CSB_CASE_NO, AP_NUMBER, REFERRAL_TYPE, REFERRAL_DATE",  //COBOL==> EXEC SQL DECLARE REF-VIEW CURSOR FOR SELECT FK_CSB_CASE_NO , AP_NUMBER , REFERRAL_TYPE , REFERRAL_DATE , PI_CLIENT_NUMBER , CSE_CASE_NUMBER , CSE_ESTABLISH_DATE , AP_CLIENT_NUMBER , SYSTEM_ORIGIN , LAST_MODIFIED_BY , LAST_MODIFIED_TMST FROM KSD_REFERRAL WHERE ( FK_CSB_CASE_NO = :REF-FK-CSB-CASE-NO ) AND ( AP_NUMBER = :REF-AP-NUMBER ) ORDER BY FK_CSB_CASE_NO , AP_NUMBER , REFERRAL_TYPE , REFERRAL_DATE END-EXEC.
                                WS.REF_FK_CSB_CASE_NO, WS.REF_AP_NUMBER);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                if (WS.MV_REFERRAL_KAE.Value)                                                                       //COBOL==> IF MV-REFERRAL-KAE
                {
                    WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                    WS.MV_ADA_FILE_NUMBER.SetValue(188);                                                                //COBOL==> MOVE 188 TO MV-ADA-FILE-NUMBER
                    WS.MV_ADA_FILE_ACTION.SetValue("ANF");                                                              //COBOL==> MOVE 'ANF' TO MV-ADA-FILE-ACTION
                    WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                    M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
                }                                                                                                   //COBOL==> END-IF
                if ((WS.MV_REFERRAL_KSC.Value)
             || (WS.MV_REFERRAL_KES.Value))                       //COBOL==> IF MV-REFERRAL-KSC OR MV-REFERRAL-KES
                {
                    WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                    WS.MV_ADA_FILE_NUMBER.SetValue(188);                                                                //COBOL==> MOVE 188 TO MV-ADA-FILE-NUMBER
                    WS.MV_ADA_FILE_ACTION.SetValue("BNF");                                                              //COBOL==> MOVE 'BNF' TO MV-ADA-FILE-ACTION
                    WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                    M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_AA005_DECLARE_REF_CURSOR") { M_AA005_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA005_EXIT
        /// </summary>
        private void M_AA005_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_AA005_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_AA005_EXIT") { M_AA010_OPEN_REF_CURSOR(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA010_OPEN_REF_CURSOR
        /// </summary>
        private void M_AA010_OPEN_REF_CURSOR(string returnMethod = "")
        {
            //COMMENT:  OPEN REF-VIEW CURSOR
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 AA010    *****************'.
            DbConv.OpenReader("REF-VIEW");                                                                      //COBOL==> EXEC SQL OPEN REF-VIEW END-EXEC.
                                                                                                                // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                if (WS.MV_REFERRAL_KAE.Value)                                                                       //COBOL==> IF MV-REFERRAL-KAE
                {
                    WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                    WS.MV_ADA_FILE_NUMBER.SetValue(188);                                                                //COBOL==> MOVE 188 TO MV-ADA-FILE-NUMBER
                    WS.MV_ADA_FILE_ACTION.SetValue("ANF");                                                              //COBOL==> MOVE 'ANF' TO MV-ADA-FILE-ACTION
                    WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                    M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
                }                                                                                                   //COBOL==> END-IF
                if ((WS.MV_REFERRAL_KSC.Value)
             || (WS.MV_REFERRAL_KES.Value))                       //COBOL==> IF MV-REFERRAL-KSC OR MV-REFERRAL-KES
                {
                    WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                    WS.MV_ADA_FILE_NUMBER.SetValue(188);                                                                //COBOL==> MOVE 188 TO MV-ADA-FILE-NUMBER
                    WS.MV_ADA_FILE_ACTION.SetValue("BNF");                                                              //COBOL==> MOVE 'BNF' TO MV-ADA-FILE-ACTION
                    WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                    M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_AA010_OPEN_REF_CURSOR") { M_AA010_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA010_EXIT
        /// </summary>
        private void M_AA010_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_AA010_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_AA010_EXIT") { M_AA020_FETCH_REFERRAL(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA020_FETCH_REFERRAL
        /// </summary>
        private void M_AA020_FETCH_REFERRAL(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 AA020    *****************'.
            DbConv.FetchReaderRow("REF-VIEW",                                                                //COBOL==> EXEC SQL FETCH REF-VIEW INTO :REF-FK-CSB-CASE-NO , :REF-AP-NUMBER , :REF-REFERRAL-TYPE , :REF-REFERRAL-DATE , :REF-PI-CLIENT-NUMBER , :REF-CSE-CASE-NUMBER , :REF-CSE-ESTABLISH-DATE , :REF-AP-CLIENT-NUMBER , :REF-SYSTEM-ORIGIN , :REF-LAST-MODIFIED-BY , :REF-LAST-MODIFIED-TMST END-EXEC.
                             WS.REF_FK_CSB_CASE_NO, WS.REF_AP_NUMBER, WS.REF_REFERRAL_TYPE, WS.REF_REFERRAL_DATE, WS.REF_PI_CLIENT_NUMBER, WS.REF_CSE_CASE_NUMBER, WS.REF_CSE_ESTABLISH_DATE, WS.REF_AP_CLIENT_NUMBER, WS.REF_SYSTEM_ORIGIN, WS.REF_LAST_MODIFIED_BY, WS.REF_LAST_MODIFIED_TMST);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
                WS.CL188_EOF_NO.SetValue(true);                                                                     //COBOL==> SET CL188-EOF-NO TO TRUE
            }                                                                                                //COBOL==> WHEN 100
            else
            if ((WS.SQLCA.SQLCODE.IsEqualTo(100)))
            {
                WS.CL188_EOF_YES.SetValue(true);                                                                    //COBOL==> SET CL188-EOF-YES TO TRUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                if (WS.MV_REFERRAL_KAE.Value)                                                                       //COBOL==> IF MV-REFERRAL-KAE
                {
                    WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                    WS.MV_ADA_FILE_NUMBER.SetValue(188);                                                                //COBOL==> MOVE 188 TO MV-ADA-FILE-NUMBER
                    WS.MV_ADA_FILE_ACTION.SetValue("ANF");                                                              //COBOL==> MOVE 'ANF' TO MV-ADA-FILE-ACTION
                    WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                    M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
                }                                                                                                   //COBOL==> END-IF
                if ((WS.MV_REFERRAL_KSC.Value)
             || (WS.MV_REFERRAL_KES.Value))                       //COBOL==> IF MV-REFERRAL-KSC OR MV-REFERRAL-KES
                {
                    WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                    WS.MV_ADA_FILE_NUMBER.SetValue(188);                                                                //COBOL==> MOVE 188 TO MV-ADA-FILE-NUMBER
                    WS.MV_ADA_FILE_ACTION.SetValue("BNF");                                                              //COBOL==> MOVE 'BNF' TO MV-ADA-FILE-ACTION
                    WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                    M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (WS.CL188_EOF_YES.Value)                                                                         //COBOL==> IF CL188-EOF-YES
            {
                M_AA020_EXIT(CheckGotoReturn(returnMethod)); return;                                                //COBOL==> GO TO AA020-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if ((WS.MV_AP_CLIENT_NUMBER_X10.IsNumericValue())
             && (WS.MV_AP_CLIENT_NUMBER.IsGreaterThan(ZEROS)))  //COBOL==> IF MV-AP-CLIENT-NUMBER-X10 NUMERIC AND MV-AP-CLIENT-NUMBER > ZERO
            {
                WS.MV_CLIENT_NUMBER.SetValue(WS.MV_AP_CLIENT_NUMBER);                                               //COBOL==> MOVE MV-AP-CLIENT-NUMBER TO MV-CLIENT-NUMBER
                M_1000_PROCESS_AP_CLIENT_NUMBER("M_1000_EXIT"); if (Control.ExitProgram) { return; }                  //COBOL==> PERFORM 1000-PROCESS-AP-CLIENT-NUMBER THRU 1000-EXIT
                WS.MV_AP_CLIENT_NUMBER_X10.SetValue(WS.MV_CLIENT_NUMBER_X10);                                       //COBOL==> MOVE MV-CLIENT-NUMBER-X10 TO MV-AP-CLIENT-NUMBER-X10
            }                                                                                                   //COBOL==> ELSE
            else
            {
                WS.MV_AP_CLIENT_NUMBER_X10.SetValueWithSpaces();                                                    //COBOL==> MOVE SPACES TO MV-AP-CLIENT-NUMBER-X10
            }                                                                                                   //COBOL==> END-IF.
            if ((WS.MV_CSE_CASE_NUMBER.IsGreaterThan("0000000000"))
             && (WS.MV_CSE_CASE_NUMBER.IsLessThan("9999999999")))  //COBOL==> IF MV-CSE-CASE-NUMBER > '0000000000' AND MV-CSE-CASE-NUMBER < '9999999999'
            {
                goto EndOfSentence_1;                                                                               //COBOL==> NEXT SENTENCE
            }                                                                                                   //COBOL==> ELSE
            else
            {
                WS.MV_CSE_CASE_NUMBER.SetValueWithSpaces();                                                         //COBOL==> MOVE SPACES TO MV-CSE-CASE-NUMBER
            }                                                                                                   //COBOL==> END-IF.
        EndOfSentence_1:;
            M_AA1100_PROCESS_REFERRAL("M_AA1100_EXIT"); if (Control.ExitProgram) { return; }                      //COBOL==> PERFORM AA1100-PROCESS-REFERRAL THRU AA1100-EXIT.
            if (returnMethod != "" && returnMethod != "M_AA020_FETCH_REFERRAL") { M_AA020_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA020_EXIT
        /// </summary>
        /// <remarks>
        ///COMMENT:     IF MV-REFERRAL-KAE
        ///COMMENT:         PERFORM 1100-PROCESS-KAE-REFERRAL
        ///COMMENT:            THRU 1100-EXIT
        ///COMMENT:     ELSE
        ///COMMENT:         PERFORM 1200-PROCESS-KSC-REFERRAL
        ///COMMENT:            THRU 1200-EXIT
        ///COMMENT:     END-IF.
        /// </remarks>
        private void M_AA020_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_AA020_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_AA020_EXIT") { M_AA030_CLOSE_REF_VIEW(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA030_CLOSE_REF_VIEW
        /// </summary>
        private void M_AA030_CLOSE_REF_VIEW(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 AA030    *****************'.
            DbConv.CloseReader("REF-VIEW");                                                                     //COBOL==> EXEC SQL CLOSE REF-VIEW END-EXEC.
                                                                                                                // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                if (WS.MV_REFERRAL_KAE.Value)                                                                       //COBOL==> IF MV-REFERRAL-KAE
                {
                    WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                    WS.MV_ADA_FILE_NUMBER.SetValue(188);                                                                //COBOL==> MOVE 188 TO MV-ADA-FILE-NUMBER
                    WS.MV_ADA_FILE_ACTION.SetValue("ANF");                                                              //COBOL==> MOVE 'ANF' TO MV-ADA-FILE-ACTION
                    WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                    M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
                }                                                                                                   //COBOL==> END-IF
                if ((WS.MV_REFERRAL_KSC.Value)
             || (WS.MV_REFERRAL_KES.Value))                       //COBOL==> IF MV-REFERRAL-KSC OR MV-REFERRAL-KES
                {
                    WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                    WS.MV_ADA_FILE_NUMBER.SetValue(188);                                                                //COBOL==> MOVE 188 TO MV-ADA-FILE-NUMBER
                    WS.MV_ADA_FILE_ACTION.SetValue("BNF");                                                              //COBOL==> MOVE 'BNF' TO MV-ADA-FILE-ACTION
                    WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                    M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_AA030_CLOSE_REF_VIEW") { M_AA030_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA030_EXIT
        /// </summary>
        private void M_AA030_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_AA030_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_AA030_EXIT") { M_1000_PROCESS_AP_CLIENT_NUMBER(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1000_PROCESS_AP_CLIENT_NUMBER
        /// </summary>
        private void M_1000_PROCESS_AP_CLIENT_NUMBER(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 1000     *****************'.
            M_2154_READISN_CLIENT_BASIC_DBF("M_2154_READISN_EXIT"); if (Control.ExitProgram) { return; }          //COBOL==> PERFORM 2154-READISN-CLIENT-BASIC-DBF THRU 2154-READISN-EXIT.
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                WS.MV_CLIENT_NUMBER_X10.SetValueWithSpaces();                                                       //COBOL==> MOVE SPACES TO MV-CLIENT-NUMBER-X10
                M_1000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1000-EXIT
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT:     IF CLIENT-NUMBER154 NOT = MV-CLIENT-NUMBER-X10
            if (WS.CL154_EOF_YES.Value)                                                                         //COBOL==> IF CL154-EOF-YES
            {
                WS.MV_CLIENT_NUMBER_X10.SetValueWithSpaces();                                                       //COBOL==> MOVE SPACES TO MV-CLIENT-NUMBER-X10
                M_1000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1000-EXIT
            }                                                                                                   //COBOL==> END-IF.
            WS.MV_CLIENT_NAME.SetValueWithSpaces();                                                             //COBOL==> MOVE SPACES TO MV-CLIENT-NAME.
            WS.MV_CLIENT_SURNAME.SetValue(WS.CLB_CLIENT_SURNAME);                                               //COBOL==> MOVE CLB-CLIENT-SURNAME TO MV-CLIENT-SURNAME.
            WS.MV_CLIENT_GIVEN_NAME.SetValue(WS.CLB_CLIENT_GIVEN_NAME);                                         //COBOL==> MOVE CLB-CLIENT-GIVEN-NAME TO MV-CLIENT-GIVEN-NAME.
            WS.MV_CLIENT_INITIAL.SetValue(WS.CLB_CLIENT_INITIALS);                                              //COBOL==> MOVE CLB-CLIENT-INITIALS TO MV-CLIENT-INITIAL.
                                                                                                                //COMMENT:     MOVE CLIENT-NUMBER154     TO V-CLIENT-ID-KEY149.
                                                                                                                //COMMENT:     MOVE CLIENT-INFO154       TO V-CLIENT-NAME149.
                                                                                                                //COMMENT:     MOVE SSN154               TO V-SSN149.
                                                                                                                //COMMENT:     MOVE DATE-OF-BIRTH154     TO MV-DATE-OF-BIRTH.
                                                                                                                //COMMENT:     MOVE SEX154               TO MV-SEX.
                                                                                                                //COMMENT:     MOVE MV-DATE-OF-BIRTH-SEX TO V-DATE-OF-BIRTH-SEX149.
            M_2149F_READLOG_CLIENT_DBF("M_2149F_READLOG_EXIT"); if (Control.ExitProgram) { return; }              //COBOL==> PERFORM 2149F-READLOG-CLIENT-DBF THRU 2149F-READLOG-EXIT.
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                WS.MV_CLIENT_NUMBER_X10.SetValueWithSpaces();                                                       //COBOL==> MOVE SPACES TO MV-CLIENT-NUMBER-X10
                M_1000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1000-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (WS.CL149_EOF_YES.Value)                                                                         //COBOL==> IF CL149-EOF-YES
            {
                WS.MV_CLIENT_NUMBER_X10.SetValueWithSpaces();                                                       //COBOL==> MOVE SPACES TO MV-CLIENT-NUMBER-X10
                M_1000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1000-EXIT
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT:  NO PROBLEM WITH QUERY AND NOT END-OF-FILE THEN RECORD RETURNED
                                                                                                                //COMMENT:  FROM SQL QUERY IN 2149F AND PROCESSING CONTINUES
            M_AA1400_CHK_PARTICIPATION("M_AA1400_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM AA1400-CHK-PARTICIPATION THRU AA1400-EXIT.
            if (returnMethod != "" && returnMethod != "M_1000_PROCESS_AP_CLIENT_NUMBER") { M_1000_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1000_EXIT
        /// </summary>
        /// <remarks>
        ///COMMENT:     MOVE CLIENT-POINTER149
        ///COMMENT:                               TO MV-CLIENT-POINTER.
        ///COMMENT:     MOVE CLIENT-POINTER-11-31149
        ///COMMENT:                               TO MV-SAVE-KEY-CLIENT-POINTER.
        ///COMMENT:     MOVE SPACES               TO CLIENT-POINTER-11-31149.
        ///COMMENT:     IF CLIENT-ID-KEY149 NOT = V-CLIENT-ID-KEY149
        ///COMMENT:         PERFORM 2149-RELISN-CLIENT-DBF
        ///COMMENT:            THRU 2149-RELISN-EXIT
        ///COMMENT:         MOVE SPACES           TO MV-CLIENT-NUMBER-X10
        ///COMMENT:         GO TO 1000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     IF MV-SYS-PART-CSE = 'Y'
        ///COMMENT:         PERFORM 2149-RELISN-CLIENT-DBF
        ///COMMENT:            THRU 2149-RELISN-EXIT
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE 'Y'              TO MV-SYS-PART-CSE
        ///COMMENT:         MOVE MV-CLIENT-POINTER
        ///COMMENT:                               TO CLIENT-POINTER149
        ///COMMENT:         MOVE MV-SAVE-KEY-CLIENT-POINTER
        ///COMMENT:                               TO CLIENT-POINTER-11-31149
        ///COMMENT:         PERFORM 2149-UPDT-CLIENT-DBF
        ///COMMENT:            THRU 2149-UPDT-EXIT
        ///COMMENT:     END-IF.
        /// </remarks>
        private void M_1000_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1000_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1000_EXIT") { M_AA1100_PROCESS_REFERRAL(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1100_PROCESS_REFERRAL
        /// </summary>
        private void M_AA1100_PROCESS_REFERRAL(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 AA1100   *****************'.
            if ((WS.REF_AP_CLIENT_NUMBER.IsGreaterThan("0000000000"))
             && (WS.REF_AP_CLIENT_NUMBER.IsLessThan("9999999999")))  //COBOL==> IF REF-AP-CLIENT-NUMBER > '0000000000' AND REF-AP-CLIENT-NUMBER < '9999999999'
            {
                goto EndOfSentence_2;                                                                               //COBOL==> NEXT SENTENCE
            }                                                                                                   //COBOL==> ELSE
            else
            {
                WS.REF_AP_CLIENT_NUMBER.SetValue(WS.MV_AP_CLIENT_NUMBER_X10);                                       //COBOL==> MOVE MV-AP-CLIENT-NUMBER-X10 TO REF-AP-CLIENT-NUMBER
            }                                                                                                   //COBOL==> END-IF.
        EndOfSentence_2:;
            WS.CSE_CASE_NUMBER.SetValue(WS.REF_CSE_CASE_NUMBER);                                                //COBOL==> MOVE REF-CSE-CASE-NUMBER TO CSE-CASE-NUMBER.
            if (((WS.CSE_CASE_NUMBER.IsGreaterThan("000000000000"))
             && (WS.CSE_CASE_NUMBER.IsLessThan("999999999999")))
             || ((WS.CSE_CASE_NUMBER_X10.IsGreaterThan("0000000000"))
             && (WS.CSE_CASE_NUMBER_X10.IsLessThan("9999999999"))))  //COBOL==> IF ( CSE-CASE-NUMBER > '000000000000' AND CSE-CASE-NUMBER < '999999999999' ) OR ( CSE-CASE-NUMBER-X10 > '0000000000' AND CSE-CASE-NUMBER-X10 < '9999999999' )
            {
                goto EndOfSentence_3;                                                                               //COBOL==> NEXT SENTENCE
            }                                                                                                   //COBOL==> ELSE
            else
            {
                WS.REF_CSE_CASE_NUMBER.SetValue(WS.MV_CSE_CASE_NUMBER);                                             //COBOL==> MOVE MV-CSE-CASE-NUMBER TO REF-CSE-CASE-NUMBER
                if (WS.MV_CSE_CASE_NUMBER.IsNumericValue())                                                         //COBOL==> IF MV-CSE-CASE-NUMBER NUMERIC
                {
                    //COMMENT:  MODIFIED TO HANDLE DIFFERENT DB2 TABLE DATE FIELD FORMAT
                    WS.O_YYYY.SetValue(WS.I_YYYY);                                                                      //COBOL==> MOVE I-YYYY TO O-YYYY
                    WS.O_MM.SetValue(WS.I_MM);                                                                          //COBOL==> MOVE I-MM TO O-MM
                    WS.O_DD.SetValue(WS.I_DD);                                                                          //COBOL==> MOVE I-DD TO O-DD
                                                                                                                        //COMMENT:             MOVE MV-CCYYMMDD      TO REF-CSE-ESTABLISH-DATE
                    WS.REF_CSE_ESTABLISH_DATE.SetValue(WS.O_MV_CCYYMMDD);                                               //COBOL==> MOVE O-MV-CCYYMMDD TO REF-CSE-ESTABLISH-DATE
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    //Continue                                                                                          //COBOL==> CONTINUE
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-IF.
        EndOfSentence_3:;
            M_AA1110_UPDT_REFERRAL("M_AA1110_EXIT"); if (Control.ExitProgram) { return; }                         //COBOL==> PERFORM AA1110-UPDT-REFERRAL THRU AA1110-EXIT.
            if (returnMethod != "" && returnMethod != "M_AA1100_PROCESS_REFERRAL") { M_AA1100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1100_EXIT
        /// </summary>
        /// <remarks>
        ///COMMENT:     IF AP-CLIENT-NUMBER188A > '0000000000' AND
        ///COMMENT:        AP-CLIENT-NUMBER188A < '9999999999'
        ///COMMENT:         NEXT SENTENCE
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE MV-AP-CLIENT-NUMBER-X10 TO AP-CLIENT-NUMBER188A
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE CSE-CASE-NUMBER188A      TO CSE-CASE-NUMBER.
        ///COMMENT:     IF (CSE-CASE-NUMBER      > '000000000000' AND
        ///COMMENT:         CSE-CASE-NUMBER      < '999999999999')
        ///COMMENT:     OR (CSE-CASE-NUMBER-X10  > '0000000000'   AND
        ///COMMENT:         CSE-CASE-NUMBER-X10  < '9999999999')
        ///COMMENT:         NEXT SENTENCE
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE MV-CSE-CASE-NUMBER   TO CSE-CASE-NUMBER188A
        ///COMMENT:         IF MV-CSE-CASE-NUMBER NUMERIC
        ///COMMENT:             MOVE MV-CCYYMMDD      TO CSE-ESTABLISH-DATE188A
        ///COMMENT:         END-IF
        ///COMMENT:     END-IF.
        ///COMMENT:     PERFORM 2188A-UPDT-REFERRAL-DBF
        ///COMMENT:        THRU 2188A-UPDT-EXIT.
        /// </remarks>
        private void M_AA1100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_AA1100_EXIT") { return; }                                                    //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_AA1100_EXIT") { M_AA1110_UPDT_REFERRAL(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1110_UPDT_REFERRAL
        /// </summary>
        private void M_AA1110_UPDT_REFERRAL(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 AA1110   *****************'.
            DbConv.ExecuteSql("UPDATE KSD_REFERRAL SET AP_CLIENT_NUMBER = {0},  CSE_CASE_NUMBER = {1},  CSE_ESTABLISH_DATE = {2},  LAST_MODIFIED_TMST = CURRENT_TIMESTAMP,  LAST_MODIFIED_BY = {3} WHERE FK_CSB_CASE_NO = {4} AND AP_NUMBER = {5} AND REFERRAL_TYPE = {6} AND REFERRAL_DATE = {7}", WS.REF_AP_CLIENT_NUMBER, WS.REF_CSE_CASE_NUMBER, WS.REF_CSE_ESTABLISH_DATE, WS.WS_PROGRAM, WS.REF_FK_CSB_CASE_NO, WS.REF_AP_NUMBER, WS.REF_REFERRAL_TYPE, WS.REF_REFERRAL_DATE);  //COBOL==> EXEC SQL UPDATE KSD_REFERRAL SET AP_CLIENT_NUMBER = :REF-AP-CLIENT-NUMBER , CSE_CASE_NUMBER = :REF-CSE-CASE-NUMBER , CSE_ESTABLISH_DATE = :REF-CSE-ESTABLISH-DATE , LAST_MODIFIED_TMST = CURRENT_TIMESTAMP , LAST_MODIFIED_BY = :WS-PROGRAM WHERE FK_CSB_CASE_NO = :REF-FK-CSB-CASE-NO AND AP_NUMBER = :REF-AP-NUMBER AND REFERRAL_TYPE = :REF-REFERRAL-TYPE AND REFERRAL_DATE = :REF-REFERRAL-DATE END-EXEC.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                WS.WS_COMMIT.SetValue("Y");                                                                         //COBOL==> MOVE 'Y' TO WS-COMMIT
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                if (WS.MV_REFERRAL_KAE.Value)                                                                       //COBOL==> IF MV-REFERRAL-KAE
                {
                    WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                    WS.MV_ADA_FILE_NUMBER.SetValue(188);                                                                //COBOL==> MOVE 188 TO MV-ADA-FILE-NUMBER
                    WS.MV_ADA_FILE_ACTION.SetValue("AU ");                                                              //COBOL==> MOVE 'AU ' TO MV-ADA-FILE-ACTION
                    WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                    M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
                }                                                                                                   //COBOL==> END-IF
                if ((WS.MV_REFERRAL_KSC.Value)
             || (WS.MV_REFERRAL_KES.Value))                       //COBOL==> IF MV-REFERRAL-KSC OR MV-REFERRAL-KES
                {
                    WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                    WS.MV_ADA_FILE_NUMBER.SetValue(188);                                                                //COBOL==> MOVE 188 TO MV-ADA-FILE-NUMBER
                    WS.MV_ADA_FILE_ACTION.SetValue("BU ");                                                              //COBOL==> MOVE 'BU ' TO MV-ADA-FILE-ACTION
                    WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                    M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_AA1110_UPDT_REFERRAL") { M_AA1110_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1110_EXIT
        /// </summary>
        private void M_AA1110_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_AA1110_EXIT") { return; }                                                    //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_AA1110_EXIT") { M_AA1400_CHK_PARTICIPATION(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1400_CHK_PARTICIPATION
        /// </summary>
        private void M_AA1400_CHK_PARTICIPATION(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 AA1400   *****************'.
            M_AA1410_READ_PARTICIPATION("M_AA1410_EXIT"); if (Control.ExitProgram) { return; }                    //COBOL==> PERFORM AA1410-READ-PARTICIPATION THRU AA1410-EXIT.
            if (WS.CLSYS_EOF_YES.Value)                                                                         //COBOL==> IF CLSYS-EOF-YES
            {
                WS.SP_FK_CLB_CLIENT_NO.SetValue(WS.CLIENT_FK_CLB_CLIENT_NO);                                        //COBOL==> MOVE CLIENT-FK-CLB-CLIENT-NO TO SP-FK-CLB-CLIENT-NO
                WS.SP_FK_CLI_CLIENT_NAME.SetValue(WS.CLIENT_NAME);                                                  //COBOL==> MOVE CLIENT-NAME TO SP-FK-CLI-CLIENT-NAME
                WS.SP_FK_CLI_SSN.SetValue(WS.CLIENT_SSN);                                                           //COBOL==> MOVE CLIENT-SSN TO SP-FK-CLI-SSN
                WS.SP_SYSTEM_CODE.SetValue(WS.WS_CSE_PART);                                                         //COBOL==> MOVE WS-CSE-PART TO SP-SYSTEM-CODE
                M_AA1420_ADD_CSE_PARTICIPATION("M_AA1420_EXIT"); if (Control.ExitProgram) { return; }                 //COBOL==> PERFORM AA1420-ADD-CSE-PARTICIPATION THRU AA1420-EXIT
            }                                                                                                   //COBOL==> ELSE
            else
            {
                if (!(WS.SP_PARTICIPATION_FLAG.IsEqualTo("Y")))                                                     //COBOL==> IF SP-PARTICIPATION-FLAG NOT EQUAL 'Y'
                {
                    M_AA1430_UPDT_CSE_PARTICIPATION("M_AA1430_EXIT"); if (Control.ExitProgram) { return; }                //COBOL==> PERFORM AA1430-UPDT-CSE-PARTICIPATION THRU AA1430-EXIT
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    //COMMENT:     CONITNUE WHEN PARTICIPATION RECORD ALREADY EXISTS FOR CLIENT
                    //Continue                                                                                          //COBOL==> CONTINUE
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_AA1400_CHK_PARTICIPATION") { M_AA1400_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1400_EXIT
        /// </summary>
        private void M_AA1400_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_AA1400_EXIT") { return; }                                                    //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_AA1400_EXIT") { M_AA1410_READ_PARTICIPATION(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1410_READ_PARTICIPATION
        /// </summary>
        private void M_AA1410_READ_PARTICIPATION(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 AA1410   *****************'.
            DbConv.ExecuteSqlQuery("SELECT FK_CLB_CLIENT_NO , FK_CLI_CLIENT_NAME , FK_CLI_SSN , SYSTEM_CODE , PARTICIPATION_FLAG INTO {0} , {1} , {2} , {3} , {4} FROM KSD_SYSTEM_PART WHERE ( FK_CLB_CLIENT_NO = {5} AND FK_CLI_CLIENT_NAME = {6} AND FK_CLI_SSN = {7} AND SYSTEM_CODE = {8} ) ",  //COBOL==> EXEC SQL SELECT FK_CLB_CLIENT_NO , FK_CLI_CLIENT_NAME , FK_CLI_SSN , SYSTEM_CODE , PARTICIPATION_FLAG INTO :SP-FK-CLB-CLIENT-NO , :SP-FK-CLI-CLIENT-NAME , :SP-FK-CLI-SSN , :SP-SYSTEM-CODE , :SP-PARTICIPATION-FLAG FROM KSD_SYSTEM_PART WHERE ( FK_CLB_CLIENT_NO = :CLIENT-FK-CLB-CLIENT-NO AND FK_CLI_CLIENT_NAME = :CLIENT-NAME AND FK_CLI_SSN = :CLIENT-SSN AND SYSTEM_CODE = :WS-CSE-PART ) END-EXEC.
                                 WS.SP_FK_CLB_CLIENT_NO, WS.SP_FK_CLI_CLIENT_NAME, WS.SP_FK_CLI_SSN, WS.SP_SYSTEM_CODE, WS.SP_PARTICIPATION_FLAG, WS.CLIENT_FK_CLB_CLIENT_NO, WS.CLIENT_NAME, WS.CLIENT_SSN, WS.WS_CSE_PART);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN 0
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN +100
            else
            if ((WS.SQLCA.SQLCODE.IsEqualTo(+100)))
            {
                WS.CLSYS_EOF_YES.SetValue(true);                                                                    //COBOL==> SET CLSYS-EOF-YES TO TRUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                //COMMENT:  POPULATING TO ADHERE TO EXISTING MESSAGIING AND NOT INTRODUCE
                //COMMENT:  NEW UN-APPROVED MESSAGES. KSD_CLIENT (149) WAS THE DRIVER FILE
                //COMMENT:  USED TO ACCESS KSD_SYSTEM_PART
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(149);                                                                //COBOL==> MOVE 149 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RHF");                                                              //COBOL==> MOVE 'RHF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_AA1410_READ_PARTICIPATION") { M_AA1410_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1410_EXIT
        /// </summary>
        private void M_AA1410_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_AA1410_EXIT") { return; }                                                    //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_AA1410_EXIT") { M_AA1420_ADD_CSE_PARTICIPATION(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1420_ADD_CSE_PARTICIPATION
        /// </summary>
        private void M_AA1420_ADD_CSE_PARTICIPATION(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 AA1420   *****************'.
            DbConv.ExecuteSql("INSERT INTO KSD_SYSTEM_PART  ( FK_CLB_CLIENT_NO , FK_CLI_CLIENT_NAME , FK_CLI_SSN , SYSTEM_CODE , PARTICIPATION_FLAG , CREATED_TIMESTAMP , CREATED_BY , LAST_MODIFIED_BY , LAST_MODIFIED_TMST  ) VALUES  ( {0}, {1}, {2}, {3}, 'Y' , CURRENT_TIMESTAMP , {4}, {5}, CURRENT_TIMESTAMP  ) ",  //COBOL==> EXEC SQL INSERT INTO KSD_SYSTEM_PART ( FK_CLB_CLIENT_NO , FK_CLI_CLIENT_NAME , FK_CLI_SSN , SYSTEM_CODE , PARTICIPATION_FLAG , CREATED_TIMESTAMP , CREATED_BY , LAST_MODIFIED_BY , LAST_MODIFIED_TMST ) VALUES ( :SP-FK-CLB-CLIENT-NO , :SP-FK-CLI-CLIENT-NAME , :SP-FK-CLI-SSN , :SP-SYSTEM-CODE , 'Y' , CURRENT_TIMESTAMP , :WS-PROGRAM , :WS-PROGRAM , CURRENT_TIMESTAMP ) END-EXEC.
                                 WS.SP_FK_CLB_CLIENT_NO, WS.SP_FK_CLI_CLIENT_NAME, WS.SP_FK_CLI_SSN, WS.SP_SYSTEM_CODE, WS.WS_PROGRAM, WS.WS_PROGRAM);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN 0
            {
                WS.WS_COMMIT.SetValue("Y");                                                                         //COBOL==> MOVE 'Y' TO WS-COMMIT
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                //COMMENT:  POPULATING TO ADHERE TO EXISTING MESSAGIING AND NOT INTRODUCE
                //COMMENT:  NEW UN-APPROVED MESSAGES. KSD_CLIENT (149) WAS THE DRIVER FILE
                //COMMENT:  USED TO ACCESS KSD_SYSTEM_PART
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(149);                                                                //COBOL==> MOVE 149 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RHF");                                                              //COBOL==> MOVE 'RHF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_AA1420_ADD_CSE_PARTICIPATION") { M_AA1420_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1420_EXIT
        /// </summary>
        private void M_AA1420_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_AA1420_EXIT") { return; }                                                    //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_AA1420_EXIT") { M_AA1430_UPDT_CSE_PARTICIPATION(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1430_UPDT_CSE_PARTICIPATION
        /// </summary>
        private void M_AA1430_UPDT_CSE_PARTICIPATION(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 AA1430   *****************'.
            DbConv.ExecuteSql("UPDATE KSD_SYSTEM_PART SET PARTICIPATION_FLAG = 'Y',  LAST_MODIFIED_BY = {0},  LAST_MODIFIED_TMST = CURRENT TIMESTAMP WHERE FK_CLB_CLIENT_NO = {1} AND FK_CLI_CLIENT_NAME = {2} AND FK_CLI_SSN = {3} AND SYSTEM_CODE = {4}", WS.WS_PROGRAM, WS.SP_FK_CLB_CLIENT_NO, WS.SP_FK_CLI_CLIENT_NAME, WS.SP_FK_CLI_SSN, WS.SP_SYSTEM_CODE);  //COBOL==> EXEC SQL UPDATE KSD_SYSTEM_PART SET PARTICIPATION_FLAG = 'Y' , LAST_MODIFIED_BY = :WS-PROGRAM , LAST_MODIFIED_TMST = CURRENT TIMESTAMP WHERE FK_CLB_CLIENT_NO = :SP-FK-CLB-CLIENT-NO AND FK_CLI_CLIENT_NAME = :SP-FK-CLI-CLIENT-NAME AND FK_CLI_SSN = :SP-FK-CLI-SSN AND SYSTEM_CODE = :SP-SYSTEM-CODE END-EXEC.
                                                                                                                                                                                                                                                                                                                                                                    // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN 0
            {
                WS.WS_COMMIT.SetValue("Y");                                                                         //COBOL==> MOVE 'Y' TO WS-COMMIT
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                //COMMENT:  POPULATING TO ADHERE TO EXISTING MESSAGIING AND NOT INTRODUCE
                //COMMENT:  NEW UN-APPROVED MESSAGES. KSD_CLIENT (149) WAS THE DRIVER FILE
                //COMMENT:  USED TO ACCESS KSD_SYSTEM_PART
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(149);                                                                //COBOL==> MOVE 149 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RHF");                                                              //COBOL==> MOVE 'RHF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_AA1430_UPDT_CSE_PARTICIPATION") { M_AA1430_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_AA1430_EXIT
        /// </summary>
        private void M_AA1430_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_AA1430_EXIT") { return; }                                                    //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_AA1430_EXIT") { M_2149F_READLOG_CLIENT_DBF(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_2149F_READLOG_CLIENT_DBF
        /// </summary>
        private void M_2149F_READLOG_CLIENT_DBF(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 2149F    *****************'.
            WS.CLIENT_NAME.SetValue(WS.MV_CLIENT_NAME);                                                         //COBOL==> MOVE MV-CLIENT-NAME TO CLIENT-NAME.
            DbConv.ExecuteSqlQuery("SELECT SSN , DATE_OF_BIRTH , GENDER , VERIFIED_SSN_FLAG , CLIENT_NAME , FK_CLB_CLIENT_NO INTO {0} , {1} , {2} , {3} , {4} , {5} FROM KSD_CLIENT WHERE ( FK_CLB_CLIENT_NO = {6} ) AND ( CLIENT_NAME = {7} ) AND ( SSN = {8} ) AND ( DATE_OF_BIRTH = {9} ) AND ( GENDER = {10} ) ",  //COBOL==> EXEC SQL SELECT SSN , DATE_OF_BIRTH , GENDER , VERIFIED_SSN_FLAG , CLIENT_NAME , FK_CLB_CLIENT_NO INTO :CLIENT-SSN , :CLIENT-DATE-OF-BIRTH , :CLIENT-GENDER , :CLIENT-VERIFIED-SSN-FLAG , :CLIENT-NAME , :CLIENT-FK-CLB-CLIENT-NO FROM KSD_CLIENT WHERE ( FK_CLB_CLIENT_NO = :CLB-CLIENT-NUMBER ) AND ( CLIENT_NAME = :CLIENT-NAME ) AND ( SSN = :CLB-SSN ) AND ( DATE_OF_BIRTH = :CLB-DATE-OF-BIRTH ) AND ( GENDER = :CLB-GENDER ) END-EXEC.
                                 WS.CLIENT_SSN, WS.CLIENT_DATE_OF_BIRTH, WS.CLIENT_GENDER, WS.CLIENT_VERIFIED_SSN_FLAG, WS.CLIENT_NAME, WS.CLIENT_FK_CLB_CLIENT_NO, WS.CLB_CLIENT_NUMBER, WS.CLIENT_NAME, WS.CLB_SSN, WS.CLB_DATE_OF_BIRTH, WS.CLB_GENDER);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN 0
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN +100
            else
            if ((WS.SQLCA.SQLCODE.IsEqualTo(+100)))
            {
                WS.CL149_EOF_YES.SetValue(true);                                                                    //COBOL==> SET CL149-EOF-YES TO TRUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(149);                                                                //COBOL==> MOVE 149 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RHF");                                                              //COBOL==> MOVE 'RHF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_2149F_READLOG_CLIENT_DBF") { M_2149F_READLOG_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_2149F_READLOG_EXIT
        /// </summary>
        /// <remarks>
        ///COMMENT:     @READLOGICAL149   HOLD  FIRST.
        ///COMMENT:     IF RESPONSE-CODE149 > ZERO AND NOT EOF149
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 149              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RHF'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE149 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        /// </remarks>
        private void M_2149F_READLOG_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_2149F_READLOG_EXIT") { return; }                                             //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_2149F_READLOG_EXIT") { M_2154_READISN_CLIENT_BASIC_DBF(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_2154_READISN_CLIENT_BASIC_DBF
        /// </summary>
        private void M_2154_READISN_CLIENT_BASIC_DBF(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 2154     *****************'.
            WS.CLB_CLIENT_NUMBER.SetValue(WS.MV_CLIENT_NUMBER);                                                 //COBOL==> MOVE MV-CLIENT-NUMBER TO CLB-CLIENT-NUMBER.
            DbConv.ExecuteSqlQuery("SELECT CLIENT_NUMBER , CLIENT_GIVEN_NAME , CLIENT_INITIALS , CLIENT_SURNAME , SSN , GENDER , DATE_OF_BIRTH , SUFFIX_NAME INTO {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} FROM KSD_CLIENT_BASIC WHERE ( CLIENT_NUMBER = {8} ) ",  //COBOL==> EXEC SQL SELECT CLIENT_NUMBER , CLIENT_GIVEN_NAME , CLIENT_INITIALS , CLIENT_SURNAME , SSN , GENDER , DATE_OF_BIRTH , SUFFIX_NAME INTO :CLB-CLIENT-NUMBER , :CLB-CLIENT-GIVEN-NAME , :CLB-CLIENT-INITIALS , :CLB-CLIENT-SURNAME , :CLB-SSN , :CLB-GENDER , :CLB-DATE-OF-BIRTH , :CLB-SUFFIX-NAME FROM KSD_CLIENT_BASIC WHERE ( CLIENT_NUMBER = :CLB-CLIENT-NUMBER ) END-EXEC.
                                 WS.CLB_CLIENT_NUMBER, WS.CLB_CLIENT_GIVEN_NAME, WS.CLB_CLIENT_INITIALS, WS.CLB_CLIENT_SURNAME, WS.CLB_SSN, WS.CLB_GENDER, WS.CLB_DATE_OF_BIRTH, WS.CLB_SUFFIX_NAME, WS.CLB_CLIENT_NUMBER);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN 0
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN +100
            else
            if ((WS.SQLCA.SQLCODE.IsEqualTo(+100)))
            {
                WS.CL154_EOF_YES.SetValue(true);                                                                    //COBOL==> SET CL154-EOF-YES TO TRUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(154);                                                                //COBOL==> MOVE 154 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RI ");                                                              //COBOL==> MOVE 'RI ' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_2154_READISN_CLIENT_BASIC_DBF") { M_2154_READISN_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_2154_READISN_EXIT
        /// </summary>
        /// <remarks>
        ///COMMENT:     @READISN154  ISN = MV-CLIENT-NUMBER.
        ///COMMENT:     IF RESPONSE-CODE154 > ZERO
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 154              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RI '            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE154 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        /// </remarks>
        private void M_2154_READISN_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_2154_READISN_EXIT") { return; }                                              //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_2154_READISN_EXIT") { M_9999_CICS_ABEND(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_9999_CICS_ABEND
        /// </summary>
        private void M_9999_CICS_ABEND(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 9999     *****************'.
            WS.MV_ABEND_TYPE.SetValue("C");                                                                     //COBOL==> MOVE 'C' TO MV-ABEND-TYPE.
            WS.MV_CICS_RESOURCE_NM.SetValue(Control.EIBRSRCE);                                                  //COBOL==> MOVE EIBRSRCE TO MV-CICS-RESOURCE-NM.
            WS.MV_CICS_FUNCTION_CD.SetValue(Control.EIBFN);                                                     //COBOL==> MOVE EIBFN TO MV-CICS-FUNCTION-CD.
            WS.MV_CICS_RESPONSE_CD.SetValue(Control.EIBRCODE);                                                  //COBOL==> MOVE EIBRCODE TO MV-CICS-RESPONSE-CD.
            if (returnMethod != "" && returnMethod != "M_9999_CICS_ABEND") { M_0000_DATABASE_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_DATABASE_EXIT
        /// </summary>
        private void M_0000_DATABASE_EXIT(string returnMethod = "")
        {
            //COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 0000-DATABASE-EXIT *******'.
            DisplayToLog("**** START SWEXIU30 *****");                                                          //COBOL==> DISPLAY "**** START SWEXIU30 *****"
            DisplayToLog(LS.ABEND_DATA_0005ET.AsString());                                                      //COBOL==> DISPLAY ABEND-DATA-0005ET
            DisplayToLog("****  END  SWEXIU30 *****");                                                          //COBOL==> DISPLAY "****  END  SWEXIU30 *****"
            Control.GetLatestDateTime();                                                                        //COBOL==> EXEC CICS ASKTIME END-EXEC.
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                LS.TYPE_0005.SetValue(WS.MV_ABEND_TYPE);                                                            //COBOL==> MOVE MV-ABEND-TYPE TO TYPE-0005
                LS.ADABAS_FILE_NUMBER_0005.SetValue(WS.MV_ADA_FILE_NUMBER);                                         //COBOL==> MOVE MV-ADA-FILE-NUMBER TO ADABAS-FILE-NUMBER-0005
                LS.ADABAS_FILE_ACTION_0005.SetValue(WS.MV_ADA_FILE_ACTION);                                         //COBOL==> MOVE MV-ADA-FILE-ACTION TO ADABAS-FILE-ACTION-0005
                LS.ADABAS_RESPONSE_CD_0005.SetValue(WS.MV_ADA_RESPONSE_CD);                                         //COBOL==> MOVE MV-ADA-RESPONSE-CD TO ADABAS-RESPONSE-CD-0005
                LS.CICS_RESOURCE_NM_0005.SetValue(WS.MV_CICS_RESOURCE_NM);                                          //COBOL==> MOVE MV-CICS-RESOURCE-NM TO CICS-RESOURCE-NM-0005
                LS.CICS_FUNCTION_CD_0005.SetValue(WS.MV_CICS_FUNCTION_CD);                                          //COBOL==> MOVE MV-CICS-FUNCTION-CD TO CICS-FUNCTION-CD-0005
                LS.CICS_RESPONSE_CD_0005.SetValue(WS.MV_CICS_RESPONSE_CD);                                          //COBOL==> MOVE MV-CICS-RESPONSE-CD TO CICS-RESPONSE-CD-0005
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_0000_DATABASE_EXIT") { M_PARA_0734790484_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0734790484_EXIT
        /// </summary>
        /// <remarks>
        ///COMMENT:     DISPLAY '*** SWEXIU30 SWCSZG27 FINISHED *****************'.
        ///COMMENT: *****************************************************************
        ///COMMENT: *****************************************************************
        ///COMMENT: NEW SOURCE CODE END *********************************************
        ///COMMENT: *****************************************************************
        ///COMMENT: *****************************************************************
        ///COMMENT: *****************************************************************
        ///COMMENT: *****************************************************************
        ///COMMENT: *****************************************************************
        ///COMMENT:     IF MV-REFERRAL-KAE
        ///COMMENT:         MOVE MV-REFERRAL-CASE TO V-AE-CASE-NUMBER188A
        ///COMMENT:         MOVE MV-REFERRAL-AP   TO V-AP-NUMBER188A
        ///COMMENT:         PERFORM 2188AF-READLOG-REFERRAL-DBF
        ///COMMENT:            THRU 2188AF-READLOG-EXIT
        ///COMMENT:         IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:             GO TO 0000-ADABAS-EXIT
        ///COMMENT:         END-IF
        ///COMMENT:         IF NOT EOF188A AND
        ///COMMENT:            (AE-CASE-NUMBER188A     = V-AE-CASE-NUMBER188A AND
        ///COMMENT:             AP-NUMBER188A          = V-AP-NUMBER188A)
        ///COMMENT:             CONTINUE
        ///COMMENT:         ELSE
        ///COMMENT:             MOVE 'A'   TO MV-ABEND-TYPE
        ///COMMENT:             MOVE 188   TO MV-ADA-FILE-NUMBER
        ///COMMENT:             MOVE 'ANF' TO MV-ADA-FILE-ACTION
        ///COMMENT:             MOVE ZERO  TO MV-ADA-RESPONSE-CD
        ///COMMENT:             GO TO 0000-ADABAS-EXIT
        ///COMMENT:         END-IF
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE MV-REFERRAL-CASE TO V-KSC-CASE-NUMBER188B
        ///COMMENT:         MOVE MV-REFERRAL-AP   TO V-AP-NUMBER188B
        ///COMMENT:         PERFORM 2188BF-READLOG-REFERRAL-DBF
        ///COMMENT:            THRU 2188BF-READLOG-EXIT
        ///COMMENT:         IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:             GO TO 0000-ADABAS-EXIT
        ///COMMENT:         END-IF
        ///COMMENT:         IF NOT EOF188B AND
        ///COMMENT:            KSC-CASE-NUMBER188B     = V-KSC-CASE-NUMBER188B AND
        ///COMMENT:            AP-NUMBER188B           = V-AP-NUMBER188B
        ///COMMENT:             CONTINUE
        ///COMMENT:         ELSE
        ///COMMENT:             MOVE 'A'   TO MV-ABEND-TYPE
        ///COMMENT:             MOVE 188   TO MV-ADA-FILE-NUMBER
        ///COMMENT:             MOVE 'BNF' TO MV-ADA-FILE-ACTION
        ///COMMENT:             MOVE ZERO  TO MV-ADA-RESPONSE-CD
        ///COMMENT:             GO TO 0000-ADABAS-EXIT
        ///COMMENT:         END-IF
        ///COMMENT:     END-IF.
        ///COMMENT: *****************************************************************
        ///COMMENT: *** FOR PILOT ONLY **********************************************
        ///COMMENT: *****************************************************************
        ///COMMENT:     IF MV-REFERRAL-KAE
        ///COMMENT:         MOVE PI-CLIENT-NUMBER188A TO MV-AR-NUMBER
        ///COMMENT:         MOVE AP-NUMBER188A        TO MV-AP-NUMBER
        ///COMMENT:         PERFORM 1300-ADD-CSE-PILOT-CASE-RTN
        ///COMMENT:            THRU 1399-EXIT
        ///COMMENT:         GO TO 0000-ADABAS-EXIT
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE PI-CLIENT-NUMBER188B TO MV-AR-NUMBER
        ///COMMENT:         MOVE AP-NUMBER188B        TO MV-AP-NUMBER
        ///COMMENT:         PERFORM 1300-ADD-CSE-PILOT-CASE-RTN
        ///COMMENT:            THRU 1399-EXIT
        ///COMMENT:         GO TO 0000-ADABAS-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT: *****************************************************************
        ///COMMENT:     IF MV-AP-CLIENT-NUMBER-X10 NUMERIC AND
        ///COMMENT:        MV-AP-CLIENT-NUMBER     >  ZERO
        ///COMMENT:         MOVE MV-AP-CLIENT-NUMBER  TO MV-CLIENT-NUMBER
        ///COMMENT:         PERFORM 1000-PROCESS-AP-CLIENT-NUMBER
        ///COMMENT:            THRU 1000-EXIT
        ///COMMENT:         MOVE MV-CLIENT-NUMBER-X10 TO MV-AP-CLIENT-NUMBER-X10
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE SPACES               TO MV-AP-CLIENT-NUMBER-X10
        ///COMMENT:     END-IF.
        ///COMMENT:     IF MV-CSE-CASE-NUMBER > '0000000000' AND
        ///COMMENT:        MV-CSE-CASE-NUMBER < '9999999999'
        ///COMMENT:         NEXT SENTENCE
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE SPACES               TO MV-CSE-CASE-NUMBER
        ///COMMENT:     END-IF.
        ///COMMENT:     IF MV-REFERRAL-KAE
        ///COMMENT:         PERFORM 1100-PROCESS-KAE-REFERRAL
        ///COMMENT:            THRU 1100-EXIT
        ///COMMENT:     ELSE
        ///COMMENT:         PERFORM 1200-PROCESS-KSC-REFERRAL
        ///COMMENT:            THRU 1200-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     PERFORM 2999-END-ADABAS-TRANSACTION
        ///COMMENT:        THRU 2999-EXIT.
        ///COMMENT: *****************************************************************
        ///COMMENT: *** MOVE WORKING-STORAGE FIELDS TO EXPORT FIELDS.
        ///COMMENT: *****************************************************************
        ///COMMENT: *** NOTHING TO EXPORT.
        ///COMMENT: *****************************************************************
        ///COMMENT: *****************************************************************
        ///COMMENT:     GO TO 0000-ADABAS-EXIT.
        ///COMMENT: 1000-PROCESS-AP-CLIENT-NUMBER.
        ///COMMENT:     PERFORM 2154-READISN-CLIENT-BASIC-DBF
        ///COMMENT:        THRU 2154-READISN-EXIT.
        ///COMMENT:     IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:         MOVE SPACES           TO MV-CLIENT-NUMBER-X10
        ///COMMENT:         GO TO 1000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     IF CLIENT-NUMBER154 NOT = MV-CLIENT-NUMBER-X10
        ///COMMENT:         MOVE SPACES           TO MV-CLIENT-NUMBER-X10
        ///COMMENT:         GO TO 1000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE CLIENT-NUMBER154     TO V-CLIENT-ID-KEY149.
        ///COMMENT:     MOVE CLIENT-INFO154       TO V-CLIENT-NAME149.
        ///COMMENT:     MOVE SSN154               TO V-SSN149.
        ///COMMENT:     MOVE DATE-OF-BIRTH154     TO MV-DATE-OF-BIRTH.
        ///COMMENT:     MOVE SEX154               TO MV-SEX.
        ///COMMENT:     MOVE MV-DATE-OF-BIRTH-SEX TO V-DATE-OF-BIRTH-SEX149.
        ///COMMENT:     PERFORM 2149F-READLOG-CLIENT-DBF
        ///COMMENT:        THRU 2149F-READLOG-EXIT.
        ///COMMENT:     IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:         MOVE SPACES           TO MV-CLIENT-NUMBER-X10
        ///COMMENT:         GO TO 1000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     IF EOF149
        ///COMMENT:         MOVE SPACES           TO MV-CLIENT-NUMBER-X10
        ///COMMENT:         GO TO 1000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE CLIENT-POINTER149
        ///COMMENT:                               TO MV-CLIENT-POINTER.
        ///COMMENT:     MOVE CLIENT-POINTER-11-31149
        ///COMMENT:                               TO MV-SAVE-KEY-CLIENT-POINTER.
        ///COMMENT:     MOVE SPACES               TO CLIENT-POINTER-11-31149.
        ///COMMENT:     IF CLIENT-ID-KEY149 NOT = V-CLIENT-ID-KEY149
        ///COMMENT:         PERFORM 2149-RELISN-CLIENT-DBF
        ///COMMENT:            THRU 2149-RELISN-EXIT
        ///COMMENT:         MOVE SPACES           TO MV-CLIENT-NUMBER-X10
        ///COMMENT:         GO TO 1000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     IF MV-SYS-PART-CSE = 'Y'
        ///COMMENT:         PERFORM 2149-RELISN-CLIENT-DBF
        ///COMMENT:            THRU 2149-RELISN-EXIT
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE 'Y'              TO MV-SYS-PART-CSE
        ///COMMENT:         MOVE MV-CLIENT-POINTER
        ///COMMENT:                               TO CLIENT-POINTER149
        ///COMMENT:         MOVE MV-SAVE-KEY-CLIENT-POINTER
        ///COMMENT:                               TO CLIENT-POINTER-11-31149
        ///COMMENT:         PERFORM 2149-UPDT-CLIENT-DBF
        ///COMMENT:            THRU 2149-UPDT-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT: 1000-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 1100-PROCESS-KAE-REFERRAL.
        ///COMMENT:     IF AP-CLIENT-NUMBER188A > '0000000000' AND
        ///COMMENT:        AP-CLIENT-NUMBER188A < '9999999999'
        ///COMMENT:         NEXT SENTENCE
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE MV-AP-CLIENT-NUMBER-X10 TO AP-CLIENT-NUMBER188A
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE CSE-CASE-NUMBER188A      TO CSE-CASE-NUMBER.
        ///COMMENT:     IF (CSE-CASE-NUMBER      > '000000000000' AND
        ///COMMENT:         CSE-CASE-NUMBER      < '999999999999')
        ///COMMENT:     OR (CSE-CASE-NUMBER-X10  > '0000000000'   AND
        ///COMMENT:         CSE-CASE-NUMBER-X10  < '9999999999')
        ///COMMENT:         NEXT SENTENCE
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE MV-CSE-CASE-NUMBER   TO CSE-CASE-NUMBER188A
        ///COMMENT:         IF MV-CSE-CASE-NUMBER NUMERIC
        ///COMMENT:             MOVE MV-CCYYMMDD      TO CSE-ESTABLISH-DATE188A
        ///COMMENT:         END-IF
        ///COMMENT:     END-IF.
        ///COMMENT:     PERFORM 2188A-UPDT-REFERRAL-DBF
        ///COMMENT:        THRU 2188A-UPDT-EXIT.
        ///COMMENT: 1100-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 1200-PROCESS-KSC-REFERRAL.
        ///COMMENT:     IF AP-CLIENT-NUMBER188B > '0000000000' AND
        ///COMMENT:        AP-CLIENT-NUMBER188B < '9999999999'
        ///COMMENT:         NEXT SENTENCE
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE MV-AP-CLIENT-NUMBER-X10 TO AP-CLIENT-NUMBER188B
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE CSE-CASE-NUMBER188B      TO CSE-CASE-NUMBER.
        ///COMMENT:     IF (CSE-CASE-NUMBER      > '000000000000' AND
        ///COMMENT:         CSE-CASE-NUMBER      < '999999999999')
        ///COMMENT:     OR (CSE-CASE-NUMBER-X10  > '0000000000'   AND
        ///COMMENT:         CSE-CASE-NUMBER-X10  < '9999999999')
        ///COMMENT:         NEXT SENTENCE
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE MV-CSE-CASE-NUMBER   TO CSE-CASE-NUMBER188B
        ///COMMENT:         IF MV-CSE-CASE-NUMBER NUMERIC
        ///COMMENT:             MOVE MV-CCYYMMDD      TO CSE-ESTABLISH-DATE188B
        ///COMMENT:         END-IF
        ///COMMENT:     END-IF.
        ///COMMENT:     PERFORM 2188B-UPDT-REFERRAL-DBF
        ///COMMENT:        THRU 2188B-UPDT-EXIT.
        ///COMMENT: 1200-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 1300-ADD-CSE-PILOT-CASE-RTN.
        ///COMMENT:     MOVE MV-AR-AP-NUMBER      TO V-CASE-NUMBER103.
        ///COMMENT:     @READVALUE103    FIRST.
        ///COMMENT:     IF RESPONSE-CODE103 > ZERO AND NOT EOF103
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 103              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE ' RF'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE103 TO MV-ADA-RESPONSE-CD
        ///COMMENT:         GO TO 1399-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     IF EOF103
        ///COMMENT:     OR CASE-NUMBER103 NOT = V-CASE-NUMBER103
        ///COMMENT:         CONTINUE
        ///COMMENT:     ELSE
        ///COMMENT:         GO TO 1399-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE V-CASE-NUMBER103     TO CASE-NUMBER103.
        ///COMMENT:     @ADD103.
        ///COMMENT:     IF RESPONSE-CODE103 > ZERO
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 103              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE '  A'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE103 TO MV-ADA-RESPONSE-CD
        ///COMMENT:         GO TO 1399-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     @END-TRANSACTION.
        ///COMMENT: 1399-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 2149F-READLOG-CLIENT-DBF.
        ///COMMENT:     @READLOGICAL149   HOLD  FIRST.
        ///COMMENT:     IF RESPONSE-CODE149 > ZERO AND NOT EOF149
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 149              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RHF'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE149 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 2149F-READLOG-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 2149-RELISN-CLIENT-DBF.
        ///COMMENT:     @RELISN149.
        ///COMMENT:     IF RESPONSE-CODE149 > ZERO
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 149              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE ' RI'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE149 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 2149-RELISN-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 2149-UPDT-CLIENT-DBF.
        ///COMMENT:     @UPDATE149.
        ///COMMENT:     IF RESPONSE-CODE149 > ZERO
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 149              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE ' U '            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE149 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 2149-UPDT-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 2154-READISN-CLIENT-BASIC-DBF.
        ///COMMENT:     @READISN154  ISN = MV-CLIENT-NUMBER.
        ///COMMENT:     IF RESPONSE-CODE154 > ZERO
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 154              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RI '            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE154 TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 2154-READISN-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 2188AF-READLOG-REFERRAL-DBF.
        ///COMMENT:     @READLOGICAL188A  HOLD  FIRST.
        ///COMMENT:     IF RESPONSE-CODE188A > ZERO AND NOT EOF188A
        ///COMMENT:         MOVE 'A'               TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 188               TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'AHF'             TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE188A TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 2188AF-READLOG-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 2188A-UPDT-REFERRAL-DBF.
        ///COMMENT:     @UPDATE188A.
        ///COMMENT:     IF RESPONSE-CODE188A > ZERO
        ///COMMENT:         MOVE 'A'               TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 188               TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'AU '             TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE188A TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 2188A-UPDT-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 2188BF-READLOG-REFERRAL-DBF.
        ///COMMENT:     @READLOGICAL188B  HOLD  FIRST.
        ///COMMENT:     IF RESPONSE-CODE188B > ZERO AND NOT EOF188B
        ///COMMENT:         MOVE 'A'               TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 188               TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'BHF'             TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE188B TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 2188BF-READLOG-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 2188B-UPDT-REFERRAL-DBF.
        ///COMMENT:     @UPDATE188B.
        ///COMMENT:     IF RESPONSE-CODE188B > ZERO
        ///COMMENT:         MOVE 'A'               TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 188               TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'BU '             TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE188B TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 2188B-UPDT-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 2999-END-ADABAS-TRANSACTION.
        ///COMMENT:     @END-TRANSACTION.
        ///COMMENT:     IF RESPONSE-CODEOPN > ZERO
        ///COMMENT:         MOVE 'A'               TO MV-ABEND-TYPE
        ///COMMENT:         MOVE ZERO              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'EAT'             TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODEOPN  TO MV-ADA-RESPONSE-CD
        ///COMMENT:     END-IF.
        ///COMMENT: 2999-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: 9999-CICS-ABEND.
        ///COMMENT:     MOVE 'C'      TO MV-ABEND-TYPE.
        ///COMMENT:     MOVE EIBRSRCE TO MV-CICS-RESOURCE-NM.
        ///COMMENT:     MOVE EIBFN    TO MV-CICS-FUNCTION-CD.
        ///COMMENT:     MOVE EIBRCODE TO MV-CICS-RESPONSE-CD.
        ///COMMENT: 0000-ADABAS-EXIT.
        ///COMMENT:     EXEC CICS ASKTIME END-EXEC.
        ///COMMENT:     IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:         MOVE MV-ABEND-TYPE       TO TYPE-0005
        ///COMMENT:         MOVE MV-ADA-FILE-NUMBER  TO ADABAS-FILE-NUMBER-0005
        ///COMMENT:         MOVE MV-ADA-FILE-ACTION  TO ADABAS-FILE-ACTION-0005
        ///COMMENT:         MOVE MV-ADA-RESPONSE-CD  TO ADABAS-RESPONSE-CD-0005
        ///COMMENT:         MOVE MV-CICS-RESOURCE-NM TO CICS-RESOURCE-NM-0005
        ///COMMENT:         MOVE MV-CICS-FUNCTION-CD TO CICS-FUNCTION-CD-0005
        ///COMMENT:         MOVE MV-CICS-RESPONSE-CD TO CICS-RESPONSE-CD-0005
        ///COMMENT:     END-IF.
        /// </remarks>
        private void M_PARA_0734790484_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0734790484_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0734790484_EXIT") { M_PARA_0734790484_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0734790484_INIT
        /// </summary>
        private void M_PARA_0734790484_INIT(string returnMethod = "")
        {
            LS.EXPORT_0005EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0005EV .
            if (returnMethod != "" && returnMethod != "M_PARA_0734790484_INIT") { M_PARA_0734790484_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0734790484_INIT_EXIT
        /// </summary>
        private void M_PARA_0734790484_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0734790484_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
