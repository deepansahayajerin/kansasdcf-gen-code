#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2021
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2021-11-16 12:37:07 PM
   **        *   FROM COBOL PGM   :  SWEXGR10
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                   INFORMATION ENGINEERING FACILITY (TM)
                       TEXAS INSTRUMENTS INC.
                COPYRIGHT (C) TEXAS INSTRUMENTS INC. 1997
       NAME: EAB_READ_CSE_PERSON              DATE: 97/06/25
       TARGET OS:   MVS                       TIME: 14:52:30
       TARGET DBMS: DB2                       USER: SWMTSXC
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
   **************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.UI.Angular;
using MDSY.Framework.Control.CICS;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
using GOV.KS.DCF.CSS.Common.BL;

/*  usings for referenced objects  */
#endregion

namespace GOV.KS.DCF.CSS.Online.BL
{
    #region Working Storage Class
    internal class SWEXGR10_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXGR10_ws_WorkingStorage";
            internal const string FUNC_0329210948_ESC_FLAG = "FUNC_0329210948_ESC_FLAG";
            internal const string EXTERNAL_ACTION_BLOCK_WS = "EXTERNAL_ACTION_BLOCK_WS";
            internal const string MV_ABEND_FIELDS = "MV_ABEND_FIELDS";
            internal const string MV_ABEND_TYPE = "MV_ABEND_TYPE";
            internal const string MV_ABEND_TYPE_NONE = "MV_ABEND_TYPE_NONE";
            internal const string MV_ABEND_TYPE_ADABAS = "MV_ABEND_TYPE_ADABAS";
            internal const string MV_ABEND_TYPE_CICS = "MV_ABEND_TYPE_CICS";
            internal const string MV_ABEND_ADABAS = "MV_ABEND_ADABAS";
            internal const string MV_ADA_FILE_NUMBER = "MV_ADA_FILE_NUMBER";
            internal const string MV_ADA_FILE_ACTION = "MV_ADA_FILE_ACTION";
            internal const string MV_ADA_RESPONSE_CD = "MV_ADA_RESPONSE_CD";
            internal const string MV_ABEND_CICS = "MV_ABEND_CICS";
            internal const string MV_CICS_RESOURCE_NM = "MV_CICS_RESOURCE_NM";
            internal const string MV_CICS_FUNCTION_CD = "MV_CICS_FUNCTION_CD";
            internal const string MV_CICS_RESPONSE_CD = "MV_CICS_RESPONSE_CD";
            internal const string MV_ABS_TIME = "MV_ABS_TIME";
            internal const string MV_CCYYMMDD_X8 = "MV_CCYYMMDD_X8";
            internal const string MV_CC = "MV_CC";
            internal const string MV_YYMMDD_X6 = "MV_YYMMDD_X6";
            internal const string MV_YY = "MV_YY";
            internal const string MV_MM = "MV_MM";
            internal const string MV_DD = "MV_DD";
            internal const string MV_YYMMDD = "MV_YYMMDD";
            internal const string MV_CURRENT_CCYY = "MV_CURRENT_CCYY";
            internal const string MV_CURRENT_MMDD = "MV_CURRENT_MMDD";
            internal const string MV_CCYYMMDD = "MV_CCYYMMDD";
            internal const string MV_COMPLIMENT_DATE = "MV_COMPLIMENT_DATE";
            internal const string MV_KCC_PTR = "MV_KCC_PTR";
            internal const string MV_CLIENT_INFO_NUMBER = "MV_CLIENT_INFO_NUMBER";
            internal const string MV_CLIENT_NUMBER_X10 = "MV_CLIENT_NUMBER_X10";
            internal const string MV_CLIENT_NUMBER = "MV_CLIENT_NUMBER";
            internal const string MV_DATE_OF_BIRTH_SEX = "MV_DATE_OF_BIRTH_SEX";
            internal const string MV_DATE_OF_BIRTH = "MV_DATE_OF_BIRTH";
            internal const string MV_SEX = "MV_SEX";
            internal const string MV_SSN_X9 = "MV_SSN_X9";
            internal const string MV_SSN = "MV_SSN";
            internal const string MV_CLIENT_NAME = "MV_CLIENT_NAME";
            internal const string MV_CLIENT_SURNAME = "MV_CLIENT_SURNAME";
            internal const string MV_CLIENT_GIVEN_NAME = "MV_CLIENT_GIVEN_NAME";
            internal const string MV_CLIENT_INITIAL = "MV_CLIENT_INITIAL";
            internal const string MV_CLIENT_POINTER = "MV_CLIENT_POINTER";
            internal const string MV_CLIENT_ID = "MV_CLIENT_ID";
            internal const string MV_VERIFIED_SSN_FLAG = "MV_VERIFIED_SSN_FLAG";
            internal const string MV_SYSTEM_PARTICIPATION = "MV_SYSTEM_PARTICIPATION";
            internal const string MV_SYS_PART_AE = "MV_SYS_PART_AE";
            internal const string MV_SYS_PART_CSE = "MV_SYS_PART_CSE";
            internal const string MV_SYS_PART_KANPAY = "MV_SYS_PART_KANPAY";
            internal const string MV_SYS_PART_KSCARES = "MV_SYS_PART_KSCARES";
            internal const string MV_SYS_PART_FACTS = "MV_SYS_PART_FACTS";
            internal const string MV_REPL_IND = "MV_REPL_IND";
            internal const string DBK1_KEY_FIELDS = "DBK1_KEY_FIELDS";
            internal const string DBK1_CLIENT_NUMBER = "DBK1_CLIENT_NUMBER";
            internal const string DBK1_CLIENT_NAME = "DBK1_CLIENT_NAME";
            internal const string DBK1_FK_CLI_SSN = "DBK1_FK_CLI_SSN";
            internal const string DBK1_COUNT = "DBK1_COUNT";
            internal const string DBK1_CCYYMMDD_X = "DBK1_CCYYMMDD_X";
            internal const string DBK1_CCYY = "DBK1_CCYY";
            internal const string DBK1_MM = "DBK1_MM";
            internal const string DBK1_DD = "DBK1_DD";
            internal const string DBK1_CCYYMMDD = "DBK1_CCYYMMDD";
            internal const string DCLKSD_CLIENT_BASIC = "DCLKSD_CLIENT_BASIC";
            internal const string CLB_CLIENT_NUMBER = "CLB_CLIENT_NUMBER";
            internal const string CLB_CLIENT_GIVEN_NAME = "CLB_CLIENT_GIVEN_NAME";
            internal const string CLB_CLIENT_INITIALS = "CLB_CLIENT_INITIALS";
            internal const string CLB_CLIENT_SURNAME = "CLB_CLIENT_SURNAME";
            internal const string CLB_CIS_REPL_IND = "CLB_CIS_REPL_IND";
            internal const string CLB_WORK_PHONE = "CLB_WORK_PHONE";
            internal const string CLB_SSN = "CLB_SSN";
            internal const string CLB_GENDER = "CLB_GENDER";
            internal const string CLB_PARENT_RGHTS_SEV = "CLB_PARENT_RGHTS_SEV";
            internal const string CLB_PRNT_RGHTS_SEV_DT = "CLB_PRNT_RGHTS_SEV_DT";
            internal const string CLB_LEGAL_STATUS = "CLB_LEGAL_STATUS";
            internal const string CLB_INSURANCE_CODE = "CLB_INSURANCE_CODE";
            internal const string CLB_INITIAL_CUSTODY_DT = "CLB_INITIAL_CUSTODY_DT";
            internal const string CLB_HOME_PHONE = "CLB_HOME_PHONE";
            internal const string CLB_DATE_OF_BIRTH = "CLB_DATE_OF_BIRTH";
            internal const string CLB_CURR_PLACEMNT_DT = "CLB_CURR_PLACEMNT_DT";
            internal const string CLB_CURRENT_PLACEMENT = "CLB_CURRENT_PLACEMENT";
            internal const string CLB_CSEA_G_CAUSE_CODE = "CLB_CSEA_G_CAUSE_CODE";
            internal const string CLB_CSEA_G_CAUSE_CL_DT = "CLB_CSEA_G_CAUSE_CL_DT";
            internal const string CLB_CSEA_COOP_CODE = "CLB_CSEA_COOP_CODE";
            internal const string CLB_COUNTY_CRT_COMMIT = "CLB_COUNTY_CRT_COMMIT";
            internal const string CLB_MONTHS_ASST_AF = "CLB_MONTHS_ASST_AF";
            internal const string CLB_MONTHS_ASST_GA = "CLB_MONTHS_ASST_GA";
            internal const string CLB_MO_DEATH_DT = "CLB_MO_DEATH_DT";
            internal const string CLB_MO_PRT_DT = "CLB_MO_PRT_DT";
            internal const string CLB_FA_DEATH_DT = "CLB_FA_DEATH_DT";
            internal const string CLB_FA_PRT_DT = "CLB_FA_PRT_DT";
            internal const string CLB_MPI_ID = "CLB_MPI_ID";
            internal const string CLB_MED_COVERAGE_IND = "CLB_MED_COVERAGE_IND";
            internal const string CLB_INSURANCE_CARRIER = "CLB_INSURANCE_CARRIER";
            internal const string CLB_INSURANCE_POLCY_NO = "CLB_INSURANCE_POLCY_NO";
            internal const string CLB_SPOKEN_LANGUAGE = "CLB_SPOKEN_LANGUAGE";
            internal const string CLB_WRITTEN_LANGUAGE = "CLB_WRITTEN_LANGUAGE";
            internal const string CLB_STATE_OF_BIRTH = "CLB_STATE_OF_BIRTH";
            internal const string CLB_SCHOOL_DISTRICT = "CLB_SCHOOL_DISTRICT";
            internal const string CLB_ETHNIC_CLASS = "CLB_ETHNIC_CLASS";
            internal const string CLB_SUFFIX_NAME = "CLB_SUFFIX_NAME";
            internal const string CLB_EMPLOYER_NAME = "CLB_EMPLOYER_NAME";
            internal const string CLB_EARNED_INCOME_AMT = "CLB_EARNED_INCOME_AMT";
            internal const string CLB_INCOME_FREQUENCY = "CLB_INCOME_FREQUENCY";
            internal const string CLB_KEES_ABMS_ID = "CLB_KEES_ABMS_ID";
            internal const string CLB_EMAIL_ADDRESS = "CLB_EMAIL_ADDRESS";
            internal const string CLB_EMAIL_ADDRESS_LEN = "CLB_EMAIL_ADDRESS_LEN";
            internal const string CLB_EMAIL_ADDRESS_TEXT = "CLB_EMAIL_ADDRESS_TEXT";
            internal const string CLB_OCCUPATION = "CLB_OCCUPATION";
            internal const string CLB_OCCUPATION_LEN = "CLB_OCCUPATION_LEN";
            internal const string CLB_OCCUPATION_TEXT = "CLB_OCCUPATION_TEXT";
            internal const string CLB_CREATED_BY = "CLB_CREATED_BY";
            internal const string CLB_CREATED_TIMESTAMP = "CLB_CREATED_TIMESTAMP";
            internal const string CLB_LAST_MODIFIED_BY = "CLB_LAST_MODIFIED_BY";
            internal const string CLB_LAST_MODIFIED_TMST = "CLB_LAST_MODIFIED_TMST";
            internal const string DCLKSD_PARTICIPATION = "DCLKSD_PARTICIPATION";
            internal const string PAR1_KESSEP_TIME_STMP = "PAR1_KESSEP_TIME_STMP";
            internal const string PAR1_PART_END_DATE = "PAR1_PART_END_DATE";
            internal const string PAR1_PART_START_DATE = "PAR1_PART_START_DATE";
            internal const string PAR1_PART_CODE = "PAR1_PART_CODE";
            internal const string PAR1_PROGRAM_END_DATE = "PAR1_PROGRAM_END_DATE";
            internal const string PAR1_PROGRAM_SUBTYPE = "PAR1_PROGRAM_SUBTYPE";
            internal const string PAR1_RELATIONSHIP = "PAR1_RELATIONSHIP";
            internal const string PAR1_CREATED_BY = "PAR1_CREATED_BY";
            internal const string PAR1_CREATED_TIMESTAMP = "PAR1_CREATED_TIMESTAMP";
            internal const string PAR1_LAST_MODIFIED_BY = "PAR1_LAST_MODIFIED_BY";
            internal const string PAR1_LAST_MODIFIED_TMST = "PAR1_LAST_MODIFIED_TMST";
            internal const string PAR1_FK_CSB_CASE_NO = "PAR1_FK_CSB_CASE_NO";
            internal const string PAR1_FK_PGB_PROG_TYPE = "PAR1_FK_PGB_PROG_TYPE";
            internal const string PAR1_FK_CLB_CLIENT_NO = "PAR1_FK_CLB_CLIENT_NO";
            internal const string WS9_SYSTEM_CODES = "WS9_SYSTEM_CODES";
            internal const string WS9_SYSTEM_CODE_AE = "WS9_SYSTEM_CODE_AE";
            internal const string WS9_SYSTEM_CODE_CS = "WS9_SYSTEM_CODE_CS";
            internal const string WS9_SYSTEM_CODE_KA = "WS9_SYSTEM_CODE_KA";
            internal const string WS9_SYSTEM_CODE_KS = "WS9_SYSTEM_CODE_KS";
            internal const string WS9_SYSTEM_CODE_FA = "WS9_SYSTEM_CODE_FA";
            internal const string SW9_SWITCHES = "SW9_SWITCHES";
            internal const string SW9_EOF_SW = "SW9_EOF_SW";
            internal const string SW9_EOF_NOT_FOUND = "SW9_EOF_NOT_FOUND";
            internal const string SW9_EOF_NO = "SW9_EOF_NO";
            internal const string SW9_EOF_YES = "SW9_EOF_YES";
            internal const string SW9_ERR_SW = "SW9_ERR_SW";
            internal const string SW9_ERR_NO = "SW9_ERR_NO";
            internal const string SW9_ERR_YES = "SW9_ERR_YES";
            internal const string SW9_SELECT_CLIENT_SW = "SW9_SELECT_CLIENT_SW";
            internal const string SW9_SELECT_CLIENT_NO = "SW9_SELECT_CLIENT_NO";
            internal const string SW9_SELECT_CLIENT_YES = "SW9_SELECT_CLIENT_YES";
            internal const string WS9_CLIENT_POINTER = "WS9_CLIENT_POINTER";
            internal const string WS9_CLIENT_ID = "WS9_CLIENT_ID";
            internal const string WS9_VERIFIED_SSN_FLAG = "WS9_VERIFIED_SSN_FLAG";
            internal const string WS9_SYSTEM_PARTICIPATION = "WS9_SYSTEM_PARTICIPATION";
            internal const string WS9_SYS_PART_AE = "WS9_SYS_PART_AE";
            internal const string WS9_SYS_PART_CSE = "WS9_SYS_PART_CSE";
            internal const string WS9_SYS_PART_KANPAY = "WS9_SYS_PART_KANPAY";
            internal const string WS9_SYS_PART_KSCARES = "WS9_SYS_PART_KSCARES";
            internal const string WS9_SYS_PART_FACTS = "WS9_SYS_PART_FACTS";
            internal const string WS9_ABEND_FIELDS = "WS9_ABEND_FIELDS";
            internal const string WS9_ABEND_TYPE = "WS9_ABEND_TYPE";
            internal const string WS9_ABEND_TYPE_NONE = "WS9_ABEND_TYPE_NONE";
            internal const string WS9_ABEND_TYPE_ADABAS = "WS9_ABEND_TYPE_ADABAS";
            internal const string WS9_ABEND_TYPE_CICS = "WS9_ABEND_TYPE_CICS";
            internal const string WS9_ABEND_ADABAS = "WS9_ABEND_ADABAS";
            internal const string WS9_ADA_FILE_NUMBER = "WS9_ADA_FILE_NUMBER";
            internal const string WS9_ADA_FILE_ACTION = "WS9_ADA_FILE_ACTION";
            internal const string WS9_ADA_RESPONSE_CD = "WS9_ADA_RESPONSE_CD";
            internal const string WS9_ABEND_CICS = "WS9_ABEND_CICS";
            internal const string WS9_CICS_RESOURCE_NM = "WS9_CICS_RESOURCE_NM";
            internal const string WS9_CICS_FUNCTION_CD = "WS9_CICS_FUNCTION_CD";
            internal const string WS9_CICS_RESPONSE_CD = "WS9_CICS_RESPONSE_CD";
            internal const string WS9_MISC = "WS9_MISC";
            internal const string WS9_MSG_X = "WS9_MSG_X";
            internal const string WS9_MSG_PROG = "WS9_MSG_PROG";
            internal const string WS9_MSG_1 = "WS9_MSG_1";
            internal const string WS9_MSG = "WS9_MSG";
            internal const string WS9_MSG_CODE = "WS9_MSG_CODE";
            internal const string WS9_MSG_SQLCODE = "WS9_MSG_SQLCODE";
            internal const string WS9_MSG_2 = "WS9_MSG_2";
            internal const string WS9_MSG_FIELD = "WS9_MSG_FIELD";
            internal const string WS9_MSG_VALUE = "WS9_MSG_VALUE";
            internal const string WS9_DATE_ADA = "WS9_DATE_ADA";
            internal const string WS9_DATE_DB2 = "WS9_DATE_DB2";
            internal const string DBK9_KEYS = "DBK9_KEYS";
            internal const string DBK9_CLIENT_NUMBER = "DBK9_CLIENT_NUMBER";
            internal const string DBK9_CLIENT_NAME = "DBK9_CLIENT_NAME";
            internal const string DBK9_SSN = "DBK9_SSN";
            internal const string CLB9_DCLKSD_CLIENT_BASIC = "CLB9_DCLKSD_CLIENT_BASIC";
            internal const string CLB9_CLIENT_NUMBER = "CLB9_CLIENT_NUMBER";
            internal const string CLB9_CLIENT_GIVEN_NAME = "CLB9_CLIENT_GIVEN_NAME";
            internal const string CLB9_CLIENT_INITIALS = "CLB9_CLIENT_INITIALS";
            internal const string CLB9_CLIENT_SURNAME = "CLB9_CLIENT_SURNAME";
            internal const string CLB9_CIS_REPL_IND = "CLB9_CIS_REPL_IND";
            internal const string CLB9_WORK_PHONE = "CLB9_WORK_PHONE";
            internal const string CLB9_SSN = "CLB9_SSN";
            internal const string CLB9_GENDER = "CLB9_GENDER";
            internal const string CLB9_PARENT_RGHTS_SEV = "CLB9_PARENT_RGHTS_SEV";
            internal const string CLB9_PRNT_RGHTS_SEV_DT = "CLB9_PRNT_RGHTS_SEV_DT";
            internal const string CLB9_LEGAL_STATUS = "CLB9_LEGAL_STATUS";
            internal const string CLB9_INSURANCE_CODE = "CLB9_INSURANCE_CODE";
            internal const string CLB9_INITIAL_CUSTODY_DT = "CLB9_INITIAL_CUSTODY_DT";
            internal const string CLB9_HOME_PHONE = "CLB9_HOME_PHONE";
            internal const string CLB9_DATE_OF_BIRTH = "CLB9_DATE_OF_BIRTH";
            internal const string CLB9_CURR_PLACEMNT_DT = "CLB9_CURR_PLACEMNT_DT";
            internal const string CLB9_CURRENT_PLACEMENT = "CLB9_CURRENT_PLACEMENT";
            internal const string CLB9_CSEA_G_CAUSE_CODE = "CLB9_CSEA_G_CAUSE_CODE";
            internal const string CLB9_CSEA_G_CAUSE_CL_DT = "CLB9_CSEA_G_CAUSE_CL_DT";
            internal const string CLB9_CSEA_COOP_CODE = "CLB9_CSEA_COOP_CODE";
            internal const string CLB9_COUNTY_CRT_COMMIT = "CLB9_COUNTY_CRT_COMMIT";
            internal const string CLB9_MONTHS_ASST_AF = "CLB9_MONTHS_ASST_AF";
            internal const string CLB9_MONTHS_ASST_GA = "CLB9_MONTHS_ASST_GA";
            internal const string CLB9_MO_DEATH_DT = "CLB9_MO_DEATH_DT";
            internal const string CLB9_MO_PRT_DT = "CLB9_MO_PRT_DT";
            internal const string CLB9_FA_DEATH_DT = "CLB9_FA_DEATH_DT";
            internal const string CLB9_FA_PRT_DT = "CLB9_FA_PRT_DT";
            internal const string CLB9_MPI_ID = "CLB9_MPI_ID";
            internal const string CLB9_MED_COVERAGE_IND = "CLB9_MED_COVERAGE_IND";
            internal const string CLB9_INSURANCE_CARRIER = "CLB9_INSURANCE_CARRIER";
            internal const string CLB9_INSURANCE_POLCY_NO = "CLB9_INSURANCE_POLCY_NO";
            internal const string CLB9_SPOKEN_LANGUAGE = "CLB9_SPOKEN_LANGUAGE";
            internal const string CLB9_WRITTEN_LANGUAGE = "CLB9_WRITTEN_LANGUAGE";
            internal const string CLB9_STATE_OF_BIRTH = "CLB9_STATE_OF_BIRTH";
            internal const string CLB9_SCHOOL_DISTRICT = "CLB9_SCHOOL_DISTRICT";
            internal const string CLB9_ETHNIC_CLASS = "CLB9_ETHNIC_CLASS";
            internal const string CLB9_SUFFIX_NAME = "CLB9_SUFFIX_NAME";
            internal const string CLB9_EMPLOYER_NAME = "CLB9_EMPLOYER_NAME";
            internal const string CLB9_EARNED_INCOME_AMT = "CLB9_EARNED_INCOME_AMT";
            internal const string CLB9_INCOME_FREQUENCY = "CLB9_INCOME_FREQUENCY";
            internal const string CLB9_KEES_ABMS_ID = "CLB9_KEES_ABMS_ID";
            internal const string CLB9_EMAIL_ADDRESS = "CLB9_EMAIL_ADDRESS";
            internal const string CLB9_EMAIL_ADDRESS_LEN = "CLB9_EMAIL_ADDRESS_LEN";
            internal const string CLB9_EMAIL_ADDRESS_TEXT = "CLB9_EMAIL_ADDRESS_TEXT";
            internal const string CLB9_OCCUPATION = "CLB9_OCCUPATION";
            internal const string CLB9_OCCUPATION_LEN = "CLB9_OCCUPATION_LEN";
            internal const string CLB9_OCCUPATION_TEXT = "CLB9_OCCUPATION_TEXT";
            internal const string CLB9_CREATED_BY = "CLB9_CREATED_BY";
            internal const string CLB9_CREATED_TIMESTAMP = "CLB9_CREATED_TIMESTAMP";
            internal const string CLB9_LAST_MODIFIED_BY = "CLB9_LAST_MODIFIED_BY";
            internal const string CLB9_LAST_MODIFIED_TMST = "CLB9_LAST_MODIFIED_TMST";
            internal const string CL9_DCLKSD_CLIENT = "CL9_DCLKSD_CLIENT";
            internal const string CL9_SSN = "CL9_SSN";
            internal const string CL9_PREVIOUS_SSN = "CL9_PREVIOUS_SSN";
            internal const string CL9_PHONETIC_DATA = "CL9_PHONETIC_DATA";
            internal const string CL9_DT_OF_LAST_UPDATE = "CL9_DT_OF_LAST_UPDATE";
            internal const string CL9_DATE_OF_BIRTH = "CL9_DATE_OF_BIRTH";
            internal const string CL9_GENDER = "CL9_GENDER";
            internal const string CL9_VERIFIED_SSN_FLAG = "CL9_VERIFIED_SSN_FLAG";
            internal const string CL9_CLIENT_NAME = "CL9_CLIENT_NAME";
            internal const string CL9_CREATED_BY = "CL9_CREATED_BY";
            internal const string CL9_CREATED_TIMESTAMP = "CL9_CREATED_TIMESTAMP";
            internal const string CL9_LAST_MODIFIED_BY = "CL9_LAST_MODIFIED_BY";
            internal const string CL9_LAST_MODIFIED_TMST = "CL9_LAST_MODIFIED_TMST";
            internal const string CL9_FK_CLB_CLIENT_NO = "CL9_FK_CLB_CLIENT_NO";
            internal const string SP9_DCLKSD_SYSTEM_PART = "SP9_DCLKSD_SYSTEM_PART";
            internal const string SP9_SYSTEM_CODE = "SP9_SYSTEM_CODE";
            internal const string SP9_PARTICIPATION_FLAG = "SP9_PARTICIPATION_FLAG";
            internal const string SP9_CREATED_TIMESTAMP = "SP9_CREATED_TIMESTAMP";
            internal const string SP9_CREATED_BY = "SP9_CREATED_BY";
            internal const string SP9_LAST_MODIFIED_BY = "SP9_LAST_MODIFIED_BY";
            internal const string SP9_LAST_MODIFIED_TMST = "SP9_LAST_MODIFIED_TMST";
            internal const string SP9_FK_CLB_CLIENT_NO = "SP9_FK_CLB_CLIENT_NO";
            internal const string SP9_FK_CLI_CLIENT_NAME = "SP9_FK_CLI_CLIENT_NAME";
            internal const string SP9_FK_CLI_SSN = "SP9_FK_CLI_SSN";
        }
        #endregion

        #region Direct-access element properties
        public IField FUNC_0329210948_ESC_FLAG { get { return GetElementByName<IField>(Names.FUNC_0329210948_ESC_FLAG); } }
        public IGroup EXTERNAL_ACTION_BLOCK_WS { get { return GetElementByName<IGroup>(Names.EXTERNAL_ACTION_BLOCK_WS); } }
        public IGroup MV_ABEND_FIELDS { get { return GetElementByName<IGroup>(Names.MV_ABEND_FIELDS); } }
        public IField MV_ABEND_TYPE { get { return GetElementByName<IField>(Names.MV_ABEND_TYPE); } }
        public ICheckField MV_ABEND_TYPE_NONE { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_NONE); } }
        public ICheckField MV_ABEND_TYPE_ADABAS { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_ADABAS); } }
        public ICheckField MV_ABEND_TYPE_CICS { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_CICS); } }
        public IGroup MV_ABEND_ADABAS { get { return GetElementByName<IGroup>(Names.MV_ABEND_ADABAS); } }
        public IField MV_ADA_FILE_NUMBER { get { return GetElementByName<IField>(Names.MV_ADA_FILE_NUMBER); } }
        public IField MV_ADA_FILE_ACTION { get { return GetElementByName<IField>(Names.MV_ADA_FILE_ACTION); } }
        public IField MV_ADA_RESPONSE_CD { get { return GetElementByName<IField>(Names.MV_ADA_RESPONSE_CD); } }
        public IGroup MV_ABEND_CICS { get { return GetElementByName<IGroup>(Names.MV_ABEND_CICS); } }
        public IField MV_CICS_RESOURCE_NM { get { return GetElementByName<IField>(Names.MV_CICS_RESOURCE_NM); } }
        public IField MV_CICS_FUNCTION_CD { get { return GetElementByName<IField>(Names.MV_CICS_FUNCTION_CD); } }
        public IField MV_CICS_RESPONSE_CD { get { return GetElementByName<IField>(Names.MV_CICS_RESPONSE_CD); } }
        public IField MV_ABS_TIME { get { return GetElementByName<IField>(Names.MV_ABS_TIME); } }
        public IGroup MV_CCYYMMDD_X8 { get { return GetElementByName<IGroup>(Names.MV_CCYYMMDD_X8); } }
        public IField MV_CC { get { return GetElementByName<IField>(Names.MV_CC); } }
        public IGroup MV_YYMMDD_X6 { get { return GetElementByName<IGroup>(Names.MV_YYMMDD_X6); } }
        public IField MV_YY { get { return GetElementByName<IField>(Names.MV_YY); } }
        public IField MV_MM { get { return GetElementByName<IField>(Names.MV_MM); } }
        public IField MV_DD { get { return GetElementByName<IField>(Names.MV_DD); } }
        public IField MV_YYMMDD { get { return GetElementByName<IField>(Names.MV_YYMMDD); } }
        public IField MV_CURRENT_CCYY { get { return GetElementByName<IField>(Names.MV_CURRENT_CCYY); } }
        public IField MV_CURRENT_MMDD { get { return GetElementByName<IField>(Names.MV_CURRENT_MMDD); } }
        public IField MV_CCYYMMDD { get { return GetElementByName<IField>(Names.MV_CCYYMMDD); } }
        public IField MV_COMPLIMENT_DATE { get { return GetElementByName<IField>(Names.MV_COMPLIMENT_DATE); } }
        public IField MV_KCC_PTR { get { return GetElementByName<IField>(Names.MV_KCC_PTR); } }
        public IField MV_CLIENT_INFO_NUMBER { get { return GetElementByName<IField>(Names.MV_CLIENT_INFO_NUMBER); } }
        public IGroup MV_CLIENT_NUMBER_X10 { get { return GetElementByName<IGroup>(Names.MV_CLIENT_NUMBER_X10); } }
        public IField MV_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.MV_CLIENT_NUMBER); } }
        public IGroup MV_DATE_OF_BIRTH_SEX { get { return GetElementByName<IGroup>(Names.MV_DATE_OF_BIRTH_SEX); } }
        public IField MV_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.MV_DATE_OF_BIRTH); } }
        public IField MV_SEX { get { return GetElementByName<IField>(Names.MV_SEX); } }
        public IGroup MV_SSN_X9 { get { return GetElementByName<IGroup>(Names.MV_SSN_X9); } }
        public IField MV_SSN { get { return GetElementByName<IField>(Names.MV_SSN); } }
        public IGroup MV_CLIENT_NAME { get { return GetElementByName<IGroup>(Names.MV_CLIENT_NAME); } }
        public IField MV_CLIENT_SURNAME { get { return GetElementByName<IField>(Names.MV_CLIENT_SURNAME); } }
        public IField MV_CLIENT_GIVEN_NAME { get { return GetElementByName<IField>(Names.MV_CLIENT_GIVEN_NAME); } }
        public IField MV_CLIENT_INITIAL { get { return GetElementByName<IField>(Names.MV_CLIENT_INITIAL); } }
        public IGroup MV_CLIENT_POINTER { get { return GetElementByName<IGroup>(Names.MV_CLIENT_POINTER); } }
        public IField MV_CLIENT_ID { get { return GetElementByName<IField>(Names.MV_CLIENT_ID); } }
        public IField MV_VERIFIED_SSN_FLAG { get { return GetElementByName<IField>(Names.MV_VERIFIED_SSN_FLAG); } }
        public IGroup MV_SYSTEM_PARTICIPATION { get { return GetElementByName<IGroup>(Names.MV_SYSTEM_PARTICIPATION); } }
        public IField MV_SYS_PART_AE { get { return GetElementByName<IField>(Names.MV_SYS_PART_AE); } }
        public IField MV_SYS_PART_CSE { get { return GetElementByName<IField>(Names.MV_SYS_PART_CSE); } }
        public IField MV_SYS_PART_KANPAY { get { return GetElementByName<IField>(Names.MV_SYS_PART_KANPAY); } }
        public IField MV_SYS_PART_KSCARES { get { return GetElementByName<IField>(Names.MV_SYS_PART_KSCARES); } }
        public IField MV_SYS_PART_FACTS { get { return GetElementByName<IField>(Names.MV_SYS_PART_FACTS); } }
        public IField MV_REPL_IND { get { return GetElementByName<IField>(Names.MV_REPL_IND); } }
        public IGroup DBK1_KEY_FIELDS { get { return GetElementByName<IGroup>(Names.DBK1_KEY_FIELDS); } }
        public IField DBK1_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.DBK1_CLIENT_NUMBER); } }
        public IField DBK1_CLIENT_NAME { get { return GetElementByName<IField>(Names.DBK1_CLIENT_NAME); } }
        public IField DBK1_FK_CLI_SSN { get { return GetElementByName<IField>(Names.DBK1_FK_CLI_SSN); } }
        public IField DBK1_COUNT { get { return GetElementByName<IField>(Names.DBK1_COUNT); } }
        public IGroup DBK1_CCYYMMDD_X { get { return GetElementByName<IGroup>(Names.DBK1_CCYYMMDD_X); } }
        public IField DBK1_CCYY { get { return GetElementByName<IField>(Names.DBK1_CCYY); } }
        public IField DBK1_MM { get { return GetElementByName<IField>(Names.DBK1_MM); } }
        public IField DBK1_DD { get { return GetElementByName<IField>(Names.DBK1_DD); } }
        public IField DBK1_CCYYMMDD { get { return GetElementByName<IField>(Names.DBK1_CCYYMMDD); } }
        public IGroup DCLKSD_CLIENT_BASIC { get { return GetElementByName<IGroup>(Names.DCLKSD_CLIENT_BASIC); } }
        public IField CLB_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.CLB_CLIENT_NUMBER); } }
        public IField CLB_CLIENT_GIVEN_NAME { get { return GetElementByName<IField>(Names.CLB_CLIENT_GIVEN_NAME); } }
        public IField CLB_CLIENT_INITIALS { get { return GetElementByName<IField>(Names.CLB_CLIENT_INITIALS); } }
        public IField CLB_CLIENT_SURNAME { get { return GetElementByName<IField>(Names.CLB_CLIENT_SURNAME); } }
        public IField CLB_CIS_REPL_IND { get { return GetElementByName<IField>(Names.CLB_CIS_REPL_IND); } }
        public IField CLB_WORK_PHONE { get { return GetElementByName<IField>(Names.CLB_WORK_PHONE); } }
        public IField CLB_SSN { get { return GetElementByName<IField>(Names.CLB_SSN); } }
        public IField CLB_GENDER { get { return GetElementByName<IField>(Names.CLB_GENDER); } }
        public IField CLB_PARENT_RGHTS_SEV { get { return GetElementByName<IField>(Names.CLB_PARENT_RGHTS_SEV); } }
        public IField CLB_PRNT_RGHTS_SEV_DT { get { return GetElementByName<IField>(Names.CLB_PRNT_RGHTS_SEV_DT); } }
        public IField CLB_LEGAL_STATUS { get { return GetElementByName<IField>(Names.CLB_LEGAL_STATUS); } }
        public IField CLB_INSURANCE_CODE { get { return GetElementByName<IField>(Names.CLB_INSURANCE_CODE); } }
        public IField CLB_INITIAL_CUSTODY_DT { get { return GetElementByName<IField>(Names.CLB_INITIAL_CUSTODY_DT); } }
        public IField CLB_HOME_PHONE { get { return GetElementByName<IField>(Names.CLB_HOME_PHONE); } }
        public IField CLB_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.CLB_DATE_OF_BIRTH); } }
        public IField CLB_CURR_PLACEMNT_DT { get { return GetElementByName<IField>(Names.CLB_CURR_PLACEMNT_DT); } }
        public IField CLB_CURRENT_PLACEMENT { get { return GetElementByName<IField>(Names.CLB_CURRENT_PLACEMENT); } }
        public IField CLB_CSEA_G_CAUSE_CODE { get { return GetElementByName<IField>(Names.CLB_CSEA_G_CAUSE_CODE); } }
        public IField CLB_CSEA_G_CAUSE_CL_DT { get { return GetElementByName<IField>(Names.CLB_CSEA_G_CAUSE_CL_DT); } }
        public IField CLB_CSEA_COOP_CODE { get { return GetElementByName<IField>(Names.CLB_CSEA_COOP_CODE); } }
        public IField CLB_COUNTY_CRT_COMMIT { get { return GetElementByName<IField>(Names.CLB_COUNTY_CRT_COMMIT); } }
        public IField CLB_MONTHS_ASST_AF { get { return GetElementByName<IField>(Names.CLB_MONTHS_ASST_AF); } }
        public IField CLB_MONTHS_ASST_GA { get { return GetElementByName<IField>(Names.CLB_MONTHS_ASST_GA); } }
        public IField CLB_MO_DEATH_DT { get { return GetElementByName<IField>(Names.CLB_MO_DEATH_DT); } }
        public IField CLB_MO_PRT_DT { get { return GetElementByName<IField>(Names.CLB_MO_PRT_DT); } }
        public IField CLB_FA_DEATH_DT { get { return GetElementByName<IField>(Names.CLB_FA_DEATH_DT); } }
        public IField CLB_FA_PRT_DT { get { return GetElementByName<IField>(Names.CLB_FA_PRT_DT); } }
        public IField CLB_MPI_ID { get { return GetElementByName<IField>(Names.CLB_MPI_ID); } }
        public IField CLB_MED_COVERAGE_IND { get { return GetElementByName<IField>(Names.CLB_MED_COVERAGE_IND); } }
        public IField CLB_INSURANCE_CARRIER { get { return GetElementByName<IField>(Names.CLB_INSURANCE_CARRIER); } }
        public IField CLB_INSURANCE_POLCY_NO { get { return GetElementByName<IField>(Names.CLB_INSURANCE_POLCY_NO); } }
        public IField CLB_SPOKEN_LANGUAGE { get { return GetElementByName<IField>(Names.CLB_SPOKEN_LANGUAGE); } }
        public IField CLB_WRITTEN_LANGUAGE { get { return GetElementByName<IField>(Names.CLB_WRITTEN_LANGUAGE); } }
        public IField CLB_STATE_OF_BIRTH { get { return GetElementByName<IField>(Names.CLB_STATE_OF_BIRTH); } }
        public IField CLB_SCHOOL_DISTRICT { get { return GetElementByName<IField>(Names.CLB_SCHOOL_DISTRICT); } }
        public IField CLB_ETHNIC_CLASS { get { return GetElementByName<IField>(Names.CLB_ETHNIC_CLASS); } }
        public IField CLB_SUFFIX_NAME { get { return GetElementByName<IField>(Names.CLB_SUFFIX_NAME); } }
        public IField CLB_EMPLOYER_NAME { get { return GetElementByName<IField>(Names.CLB_EMPLOYER_NAME); } }
        public IField CLB_EARNED_INCOME_AMT { get { return GetElementByName<IField>(Names.CLB_EARNED_INCOME_AMT); } }
        public IField CLB_INCOME_FREQUENCY { get { return GetElementByName<IField>(Names.CLB_INCOME_FREQUENCY); } }
        public IField CLB_KEES_ABMS_ID { get { return GetElementByName<IField>(Names.CLB_KEES_ABMS_ID); } }
        public IGroup CLB_EMAIL_ADDRESS { get { return GetElementByName<IGroup>(Names.CLB_EMAIL_ADDRESS); } }
        public IField CLB_EMAIL_ADDRESS_LEN { get { return GetElementByName<IField>(Names.CLB_EMAIL_ADDRESS_LEN); } }
        public IField CLB_EMAIL_ADDRESS_TEXT { get { return GetElementByName<IField>(Names.CLB_EMAIL_ADDRESS_TEXT); } }
        public IGroup CLB_OCCUPATION { get { return GetElementByName<IGroup>(Names.CLB_OCCUPATION); } }
        public IField CLB_OCCUPATION_LEN { get { return GetElementByName<IField>(Names.CLB_OCCUPATION_LEN); } }
        public IField CLB_OCCUPATION_TEXT { get { return GetElementByName<IField>(Names.CLB_OCCUPATION_TEXT); } }
        public IField CLB_CREATED_BY { get { return GetElementByName<IField>(Names.CLB_CREATED_BY); } }
        public IField CLB_CREATED_TIMESTAMP { get { return GetElementByName<IField>(Names.CLB_CREATED_TIMESTAMP); } }
        public IField CLB_LAST_MODIFIED_BY { get { return GetElementByName<IField>(Names.CLB_LAST_MODIFIED_BY); } }
        public IField CLB_LAST_MODIFIED_TMST { get { return GetElementByName<IField>(Names.CLB_LAST_MODIFIED_TMST); } }
        public IGroup DCLKSD_PARTICIPATION { get { return GetElementByName<IGroup>(Names.DCLKSD_PARTICIPATION); } }
        public IField PAR1_KESSEP_TIME_STMP { get { return GetElementByName<IField>(Names.PAR1_KESSEP_TIME_STMP); } }
        public IField PAR1_PART_END_DATE { get { return GetElementByName<IField>(Names.PAR1_PART_END_DATE); } }
        public IField PAR1_PART_START_DATE { get { return GetElementByName<IField>(Names.PAR1_PART_START_DATE); } }
        public IField PAR1_PART_CODE { get { return GetElementByName<IField>(Names.PAR1_PART_CODE); } }
        public IField PAR1_PROGRAM_END_DATE { get { return GetElementByName<IField>(Names.PAR1_PROGRAM_END_DATE); } }
        public IField PAR1_PROGRAM_SUBTYPE { get { return GetElementByName<IField>(Names.PAR1_PROGRAM_SUBTYPE); } }
        public IField PAR1_RELATIONSHIP { get { return GetElementByName<IField>(Names.PAR1_RELATIONSHIP); } }
        public IField PAR1_CREATED_BY { get { return GetElementByName<IField>(Names.PAR1_CREATED_BY); } }
        public IField PAR1_CREATED_TIMESTAMP { get { return GetElementByName<IField>(Names.PAR1_CREATED_TIMESTAMP); } }
        public IField PAR1_LAST_MODIFIED_BY { get { return GetElementByName<IField>(Names.PAR1_LAST_MODIFIED_BY); } }
        public IField PAR1_LAST_MODIFIED_TMST { get { return GetElementByName<IField>(Names.PAR1_LAST_MODIFIED_TMST); } }
        public IField PAR1_FK_CSB_CASE_NO { get { return GetElementByName<IField>(Names.PAR1_FK_CSB_CASE_NO); } }
        public IField PAR1_FK_PGB_PROG_TYPE { get { return GetElementByName<IField>(Names.PAR1_FK_PGB_PROG_TYPE); } }
        public IField PAR1_FK_CLB_CLIENT_NO { get { return GetElementByName<IField>(Names.PAR1_FK_CLB_CLIENT_NO); } }
        public IGroup WS9_SYSTEM_CODES { get { return GetElementByName<IGroup>(Names.WS9_SYSTEM_CODES); } }
        public IField WS9_SYSTEM_CODE_AE { get { return GetElementByName<IField>(Names.WS9_SYSTEM_CODE_AE); } }
        public IField WS9_SYSTEM_CODE_CS { get { return GetElementByName<IField>(Names.WS9_SYSTEM_CODE_CS); } }
        public IField WS9_SYSTEM_CODE_KA { get { return GetElementByName<IField>(Names.WS9_SYSTEM_CODE_KA); } }
        public IField WS9_SYSTEM_CODE_KS { get { return GetElementByName<IField>(Names.WS9_SYSTEM_CODE_KS); } }
        public IField WS9_SYSTEM_CODE_FA { get { return GetElementByName<IField>(Names.WS9_SYSTEM_CODE_FA); } }
        public IGroup SW9_SWITCHES { get { return GetElementByName<IGroup>(Names.SW9_SWITCHES); } }
        public IField SW9_EOF_SW { get { return GetElementByName<IField>(Names.SW9_EOF_SW); } }
        public ICheckField SW9_EOF_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.SW9_EOF_NOT_FOUND); } }
        public ICheckField SW9_EOF_NO { get { return GetElementByName<ICheckField>(Names.SW9_EOF_NO); } }
        public ICheckField SW9_EOF_YES { get { return GetElementByName<ICheckField>(Names.SW9_EOF_YES); } }
        public IField SW9_ERR_SW { get { return GetElementByName<IField>(Names.SW9_ERR_SW); } }
        public ICheckField SW9_ERR_NO { get { return GetElementByName<ICheckField>(Names.SW9_ERR_NO); } }
        public ICheckField SW9_ERR_YES { get { return GetElementByName<ICheckField>(Names.SW9_ERR_YES); } }
        public IField SW9_SELECT_CLIENT_SW { get { return GetElementByName<IField>(Names.SW9_SELECT_CLIENT_SW); } }
        public ICheckField SW9_SELECT_CLIENT_NO { get { return GetElementByName<ICheckField>(Names.SW9_SELECT_CLIENT_NO); } }
        public ICheckField SW9_SELECT_CLIENT_YES { get { return GetElementByName<ICheckField>(Names.SW9_SELECT_CLIENT_YES); } }
        public IGroup WS9_CLIENT_POINTER { get { return GetElementByName<IGroup>(Names.WS9_CLIENT_POINTER); } }
        public IField WS9_CLIENT_ID { get { return GetElementByName<IField>(Names.WS9_CLIENT_ID); } }
        public IField WS9_VERIFIED_SSN_FLAG { get { return GetElementByName<IField>(Names.WS9_VERIFIED_SSN_FLAG); } }
        public IGroup WS9_SYSTEM_PARTICIPATION { get { return GetElementByName<IGroup>(Names.WS9_SYSTEM_PARTICIPATION); } }
        public IField WS9_SYS_PART_AE { get { return GetElementByName<IField>(Names.WS9_SYS_PART_AE); } }
        public IField WS9_SYS_PART_CSE { get { return GetElementByName<IField>(Names.WS9_SYS_PART_CSE); } }
        public IField WS9_SYS_PART_KANPAY { get { return GetElementByName<IField>(Names.WS9_SYS_PART_KANPAY); } }
        public IField WS9_SYS_PART_KSCARES { get { return GetElementByName<IField>(Names.WS9_SYS_PART_KSCARES); } }
        public IField WS9_SYS_PART_FACTS { get { return GetElementByName<IField>(Names.WS9_SYS_PART_FACTS); } }
        public IGroup WS9_ABEND_FIELDS { get { return GetElementByName<IGroup>(Names.WS9_ABEND_FIELDS); } }
        public IField WS9_ABEND_TYPE { get { return GetElementByName<IField>(Names.WS9_ABEND_TYPE); } }
        public ICheckField WS9_ABEND_TYPE_NONE { get { return GetElementByName<ICheckField>(Names.WS9_ABEND_TYPE_NONE); } }
        public ICheckField WS9_ABEND_TYPE_ADABAS { get { return GetElementByName<ICheckField>(Names.WS9_ABEND_TYPE_ADABAS); } }
        public ICheckField WS9_ABEND_TYPE_CICS { get { return GetElementByName<ICheckField>(Names.WS9_ABEND_TYPE_CICS); } }
        public IGroup WS9_ABEND_ADABAS { get { return GetElementByName<IGroup>(Names.WS9_ABEND_ADABAS); } }
        public IField WS9_ADA_FILE_NUMBER { get { return GetElementByName<IField>(Names.WS9_ADA_FILE_NUMBER); } }
        public IField WS9_ADA_FILE_ACTION { get { return GetElementByName<IField>(Names.WS9_ADA_FILE_ACTION); } }
        public IField WS9_ADA_RESPONSE_CD { get { return GetElementByName<IField>(Names.WS9_ADA_RESPONSE_CD); } }
        public IGroup WS9_ABEND_CICS { get { return GetElementByName<IGroup>(Names.WS9_ABEND_CICS); } }
        public IField WS9_CICS_RESOURCE_NM { get { return GetElementByName<IField>(Names.WS9_CICS_RESOURCE_NM); } }
        public IField WS9_CICS_FUNCTION_CD { get { return GetElementByName<IField>(Names.WS9_CICS_FUNCTION_CD); } }
        public IField WS9_CICS_RESPONSE_CD { get { return GetElementByName<IField>(Names.WS9_CICS_RESPONSE_CD); } }
        public IGroup WS9_MISC { get { return GetElementByName<IGroup>(Names.WS9_MISC); } }
        public IGroup WS9_MSG_X { get { return GetElementByName<IGroup>(Names.WS9_MSG_X); } }
        public IField WS9_MSG_PROG { get { return GetElementByName<IField>(Names.WS9_MSG_PROG); } }
        public IGroup WS9_MSG_1 { get { return GetElementByName<IGroup>(Names.WS9_MSG_1); } }
        public IField WS9_MSG { get { return GetElementByName<IField>(Names.WS9_MSG); } }
        public IGroup WS9_MSG_CODE { get { return GetElementByName<IGroup>(Names.WS9_MSG_CODE); } }
        public IField WS9_MSG_SQLCODE { get { return GetElementByName<IField>(Names.WS9_MSG_SQLCODE); } }
        public IGroup WS9_MSG_2 { get { return GetElementByName<IGroup>(Names.WS9_MSG_2); } }
        public IField WS9_MSG_FIELD { get { return GetElementByName<IField>(Names.WS9_MSG_FIELD); } }
        public IField WS9_MSG_VALUE { get { return GetElementByName<IField>(Names.WS9_MSG_VALUE); } }
        public IField WS9_DATE_ADA { get { return GetElementByName<IField>(Names.WS9_DATE_ADA); } }
        public IField WS9_DATE_DB2 { get { return GetElementByName<IField>(Names.WS9_DATE_DB2); } }
        public IGroup DBK9_KEYS { get { return GetElementByName<IGroup>(Names.DBK9_KEYS); } }
        public IField DBK9_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.DBK9_CLIENT_NUMBER); } }
        public IField DBK9_CLIENT_NAME { get { return GetElementByName<IField>(Names.DBK9_CLIENT_NAME); } }
        public IField DBK9_SSN { get { return GetElementByName<IField>(Names.DBK9_SSN); } }
        public IGroup CLB9_DCLKSD_CLIENT_BASIC { get { return GetElementByName<IGroup>(Names.CLB9_DCLKSD_CLIENT_BASIC); } }
        public IField CLB9_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.CLB9_CLIENT_NUMBER); } }
        public IField CLB9_CLIENT_GIVEN_NAME { get { return GetElementByName<IField>(Names.CLB9_CLIENT_GIVEN_NAME); } }
        public IField CLB9_CLIENT_INITIALS { get { return GetElementByName<IField>(Names.CLB9_CLIENT_INITIALS); } }
        public IField CLB9_CLIENT_SURNAME { get { return GetElementByName<IField>(Names.CLB9_CLIENT_SURNAME); } }
        public IField CLB9_CIS_REPL_IND { get { return GetElementByName<IField>(Names.CLB9_CIS_REPL_IND); } }
        public IField CLB9_WORK_PHONE { get { return GetElementByName<IField>(Names.CLB9_WORK_PHONE); } }
        public IField CLB9_SSN { get { return GetElementByName<IField>(Names.CLB9_SSN); } }
        public IField CLB9_GENDER { get { return GetElementByName<IField>(Names.CLB9_GENDER); } }
        public IField CLB9_PARENT_RGHTS_SEV { get { return GetElementByName<IField>(Names.CLB9_PARENT_RGHTS_SEV); } }
        public IField CLB9_PRNT_RGHTS_SEV_DT { get { return GetElementByName<IField>(Names.CLB9_PRNT_RGHTS_SEV_DT); } }
        public IField CLB9_LEGAL_STATUS { get { return GetElementByName<IField>(Names.CLB9_LEGAL_STATUS); } }
        public IField CLB9_INSURANCE_CODE { get { return GetElementByName<IField>(Names.CLB9_INSURANCE_CODE); } }
        public IField CLB9_INITIAL_CUSTODY_DT { get { return GetElementByName<IField>(Names.CLB9_INITIAL_CUSTODY_DT); } }
        public IField CLB9_HOME_PHONE { get { return GetElementByName<IField>(Names.CLB9_HOME_PHONE); } }
        public IField CLB9_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.CLB9_DATE_OF_BIRTH); } }
        public IField CLB9_CURR_PLACEMNT_DT { get { return GetElementByName<IField>(Names.CLB9_CURR_PLACEMNT_DT); } }
        public IField CLB9_CURRENT_PLACEMENT { get { return GetElementByName<IField>(Names.CLB9_CURRENT_PLACEMENT); } }
        public IField CLB9_CSEA_G_CAUSE_CODE { get { return GetElementByName<IField>(Names.CLB9_CSEA_G_CAUSE_CODE); } }
        public IField CLB9_CSEA_G_CAUSE_CL_DT { get { return GetElementByName<IField>(Names.CLB9_CSEA_G_CAUSE_CL_DT); } }
        public IField CLB9_CSEA_COOP_CODE { get { return GetElementByName<IField>(Names.CLB9_CSEA_COOP_CODE); } }
        public IField CLB9_COUNTY_CRT_COMMIT { get { return GetElementByName<IField>(Names.CLB9_COUNTY_CRT_COMMIT); } }
        public IField CLB9_MONTHS_ASST_AF { get { return GetElementByName<IField>(Names.CLB9_MONTHS_ASST_AF); } }
        public IField CLB9_MONTHS_ASST_GA { get { return GetElementByName<IField>(Names.CLB9_MONTHS_ASST_GA); } }
        public IField CLB9_MO_DEATH_DT { get { return GetElementByName<IField>(Names.CLB9_MO_DEATH_DT); } }
        public IField CLB9_MO_PRT_DT { get { return GetElementByName<IField>(Names.CLB9_MO_PRT_DT); } }
        public IField CLB9_FA_DEATH_DT { get { return GetElementByName<IField>(Names.CLB9_FA_DEATH_DT); } }
        public IField CLB9_FA_PRT_DT { get { return GetElementByName<IField>(Names.CLB9_FA_PRT_DT); } }
        public IField CLB9_MPI_ID { get { return GetElementByName<IField>(Names.CLB9_MPI_ID); } }
        public IField CLB9_MED_COVERAGE_IND { get { return GetElementByName<IField>(Names.CLB9_MED_COVERAGE_IND); } }
        public IField CLB9_INSURANCE_CARRIER { get { return GetElementByName<IField>(Names.CLB9_INSURANCE_CARRIER); } }
        public IField CLB9_INSURANCE_POLCY_NO { get { return GetElementByName<IField>(Names.CLB9_INSURANCE_POLCY_NO); } }
        public IField CLB9_SPOKEN_LANGUAGE { get { return GetElementByName<IField>(Names.CLB9_SPOKEN_LANGUAGE); } }
        public IField CLB9_WRITTEN_LANGUAGE { get { return GetElementByName<IField>(Names.CLB9_WRITTEN_LANGUAGE); } }
        public IField CLB9_STATE_OF_BIRTH { get { return GetElementByName<IField>(Names.CLB9_STATE_OF_BIRTH); } }
        public IField CLB9_SCHOOL_DISTRICT { get { return GetElementByName<IField>(Names.CLB9_SCHOOL_DISTRICT); } }
        public IField CLB9_ETHNIC_CLASS { get { return GetElementByName<IField>(Names.CLB9_ETHNIC_CLASS); } }
        public IField CLB9_SUFFIX_NAME { get { return GetElementByName<IField>(Names.CLB9_SUFFIX_NAME); } }
        public IField CLB9_EMPLOYER_NAME { get { return GetElementByName<IField>(Names.CLB9_EMPLOYER_NAME); } }
        public IField CLB9_EARNED_INCOME_AMT { get { return GetElementByName<IField>(Names.CLB9_EARNED_INCOME_AMT); } }
        public IField CLB9_INCOME_FREQUENCY { get { return GetElementByName<IField>(Names.CLB9_INCOME_FREQUENCY); } }
        public IField CLB9_KEES_ABMS_ID { get { return GetElementByName<IField>(Names.CLB9_KEES_ABMS_ID); } }
        public IGroup CLB9_EMAIL_ADDRESS { get { return GetElementByName<IGroup>(Names.CLB9_EMAIL_ADDRESS); } }
        public IField CLB9_EMAIL_ADDRESS_LEN { get { return GetElementByName<IField>(Names.CLB9_EMAIL_ADDRESS_LEN); } }
        public IField CLB9_EMAIL_ADDRESS_TEXT { get { return GetElementByName<IField>(Names.CLB9_EMAIL_ADDRESS_TEXT); } }
        public IGroup CLB9_OCCUPATION { get { return GetElementByName<IGroup>(Names.CLB9_OCCUPATION); } }
        public IField CLB9_OCCUPATION_LEN { get { return GetElementByName<IField>(Names.CLB9_OCCUPATION_LEN); } }
        public IField CLB9_OCCUPATION_TEXT { get { return GetElementByName<IField>(Names.CLB9_OCCUPATION_TEXT); } }
        public IField CLB9_CREATED_BY { get { return GetElementByName<IField>(Names.CLB9_CREATED_BY); } }
        public IField CLB9_CREATED_TIMESTAMP { get { return GetElementByName<IField>(Names.CLB9_CREATED_TIMESTAMP); } }
        public IField CLB9_LAST_MODIFIED_BY { get { return GetElementByName<IField>(Names.CLB9_LAST_MODIFIED_BY); } }
        public IField CLB9_LAST_MODIFIED_TMST { get { return GetElementByName<IField>(Names.CLB9_LAST_MODIFIED_TMST); } }
        public IGroup CL9_DCLKSD_CLIENT { get { return GetElementByName<IGroup>(Names.CL9_DCLKSD_CLIENT); } }
        public IField CL9_SSN { get { return GetElementByName<IField>(Names.CL9_SSN); } }
        public IField CL9_PREVIOUS_SSN { get { return GetElementByName<IField>(Names.CL9_PREVIOUS_SSN); } }
        public IField CL9_PHONETIC_DATA { get { return GetElementByName<IField>(Names.CL9_PHONETIC_DATA); } }
        public IField CL9_DT_OF_LAST_UPDATE { get { return GetElementByName<IField>(Names.CL9_DT_OF_LAST_UPDATE); } }
        public IField CL9_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.CL9_DATE_OF_BIRTH); } }
        public IField CL9_GENDER { get { return GetElementByName<IField>(Names.CL9_GENDER); } }
        public IField CL9_VERIFIED_SSN_FLAG { get { return GetElementByName<IField>(Names.CL9_VERIFIED_SSN_FLAG); } }
        public IField CL9_CLIENT_NAME { get { return GetElementByName<IField>(Names.CL9_CLIENT_NAME); } }
        public IField CL9_CREATED_BY { get { return GetElementByName<IField>(Names.CL9_CREATED_BY); } }
        public IField CL9_CREATED_TIMESTAMP { get { return GetElementByName<IField>(Names.CL9_CREATED_TIMESTAMP); } }
        public IField CL9_LAST_MODIFIED_BY { get { return GetElementByName<IField>(Names.CL9_LAST_MODIFIED_BY); } }
        public IField CL9_LAST_MODIFIED_TMST { get { return GetElementByName<IField>(Names.CL9_LAST_MODIFIED_TMST); } }
        public IField CL9_FK_CLB_CLIENT_NO { get { return GetElementByName<IField>(Names.CL9_FK_CLB_CLIENT_NO); } }
        public IGroup SP9_DCLKSD_SYSTEM_PART { get { return GetElementByName<IGroup>(Names.SP9_DCLKSD_SYSTEM_PART); } }
        public IField SP9_SYSTEM_CODE { get { return GetElementByName<IField>(Names.SP9_SYSTEM_CODE); } }
        public IField SP9_PARTICIPATION_FLAG { get { return GetElementByName<IField>(Names.SP9_PARTICIPATION_FLAG); } }
        public IField SP9_CREATED_TIMESTAMP { get { return GetElementByName<IField>(Names.SP9_CREATED_TIMESTAMP); } }
        public IField SP9_CREATED_BY { get { return GetElementByName<IField>(Names.SP9_CREATED_BY); } }
        public IField SP9_LAST_MODIFIED_BY { get { return GetElementByName<IField>(Names.SP9_LAST_MODIFIED_BY); } }
        public IField SP9_LAST_MODIFIED_TMST { get { return GetElementByName<IField>(Names.SP9_LAST_MODIFIED_TMST); } }
        public IField SP9_FK_CLB_CLIENT_NO { get { return GetElementByName<IField>(Names.SP9_FK_CLB_CLIENT_NO); } }
        public IField SP9_FK_CLI_CLIENT_NAME { get { return GetElementByName<IField>(Names.SP9_FK_CLI_CLIENT_NAME); } }
        public IField SP9_FK_CLI_SSN { get { return GetElementByName<IField>(Names.SP9_FK_CLI_SSN); } }

        public CPY_SQLCA SQLCA = new CPY_SQLCA(null, true);
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.FUNC_0329210948_ESC_FLAG, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.EXTERNAL_ACTION_BLOCK_WS, (EXTERNAL_ACTION_BLOCK_WS) =>
           {
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_ABEND_FIELDS, (MV_ABEND_FIELDS) =>
               {
                   MV_ABEND_FIELDS.CreateNewField(Names.MV_ABEND_TYPE, FieldType.String, 1)
                       .NewCheckField(Names.MV_ABEND_TYPE_NONE, SPACE)
                       .NewCheckField(Names.MV_ABEND_TYPE_ADABAS, "A")
                       .NewCheckField(Names.MV_ABEND_TYPE_CICS, "C")
                       ;
                   MV_ABEND_FIELDS.CreateNewGroup(Names.MV_ABEND_ADABAS, (MV_ABEND_ADABAS) =>
                   {
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_FILE_NUMBER, FieldType.UnsignedNumeric, 4);
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_FILE_ACTION, FieldType.String, 3);
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_RESPONSE_CD, FieldType.UnsignedNumeric, 4);
                   });
                   MV_ABEND_FIELDS.CreateNewGroup(Names.MV_ABEND_CICS, (MV_ABEND_CICS) =>
                   {
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_RESOURCE_NM, FieldType.String, 8);
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_FUNCTION_CD, FieldType.String, 2);
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_RESPONSE_CD, FieldType.String, 6);
                   });
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_ABS_TIME, FieldType.PackedDecimal, 15);
               IGroup MV_CCYYMMDD_X8_local = (IGroup)EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CCYYMMDD_X8, (MV_CCYYMMDD_X8) =>
               {
                   MV_CCYYMMDD_X8.CreateNewField(Names.MV_CC, FieldType.UnsignedNumeric, 2);
                   IGroup MV_YYMMDD_X6_local = (IGroup)MV_CCYYMMDD_X8.CreateNewGroup(Names.MV_YYMMDD_X6, (MV_YYMMDD_X6) =>
                   {
                       MV_YYMMDD_X6.CreateNewField(Names.MV_YY, FieldType.UnsignedNumeric, 2);
                       MV_YYMMDD_X6.CreateNewField(Names.MV_MM, FieldType.UnsignedNumeric, 2);
                       MV_YYMMDD_X6.CreateNewField(Names.MV_DD, FieldType.UnsignedNumeric, 2);
                       MV_YYMMDD_X6.CreateNewFillerField(2, FillWith.Hashes);
                   });
                   MV_CCYYMMDD_X8.CreateNewGroupRedefine("FILLER_d2", MV_YYMMDD_X6_local, (FILLER_d2) =>
                   {
                       FILLER_d2.CreateNewField(Names.MV_YYMMDD, FieldType.UnsignedNumeric, 6);
                       FILLER_d2.CreateNewFillerField(2, FillWith.Hashes);
                   });
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroupRedefine("FILLER_d4", MV_CCYYMMDD_X8_local, (FILLER_d4) =>
               {
                   FILLER_d4.CreateNewField(Names.MV_CURRENT_CCYY, FieldType.UnsignedNumeric, 4);
                   FILLER_d4.CreateNewField(Names.MV_CURRENT_MMDD, FieldType.UnsignedNumeric, 4);
                   FILLER_d4.CreateNewFillerField(2, FillWith.Hashes);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroupRedefine("FILLER_d6", MV_CCYYMMDD_X8_local, (FILLER_d6) =>
               {
                   FILLER_d6.CreateNewField(Names.MV_CCYYMMDD, FieldType.UnsignedNumeric, 8);
                   FILLER_d6.CreateNewFillerField(2, FillWith.Hashes);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_COMPLIMENT_DATE, FieldType.UnsignedPackedDecimal, 9);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_KCC_PTR, FieldType.CompShort, 4);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_CLIENT_INFO_NUMBER, FieldType.String, 10);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CLIENT_NUMBER_X10, (MV_CLIENT_NUMBER_X10) =>
               {
                   MV_CLIENT_NUMBER_X10.CreateNewField(Names.MV_CLIENT_NUMBER, FieldType.UnsignedNumeric, 10);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_DATE_OF_BIRTH_SEX, (MV_DATE_OF_BIRTH_SEX) =>
               {
                   MV_DATE_OF_BIRTH_SEX.CreateNewField(Names.MV_DATE_OF_BIRTH, FieldType.String, 8);
                   MV_DATE_OF_BIRTH_SEX.CreateNewField(Names.MV_SEX, FieldType.String, 1);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_SSN_X9, (MV_SSN_X9) =>
               {
                   MV_SSN_X9.CreateNewField(Names.MV_SSN, FieldType.UnsignedNumeric, 9);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CLIENT_NAME, (MV_CLIENT_NAME) =>
               {
                   MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_SURNAME, FieldType.String, 17);
                   MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_GIVEN_NAME, FieldType.String, 12);
                   MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_INITIAL, FieldType.String, 1);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CLIENT_POINTER, (MV_CLIENT_POINTER) =>
               {
                   MV_CLIENT_POINTER.CreateNewField(Names.MV_CLIENT_ID, FieldType.String, 10);
                   MV_CLIENT_POINTER.CreateNewField(Names.MV_VERIFIED_SSN_FLAG, FieldType.String, 1);
                   MV_CLIENT_POINTER.CreateNewGroup(Names.MV_SYSTEM_PARTICIPATION, (MV_SYSTEM_PARTICIPATION) =>
                   {
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_AE, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_CSE, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_KANPAY, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_KSCARES, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_FACTS, FieldType.String, 1);
                       MV_SYSTEM_PARTICIPATION.CreateNewFillerField(15, FillWith.Hashes);
                   });
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_REPL_IND, FieldType.String, 1);
           });

            recordDef.CreateNewGroup(Names.DBK1_KEY_FIELDS, (DBK1_KEY_FIELDS) =>
           {
               DBK1_KEY_FIELDS.CreateNewField(Names.DBK1_CLIENT_NUMBER, FieldType.String, 10);
               DBK1_KEY_FIELDS.CreateNewField(Names.DBK1_CLIENT_NAME, FieldType.String, 30);
               DBK1_KEY_FIELDS.CreateNewField(Names.DBK1_FK_CLI_SSN, FieldType.CompInt, 9);
               DBK1_KEY_FIELDS.CreateNewField(Names.DBK1_COUNT, FieldType.CompInt, 9);
               IGroup DBK1_CCYYMMDD_X_local = (IGroup)DBK1_KEY_FIELDS.CreateNewGroup(Names.DBK1_CCYYMMDD_X, (DBK1_CCYYMMDD_X) =>
               {
                   DBK1_CCYYMMDD_X.CreateNewField(Names.DBK1_CCYY, FieldType.UnsignedNumeric, 4);
                   DBK1_CCYYMMDD_X.CreateNewFillerField(FieldType.String, 1, "-");
                   DBK1_CCYYMMDD_X.CreateNewField(Names.DBK1_MM, FieldType.UnsignedNumeric, 2);
                   DBK1_CCYYMMDD_X.CreateNewFillerField(FieldType.String, 1, "-");
                   DBK1_CCYYMMDD_X.CreateNewField(Names.DBK1_DD, FieldType.UnsignedNumeric, 2);
               });
               DBK1_KEY_FIELDS.CreateNewFieldRedefine(Names.DBK1_CCYYMMDD, FieldType.String, DBK1_CCYYMMDD_X_local, 10);
           });

            recordDef.CreateNewGroup(Names.DCLKSD_CLIENT_BASIC, (DCLKSD_CLIENT_BASIC) =>
           {
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_NUMBER, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_GIVEN_NAME, FieldType.String, 12);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_INITIALS, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CLIENT_SURNAME, FieldType.String, 17);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CIS_REPL_IND, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_WORK_PHONE, FieldType.PackedDecimal, 10, null, 0);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_SSN, FieldType.CompInt, 9);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_GENDER, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_PARENT_RGHTS_SEV, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_PRNT_RGHTS_SEV_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_LEGAL_STATUS, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_INSURANCE_CODE, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_INITIAL_CUSTODY_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_HOME_PHONE, FieldType.PackedDecimal, 10, null, 0);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_DATE_OF_BIRTH, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CURR_PLACEMNT_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CURRENT_PLACEMENT, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CSEA_G_CAUSE_CODE, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CSEA_G_CAUSE_CL_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CSEA_COOP_CODE, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_COUNTY_CRT_COMMIT, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MONTHS_ASST_AF, FieldType.CompInt, 9);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MONTHS_ASST_GA, FieldType.CompInt, 9);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MO_DEATH_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MO_PRT_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_FA_DEATH_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_FA_PRT_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MPI_ID, FieldType.String, 38);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_MED_COVERAGE_IND, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_INSURANCE_CARRIER, FieldType.String, 30);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_INSURANCE_POLCY_NO, FieldType.String, 30);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_SPOKEN_LANGUAGE, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_WRITTEN_LANGUAGE, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_STATE_OF_BIRTH, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_SCHOOL_DISTRICT, FieldType.String, 3);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_ETHNIC_CLASS, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_SUFFIX_NAME, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_EMPLOYER_NAME, FieldType.String, 28);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_EARNED_INCOME_AMT, FieldType.PackedDecimal, 8, null, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_INCOME_FREQUENCY, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_KEES_ABMS_ID, FieldType.String, 38);
               DCLKSD_CLIENT_BASIC.CreateNewGroup(Names.CLB_EMAIL_ADDRESS, (CLB_EMAIL_ADDRESS) =>
               {
                   CLB_EMAIL_ADDRESS.CreateNewField(Names.CLB_EMAIL_ADDRESS_LEN, FieldType.CompShort, 4);
                   CLB_EMAIL_ADDRESS.CreateNewField(Names.CLB_EMAIL_ADDRESS_TEXT, FieldType.String, 100);
               });
               DCLKSD_CLIENT_BASIC.CreateNewGroup(Names.CLB_OCCUPATION, (CLB_OCCUPATION) =>
               {
                   CLB_OCCUPATION.CreateNewField(Names.CLB_OCCUPATION_LEN, FieldType.CompShort, 4);
                   CLB_OCCUPATION.CreateNewField(Names.CLB_OCCUPATION_TEXT, FieldType.String, 100);
               });
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CREATED_BY, FieldType.String, 8);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_CREATED_TIMESTAMP, FieldType.String, 26);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_LAST_MODIFIED_BY, FieldType.String, 8);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB_LAST_MODIFIED_TMST, FieldType.String, 26);
           });

            recordDef.CreateNewGroup(Names.DCLKSD_PARTICIPATION, (DCLKSD_PARTICIPATION) =>
           {
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_KESSEP_TIME_STMP, FieldType.String, 20);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_PART_END_DATE, FieldType.String, 10);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_PART_START_DATE, FieldType.String, 10);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_PART_CODE, FieldType.String, 2);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_PROGRAM_END_DATE, FieldType.String, 10);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_PROGRAM_SUBTYPE, FieldType.String, 2);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_RELATIONSHIP, FieldType.String, 2);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_CREATED_BY, FieldType.String, 8);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_CREATED_TIMESTAMP, FieldType.String, 26);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_LAST_MODIFIED_BY, FieldType.String, 8);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_LAST_MODIFIED_TMST, FieldType.String, 26);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_FK_CSB_CASE_NO, FieldType.String, 8);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_FK_PGB_PROG_TYPE, FieldType.String, 2);
               DCLKSD_PARTICIPATION.CreateNewField(Names.PAR1_FK_CLB_CLIENT_NO, FieldType.String, 10);
           });

            recordDef.CreateNewGroup(Names.WS9_SYSTEM_CODES, (WS9_SYSTEM_CODES) =>
           {
               WS9_SYSTEM_CODES.CreateNewField(Names.WS9_SYSTEM_CODE_AE, FieldType.String, 2, "AE");
               WS9_SYSTEM_CODES.CreateNewField(Names.WS9_SYSTEM_CODE_CS, FieldType.String, 2, "CS");
               WS9_SYSTEM_CODES.CreateNewField(Names.WS9_SYSTEM_CODE_KA, FieldType.String, 2, "KA");
               WS9_SYSTEM_CODES.CreateNewField(Names.WS9_SYSTEM_CODE_KS, FieldType.String, 2, "KS");
               WS9_SYSTEM_CODES.CreateNewField(Names.WS9_SYSTEM_CODE_FA, FieldType.String, 2, "FA");
           });

            recordDef.CreateNewGroup(Names.SW9_SWITCHES, (SW9_SWITCHES) =>
           {
               SW9_SWITCHES.CreateNewField(Names.SW9_EOF_SW, FieldType.String, 1, "N")
                   .NewCheckField(Names.SW9_EOF_NOT_FOUND, SPACE)
                   .NewCheckField(Names.SW9_EOF_NO, "N")
                   .NewCheckField(Names.SW9_EOF_YES, "Y")
                   ;
               SW9_SWITCHES.CreateNewField(Names.SW9_ERR_SW, FieldType.String, 1, "N")
                   .NewCheckField(Names.SW9_ERR_NO, "N")
                   .NewCheckField(Names.SW9_ERR_YES, "Y")
                   ;
               SW9_SWITCHES.CreateNewField(Names.SW9_SELECT_CLIENT_SW, FieldType.String, 1, "Y")
                   .NewCheckField(Names.SW9_SELECT_CLIENT_NO, "N")
                   .NewCheckField(Names.SW9_SELECT_CLIENT_YES, "Y")
                   ;
           });

            recordDef.CreateNewGroup(Names.WS9_CLIENT_POINTER, (WS9_CLIENT_POINTER) =>
           {
               WS9_CLIENT_POINTER.CreateNewField(Names.WS9_CLIENT_ID, FieldType.String, 10);
               WS9_CLIENT_POINTER.CreateNewField(Names.WS9_VERIFIED_SSN_FLAG, FieldType.String, 1);
               WS9_CLIENT_POINTER.CreateNewGroup(Names.WS9_SYSTEM_PARTICIPATION, (WS9_SYSTEM_PARTICIPATION) =>
               {
                   WS9_SYSTEM_PARTICIPATION.CreateNewField(Names.WS9_SYS_PART_AE, FieldType.String, 1);
                   WS9_SYSTEM_PARTICIPATION.CreateNewField(Names.WS9_SYS_PART_CSE, FieldType.String, 1);
                   WS9_SYSTEM_PARTICIPATION.CreateNewField(Names.WS9_SYS_PART_KANPAY, FieldType.String, 1);
                   WS9_SYSTEM_PARTICIPATION.CreateNewField(Names.WS9_SYS_PART_KSCARES, FieldType.String, 1);
                   WS9_SYSTEM_PARTICIPATION.CreateNewField(Names.WS9_SYS_PART_FACTS, FieldType.String, 1);
                   WS9_SYSTEM_PARTICIPATION.CreateNewFillerField(15, FillWith.Hashes);
               });
           });

            recordDef.CreateNewGroup(Names.WS9_ABEND_FIELDS, (WS9_ABEND_FIELDS) =>
           {
               WS9_ABEND_FIELDS.CreateNewField(Names.WS9_ABEND_TYPE, FieldType.String, 1)
                   .NewCheckField(Names.WS9_ABEND_TYPE_NONE, SPACE)
                   .NewCheckField(Names.WS9_ABEND_TYPE_ADABAS, "A")
                   .NewCheckField(Names.WS9_ABEND_TYPE_CICS, "C")
                   ;
               WS9_ABEND_FIELDS.CreateNewGroup(Names.WS9_ABEND_ADABAS, (WS9_ABEND_ADABAS) =>
               {
                   WS9_ABEND_ADABAS.CreateNewField(Names.WS9_ADA_FILE_NUMBER, FieldType.UnsignedNumeric, 4);
                   WS9_ABEND_ADABAS.CreateNewField(Names.WS9_ADA_FILE_ACTION, FieldType.String, 3);
                   WS9_ABEND_ADABAS.CreateNewField(Names.WS9_ADA_RESPONSE_CD, FieldType.UnsignedNumeric, 4);
               });
               WS9_ABEND_FIELDS.CreateNewGroup(Names.WS9_ABEND_CICS, (WS9_ABEND_CICS) =>
               {
                   WS9_ABEND_CICS.CreateNewField(Names.WS9_CICS_RESOURCE_NM, FieldType.String, 8);
                   WS9_ABEND_CICS.CreateNewField(Names.WS9_CICS_FUNCTION_CD, FieldType.String, 2);
                   WS9_ABEND_CICS.CreateNewField(Names.WS9_CICS_RESPONSE_CD, FieldType.String, 6);
               });
           });

            recordDef.CreateNewGroup(Names.WS9_MISC, (WS9_MISC) =>
           {
               WS9_MISC.CreateNewGroup(Names.WS9_MSG_X, (WS9_MSG_X) =>
               {
                   WS9_MSG_X.CreateNewField(Names.WS9_MSG_PROG, FieldType.String, 10);
                   IGroup WS9_MSG_1_local = (IGroup)WS9_MSG_X.CreateNewGroup(Names.WS9_MSG_1, (WS9_MSG_1) =>
                   {
                       WS9_MSG_1.CreateNewField(Names.WS9_MSG, FieldType.String, 50);
                       WS9_MSG_1.CreateNewGroup(Names.WS9_MSG_CODE, (WS9_MSG_CODE) =>
                       {
                           WS9_MSG_CODE.CreateNewField(Names.WS9_MSG_SQLCODE, FieldType.NumericEdited, "---------9", 10);
                       });
                   });
                   WS9_MSG_X.CreateNewGroupRedefine(Names.WS9_MSG_2, WS9_MSG_1_local, (WS9_MSG_2) =>
                   {
                       WS9_MSG_2.CreateNewField(Names.WS9_MSG_FIELD, FieldType.String, 25);
                       WS9_MSG_2.CreateNewField(Names.WS9_MSG_VALUE, FieldType.String, 35);
                   });
               });
               WS9_MISC.CreateNewField(Names.WS9_DATE_ADA, FieldType.String, 8);
               WS9_MISC.CreateNewField(Names.WS9_DATE_DB2, FieldType.String, 10);
           });

            recordDef.CreateNewGroup(Names.DBK9_KEYS, (DBK9_KEYS) =>
           {
               DBK9_KEYS.CreateNewField(Names.DBK9_CLIENT_NUMBER, FieldType.String, 10);
               DBK9_KEYS.CreateNewField(Names.DBK9_CLIENT_NAME, FieldType.String, 30);
               DBK9_KEYS.CreateNewField(Names.DBK9_SSN, FieldType.CompInt, 9);
           });

            recordDef.CreateNewGroup(Names.CLB9_DCLKSD_CLIENT_BASIC, (CLB9_DCLKSD_CLIENT_BASIC) =>
           {
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CLIENT_NUMBER, FieldType.String, 10);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CLIENT_GIVEN_NAME, FieldType.String, 12);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CLIENT_INITIALS, FieldType.String, 1);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CLIENT_SURNAME, FieldType.String, 17);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CIS_REPL_IND, FieldType.String, 1);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_WORK_PHONE, FieldType.PackedDecimal, 10, null, 0);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_SSN, FieldType.CompInt, 9);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_GENDER, FieldType.String, 1);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_PARENT_RGHTS_SEV, FieldType.String, 1);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_PRNT_RGHTS_SEV_DT, FieldType.String, 10);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_LEGAL_STATUS, FieldType.String, 2);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_INSURANCE_CODE, FieldType.String, 2);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_INITIAL_CUSTODY_DT, FieldType.String, 10);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_HOME_PHONE, FieldType.PackedDecimal, 10, null, 0);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_DATE_OF_BIRTH, FieldType.String, 10);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CURR_PLACEMNT_DT, FieldType.String, 10);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CURRENT_PLACEMENT, FieldType.String, 2);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CSEA_G_CAUSE_CODE, FieldType.String, 1);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CSEA_G_CAUSE_CL_DT, FieldType.String, 10);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CSEA_COOP_CODE, FieldType.String, 2);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_COUNTY_CRT_COMMIT, FieldType.String, 2);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_MONTHS_ASST_AF, FieldType.CompInt, 9);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_MONTHS_ASST_GA, FieldType.CompInt, 9);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_MO_DEATH_DT, FieldType.String, 10);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_MO_PRT_DT, FieldType.String, 10);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_FA_DEATH_DT, FieldType.String, 10);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_FA_PRT_DT, FieldType.String, 10);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_MPI_ID, FieldType.String, 38);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_MED_COVERAGE_IND, FieldType.String, 1);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_INSURANCE_CARRIER, FieldType.String, 30);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_INSURANCE_POLCY_NO, FieldType.String, 30);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_SPOKEN_LANGUAGE, FieldType.String, 2);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_WRITTEN_LANGUAGE, FieldType.String, 2);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_STATE_OF_BIRTH, FieldType.String, 2);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_SCHOOL_DISTRICT, FieldType.String, 3);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_ETHNIC_CLASS, FieldType.String, 2);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_SUFFIX_NAME, FieldType.String, 10);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_EMPLOYER_NAME, FieldType.String, 28);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_EARNED_INCOME_AMT, FieldType.PackedDecimal, 8, null, 2);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_INCOME_FREQUENCY, FieldType.String, 2);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_KEES_ABMS_ID, FieldType.String, 38);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewGroup(Names.CLB9_EMAIL_ADDRESS, (CLB9_EMAIL_ADDRESS) =>
               {
                   CLB9_EMAIL_ADDRESS.CreateNewField(Names.CLB9_EMAIL_ADDRESS_LEN, FieldType.CompShort, 4);
                   CLB9_EMAIL_ADDRESS.CreateNewField(Names.CLB9_EMAIL_ADDRESS_TEXT, FieldType.String, 100);
               });
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewGroup(Names.CLB9_OCCUPATION, (CLB9_OCCUPATION) =>
               {
                   CLB9_OCCUPATION.CreateNewField(Names.CLB9_OCCUPATION_LEN, FieldType.CompShort, 4);
                   CLB9_OCCUPATION.CreateNewField(Names.CLB9_OCCUPATION_TEXT, FieldType.String, 100);
               });
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CREATED_BY, FieldType.String, 8);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_CREATED_TIMESTAMP, FieldType.String, 26);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_LAST_MODIFIED_BY, FieldType.String, 8);
               CLB9_DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLB9_LAST_MODIFIED_TMST, FieldType.String, 26);
           });

            recordDef.CreateNewGroup(Names.CL9_DCLKSD_CLIENT, (CL9_DCLKSD_CLIENT) =>
           {
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_SSN, FieldType.CompInt, 9);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_PREVIOUS_SSN, FieldType.CompInt, 9);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_PHONETIC_DATA, FieldType.String, 21);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_DT_OF_LAST_UPDATE, FieldType.String, 10);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_DATE_OF_BIRTH, FieldType.String, 10);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_GENDER, FieldType.String, 1);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_VERIFIED_SSN_FLAG, FieldType.String, 1);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_CLIENT_NAME, FieldType.String, 30);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_CREATED_BY, FieldType.String, 8);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_CREATED_TIMESTAMP, FieldType.String, 26);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_LAST_MODIFIED_BY, FieldType.String, 8);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_LAST_MODIFIED_TMST, FieldType.String, 26);
               CL9_DCLKSD_CLIENT.CreateNewField(Names.CL9_FK_CLB_CLIENT_NO, FieldType.String, 10);
           });

            recordDef.CreateNewGroup(Names.SP9_DCLKSD_SYSTEM_PART, (SP9_DCLKSD_SYSTEM_PART) =>
           {
               SP9_DCLKSD_SYSTEM_PART.CreateNewField(Names.SP9_SYSTEM_CODE, FieldType.String, 2);
               SP9_DCLKSD_SYSTEM_PART.CreateNewField(Names.SP9_PARTICIPATION_FLAG, FieldType.String, 1);
               SP9_DCLKSD_SYSTEM_PART.CreateNewField(Names.SP9_CREATED_TIMESTAMP, FieldType.String, 26);
               SP9_DCLKSD_SYSTEM_PART.CreateNewField(Names.SP9_CREATED_BY, FieldType.String, 8);
               SP9_DCLKSD_SYSTEM_PART.CreateNewField(Names.SP9_LAST_MODIFIED_BY, FieldType.String, 8);
               SP9_DCLKSD_SYSTEM_PART.CreateNewField(Names.SP9_LAST_MODIFIED_TMST, FieldType.String, 26);
               SP9_DCLKSD_SYSTEM_PART.CreateNewField(Names.SP9_FK_CLB_CLIENT_NO, FieldType.String, 10);
               SP9_DCLKSD_SYSTEM_PART.CreateNewField(Names.SP9_FK_CLI_CLIENT_NAME, FieldType.String, 30);
               SP9_DCLKSD_SYSTEM_PART.CreateNewField(Names.SP9_FK_CLI_SSN, FieldType.CompInt, 9);
           });


        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            SQLCA.InitializeWithLowValues();
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXGR10_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXGR10_ls_LinkageSection";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string PSMGR_EABPCB_PTR = "PSMGR_EABPCB_PTR";
            internal const string W_IA = "W_IA";
            internal const string A_0329210957_IA = "A_0329210957_IA";
            internal const string IMPORT_0001EV = "IMPORT_0001EV";
            internal const string CSE_PERSONS_WORK_SET_0001ET = "CSE_PERSONS_WORK_SET_0001ET";
            internal const string NUMBER_0001AS = "NUMBER_0001AS";
            internal const string NUMBER_0001 = "NUMBER_0001";
            internal const string NUMBER_0001XX = "NUMBER_0001XX";
            internal const string IMPORT_CURRENT_0002EV = "IMPORT_CURRENT_0002EV";
            internal const string DATE_WORK_AREA_0002ET = "DATE_WORK_AREA_0002ET";
            internal const string DATE_0002AS = "DATE_0002AS";
            internal const string DATE_0002 = "DATE_0002";
            internal const string DATE_0002XX = "DATE_0002XX";
            internal const string W_OA = "W_OA";
            internal const string A_0329210959_OA = "A_0329210959_OA";
            internal const string EXPORT_0003EV = "EXPORT_0003EV";
            internal const string CSE_PERSONS_WORK_SET_0003ET = "CSE_PERSONS_WORK_SET_0003ET";
            internal const string SEX_0003AS = "SEX_0003AS";
            internal const string SEX_0003 = "SEX_0003";
            internal const string SEX_0003XX = "SEX_0003XX";
            internal const string DOB_0003AS = "DOB_0003AS";
            internal const string DOB_0003 = "DOB_0003";
            internal const string DOB_0003XX = "DOB_0003XX";
            internal const string SSN_0003AS = "SSN_0003AS";
            internal const string SSN_0003 = "SSN_0003";
            internal const string SSN_0003XX = "SSN_0003XX";
            internal const string FIRST_NAME_0003AS = "FIRST_NAME_0003AS";
            internal const string FIRST_NAME_0003 = "FIRST_NAME_0003";
            internal const string FIRST_NAME_0003XX = "FIRST_NAME_0003XX";
            internal const string MIDDLE_INITIAL_0003AS = "MIDDLE_INITIAL_0003AS";
            internal const string MIDDLE_INITIAL_0003 = "MIDDLE_INITIAL_0003";
            internal const string MIDDLE_INITIAL_0003XX = "MIDDLE_INITIAL_0003XX";
            internal const string LAST_NAME_0003AS = "LAST_NAME_0003AS";
            internal const string LAST_NAME_0003 = "LAST_NAME_0003";
            internal const string LAST_NAME_0003XX = "LAST_NAME_0003XX";
            internal const string NUMBER_0003AS = "NUMBER_0003AS";
            internal const string NUMBER_0003 = "NUMBER_0003";
            internal const string NUMBER_0003XX = "NUMBER_0003XX";
            internal const string REPL_IND_0003AS = "REPL_IND_0003AS";
            internal const string REPL_IND_0003 = "REPL_IND_0003";
            internal const string EXPORT_0004EV = "EXPORT_0004EV";
            internal const string ABEND_DATA_0004ET = "ABEND_DATA_0004ET";
            internal const string TYPE_0004AS = "TYPE_0004AS";
            internal const string TYPE_0004 = "TYPE_0004";
            internal const string TYPE_0004XX = "TYPE_0004XX";
            internal const string ADABAS_FILE_NUMBER_0004AS = "ADABAS_FILE_NUMBER_0004AS";
            internal const string ADABAS_FILE_NUMBER_0004 = "ADABAS_FILE_NUMBER_0004";
            internal const string ADABAS_FILE_NUMBER_0004XX = "ADABAS_FILE_NUMBER_0004XX";
            internal const string ADABAS_FILE_ACTION_0004AS = "ADABAS_FILE_ACTION_0004AS";
            internal const string ADABAS_FILE_ACTION_0004 = "ADABAS_FILE_ACTION_0004";
            internal const string ADABAS_FILE_ACTION_0004XX = "ADABAS_FILE_ACTION_0004XX";
            internal const string ADABAS_RESPONSE_CD_0004AS = "ADABAS_RESPONSE_CD_0004AS";
            internal const string ADABAS_RESPONSE_CD_0004 = "ADABAS_RESPONSE_CD_0004";
            internal const string ADABAS_RESPONSE_CD_0004XX = "ADABAS_RESPONSE_CD_0004XX";
            internal const string CICS_RESOURCE_NM_0004AS = "CICS_RESOURCE_NM_0004AS";
            internal const string CICS_RESOURCE_NM_0004 = "CICS_RESOURCE_NM_0004";
            internal const string CICS_RESOURCE_NM_0004XX = "CICS_RESOURCE_NM_0004XX";
            internal const string CICS_FUNCTION_CD_0004AS = "CICS_FUNCTION_CD_0004AS";
            internal const string CICS_FUNCTION_CD_0004 = "CICS_FUNCTION_CD_0004";
            internal const string CICS_FUNCTION_CD_0004XX = "CICS_FUNCTION_CD_0004XX";
            internal const string CICS_RESPONSE_CD_0004AS = "CICS_RESPONSE_CD_0004AS";
            internal const string CICS_RESPONSE_CD_0004 = "CICS_RESPONSE_CD_0004";
            internal const string CICS_RESPONSE_CD_0004XX = "CICS_RESPONSE_CD_0004XX";
            internal const string EXPORT_AE_0005EV = "EXPORT_AE_0005EV";
            internal const string IEF_SUPPLIED_0005ET = "IEF_SUPPLIED_0005ET";
            internal const string FLAG_0005AS = "FLAG_0005AS";
            internal const string FLAG_0005 = "FLAG_0005";
            internal const string FLAG_0005XX = "FLAG_0005XX";
            internal const string EXPORT_CSE_0006EV = "EXPORT_CSE_0006EV";
            internal const string IEF_SUPPLIED_0006ET = "IEF_SUPPLIED_0006ET";
            internal const string FLAG_0006AS = "FLAG_0006AS";
            internal const string FLAG_0006 = "FLAG_0006";
            internal const string FLAG_0006XX = "FLAG_0006XX";
            internal const string EXPORT_KANPAY_0007EV = "EXPORT_KANPAY_0007EV";
            internal const string IEF_SUPPLIED_0007ET = "IEF_SUPPLIED_0007ET";
            internal const string FLAG_0007AS = "FLAG_0007AS";
            internal const string FLAG_0007 = "FLAG_0007";
            internal const string FLAG_0007XX = "FLAG_0007XX";
            internal const string EXPORT_KSCARES_0008EV = "EXPORT_KSCARES_0008EV";
            internal const string IEF_SUPPLIED_0008ET = "IEF_SUPPLIED_0008ET";
            internal const string FLAG_0008AS = "FLAG_0008AS";
            internal const string FLAG_0008 = "FLAG_0008";
            internal const string FLAG_0008XX = "FLAG_0008XX";
            internal const string TWA = "TWA";
            internal const string TWA_ADABAS_PARMS = "TWA_ADABAS_PARMS";
            internal const string TWA_CICS_PARMS = "TWA_CICS_PARMS";
            internal const string TWA_PROGRAM_ID = "TWA_PROGRAM_ID";
            internal const string TWA_ADDR_LIST = "TWA_ADDR_LIST";
        }
        #endregion

        #region Direct-access element properties
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_PTR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_PTR); } }
        public IGroup W_IA { get { return GetElementByName<IGroup>(Names.W_IA); } }
        public IGroup A_0329210957_IA { get { return GetElementByName<IGroup>(Names.A_0329210957_IA); } }
        public IGroup IMPORT_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_0001EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0001ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0001ET); } }
        public IField NUMBER_0001AS { get { return GetElementByName<IField>(Names.NUMBER_0001AS); } }
        public IField NUMBER_0001 { get { return GetElementByName<IField>(Names.NUMBER_0001); } }
        public IField NUMBER_0001XX { get { return GetElementByName<IField>(Names.NUMBER_0001XX); } }
        public IGroup IMPORT_CURRENT_0002EV { get { return GetElementByName<IGroup>(Names.IMPORT_CURRENT_0002EV); } }
        public IGroup DATE_WORK_AREA_0002ET { get { return GetElementByName<IGroup>(Names.DATE_WORK_AREA_0002ET); } }
        public IField DATE_0002AS { get { return GetElementByName<IField>(Names.DATE_0002AS); } }
        public IField DATE_0002 { get { return GetElementByName<IField>(Names.DATE_0002); } }
        public IField DATE_0002XX { get { return GetElementByName<IField>(Names.DATE_0002XX); } }
        public IGroup W_OA { get { return GetElementByName<IGroup>(Names.W_OA); } }
        public IGroup A_0329210959_OA { get { return GetElementByName<IGroup>(Names.A_0329210959_OA); } }
        public IGroup EXPORT_0003EV { get { return GetElementByName<IGroup>(Names.EXPORT_0003EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0003ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0003ET); } }
        public IField SEX_0003AS { get { return GetElementByName<IField>(Names.SEX_0003AS); } }
        public IField SEX_0003 { get { return GetElementByName<IField>(Names.SEX_0003); } }
        public IField SEX_0003XX { get { return GetElementByName<IField>(Names.SEX_0003XX); } }
        public IField DOB_0003AS { get { return GetElementByName<IField>(Names.DOB_0003AS); } }
        public IField DOB_0003 { get { return GetElementByName<IField>(Names.DOB_0003); } }
        public IField DOB_0003XX { get { return GetElementByName<IField>(Names.DOB_0003XX); } }
        public IField SSN_0003AS { get { return GetElementByName<IField>(Names.SSN_0003AS); } }
        public IField SSN_0003 { get { return GetElementByName<IField>(Names.SSN_0003); } }
        public IField SSN_0003XX { get { return GetElementByName<IField>(Names.SSN_0003XX); } }
        public IField FIRST_NAME_0003AS { get { return GetElementByName<IField>(Names.FIRST_NAME_0003AS); } }
        public IField FIRST_NAME_0003 { get { return GetElementByName<IField>(Names.FIRST_NAME_0003); } }
        public IField FIRST_NAME_0003XX { get { return GetElementByName<IField>(Names.FIRST_NAME_0003XX); } }
        public IField MIDDLE_INITIAL_0003AS { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0003AS); } }
        public IField MIDDLE_INITIAL_0003 { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0003); } }
        public IField MIDDLE_INITIAL_0003XX { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0003XX); } }
        public IField LAST_NAME_0003AS { get { return GetElementByName<IField>(Names.LAST_NAME_0003AS); } }
        public IField LAST_NAME_0003 { get { return GetElementByName<IField>(Names.LAST_NAME_0003); } }
        public IField LAST_NAME_0003XX { get { return GetElementByName<IField>(Names.LAST_NAME_0003XX); } }
        public IField NUMBER_0003AS { get { return GetElementByName<IField>(Names.NUMBER_0003AS); } }
        public IField NUMBER_0003 { get { return GetElementByName<IField>(Names.NUMBER_0003); } }
        public IField NUMBER_0003XX { get { return GetElementByName<IField>(Names.NUMBER_0003XX); } }
        public IField REPL_IND_0003AS { get { return GetElementByName<IField>(Names.REPL_IND_0003AS); } }
        public IField REPL_IND_0003 { get { return GetElementByName<IField>(Names.REPL_IND_0003); } }
        public IGroup EXPORT_0004EV { get { return GetElementByName<IGroup>(Names.EXPORT_0004EV); } }
        public IGroup ABEND_DATA_0004ET { get { return GetElementByName<IGroup>(Names.ABEND_DATA_0004ET); } }
        public IField TYPE_0004AS { get { return GetElementByName<IField>(Names.TYPE_0004AS); } }
        public IField TYPE_0004 { get { return GetElementByName<IField>(Names.TYPE_0004); } }
        public IField TYPE_0004XX { get { return GetElementByName<IField>(Names.TYPE_0004XX); } }
        public IField ADABAS_FILE_NUMBER_0004AS { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0004AS); } }
        public IField ADABAS_FILE_NUMBER_0004 { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0004); } }
        public IField ADABAS_FILE_NUMBER_0004XX { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0004XX); } }
        public IField ADABAS_FILE_ACTION_0004AS { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0004AS); } }
        public IField ADABAS_FILE_ACTION_0004 { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0004); } }
        public IField ADABAS_FILE_ACTION_0004XX { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0004XX); } }
        public IField ADABAS_RESPONSE_CD_0004AS { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0004AS); } }
        public IField ADABAS_RESPONSE_CD_0004 { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0004); } }
        public IField ADABAS_RESPONSE_CD_0004XX { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0004XX); } }
        public IField CICS_RESOURCE_NM_0004AS { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0004AS); } }
        public IField CICS_RESOURCE_NM_0004 { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0004); } }
        public IField CICS_RESOURCE_NM_0004XX { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0004XX); } }
        public IField CICS_FUNCTION_CD_0004AS { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0004AS); } }
        public IField CICS_FUNCTION_CD_0004 { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0004); } }
        public IField CICS_FUNCTION_CD_0004XX { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0004XX); } }
        public IField CICS_RESPONSE_CD_0004AS { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0004AS); } }
        public IField CICS_RESPONSE_CD_0004 { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0004); } }
        public IField CICS_RESPONSE_CD_0004XX { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0004XX); } }
        public IGroup EXPORT_AE_0005EV { get { return GetElementByName<IGroup>(Names.EXPORT_AE_0005EV); } }
        public IGroup IEF_SUPPLIED_0005ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0005ET); } }
        public IField FLAG_0005AS { get { return GetElementByName<IField>(Names.FLAG_0005AS); } }
        public IField FLAG_0005 { get { return GetElementByName<IField>(Names.FLAG_0005); } }
        public IField FLAG_0005XX { get { return GetElementByName<IField>(Names.FLAG_0005XX); } }
        public IGroup EXPORT_CSE_0006EV { get { return GetElementByName<IGroup>(Names.EXPORT_CSE_0006EV); } }
        public IGroup IEF_SUPPLIED_0006ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0006ET); } }
        public IField FLAG_0006AS { get { return GetElementByName<IField>(Names.FLAG_0006AS); } }
        public IField FLAG_0006 { get { return GetElementByName<IField>(Names.FLAG_0006); } }
        public IField FLAG_0006XX { get { return GetElementByName<IField>(Names.FLAG_0006XX); } }
        public IGroup EXPORT_KANPAY_0007EV { get { return GetElementByName<IGroup>(Names.EXPORT_KANPAY_0007EV); } }
        public IGroup IEF_SUPPLIED_0007ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0007ET); } }
        public IField FLAG_0007AS { get { return GetElementByName<IField>(Names.FLAG_0007AS); } }
        public IField FLAG_0007 { get { return GetElementByName<IField>(Names.FLAG_0007); } }
        public IField FLAG_0007XX { get { return GetElementByName<IField>(Names.FLAG_0007XX); } }
        public IGroup EXPORT_KSCARES_0008EV { get { return GetElementByName<IGroup>(Names.EXPORT_KSCARES_0008EV); } }
        public IGroup IEF_SUPPLIED_0008ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0008ET); } }
        public IField FLAG_0008AS { get { return GetElementByName<IField>(Names.FLAG_0008AS); } }
        public IField FLAG_0008 { get { return GetElementByName<IField>(Names.FLAG_0008); } }
        public IField FLAG_0008XX { get { return GetElementByName<IField>(Names.FLAG_0008XX); } }
        public IGroup TWA { get { return GetElementByName<IGroup>(Names.TWA); } }
        public IGroup TWA_ADABAS_PARMS { get { return GetElementByName<IGroup>(Names.TWA_ADABAS_PARMS); } }
        public IGroup TWA_CICS_PARMS { get { return GetElementByName<IGroup>(Names.TWA_CICS_PARMS); } }
        public IField TWA_PROGRAM_ID { get { return GetElementByName<IField>(Names.TWA_PROGRAM_ID); } }
        public IGroup TWA_ADDR_LIST { get { return GetElementByName<IGroup>(Names.TWA_ADDR_LIST); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
           {
               PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
               PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
               {

                   IField PSMGR_EABPCB_ADR_local = PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
                   PSMGR_EABPCB_ENTRY.CreateNewFieldRedefine(Names.PSMGR_EABPCB_PTR, FieldType.ReferencePointer, PSMGR_EABPCB_ADR_local, 4);
               });
           });

            recordDef.CreateNewGroup(Names.W_IA, (W_IA) =>
           {
               W_IA.CreateNewGroup(Names.A_0329210957_IA, (A_0329210957_IA) =>
               {
                   A_0329210957_IA.CreateNewGroup(Names.IMPORT_0001EV, (IMPORT_0001EV) =>
                   {
                       IMPORT_0001EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0001ET, (CSE_PERSONS_WORK_SET_0001ET) =>
                       {
                           CSE_PERSONS_WORK_SET_0001ET.CreateNewField(Names.NUMBER_0001AS, FieldType.String, 1);

                           IField NUMBER_0001_local = CSE_PERSONS_WORK_SET_0001ET.CreateNewField(Names.NUMBER_0001, FieldType.String, 10);
                           CSE_PERSONS_WORK_SET_0001ET.CreateNewFieldRedefine(Names.NUMBER_0001XX, FieldType.String, NUMBER_0001_local, 10);
                       });
                   });
                   A_0329210957_IA.CreateNewGroup(Names.IMPORT_CURRENT_0002EV, (IMPORT_CURRENT_0002EV) =>
                   {
                       IMPORT_CURRENT_0002EV.CreateNewGroup(Names.DATE_WORK_AREA_0002ET, (DATE_WORK_AREA_0002ET) =>
                       {
                           DATE_WORK_AREA_0002ET.CreateNewField(Names.DATE_0002AS, FieldType.String, 1);

                           IField DATE_0002_local = DATE_WORK_AREA_0002ET.CreateNewField(Names.DATE_0002, FieldType.SignedNumeric, 8);
                           DATE_WORK_AREA_0002ET.CreateNewFieldRedefine(Names.DATE_0002XX, FieldType.String, DATE_0002_local, 8);
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.W_OA, (W_OA) =>
           {
               W_OA.CreateNewGroup(Names.A_0329210959_OA, (A_0329210959_OA) =>
               {
                   A_0329210959_OA.CreateNewGroup(Names.EXPORT_0003EV, (EXPORT_0003EV) =>
                   {
                       EXPORT_0003EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0003ET, (CSE_PERSONS_WORK_SET_0003ET) =>
                       {
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.SEX_0003AS, FieldType.String, 1);

                           IField SEX_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.SEX_0003, FieldType.String, 1);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.SEX_0003XX, FieldType.String, SEX_0003_local, 1);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.DOB_0003AS, FieldType.String, 1);

                           IField DOB_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.DOB_0003, FieldType.SignedNumeric, 8);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.DOB_0003XX, FieldType.String, DOB_0003_local, 8);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.SSN_0003AS, FieldType.String, 1);

                           IField SSN_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.SSN_0003, FieldType.String, 9);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.SSN_0003XX, FieldType.String, SSN_0003_local, 9);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.FIRST_NAME_0003AS, FieldType.String, 1);

                           IField FIRST_NAME_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.FIRST_NAME_0003, FieldType.String, 12);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.FIRST_NAME_0003XX, FieldType.String, FIRST_NAME_0003_local, 12);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.MIDDLE_INITIAL_0003AS, FieldType.String, 1);

                           IField MIDDLE_INITIAL_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.MIDDLE_INITIAL_0003, FieldType.String, 1);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.MIDDLE_INITIAL_0003XX, FieldType.String, MIDDLE_INITIAL_0003_local, 1);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.LAST_NAME_0003AS, FieldType.String, 1);

                           IField LAST_NAME_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.LAST_NAME_0003, FieldType.String, 17);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.LAST_NAME_0003XX, FieldType.String, LAST_NAME_0003_local, 17);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.NUMBER_0003AS, FieldType.String, 1);

                           IField NUMBER_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.NUMBER_0003, FieldType.String, 10);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.NUMBER_0003XX, FieldType.String, NUMBER_0003_local, 10);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.REPL_IND_0003AS, FieldType.String, 1);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.REPL_IND_0003, FieldType.String, 1);
                       });
                   });
                   A_0329210959_OA.CreateNewGroup(Names.EXPORT_0004EV, (EXPORT_0004EV) =>
                   {
                       EXPORT_0004EV.CreateNewGroup(Names.ABEND_DATA_0004ET, (ABEND_DATA_0004ET) =>
                       {
                           ABEND_DATA_0004ET.CreateNewField(Names.TYPE_0004AS, FieldType.String, 1);

                           IField TYPE_0004_local = ABEND_DATA_0004ET.CreateNewField(Names.TYPE_0004, FieldType.String, 1);
                           ABEND_DATA_0004ET.CreateNewFieldRedefine(Names.TYPE_0004XX, FieldType.String, TYPE_0004_local, 1);
                           ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_FILE_NUMBER_0004AS, FieldType.String, 1);

                           IField ADABAS_FILE_NUMBER_0004_local = ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_FILE_NUMBER_0004, FieldType.String, 4);
                           ABEND_DATA_0004ET.CreateNewFieldRedefine(Names.ADABAS_FILE_NUMBER_0004XX, FieldType.String, ADABAS_FILE_NUMBER_0004_local, 4);
                           ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_FILE_ACTION_0004AS, FieldType.String, 1);

                           IField ADABAS_FILE_ACTION_0004_local = ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_FILE_ACTION_0004, FieldType.String, 3);
                           ABEND_DATA_0004ET.CreateNewFieldRedefine(Names.ADABAS_FILE_ACTION_0004XX, FieldType.String, ADABAS_FILE_ACTION_0004_local, 3);
                           ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_RESPONSE_CD_0004AS, FieldType.String, 1);

                           IField ADABAS_RESPONSE_CD_0004_local = ABEND_DATA_0004ET.CreateNewField(Names.ADABAS_RESPONSE_CD_0004, FieldType.String, 4);
                           ABEND_DATA_0004ET.CreateNewFieldRedefine(Names.ADABAS_RESPONSE_CD_0004XX, FieldType.String, ADABAS_RESPONSE_CD_0004_local, 4);
                           ABEND_DATA_0004ET.CreateNewField(Names.CICS_RESOURCE_NM_0004AS, FieldType.String, 1);

                           IField CICS_RESOURCE_NM_0004_local = ABEND_DATA_0004ET.CreateNewField(Names.CICS_RESOURCE_NM_0004, FieldType.String, 8);
                           ABEND_DATA_0004ET.CreateNewFieldRedefine(Names.CICS_RESOURCE_NM_0004XX, FieldType.String, CICS_RESOURCE_NM_0004_local, 8);
                           ABEND_DATA_0004ET.CreateNewField(Names.CICS_FUNCTION_CD_0004AS, FieldType.String, 1);

                           IField CICS_FUNCTION_CD_0004_local = ABEND_DATA_0004ET.CreateNewField(Names.CICS_FUNCTION_CD_0004, FieldType.String, 2);
                           ABEND_DATA_0004ET.CreateNewFieldRedefine(Names.CICS_FUNCTION_CD_0004XX, FieldType.String, CICS_FUNCTION_CD_0004_local, 2);
                           ABEND_DATA_0004ET.CreateNewField(Names.CICS_RESPONSE_CD_0004AS, FieldType.String, 1);

                           IField CICS_RESPONSE_CD_0004_local = ABEND_DATA_0004ET.CreateNewField(Names.CICS_RESPONSE_CD_0004, FieldType.String, 6);
                           ABEND_DATA_0004ET.CreateNewFieldRedefine(Names.CICS_RESPONSE_CD_0004XX, FieldType.String, CICS_RESPONSE_CD_0004_local, 6);
                       });
                   });
                   A_0329210959_OA.CreateNewGroup(Names.EXPORT_AE_0005EV, (EXPORT_AE_0005EV) =>
                   {
                       EXPORT_AE_0005EV.CreateNewGroup(Names.IEF_SUPPLIED_0005ET, (IEF_SUPPLIED_0005ET) =>
                       {
                           IEF_SUPPLIED_0005ET.CreateNewField(Names.FLAG_0005AS, FieldType.String, 1);

                           IField FLAG_0005_local = IEF_SUPPLIED_0005ET.CreateNewField(Names.FLAG_0005, FieldType.String, 1);
                           IEF_SUPPLIED_0005ET.CreateNewFieldRedefine(Names.FLAG_0005XX, FieldType.String, FLAG_0005_local, 1);
                       });
                   });
                   A_0329210959_OA.CreateNewGroup(Names.EXPORT_CSE_0006EV, (EXPORT_CSE_0006EV) =>
                   {
                       EXPORT_CSE_0006EV.CreateNewGroup(Names.IEF_SUPPLIED_0006ET, (IEF_SUPPLIED_0006ET) =>
                       {
                           IEF_SUPPLIED_0006ET.CreateNewField(Names.FLAG_0006AS, FieldType.String, 1);

                           IField FLAG_0006_local = IEF_SUPPLIED_0006ET.CreateNewField(Names.FLAG_0006, FieldType.String, 1);
                           IEF_SUPPLIED_0006ET.CreateNewFieldRedefine(Names.FLAG_0006XX, FieldType.String, FLAG_0006_local, 1);
                       });
                   });
                   A_0329210959_OA.CreateNewGroup(Names.EXPORT_KANPAY_0007EV, (EXPORT_KANPAY_0007EV) =>
                   {
                       EXPORT_KANPAY_0007EV.CreateNewGroup(Names.IEF_SUPPLIED_0007ET, (IEF_SUPPLIED_0007ET) =>
                       {
                           IEF_SUPPLIED_0007ET.CreateNewField(Names.FLAG_0007AS, FieldType.String, 1);

                           IField FLAG_0007_local = IEF_SUPPLIED_0007ET.CreateNewField(Names.FLAG_0007, FieldType.String, 1);
                           IEF_SUPPLIED_0007ET.CreateNewFieldRedefine(Names.FLAG_0007XX, FieldType.String, FLAG_0007_local, 1);
                       });
                   });
                   A_0329210959_OA.CreateNewGroup(Names.EXPORT_KSCARES_0008EV, (EXPORT_KSCARES_0008EV) =>
                   {
                       EXPORT_KSCARES_0008EV.CreateNewGroup(Names.IEF_SUPPLIED_0008ET, (IEF_SUPPLIED_0008ET) =>
                       {
                           IEF_SUPPLIED_0008ET.CreateNewField(Names.FLAG_0008AS, FieldType.String, 1);

                           IField FLAG_0008_local = IEF_SUPPLIED_0008ET.CreateNewField(Names.FLAG_0008, FieldType.String, 1);
                           IEF_SUPPLIED_0008ET.CreateNewFieldRedefine(Names.FLAG_0008XX, FieldType.String, FLAG_0008_local, 1);
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.TWA, (TWA) =>
           {
               IGroup TWA_ADABAS_PARMS_local = (IGroup)TWA.CreateNewGroup(Names.TWA_ADABAS_PARMS, (TWA_ADABAS_PARMS) =>
               {
                   TWA_ADABAS_PARMS.CreateNewFieldArray("FILLER_d12", 7, FieldType.CompInt, 4);
               });
               TWA.CreateNewGroupRedefine(Names.TWA_CICS_PARMS, TWA_ADABAS_PARMS_local, (TWA_CICS_PARMS) =>
               {
                   TWA_CICS_PARMS.CreateNewField(Names.TWA_PROGRAM_ID, FieldType.String, 8);
                   TWA_CICS_PARMS.CreateNewGroup(Names.TWA_ADDR_LIST, (TWA_ADDR_LIST) =>
                   {
                       TWA_ADDR_LIST.CreateNewFieldArray("FILLER_d13", 5, FieldType.CompInt, 4);
                   });
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(W_IA, args, 0);
            SetPassedParm(W_OA, args, 1);
            SetPassedParm(PSMGR_EAB_DATA, args, 2);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(W_IA, args, 0);
            SetReturnParm(W_OA, args, 1);
            SetReturnParm(PSMGR_EAB_DATA, args, 2);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXGR10 : OnlineProgramBase
    {

        #region Public Constructors
        public SWEXGR10()
            : base()
        {
            this.ProgramName = "SWEXGR10";

            WS = new SWEXGR10_ws();
            LS = new SWEXGR10_ls();
            DbConv = new DBConversation();
            DbConv.SQLCA.Record = WS.SQLCA.Record;

        }

        public SWEXGR10(OnlineControl controlData) : base(controlData)
        {
            this.ProgramName = "SWEXGR10";

            WS = new SWEXGR10_ws();
            LS = new SWEXGR10_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXGR10_ws WS;

        //==== Linkage Section Data Class ========================================
        private SWEXGR10_ls LS;
        private DBConversation DbConv;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING W-IA , W-OA , PSMGR-EAB-DATA.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                SetData();
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
            finally
            {
                Data.CloseConnection();
            }
        }
        #endregion

        #region Private Methods

        private void SetData()
        {
            LS.InitializeWithLowValues();
            WS.InitializeWithLowValues();
        }

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0329210948(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0329210948
        /// </summary>
        /// <remarks>
        ///COMMENT: *****************************************************************
        /// </remarks>
        private void M_MAIN_0329210948(string returnMethod = "")
        {
            M_PARA_0329210948_INIT("M_PARA_0329210948_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0329210948-INIT THRU PARA-0329210948-INIT-EXIT
            if (LS.NUMBER_0001.IsNumericValue())                                                                //COBOL==> IF NUMBER-0001 NUMERIC
            {
                M_PARA_0329210948("M_PARA_0329210948_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0329210948 THRU PARA-0329210948-EXIT
            }                                                                                                   //COBOL==> END-IF.
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0329210948_INIT
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_PARA_0329210948_INIT(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            LS.EXPORT_0003EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0003EV.
            LS.EXPORT_0004EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0004EV.
            LS.EXPORT_AE_0005EV.ResetToInitialValue();                                                          //COBOL==> INITIALIZE EXPORT-AE-0005EV.
            LS.EXPORT_CSE_0006EV.ResetToInitialValue();                                                         //COBOL==> INITIALIZE EXPORT-CSE-0006EV.
            LS.EXPORT_KANPAY_0007EV.ResetToInitialValue();                                                      //COBOL==> INITIALIZE EXPORT-KANPAY-0007EV.
            LS.EXPORT_KSCARES_0008EV.ResetToInitialValue();                                                     //COBOL==> INITIALIZE EXPORT-KSCARES-0008EV.
                                                                                                                //COMMENT: ** GQB 02/17/2014 - ADDED CODE FOR DISPLAY
            WS.WS9_MSG_X.SetValue("*SWEXGR10*");                                                                //COBOL==> MOVE '*SWEXGR10*' TO WS9-MSG-X.
            if (returnMethod != "" && returnMethod != "M_PARA_0329210948_INIT") { M_PARA_0329210948_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0329210948_INIT_EXIT
        /// </summary>
        /// <remarks>
        ///COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY ***
        ///COMMENT:     MOVE 'PROGRAM STARTED...' TO WS9-MSG-1.
        ///COMMENT:     DISPLAY WS9-MSG-X.
        /// </remarks>
        private void M_PARA_0329210948_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0329210948_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0329210948_INIT_EXIT") { M_PARA_0329210948(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0329210948
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_PARA_0329210948(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            WS.FUNC_0329210948_ESC_FLAG.SetValue("N");                                                          //COBOL==> MOVE 'N' TO FUNC-0329210948-ESC-FLAG.
            if (returnMethod != "" && returnMethod != "M_PARA_0329210948") { M_0000_DATABASE_ROUTINE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_DATABASE_ROUTINE
        /// </summary>
        /// <remarks>
        ///COMMENT: ****************************************************************
        ///COMMENT:                                                                *
        ///COMMENT:   DESCRIPTION:  0000-DATABASE-ROUTINE.                         *
        ///COMMENT:      LOCATION:  PROCEDURE DIVISION.                            *
        ///COMMENT:                                                                *
        ///COMMENT: ** GQB 02/17/2014 - ADDED NEW COMMENTS FOR DB2
        ///COMMENT:       ACTIONS:  RECEIVE CLIENT-NUMBER.
        ///COMMENT:                 GET INFO FROM CLIENT BASIC AND CLIENT TABLES.
        ///COMMENT:                 BUILD CLIENT POINTER USING SYSTEM PART TABLE,
        ///COMMENT:                 BY CLIENT NUMBER, CLIENT NAME, CLIENT SSN.
        ///COMMENT:                 CHECK KSD_PARTICIPATION TO SEE IF CLIENT
        ///COMMENT:                 IS ON AN OPEN PROGRAM.
        ///COMMENT:                 IF YES, SET AE INDICATOR TO 'O'
        ///COMMENT: ****************************************************************
        ///COMMENT:                 'O' INDICATES OWNERSHIP BY ANOTHER SYSTEM,
        ///COMMENT:                 PREVENTING CSE FROM CHANGING THE EXISTING
        ///COMMENT:                 KSD_CLIENT_BASIC DATA.
        ///COMMENT: ****************************************************************
        ///COMMENT:                 RETURN  CLIENT-SURNAME                         *
        ///COMMENT:                         CLIENT-FIRST-NAME                      *
        ///COMMENT:                         CLIENT-MIDDLE-INITIAL                  *
        ///COMMENT:                         CLIENT-SOCIAL-SECURITY-NUMBER          *
        ///COMMENT:                         CLIENT-DATE-OF-BIRTH                   *
        ///COMMENT:                         CLIENT-SEX                             *
        ///COMMENT:                         CLIENT-SYSTEM-PARTICIPATION-INDICATORS *
        ///COMMENT:                         ABEND-FIELDS.                          *
        ///COMMENT:                                                                *
        ///COMMENT:       CREATED:  18-JUL-95.                                     *
        ///COMMENT:            BY:  CTG/CEB.                                       *
        ///COMMENT:                                                                *
        ///COMMENT: ** MAINTENANCE *************************************************
        ///COMMENT:                       CHANGE
        ///COMMENT:    DATE      AUTHOR   CONTROL DESCRIPTION
        ///COMMENT:  ---------- --------- ------- ----------------------------------
        ///COMMENT:  02/17/2014 G.BRAMSON CQ35825 ADABAS TO DB2 FOR KEES PHASE 3   *
        ///COMMENT:                                                                *
        ///COMMENT:  09/19/2017 RAJ S             SKIP CLIENTS WHICH ARE MARKED AS *
        ///COMMENT:                               ORGANIZATION.                    *
        ///COMMENT: ****************************************************************
        /// </remarks>
        private void M_0000_DATABASE_ROUTINE(string returnMethod = "")
        {
            WS.MV_ABEND_FIELDS.SetValueWithSpaces();                                                            //COBOL==> MOVE SPACE TO MV-ABEND-FIELDS.
            SetHandleCondtions(HandleCondition.ERROR, "M_9999_CICS_ABEND");                                     //COBOL==> EXEC CICS HANDLE CONDITION ERROR ( 9999-CICS-ABEND ) END-EXEC.
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:  INCLUDE NAME:  SWCSZ954 (FROM SWCSZ054).                      *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:      EAB NAME:  SWCSZ???.                                      *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:   DESCRIPTION:  DB2 INITIALIZATION.                            *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:      LOCATION:  PROCEDURE DIVISION.                            *
                                                                                                                //COMMENT:                 MUST BE HARDCOPIED INTO EAB MAIN PROCEDURE     *
                                                                                                                //COMMENT:                   DIVISION INCLUDE SWCSZ???.                   *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:       ACTIONS:  RELEASES ANY OUTSTANDING COMMAND ID'S.         *
                                                                                                                //COMMENT:                 THIS ROUTINE REQUIRES INCLUDE SWCSZ053 IN THE  *
                                                                                                                //COMMENT:                   WORKING-STORAGE SECTION OF THIS PROGRAM.     *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:       CREATED:  21-AUG-95.                                     *
                                                                                                                //COMMENT:            BY:  CTG/CEB.                                       *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT: ** MAINTENANCE *************************************************
                                                                                                                //COMMENT:                       CHANGE
                                                                                                                //COMMENT:    DATE      AUTHOR   CONTROL DESCRIPTION
                                                                                                                //COMMENT:  ---------- --------- ------- ----------------------------------
                                                                                                                //COMMENT:  02/17/2014 G.BRAMSON CQ35825 ADABAS TO DB2 FOR KEES PHASE 3
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT: ** GQB 02/17/2014 - COMMENTED OUT CODE FOR FORMATTIME
                                                                                                                //COMMENT: *   EXEC CICS FORMATTIME
                                                                                                                //COMMENT: *             ABSTIME  (MV-ABS-TIME)
                                                                                                                //COMMENT: *             YYYYMMDD (MV-CCYYMMDD-X8)
                                                                                                                //COMMENT: *   END-EXEC.
            if (LS.DATE_0002.IsZeros())                                                                         //COBOL==> IF DATE-0002 = ZEROS
            {
                LS.DATE_0002.SetValue(00010101);                                                                    //COBOL==> MOVE 00010101 TO DATE-0002
            }                                                                                                   //COBOL==> END-IF.
            WS.MV_CCYYMMDD.SetValue(LS.DATE_0002);                                                              //COBOL==> MOVE DATE-0002 TO MV-CCYYMMDD.
                                                                                                                //COMMENT: ** GQB 02/17/2014 - CREATE TODAYS DATE IN DB2 FORMAT
            WS.DBK1_CCYY.SetValue(LS.DATE_0002XX.GetSubstring(1, 4));                                           //COBOL==> MOVE DATE-0002XX ( 1:4 ) TO DBK1-CCYY.
            WS.DBK1_MM.SetValue(LS.DATE_0002XX.GetSubstring(5, 2));                                             //COBOL==> MOVE DATE-0002XX ( 5:2 ) TO DBK1-MM.
            WS.DBK1_DD.SetValue(LS.DATE_0002XX.GetSubstring(7, 2));                                             //COBOL==> MOVE DATE-0002XX ( 7:2 ) TO DBK1-DD.
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT: *** MOVE IMPORT FIELDS TO WORKING-STORAGE FIELDS.
                                                                                                                //COMMENT: *****************************************************************
            WS.MV_CLIENT_NUMBER_X10.SetValue(LS.NUMBER_0001);                                                   //COBOL==> MOVE NUMBER-0001 TO MV-CLIENT-NUMBER-X10.
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY ***
                                                                                                                //COMMENT:     MOVE 'IMPORT CLIENT NO        =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-CLIENT-NUMBER-X10        TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'IMPORT DATE             =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-CCYYMMDD-X8              TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT: ** GQB 02/17/2014 - READ CLIENT BASIC
            WS.DBK9_CLIENT_NUMBER.SetValue(LS.NUMBER_0001);                                                     //COBOL==> MOVE NUMBER-0001 TO DBK9-CLIENT-NUMBER.
            M_98000_SELECT_CLIENT_BASIC("M_98000_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM 98000-SELECT-CLIENT-BASIC.
            WS.MV_ABEND_FIELDS.SetValue(WS.WS9_ABEND_FIELDS);                                                   //COBOL==> MOVE WS9-ABEND-FIELDS TO MV-ABEND-FIELDS.
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT: ** GQB 02/17/2014 - MOVE CLIENT INFO TO WORKING STORAGE AREA
            WS.MV_DATE_OF_BIRTH.SetValue("00000000");                                                           //COBOL==> MOVE '00000000' TO MV-DATE-OF-BIRTH.
            if (WS.CLB9_DATE_OF_BIRTH.IsGreaterThan("0001-01-01"))                                              //COBOL==> IF CLB9-DATE-OF-BIRTH > '0001-01-01'
            {
                WS.MV_DATE_OF_BIRTH.SetValueOfSubstring(1, 4, WS.CLB9_DATE_OF_BIRTH.GetSubstring(1, 4).AsString()); //COBOL==> MOVE CLB9-DATE-OF-BIRTH ( 1:4 ) TO MV-DATE-OF-BIRTH ( 1:4 )
                WS.MV_DATE_OF_BIRTH.SetValueOfSubstring(5, 2, WS.CLB9_DATE_OF_BIRTH.GetSubstring(6, 2).AsString()); //COBOL==> MOVE CLB9-DATE-OF-BIRTH ( 6:2 ) TO MV-DATE-OF-BIRTH ( 5:2 )
                WS.MV_DATE_OF_BIRTH.SetValueOfSubstring(7, 2, WS.CLB9_DATE_OF_BIRTH.GetSubstring(9, 2).AsString()); //COBOL==> MOVE CLB9-DATE-OF-BIRTH ( 9:2 ) TO MV-DATE-OF-BIRTH ( 7:2 )
            }                                                                                                   //COBOL==> END-IF.
            WS.MV_SEX.SetValue(WS.CLB9_GENDER);                                                                 //COBOL==> MOVE CLB9-GENDER TO MV-SEX.
            WS.MV_SSN.SetValue(WS.CLB9_SSN);                                                                    //COBOL==> MOVE CLB9-SSN TO MV-SSN.
            WS.MV_CLIENT_SURNAME.SetValue(WS.CLB9_CLIENT_SURNAME);                                              //COBOL==> MOVE CLB9-CLIENT-SURNAME TO MV-CLIENT-SURNAME.
            WS.MV_CLIENT_GIVEN_NAME.SetValue(WS.CLB9_CLIENT_GIVEN_NAME);                                        //COBOL==> MOVE CLB9-CLIENT-GIVEN-NAME TO MV-CLIENT-GIVEN-NAME.
            WS.MV_CLIENT_INITIAL.SetValue(WS.CLB9_CLIENT_INITIALS);                                             //COBOL==> MOVE CLB9-CLIENT-INITIALS TO MV-CLIENT-INITIAL.
            WS.MV_REPL_IND.SetValue(WS.CLB9_CIS_REPL_IND);                                                      //COBOL==> MOVE CLB9-CIS-REPL-IND TO MV-REPL-IND.
                                                                                                                //COMMENT: ** GQB 02/27/2014 - COMMENT OUT LOGIC FOR SUB-PROGRAM
                                                                                                                //COMMENT: ** GQB 02/17/2014 - SUBROUTINE FOR CLIENT POINTER INFORMATION
                                                                                                                //COMMENT:     INITIALIZE WS-PARM-AREA.
                                                                                                                //COMMENT:     MOVE NUMBER-0001 TO WSI-CLIENT-NUMBER.
                                                                                                                //COMMENT:     MOVE CLB9-CLIENT-SURNAME TO WSI-CLIENT-SURNAME.
                                                                                                                //COMMENT:     MOVE CLB9-CLIENT-GIVEN-NAME TO WSI-CLIENT-GIVEN-NAME.
                                                                                                                //COMMENT:     MOVE CLB9-CLIENT-INITIALS TO WSI-CLIENT-INITIALS.
                                                                                                                //COMMENT:     MOVE CLB9-SSN TO WSI-CLIENT-SSN.
                                                                                                                //COMMENT:     MOVE 'SWEXGCPR' TO WS-SWEXGCPR.
                                                                                                                //COMMENT:     CALL WS-SWEXGCPR USING WS-PARM-AREA-R.
                                                                                                                //COMMENT:     MOVE WSO-CLIENT-POINTER TO MV-CLIENT-POINTER.
                                                                                                                //COMMENT:     MOVE WSO-ABEND-FIELDS TO MV-ABEND-FIELDS.
                                                                                                                //COMMENT:     IF WSO-RETURN-MSG > SPACE
                                                                                                                //COMMENT:        DISPLAY WSO-RETURN-MSG WSO-RETURN-VALUE
                                                                                                                //COMMENT:     END-IF.
                                                                                                                //COMMENT:     IF NOT MV-ABEND-TYPE-NONE
                                                                                                                //COMMENT:        GO TO 0000-DATABASE-EXIT
                                                                                                                //COMMENT:     END-IF.
                                                                                                                //COMMENT: ** GQB 07/24/2014 - CODE FOR CLIENT POINTER INFORMATION
                                                                                                                //COMMENT: **                  SWCSZG87 AND SWCSZG88 MUST BE INCLUDED
            WS.DBK9_CLIENT_NAME.SetValue(WS.MV_CLIENT_NAME);                                                    //COBOL==> MOVE MV-CLIENT-NAME TO DBK9-CLIENT-NAME.
            WS.DBK9_SSN.SetValue(WS.MV_SSN);                                                                    //COBOL==> MOVE MV-SSN TO DBK9-SSN.
            WS.WS9_CLIENT_POINTER.ResetToInitialValue();                                                        //COBOL==> INITIALIZE WS9-CLIENT-POINTER.
                                                                                                                //COMMENT:     MOVE DB2-VERIFIED-SSN-FLAG TO WS9-VERIFIED-SSN-FLAG.
            WS.SW9_SELECT_CLIENT_YES.SetValue(true);                                                            //COBOL==> SET SW9-SELECT-CLIENT-YES TO TRUE.
            M_99000_CLIENT_POINTER_ROUTINE("M_99000_EXIT"); if (Control.ExitProgram) { return; }                  //COBOL==> PERFORM 99000-CLIENT-POINTER-ROUTINE.
            WS.MV_CLIENT_POINTER.SetValue(WS.WS9_CLIENT_POINTER);                                               //COBOL==> MOVE WS9-CLIENT-POINTER TO MV-CLIENT-POINTER.
            WS.MV_ABEND_FIELDS.SetValue(WS.WS9_ABEND_FIELDS);                                                   //COBOL==> MOVE WS9-ABEND-FIELDS TO MV-ABEND-FIELDS.
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT: ** GQB 02/17/2014 - CHECK PARTICIPATION TABLE
            M_7200_CHECK_AE_PARTICIPATION("M_7200_EXIT"); if (Control.ExitProgram) { return; }                    //COBOL==> PERFORM 7200-CHECK-AE-PARTICIPATION THRU 7200-EXIT.
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (WS.DBK1_COUNT.IsGreaterThan(ZEROS))                                                             //COBOL==> IF DBK1-COUNT > ZERO
            {
                WS.MV_SYS_PART_AE.SetValue("O");                                                                    //COBOL==> MOVE 'O' TO MV-SYS-PART-AE
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT: *** MOVE WORKING-STORAGE FIELDS TO EXPORT FIELDS.
                                                                                                                //COMMENT: *****************************************************************
            LS.SEX_0003.SetValue(WS.MV_SEX);                                                                    //COBOL==> MOVE MV-SEX TO SEX-0003.
            LS.DOB_0003XX.SetValue(WS.MV_DATE_OF_BIRTH);                                                        //COBOL==> MOVE MV-DATE-OF-BIRTH TO DOB-0003XX.
            LS.SSN_0003.SetValue(WS.MV_SSN_X9);                                                                 //COBOL==> MOVE MV-SSN-X9 TO SSN-0003.
            LS.FIRST_NAME_0003.SetValue(WS.MV_CLIENT_GIVEN_NAME);                                               //COBOL==> MOVE MV-CLIENT-GIVEN-NAME TO FIRST-NAME-0003.
            LS.MIDDLE_INITIAL_0003.SetValue(WS.MV_CLIENT_INITIAL);                                              //COBOL==> MOVE MV-CLIENT-INITIAL TO MIDDLE-INITIAL-0003.
            LS.LAST_NAME_0003.SetValue(WS.MV_CLIENT_SURNAME);                                                   //COBOL==> MOVE MV-CLIENT-SURNAME TO LAST-NAME-0003.
            LS.NUMBER_0003.SetValue(WS.MV_CLIENT_NUMBER_X10);                                                   //COBOL==> MOVE MV-CLIENT-NUMBER-X10 TO NUMBER-0003.
            LS.FLAG_0005.SetValue(WS.MV_SYS_PART_AE);                                                           //COBOL==> MOVE MV-SYS-PART-AE TO FLAG-0005.
            LS.FLAG_0006.SetValue(WS.MV_SYS_PART_CSE);                                                          //COBOL==> MOVE MV-SYS-PART-CSE TO FLAG-0006.
            LS.FLAG_0007.SetValue(WS.MV_SYS_PART_KANPAY);                                                       //COBOL==> MOVE MV-SYS-PART-KANPAY TO FLAG-0007.
            LS.FLAG_0008.SetValue(WS.MV_SYS_PART_KSCARES);                                                      //COBOL==> MOVE MV-SYS-PART-KSCARES TO FLAG-0008.
            LS.REPL_IND_0003.SetValue(WS.MV_REPL_IND);                                                          //COBOL==> MOVE MV-REPL-IND TO REPL-IND-0003.
                                                                                                                //COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY ***
                                                                                                                //COMMENT:     MOVE 'EXPORT SEX              =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SEX                      TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'EXPORT DATE OF BIRTH    =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-DATE-OF-BIRTH            TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'EXPORT SSN              =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SSN-X9                   TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'EXPORT CLIENT NAME      =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-CLIENT-NAME              TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY CLIENT POINTER SHORT ***
                                                                                                                //COMMENT:     MOVE 'EXPORT CLIENT POINTER   =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-CLIENT-POINTER           TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'EXPORT REPL IND         =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-REPL-IND                 TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY CLIENT POINTER DETAIL ***
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - CLIENT ID    =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-CLIENT-ID                TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - VERFD SSN FLG=' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-VERIFIED-SSN-FLAG        TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - SYS PART AE  =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SYS-PART-AE              TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - SYS PART CSE =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SYS-PART-CSE             TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - SYS PART KAN =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SYS-PART-KANPAY          TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - SYS PART KSC =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SYS-PART-KSCARES         TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'CLNT PTR - SYS PART FAC =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-SYS-PART-FACTS           TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT:     MOVE 'EXPORT REPL IND         =' TO WS9-MSG-FIELD.
                                                                                                                //COMMENT:     MOVE MV-REPL-IND                 TO WS9-MSG-VALUE.
                                                                                                                //COMMENT:     DISPLAY WS9-MSG-X.
                                                                                                                //COMMENT: *****************************************************************
                                                                                                                //COMMENT: *****************************************************************
            M_0000_DATABASE_EXIT(CheckGotoReturn(returnMethod)); return;                                        //COBOL==> GO TO 0000-DATABASE-EXIT.
        }
        /// <summary>
        /// Method M_9999_CICS_ABEND
        /// </summary>
        private void M_9999_CICS_ABEND(string returnMethod = "")
        {
            WS.MV_ABEND_TYPE.SetValue("C");                                                                     //COBOL==> MOVE 'C' TO MV-ABEND-TYPE.
            WS.MV_CICS_RESOURCE_NM.SetValue(Control.EIBRSRCE);                                                  //COBOL==> MOVE EIBRSRCE TO MV-CICS-RESOURCE-NM.
            WS.MV_CICS_FUNCTION_CD.SetValue(Control.EIBFN);                                                     //COBOL==> MOVE EIBFN TO MV-CICS-FUNCTION-CD.
            WS.MV_CICS_RESPONSE_CD.SetValue(Control.EIBRCODE);                                                  //COBOL==> MOVE EIBRCODE TO MV-CICS-RESPONSE-CD.
            if (returnMethod != "" && returnMethod != "M_9999_CICS_ABEND") { M_0000_DATABASE_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_DATABASE_EXIT
        /// </summary>
        private void M_0000_DATABASE_EXIT(string returnMethod = "")
        {
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                LS.TYPE_0004.SetValue(WS.MV_ABEND_TYPE);                                                            //COBOL==> MOVE MV-ABEND-TYPE TO TYPE-0004
                LS.ADABAS_FILE_NUMBER_0004.SetValue(WS.MV_ADA_FILE_NUMBER);                                         //COBOL==> MOVE MV-ADA-FILE-NUMBER TO ADABAS-FILE-NUMBER-0004
                LS.ADABAS_FILE_ACTION_0004.SetValue(WS.MV_ADA_FILE_ACTION);                                         //COBOL==> MOVE MV-ADA-FILE-ACTION TO ADABAS-FILE-ACTION-0004
                LS.ADABAS_RESPONSE_CD_0004.SetValue(WS.MV_ADA_RESPONSE_CD);                                         //COBOL==> MOVE MV-ADA-RESPONSE-CD TO ADABAS-RESPONSE-CD-0004
                LS.CICS_RESOURCE_NM_0004.SetValue(WS.MV_CICS_RESOURCE_NM);                                          //COBOL==> MOVE MV-CICS-RESOURCE-NM TO CICS-RESOURCE-NM-0004
                LS.CICS_FUNCTION_CD_0004.SetValue(WS.MV_CICS_FUNCTION_CD);                                          //COBOL==> MOVE MV-CICS-FUNCTION-CD TO CICS-FUNCTION-CD-0004
                LS.CICS_RESPONSE_CD_0004.SetValue(WS.MV_CICS_RESPONSE_CD);                                          //COBOL==> MOVE MV-CICS-RESPONSE-CD TO CICS-RESPONSE-CD-0004
            }                                                                                                   //COBOL==> END-IF.
            DisplayToLog("**** START SWEXGR10 *****");                                                          //COBOL==> DISPLAY "**** START SWEXGR10 *****"
            DisplayToLog("ABEND      INFO.:" + LS.ABEND_DATA_0004ET.AsString());                                //COBOL==> DISPLAY "ABEND      INFO.:" ABEND-DATA-0004ET
            DisplayToLog("INPUT      INFO.:" + LS.A_0329210957_IA.AsString());                                  //COBOL==> DISPLAY "INPUT      INFO.:" A-0329210957-IA
            DisplayToLog("OUTPUT     INFO.:" + LS.EXPORT_0003EV.AsString());                                    //COBOL==> DISPLAY "OUTPUT     INFO.:" EXPORT-0003EV
            DisplayToLog("****  END  SWEXGR10 *****");                                                          //COBOL==> DISPLAY "****  END  SWEXGR10 *****".
            if (returnMethod != "" && returnMethod != "M_0000_DATABASE_EXIT") { M_PARA_0329210948_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0329210948_EXIT
        /// </summary>
        private void M_PARA_0329210948_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0329210948_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0329210948_EXIT") { M_7200_CHECK_AE_PARTICIPATION(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_7200_CHECK_AE_PARTICIPATION
        /// </summary>
        /// <remarks>
        ///COMMENT: ** GQB 02/17/2014 - CHECK PARTICIPATION TABLE
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_7200_CHECK_AE_PARTICIPATION(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            WS.DBK1_COUNT.ResetToInitialValue();                                                                //COBOL==> INITIALIZE DBK1-COUNT.
                                                                                                                //COMMENT: ** CQ62296 ADDED CHECK FOR ACTIVE PARTICIPATION CODE
            DbConv.ExecuteSqlQuery("SELECT COUNT ( * ) INTO {0} FROM KSD_PARTICIPATION WHERE FK_CLB_CLIENT_NO = {1} AND PART_START_DATE <= {2} AND PART_END_DATE >= {3} AND PART_CODE = 'IN' WITH UR ",  //COBOL==> EXEC SQL SELECT COUNT ( * ) INTO :DBK1-COUNT FROM KSD_PARTICIPATION WHERE FK_CLB_CLIENT_NO = :DBK9-CLIENT-NUMBER AND PART_START_DATE <= :DBK1-CCYYMMDD AND PART_END_DATE >= :DBK1-CCYYMMDD AND PART_CODE = 'IN' WITH UR END-EXEC.
                                 WS.DBK1_COUNT, WS.DBK9_CLIENT_NUMBER, WS.DBK1_CCYYMMDD, WS.DBK1_CCYYMMDD);
            if ((!(WS.SQLCA.SQLCODE.IsZeros()))
             && (!(WS.SQLCA.SQLCODE.IsEqualTo(100))))        //COBOL==> IF SQLCODE NOT = ZERO AND SQLCODE NOT = 100
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(161);                                                                //COBOL==> MOVE 161 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RLF");                                                              //COBOL==> MOVE 'RLF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_7200_CHECK_AE_PARTICIPATION") { M_7200_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_7200_EXIT
        /// </summary>
        private void M_7200_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_7200_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_7200_EXIT") { M_91100_CONVERT_DATE_ADA_TO_DB2(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_91100_CONVERT_DATE_ADA_TO_DB2 //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: ** GQB 02/27/2014 - CLIENT POINTER INFORMATION CODE AREA
        ///COMMENT: ****************************************************************
        ///COMMENT:                                                                *
        ///COMMENT:  INCLUDE NAME:  SWCSZG88.                                      *
        ///COMMENT:      EAB NAME:  EXTERNAL PROGRAMS CONVERTED TO DB2             *
        ///COMMENT:   DESCRIPTION:  98000-SELECT-CLIENT-BASIC.                     *
        ///COMMENT:                 99000-CLIENT-POINTER-ROUTINE.                  *
        ///COMMENT:      LOCATION:  PROCEDURE DIVISION.                            *
        ///COMMENT:                                                                *
        ///COMMENT:       ACTIONS:  1. SELECT KSD_CLIENT
        ///COMMENT:                    USING CLIENT NUMBER, CLIENT NAME, CLIENT SSN
        ///COMMENT:                      RETURN VERIFIED-SSN-FLAG
        ///COMMENT:                 2. FETCH KSD_SYSTEM_PART
        ///COMMENT:                    USING CLIENT NUMBER, CLIENT NAME, CLIENT SSN
        ///COMMENT:                      RETURN SYSTEM CODE, PARTICIPATION FLAG
        ///COMMENT:                 3. POPULATE CLIENT POINTER WITH RETURN FIELDS
        ///COMMENT:       CREATED:  27-FEB-2014.
        ///COMMENT:            BY:  GQB - GADI BRAMSON                             *
        ///COMMENT:                                                                *
        ///COMMENT: ** MAINTENANCE *************************************************
        ///COMMENT:                       CHANGE
        ///COMMENT:    DATE      AUTHOR   CONTROL DESCRIPTION
        ///COMMENT:  ---------- --------- ------- ----------------------------------
        ///COMMENT:  02/17/2014 G.BRAMSON CQ35825 ADABAS TO DB2 KEES PHASE 3 CHANGES
        ///COMMENT:  02/27/2014 G.BRAMSON CQ35825 BUILD AND RETURN CLIENT POINTER
        ///COMMENT:  03/04/2014 G.BRAMSON CQ35825 READ CLIENT BASIC
        ///COMMENT:  03/05/2014 G.BRAMSON CQ35825 CONVERT DATES ADABAS TO DB2 VERS.
        ///COMMENT:  07/24/2014 G.BRAMSON CQ35825 SKIP CLIENT SELECT DEPENDING FLAG.
        ///COMMENT:  08/29/2017 RKM               ADD WITH UR TO QUERIES
        ///COMMENT: ****************************************************************
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_91100_CONVERT_DATE_ADA_TO_DB2(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            // EvaluateList !TRUE!                                                                              //COBOL==> EVALUATE TRUE
            if ((WS.WS9_DATE_ADA.IsSpaces()) || (WS.WS9_DATE_ADA.IsZeros()))                                //COBOL==> WHEN WS9-DATE-ADA = SPACE OR WS9-DATE-ADA = ZERO
            {
                WS.WS9_DATE_ADA.SetValue("00010101");                                                               //COBOL==> MOVE '00010101' TO WS9-DATE-ADA
            }                                                                                               //COBOL==> WHEN WS9-DATE-ADA = '99999999'
            else
            if (WS.WS9_DATE_ADA.IsEqualTo("99999999"))
            {
                WS.WS9_DATE_ADA.SetValue("20991231");                                                               //COBOL==> MOVE '20991231' TO WS9-DATE-ADA
            }                                                                                                   //COBOL==> END-EVALUATE.
            WS.WS9_DATE_DB2.SetValueOfSubstring(5, 1, "-");                                                     //COBOL==> MOVE '-' TO WS9-DATE-DB2 ( 5:1 ) WS9-DATE-DB2 ( 8:1 ) .
            WS.WS9_DATE_DB2.SetValueOfSubstring(8, 1, "-");
            WS.WS9_DATE_DB2.SetValueOfSubstring(1, 4, WS.WS9_DATE_ADA.GetSubstring(1, 4).AsString());           //COBOL==> MOVE WS9-DATE-ADA ( 1:4 ) TO WS9-DATE-DB2 ( 1:4 ) .
            WS.WS9_DATE_DB2.SetValueOfSubstring(6, 2, WS.WS9_DATE_ADA.GetSubstring(5, 2).AsString());           //COBOL==> MOVE WS9-DATE-ADA ( 5:2 ) TO WS9-DATE-DB2 ( 6:2 ) .
            WS.WS9_DATE_DB2.SetValueOfSubstring(9, 2, WS.WS9_DATE_ADA.GetSubstring(7, 2).AsString());           //COBOL==> MOVE WS9-DATE-ADA ( 7:2 ) TO WS9-DATE-DB2 ( 9:2 ) .
            if (returnMethod != "" && returnMethod != "M_91100_CONVERT_DATE_ADA_TO_DB2") { M_91100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_91100_EXIT
        /// </summary>
        private void M_91100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_91100_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_91100_EXIT") { M_91200_CONVERT_DATE_DB2_TO_ADA(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_91200_CONVERT_DATE_DB2_TO_ADA //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_91200_CONVERT_DATE_DB2_TO_ADA(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            WS.WS9_DATE_ADA.SetValueOfSubstring(1, 4, WS.WS9_DATE_DB2.GetSubstring(1, 4).AsString());           //COBOL==> MOVE WS9-DATE-DB2 ( 1:4 ) TO WS9-DATE-ADA ( 1:4 ) .
            WS.WS9_DATE_ADA.SetValueOfSubstring(5, 2, WS.WS9_DATE_DB2.GetSubstring(6, 2).AsString());           //COBOL==> MOVE WS9-DATE-DB2 ( 6:2 ) TO WS9-DATE-ADA ( 5:2 ) .
            WS.WS9_DATE_ADA.SetValueOfSubstring(7, 2, WS.WS9_DATE_DB2.GetSubstring(9, 2).AsString());           //COBOL==> MOVE WS9-DATE-DB2 ( 9:2 ) TO WS9-DATE-ADA ( 7:2 ) .
            if (returnMethod != "" && returnMethod != "M_91200_CONVERT_DATE_DB2_TO_ADA") { M_91200_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_91200_EXIT
        /// </summary>
        private void M_91200_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_91200_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_91200_EXIT") { M_98000_SELECT_CLIENT_BASIC(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_98000_SELECT_CLIENT_BASIC //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_98000_SELECT_CLIENT_BASIC(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            WS.WS9_ABEND_FIELDS.ResetToInitialValue();                                                          //COBOL==> INITIALIZE WS9-ABEND-FIELDS.
            DbConv.ExecuteSqlQuery("SELECT CLIENT_NUMBER , CLIENT_GIVEN_NAME , CLIENT_INITIALS , CLIENT_SURNAME , CIS_REPL_IND , SSN , GENDER , DATE_OF_BIRTH INTO {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} FROM KSD_CLIENT_BASIC WHERE CLIENT_NUMBER = {8} WITH UR ",  //COBOL==> EXEC SQL SELECT CLIENT_NUMBER , CLIENT_GIVEN_NAME , CLIENT_INITIALS , CLIENT_SURNAME , CIS_REPL_IND , SSN , GENDER , DATE_OF_BIRTH INTO :CLB9-CLIENT-NUMBER , :CLB9-CLIENT-GIVEN-NAME , :CLB9-CLIENT-INITIALS , :CLB9-CLIENT-SURNAME , :CLB9-CIS-REPL-IND , :CLB9-SSN , :CLB9-GENDER , :CLB9-DATE-OF-BIRTH FROM KSD_CLIENT_BASIC WHERE CLIENT_NUMBER = :DBK9-CLIENT-NUMBER WITH UR END-EXEC.
                                 WS.CLB9_CLIENT_NUMBER, WS.CLB9_CLIENT_GIVEN_NAME, WS.CLB9_CLIENT_INITIALS, WS.CLB9_CLIENT_SURNAME, WS.CLB9_CIS_REPL_IND, WS.CLB9_SSN, WS.CLB9_GENDER, WS.CLB9_DATE_OF_BIRTH, WS.DBK9_CLIENT_NUMBER);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN 100
            else
            if ((WS.SQLCA.SQLCODE.IsEqualTo(100)))
            {
                WS.WS9_ABEND_TYPE.SetValue("A");                                                                    //COBOL==> MOVE 'A' TO WS9-ABEND-TYPE
                WS.WS9_ADA_FILE_NUMBER.SetValue(154);                                                               //COBOL==> MOVE 154 TO WS9-ADA-FILE-NUMBER
                WS.WS9_ADA_FILE_ACTION.SetValue(" NF");                                                             //COBOL==> MOVE ' NF' TO WS9-ADA-FILE-ACTION
                WS.WS9_ADA_RESPONSE_CD.SetValueWithZeroes();                                                        //COBOL==> MOVE ZERO TO WS9-ADA-RESPONSE-CD
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.WS9_ABEND_TYPE.SetValue("A");                                                                    //COBOL==> MOVE 'A' TO WS9-ABEND-TYPE
                WS.WS9_ADA_FILE_NUMBER.SetValue(154);                                                               //COBOL==> MOVE 154 TO WS9-ADA-FILE-NUMBER
                WS.WS9_ADA_FILE_ACTION.SetValue("RI");                                                              //COBOL==> MOVE 'RI' TO WS9-ADA-FILE-ACTION
                WS.WS9_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                  //COBOL==> MOVE SQLCODE TO WS9-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_98000_SELECT_CLIENT_BASIC") { M_98000_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_98000_EXIT
        /// </summary>
        private void M_98000_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_98000_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_98000_EXIT") { M_98100_SELECT_CLIENT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_98100_SELECT_CLIENT //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_98100_SELECT_CLIENT(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            //COMMENT:     DISPLAY '98100-SELECT-CLIENT:' SW9-SELECT-CLIENT-SW
            WS.WS9_ABEND_FIELDS.ResetToInitialValue();                                                          //COBOL==> INITIALIZE WS9-ABEND-FIELDS.
            DbConv.ExecuteSqlQuery("SELECT VERIFIED_SSN_FLAG INTO {0} FROM KSD_CLIENT WHERE FK_CLB_CLIENT_NO = {1} AND CLIENT_NAME = {2} AND SSN = {3} WITH UR ",  //COBOL==> EXEC SQL SELECT VERIFIED_SSN_FLAG INTO :CL9-VERIFIED-SSN-FLAG FROM KSD_CLIENT WHERE FK_CLB_CLIENT_NO = :DBK9-CLIENT-NUMBER AND CLIENT_NAME = :DBK9-CLIENT-NAME AND SSN = :DBK9-SSN WITH UR END-EXEC.
                                 WS.CL9_VERIFIED_SSN_FLAG, WS.DBK9_CLIENT_NUMBER, WS.DBK9_CLIENT_NAME, WS.DBK9_SSN);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                WS.WS9_VERIFIED_SSN_FLAG.SetValue(WS.CL9_VERIFIED_SSN_FLAG);                                        //COBOL==> MOVE CL9-VERIFIED-SSN-FLAG TO WS9-VERIFIED-SSN-FLAG
            }                                                                                                //COBOL==> WHEN 100
            else
            if ((WS.SQLCA.SQLCODE.IsEqualTo(100)))
            {
                WS.WS9_ABEND_TYPE.SetValue("A");                                                                    //COBOL==> MOVE 'A' TO WS9-ABEND-TYPE
                WS.WS9_ADA_FILE_NUMBER.SetValue(149);                                                               //COBOL==> MOVE 149 TO WS9-ADA-FILE-NUMBER
                WS.WS9_ADA_FILE_ACTION.SetValue(" NF");                                                             //COBOL==> MOVE ' NF' TO WS9-ADA-FILE-ACTION
                WS.WS9_ADA_RESPONSE_CD.SetValueWithZeroes();                                                        //COBOL==> MOVE ZERO TO WS9-ADA-RESPONSE-CD
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.WS9_ABEND_TYPE.SetValue("A");                                                                    //COBOL==> MOVE 'A' TO WS9-ABEND-TYPE
                WS.WS9_ADA_FILE_NUMBER.SetValue(149);                                                               //COBOL==> MOVE 149 TO WS9-ADA-FILE-NUMBER
                WS.WS9_ADA_FILE_ACTION.SetValue("RLF");                                                             //COBOL==> MOVE 'RLF' TO WS9-ADA-FILE-ACTION
                WS.WS9_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                  //COBOL==> MOVE SQLCODE TO WS9-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_98100_SELECT_CLIENT") { M_98100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_98100_EXIT
        /// </summary>
        private void M_98100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_98100_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_98100_EXIT") { M_99000_CLIENT_POINTER_ROUTINE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99000_CLIENT_POINTER_ROUTINE //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_99000_CLIENT_POINTER_ROUTINE(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            M_99100_PROCESS_INIT("M_99100_EXIT"); if (Control.ExitProgram) { return; }                            //COBOL==> PERFORM 99100-PROCESS-INIT.
            M_99200_PROCESS_MAIN("M_99200_EXIT"); if (Control.ExitProgram) { return; }                            //COBOL==> PERFORM 99200-PROCESS-MAIN.
            if (returnMethod != "" && returnMethod != "M_99000_CLIENT_POINTER_ROUTINE") { M_99000_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99000_EXIT
        /// </summary>
        private void M_99000_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99000_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99000_EXIT") { M_99100_PROCESS_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99100_PROCESS_INIT //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_99100_PROCESS_INIT(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            //COMMENT:     INITIALIZE WS9-CLIENT-POINTER
            WS.WS9_ABEND_FIELDS.ResetToInitialValue();                                                          //COBOL==> INITIALIZE WS9-ABEND-FIELDS.
            WS.WS9_CLIENT_ID.SetValue(WS.DBK9_CLIENT_NUMBER);                                                   //COBOL==> MOVE DBK9-CLIENT-NUMBER TO WS9-CLIENT-ID.
            WS.SW9_EOF_NOT_FOUND.SetValue(true);                                                                //COBOL==> SET SW9-EOF-NOT-FOUND TO TRUE.
            WS.SW9_ERR_NO.SetValue(true);                                                                       //COBOL==> SET SW9-ERR-NO TO TRUE.
            if (returnMethod != "" && returnMethod != "M_99100_PROCESS_INIT") { M_99100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99100_EXIT
        /// </summary>
        private void M_99100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99100_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99100_EXIT") { M_99200_PROCESS_MAIN(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99200_PROCESS_MAIN //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_99200_PROCESS_MAIN(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            //COMMENT:     DISPLAY '992200- CLIENT SELECT SW:' SW9-SELECT-CLIENT-SW
            if (WS.SW9_SELECT_CLIENT_YES.Value)                                                                 //COBOL==> IF SW9-SELECT-CLIENT-YES
            {
                M_98100_SELECT_CLIENT("M_98100_EXIT"); if (Control.ExitProgram) { return; }                           //COBOL==> PERFORM 98100-SELECT-CLIENT
                if (!(WS.SQLCA.SQLCODE.IsZeros()))                                                                  //COBOL==> IF SQLCODE NOT = ZERO
                {
                    M_99200_EXIT(CheckGotoReturn(returnMethod)); return;                                                //COBOL==> GO TO 99200-EXIT
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT:     PERFORM 99400-DECLARE-SPA-VIEW.
                                                                                                                //COMMENT:     IF SW9-ERR-YES
                                                                                                                //COMMENT:        GO TO 99200-EXIT
                                                                                                                //COMMENT:     END-IF.
            M_99500_OPEN_SPA_VIEW("M_99500_EXIT"); if (Control.ExitProgram) { return; }                           //COBOL==> PERFORM 99500-OPEN-SPA-VIEW.
            if (WS.SW9_ERR_YES.Value)                                                                           //COBOL==> IF SW9-ERR-YES
            {
                M_99200_EXIT(CheckGotoReturn(returnMethod)); return;                                                //COBOL==> GO TO 99200-EXIT
            }                                                                                                   //COBOL==> END-IF.
            while (!((WS.SW9_EOF_YES.Value) || (WS.SW9_ERR_YES.Value)))                                         //COBOL==> PERFORM 99600-FETCH-SPA-VIEW UNTIL SW9-EOF-YES OR SW9-ERR-YES.
            {
                M_99600_FETCH_SPA_VIEW("M_99600_EXIT"); if (Control.ExitProgram) { return; }
            }
            M_99900_CLOSE_SPA_VIEW("M_99900_EXIT"); if (Control.ExitProgram) { return; }                          //COBOL==> PERFORM 99900-CLOSE-SPA-VIEW THRU 99900-EXIT.
            if (returnMethod != "" && returnMethod != "M_99200_PROCESS_MAIN") { M_99200_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99200_EXIT
        /// </summary>
        private void M_99200_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99200_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99200_EXIT") { M_99400_DECLARE_SPA_VIEW(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99400_DECLARE_SPA_VIEW //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_99400_DECLARE_SPA_VIEW(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            //COMMENT:     DISPLAY '99400- CLIENT SELECT SW:' SW9-SELECT-CLIENT-SW.
            //COMMENT: ** GQB TEMPORARY CODE FOR DISPLAY ***
            //COMMENT:     MOVE 'CLIENT NUMBER/SPA-VIEW  =' TO WS9-MSG-FIELD.
            //COMMENT:     MOVE DBK9-CLIENT-NUMBER          TO WS9-MSG-VALUE.
            //COMMENT:     DISPLAY WS9-MSG-X.
            //COMMENT:     MOVE 'SSN/SPA-VIEW            =' TO WS9-MSG-FIELD.
            //COMMENT:     MOVE DBK9-SSN                    TO WS9-MSG-VALUE.
            //COMMENT:     DISPLAY WS9-MSG-X.
            //COMMENT:     MOVE 'CLIENT NAME/SPA-VIEW    =' TO WS9-MSG-FIELD.
            //COMMENT:     MOVE DBK9-CLIENT-NAME            TO WS9-MSG-VALUE.
            //COMMENT:     DISPLAY WS9-MSG-X.
            DbConv.SetQueryText("SPA-VIEW", "SELECT SYSTEM_CODE, PARTICIPATION_FLAG FROM KSD_SYSTEM_PART WHERE FK_CLB_CLIENT_NO = {0}  AND FK_CLI_CLIENT_NAME = {1}  AND FK_CLI_SSN = {2}  WITH UR",  //COBOL==> EXEC SQL DECLARE SPA-VIEW CURSOR FOR SELECT SYSTEM_CODE , PARTICIPATION_FLAG FROM KSD_SYSTEM_PART WHERE FK_CLB_CLIENT_NO = :DBK9-CLIENT-NUMBER AND FK_CLI_CLIENT_NAME = :DBK9-CLIENT-NAME AND FK_CLI_SSN = :DBK9-SSN WITH UR END-EXEC.
                                WS.DBK9_CLIENT_NUMBER, WS.DBK9_CLIENT_NAME, WS.DBK9_SSN);
            if (returnMethod != "" && returnMethod != "M_99400_DECLARE_SPA_VIEW") { M_99400_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99400_EXIT
        /// </summary>
        private void M_99400_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99400_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99400_EXIT") { M_99500_OPEN_SPA_VIEW(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99500_OPEN_SPA_VIEW //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_99500_OPEN_SPA_VIEW(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            //COMMENT:     DISPLAY '99500- CLIENT SELECT SW:' SW9-SELECT-CLIENT-SW
            DbConv.OpenReader("SPA-VIEW");                                                                      //COBOL==> EXEC SQL OPEN SPA-VIEW END-EXEC.
                                                                                                                // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.WS9_ABEND_TYPE.SetValue("A");                                                                    //COBOL==> MOVE 'A' TO WS9-ABEND-TYPE
                WS.WS9_ADA_FILE_NUMBER.SetValue(149);                                                               //COBOL==> MOVE 149 TO WS9-ADA-FILE-NUMBER
                WS.WS9_ADA_FILE_ACTION.SetValue("RLF");                                                             //COBOL==> MOVE 'RLF' TO WS9-ADA-FILE-ACTION
                WS.WS9_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                  //COBOL==> MOVE SQLCODE TO WS9-ADA-RESPONSE-CD
                WS.SW9_ERR_YES.SetValue(true);                                                                      //COBOL==> SET SW9-ERR-YES TO TRUE
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_99500_OPEN_SPA_VIEW") { M_99500_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99500_EXIT
        /// </summary>
        private void M_99500_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99500_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99500_EXIT") { M_99600_FETCH_SPA_VIEW(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99600_FETCH_SPA_VIEW //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_99600_FETCH_SPA_VIEW(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            //COMMENT:     DISPLAY '99600- CLIENT SELECT SW:' SW9-SELECT-CLIENT-SW
            DbConv.FetchReaderRow("SPA-VIEW",                                                                //COBOL==> EXEC SQL FETCH SPA-VIEW INTO :SP9-SYSTEM-CODE , :SP9-PARTICIPATION-FLAG END-EXEC.
                             WS.SP9_SYSTEM_CODE, WS.SP9_PARTICIPATION_FLAG);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                WS.SW9_EOF_NO.SetValue(true);                                                                       //COBOL==> SET SW9-EOF-NO TO TRUE
                M_99610_POPULATE_SYSTEM_CODE("M_99610_EXIT"); if (Control.ExitProgram) { return; }                    //COBOL==> PERFORM 99610-POPULATE-SYSTEM-CODE
            }                                                                                                //COBOL==> WHEN 100
            else
            if ((WS.SQLCA.SQLCODE.IsEqualTo(100)))
            {
                WS.SW9_EOF_YES.SetValue(true);                                                                      //COBOL==> SET SW9-EOF-YES TO TRUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.WS9_ABEND_TYPE.SetValue("A");                                                                    //COBOL==> MOVE 'A' TO WS9-ABEND-TYPE
                WS.WS9_ADA_FILE_NUMBER.SetValue(149);                                                               //COBOL==> MOVE 149 TO WS9-ADA-FILE-NUMBER
                WS.WS9_ADA_FILE_ACTION.SetValue("RLF");                                                             //COBOL==> MOVE 'RLF' TO WS9-ADA-FILE-ACTION
                WS.WS9_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                  //COBOL==> MOVE SQLCODE TO WS9-ADA-RESPONSE-CD
                WS.SW9_ERR_YES.SetValue(true);                                                                      //COBOL==> SET SW9-ERR-YES TO TRUE
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_99600_FETCH_SPA_VIEW") { M_99600_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99600_EXIT
        /// </summary>
        private void M_99600_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99600_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99600_EXIT") { M_99610_POPULATE_SYSTEM_CODE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99610_POPULATE_SYSTEM_CODE //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_99610_POPULATE_SYSTEM_CODE(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            // EvaluateList !TRUE!                                                                              //COBOL==> EVALUATE TRUE
            if (WS.SP9_SYSTEM_CODE.IsEqualTo(WS.WS9_SYSTEM_CODE_AE))                                        //COBOL==> WHEN SP9-SYSTEM-CODE = WS9-SYSTEM-CODE-AE
            {
                WS.WS9_SYS_PART_AE.SetValue(WS.SP9_PARTICIPATION_FLAG);                                             //COBOL==> MOVE SP9-PARTICIPATION-FLAG TO WS9-SYS-PART-AE
            }                                                                                               //COBOL==> WHEN SP9-SYSTEM-CODE = WS9-SYSTEM-CODE-CS
            else
            if (WS.SP9_SYSTEM_CODE.IsEqualTo(WS.WS9_SYSTEM_CODE_CS))
            {
                WS.WS9_SYS_PART_CSE.SetValue(WS.SP9_PARTICIPATION_FLAG);                                            //COBOL==> MOVE SP9-PARTICIPATION-FLAG TO WS9-SYS-PART-CSE
            }                                                                                               //COBOL==> WHEN SP9-SYSTEM-CODE = WS9-SYSTEM-CODE-KA
            else
            if (WS.SP9_SYSTEM_CODE.IsEqualTo(WS.WS9_SYSTEM_CODE_KA))
            {
                WS.WS9_SYS_PART_KANPAY.SetValue(WS.SP9_PARTICIPATION_FLAG);                                         //COBOL==> MOVE SP9-PARTICIPATION-FLAG TO WS9-SYS-PART-KANPAY
            }                                                                                               //COBOL==> WHEN SP9-SYSTEM-CODE = WS9-SYSTEM-CODE-KS
            else
            if (WS.SP9_SYSTEM_CODE.IsEqualTo(WS.WS9_SYSTEM_CODE_KS))
            {
                WS.WS9_SYS_PART_KSCARES.SetValue(WS.SP9_PARTICIPATION_FLAG);                                        //COBOL==> MOVE SP9-PARTICIPATION-FLAG TO WS9-SYS-PART-KSCARES
            }                                                                                               //COBOL==> WHEN SP9-SYSTEM-CODE = WS9-SYSTEM-CODE-FA
            else
            if (WS.SP9_SYSTEM_CODE.IsEqualTo(WS.WS9_SYSTEM_CODE_FA))
            {
                WS.WS9_SYS_PART_FACTS.SetValue(WS.SP9_PARTICIPATION_FLAG);                                          //COBOL==> MOVE SP9-PARTICIPATION-FLAG TO WS9-SYS-PART-FACTS
            }                                                                                               //COBOL==> WHEN OTHER
            else
            {
                //COMMENT: ** GQB DISPLAY SQL ERROR MESSAGE ***
                WS.WS9_MSG_1.SetValue("99610-POPULATE FAILED.    SYSTEM-CODE NOT DEFINED=");                        //COBOL==> MOVE '99610-POPULATE FAILED.    SYSTEM-CODE NOT DEFINED=' TO WS9-MSG-1
                WS.WS9_MSG_CODE.SetValue(WS.SP9_SYSTEM_CODE);                                                       //COBOL==> MOVE SP9-SYSTEM-CODE TO WS9-MSG-CODE
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_99610_POPULATE_SYSTEM_CODE") { M_99610_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99610_EXIT
        /// </summary>
        private void M_99610_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99610_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99610_EXIT") { M_99900_CLOSE_SPA_VIEW(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99900_CLOSE_SPA_VIEW //Section
        /// </summary>
        /// <remarks>
        ///COMMENT: -----------------------------------------------------------------
        /// </remarks>
        private void M_99900_CLOSE_SPA_VIEW(string returnMethod = "")
        {
            //COMMENT: -----------------------------------------------------------------
            //COMMENT:     DISPLAY '99900- CLIENT SELECT SW:' SW9-SELECT-CLIENT-SW
            DbConv.CloseReader("SPA-VIEW");                                                                     //COBOL==> EXEC SQL CLOSE SPA-VIEW END-EXEC.
            if (WS.SW9_ERR_YES.Value)                                                                           //COBOL==> IF SW9-ERR-YES
            {
                M_99900_EXIT(CheckGotoReturn(returnMethod)); return;                                                //COBOL==> GO TO 99900-EXIT
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.WS9_ABEND_TYPE.SetValue("A");                                                                    //COBOL==> MOVE 'A' TO WS9-ABEND-TYPE
                WS.WS9_ADA_FILE_NUMBER.SetValue(149);                                                               //COBOL==> MOVE 149 TO WS9-ADA-FILE-NUMBER
                WS.WS9_ADA_FILE_ACTION.SetValue("RLF");                                                             //COBOL==> MOVE 'RLF' TO WS9-ADA-FILE-ACTION
                WS.WS9_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                  //COBOL==> MOVE SQLCODE TO WS9-ADA-RESPONSE-CD
                WS.SW9_ERR_YES.SetValue(true);                                                                      //COBOL==> SET SW9-ERR-YES TO TRUE
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_99900_CLOSE_SPA_VIEW") { M_99900_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99900_EXIT
        /// </summary>
        private void M_99900_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99900_EXIT") { return; }                                                     //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
