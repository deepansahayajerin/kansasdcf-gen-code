#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2021
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2021-11-16 12:41:12 PM
   **        *   FROM COBOL PGM   :  SWEXIR10
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                   INFORMATION ENGINEERING FACILITY (TM)
                       TEXAS INSTRUMENTS INC.
                COPYRIGHT (C) TEXAS INSTRUMENTS INC. 1995
       NAME: EAB_READ_ALIAS                   DATE: 95/11/09
       TARGET OS:   MVS                       TIME: 10:01:24
       TARGET DBMS: DB2                       USER: SWMTMJF
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
   **************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.UI.Angular;
using MDSY.Framework.Control.CICS;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
using GOV.KS.DCF.CSS.Common.BL;

/*  usings for referenced objects  */
#endregion

namespace GOV.KS.DCF.CSS.Online.BL
{
    #region Working Storage Class
    internal class SWEXIR10_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXIR10_ws_WorkingStorage";
            internal const string ADIM1 = "ADIM1";
            internal const string ADIM2 = "ADIM2";
            internal const string ADIM3 = "ADIM3";
            internal const string OUTPUT_GROUP_ALIASES_0001FL = "OUTPUT_GROUP_ALIASES_0001FL";
            internal const string OUTPUT_GROUP_ALIASES_0001PS = "OUTPUT_GROUP_ALIASES_0001PS";
            internal const string OUTPUT_GROUP_ALIASES_0001RF = "OUTPUT_GROUP_ALIASES_0001RF";
            internal const string FUNC_0544735563_ESC_FLAG = "FUNC_0544735563_ESC_FLAG";
            internal const string EXTERNAL_ACTION_BLOCK_WS = "EXTERNAL_ACTION_BLOCK_WS";
            internal const string SRADALNK = "SRADALNK";
            internal const string SRMODLNK = "SRMODLNK";
            internal const string MV_ABEND_FIELDS = "MV_ABEND_FIELDS";
            internal const string MV_ABEND_TYPE = "MV_ABEND_TYPE";
            internal const string MV_ABEND_TYPE_NONE = "MV_ABEND_TYPE_NONE";
            internal const string MV_ABEND_TYPE_ADABAS = "MV_ABEND_TYPE_ADABAS";
            internal const string MV_ABEND_TYPE_CICS = "MV_ABEND_TYPE_CICS";
            internal const string MV_ABEND_ADABAS = "MV_ABEND_ADABAS";
            internal const string MV_ADA_FILE_NUMBER = "MV_ADA_FILE_NUMBER";
            internal const string MV_ADA_FILE_ACTION = "MV_ADA_FILE_ACTION";
            internal const string MV_ADA_RESPONSE_CD = "MV_ADA_RESPONSE_CD";
            internal const string MV_ABEND_CICS = "MV_ABEND_CICS";
            internal const string MV_CICS_RESOURCE_NM = "MV_CICS_RESOURCE_NM";
            internal const string MV_CICS_FUNCTION_CD = "MV_CICS_FUNCTION_CD";
            internal const string MV_CICS_RESPONSE_CD = "MV_CICS_RESPONSE_CD";
            internal const string MV_SWITCHES = "MV_SWITCHES";
            internal const string MV_EOF_SW = "MV_EOF_SW";
            internal const string MV_EOF_NOT_FOUND = "MV_EOF_NOT_FOUND";
            internal const string MV_EOF_NO = "MV_EOF_NO";
            internal const string MV_EOF_YES = "MV_EOF_YES";
            internal const string MV_ERR_SW = "MV_ERR_SW";
            internal const string MV_ERR_NO = "MV_ERR_NO";
            internal const string MV_ERR_YES = "MV_ERR_YES";
            internal const string PREFETCH_ADDRESSING_AREA = "PREFETCH_ADDRESSING_AREA";
            internal const string PRF_POINTER_CLIENT_DBF = "PRF_POINTER_CLIENT_DBF";
            internal const string PRF_SUB = "PRF_SUB";
            internal const string MC_CLIENT_ENTRY_MAX = "MC_CLIENT_ENTRY_MAX";
            internal const string MC_CLIENT_ENTRY_EXP = "MC_CLIENT_ENTRY_EXP";
            internal const string MV_CLIENT_ENTRY_NUM = "MV_CLIENT_ENTRY_NUM";
            internal const string MV_CLIENT_ENTRY_SUB = "MV_CLIENT_ENTRY_SUB";
            internal const string MV_ABS_TIME = "MV_ABS_TIME";
            internal const string MV_CCYYMMDD_X8 = "MV_CCYYMMDD_X8";
            internal const string MV_CC = "MV_CC";
            internal const string MV_YYMMDD = "MV_YYMMDD";
            internal const string MV_YY = "MV_YY";
            internal const string MV_MM = "MV_MM";
            internal const string MV_DD = "MV_DD";
            internal const string MV_CURRENT_CCYY = "MV_CURRENT_CCYY";
            internal const string MV_CURRENT_MMDD = "MV_CURRENT_MMDD";
            internal const string MV_RECORD_NAME = "MV_RECORD_NAME";
            internal const string MV_RECORD_LAST_NAME = "MV_RECORD_LAST_NAME";
            internal const string MV_RECORD_FIRST_NAME = "MV_RECORD_FIRST_NAME";
            internal const string MV_RECORD_FIRST_NAME_1 = "MV_RECORD_FIRST_NAME_1";
            internal const string MV_RECORD_FIRST_NAME_11 = "MV_RECORD_FIRST_NAME_11";
            internal const string MV_RECORD_INITIAL = "MV_RECORD_INITIAL";
            internal const string MV_DATE_OF_BIRTH_SEX = "MV_DATE_OF_BIRTH_SEX";
            internal const string MV_DATE_OF_BIRTH_X8 = "MV_DATE_OF_BIRTH_X8";
            internal const string MV_DATE_OF_BIRTH = "MV_DATE_OF_BIRTH";
            internal const string MV_BIRTH_CCYY = "MV_BIRTH_CCYY";
            internal const string MV_BIRTH_MMDD = "MV_BIRTH_MMDD";
            internal const string MV_SEX = "MV_SEX";
            internal const string MV_SSN_X9 = "MV_SSN_X9";
            internal const string MV_SSN = "MV_SSN";
            internal const string MV_SYSTEM_CODES = "MV_SYSTEM_CODES";
            internal const string MV_SYSTEM_CODE_AE = "MV_SYSTEM_CODE_AE";
            internal const string MV_SYSTEM_CODE_CS = "MV_SYSTEM_CODE_CS";
            internal const string MV_SYSTEM_CODE_KA = "MV_SYSTEM_CODE_KA";
            internal const string MV_SYSTEM_CODE_KS = "MV_SYSTEM_CODE_KS";
            internal const string MV_SYSTEM_CODE_FA = "MV_SYSTEM_CODE_FA";
            internal const string MV_SYSTEM_CODE_KM = "MV_SYSTEM_CODE_KM";
            internal const string MV_CLIENT_POINTER = "MV_CLIENT_POINTER";
            internal const string MV_CLIENT_ID = "MV_CLIENT_ID";
            internal const string MV_CLIENT_POINTER_X21 = "MV_CLIENT_POINTER_X21";
            internal const string MV_VERIFIED_SSN_FLAG = "MV_VERIFIED_SSN_FLAG";
            internal const string MV_SYSTEM_PARTICIPATION = "MV_SYSTEM_PARTICIPATION";
            internal const string MV_SYS_PART_AE = "MV_SYS_PART_AE";
            internal const string MV_SYS_PART_AE_YES = "MV_SYS_PART_AE_YES";
            internal const string MV_SYS_PART_CSE = "MV_SYS_PART_CSE";
            internal const string MV_SYS_PART_CSE_YES = "MV_SYS_PART_CSE_YES";
            internal const string MV_SYS_PART_KANPAY = "MV_SYS_PART_KANPAY";
            internal const string MV_SYS_PART_KANPAY_YES = "MV_SYS_PART_KANPAY_YES";
            internal const string MV_SYS_PART_KSCARES = "MV_SYS_PART_KSCARES";
            internal const string MV_SYS_PART_KSCARES_YES = "MV_SYS_PART_KSCARES_YES";
            internal const string MV_SYS_PART_FACTS = "MV_SYS_PART_FACTS";
            internal const string MV_SYS_PART_FACTS_YES = "MV_SYS_PART_FACTS_YES";
            internal const string MV_SYS_PART_KMIS = "MV_SYS_PART_KMIS";
            internal const string MV_SYS_PART_KMIS_YES = "MV_SYS_PART_KMIS_YES";
            internal const string MVW_CLIENT_KEY = "MVW_CLIENT_KEY";
            internal const string MVW_CLIENT_ID = "MVW_CLIENT_ID";
            internal const string MVW_CLIENT_NAME = "MVW_CLIENT_NAME";
            internal const string MVW_SSN = "MVW_SSN";
            internal const string MVW_DATE_OF_BIRTH_SEX = "MVW_DATE_OF_BIRTH_SEX";
            internal const string MVW_CLIENT_POINTER_X21 = "MVW_CLIENT_POINTER_X21";
            internal const string IMP_CLIENT_NUMBER_X10 = "IMP_CLIENT_NUMBER_X10";
            internal const string IMP_CLIENT_NUMBER = "IMP_CLIENT_NUMBER";
            internal const string MV_CLIENT_ARRAY = "MV_CLIENT_ARRAY";
            internal const string MV_CLIENT_ENTRY = "MV_CLIENT_ENTRY";
            internal const string MV_CLIENT_NAME = "MV_CLIENT_NAME";
            internal const string MV_CLIENT_LAST_NAME = "MV_CLIENT_LAST_NAME";
            internal const string MV_CLIENT_FIRST_NAME = "MV_CLIENT_FIRST_NAME";
            internal const string MV_CLIENT_INITIAL = "MV_CLIENT_INITIAL";
            internal const string MV_CLIENT_DATE_OF_BIRTH_SEX = "MV_CLIENT_DATE_OF_BIRTH_SEX";
            internal const string MV_CLIENT_DATE_OF_BIRTH_X8 = "MV_CLIENT_DATE_OF_BIRTH_X8";
            internal const string MV_CLIENT_DATE_OF_BIRTH = "MV_CLIENT_DATE_OF_BIRTH";
            internal const string MV_CLIENT_SEX = "MV_CLIENT_SEX";
            internal const string MV_CLIENT_SOC_SEC_NUM_X9 = "MV_CLIENT_SOC_SEC_NUM_X9";
            internal const string MV_CLIENT_SOC_SEC_NUM = "MV_CLIENT_SOC_SEC_NUM";
            internal const string MV_CLIENT_SYSTEM_PARTICIPATION = "MV_CLIENT_SYSTEM_PARTICIPATION";
            internal const string MV_CLIENT_SYS_PART_AE = "MV_CLIENT_SYS_PART_AE";
            internal const string MV_CLIENT_SYS_PART_CSE = "MV_CLIENT_SYS_PART_CSE";
            internal const string MV_CLIENT_SYS_PART_KANPAY = "MV_CLIENT_SYS_PART_KANPAY";
            internal const string MV_CLIENT_SYS_PART_KSCARES = "MV_CLIENT_SYS_PART_KSCARES";
            internal const string MV_CLIENT_SYS_PART_FACTS = "MV_CLIENT_SYS_PART_FACTS";
            internal const string MV_CLIENT_SYS_PART_KMIS = "MV_CLIENT_SYS_PART_KMIS";
            internal const string MV_CLIENT_KEY = "MV_CLIENT_KEY";
            internal const string DATABASE_KEYS = "DATABASE_KEYS";
            internal const string DBK_CLIENT_NUMBER = "DBK_CLIENT_NUMBER";
            internal const string DBK_CLIENT_NAME = "DBK_CLIENT_NAME";
            internal const string DBK_CLIENT_LAST_NAME = "DBK_CLIENT_LAST_NAME";
            internal const string DBK_CLIENT_FIRST_NAME = "DBK_CLIENT_FIRST_NAME";
            internal const string DBK_CLIENT_INITIAL = "DBK_CLIENT_INITIAL";
            internal const string DBK_SSN = "DBK_SSN";
            internal const string DCLKSD_CLIENT_BASIC = "DCLKSD_CLIENT_BASIC";
            internal const string CLIENTB_CLIENT_NUMBER = "CLIENTB_CLIENT_NUMBER";
            internal const string CLIENTB_CLIENT_GIVEN_NAME = "CLIENTB_CLIENT_GIVEN_NAME";
            internal const string CLIENTB_CLIENT_INITIALS = "CLIENTB_CLIENT_INITIALS";
            internal const string CLIENTB_CLIENT_SURNAME = "CLIENTB_CLIENT_SURNAME";
            internal const string CLIENTB_CIS_REPL_IND = "CLIENTB_CIS_REPL_IND";
            internal const string CLIENTB_WORK_PHONE = "CLIENTB_WORK_PHONE";
            internal const string CLIENTB_SSN = "CLIENTB_SSN";
            internal const string CLIENTB_GENDER = "CLIENTB_GENDER";
            internal const string CLIENTB_PARENT_RGHTS_SEV = "CLIENTB_PARENT_RGHTS_SEV";
            internal const string CLIENTB_PRNT_RGHTS_SEV_DT = "CLIENTB_PRNT_RGHTS_SEV_DT";
            internal const string CLIENTB_LEGAL_STATUS = "CLIENTB_LEGAL_STATUS";
            internal const string CLIENTB_INSURANCE_CODE = "CLIENTB_INSURANCE_CODE";
            internal const string CLIENTB_INITIAL_CUSTODY_DT = "CLIENTB_INITIAL_CUSTODY_DT";
            internal const string CLIENTB_HOME_PHONE = "CLIENTB_HOME_PHONE";
            internal const string CLIENTB_DATE_OF_BIRTH = "CLIENTB_DATE_OF_BIRTH";
            internal const string DCLKSD_CLIENT = "DCLKSD_CLIENT";
            internal const string CLIENT_SSN = "CLIENT_SSN";
            internal const string CLIENT_PREVIOUS_SSN = "CLIENT_PREVIOUS_SSN";
            internal const string CLIENT_PHONETIC_DATA = "CLIENT_PHONETIC_DATA";
            internal const string CLIENT_DT_OF_LAST_UPDATE = "CLIENT_DT_OF_LAST_UPDATE";
            internal const string CLIENT_DATE_OF_BIRTH = "CLIENT_DATE_OF_BIRTH";
            internal const string CLIENT_GENDER = "CLIENT_GENDER";
            internal const string CLIENT_VERIFIED_SSN_FLAG = "CLIENT_VERIFIED_SSN_FLAG";
            internal const string CLIENT_CLIENT_NAME = "CLIENT_CLIENT_NAME";
            internal const string CLIENT_CREATED_BY = "CLIENT_CREATED_BY";
            internal const string CLIENT_CREATED_TIMESTAMP = "CLIENT_CREATED_TIMESTAMP";
            internal const string CLIENT_LAST_MODIFIED_BY = "CLIENT_LAST_MODIFIED_BY";
            internal const string CLIENT_LAST_MODIFIED_TMST = "CLIENT_LAST_MODIFIED_TMST";
            internal const string CLIENT_FK_CLB_CLIENT_NO = "CLIENT_FK_CLB_CLIENT_NO";
            internal const string DCLKSD_SYSTEM_PART = "DCLKSD_SYSTEM_PART";
            internal const string SPART_SYSTEM_CODE = "SPART_SYSTEM_CODE";
            internal const string SPART_PARTICIPATION_FLAG = "SPART_PARTICIPATION_FLAG";
            internal const string SPART_CREATED_TIMESTAMP = "SPART_CREATED_TIMESTAMP";
            internal const string SPART_CREATED_BY = "SPART_CREATED_BY";
            internal const string SPART_LAST_MODIFIED_BY = "SPART_LAST_MODIFIED_BY";
            internal const string SPART_LAST_MODIFIED_TMST = "SPART_LAST_MODIFIED_TMST";
            internal const string SPART_FK_CLB_CLIENT_NO = "SPART_FK_CLB_CLIENT_NO";
            internal const string SPART_FK_CLI_CLIENT_NAME = "SPART_FK_CLI_CLIENT_NAME";
            internal const string SPART_FK_CLI_SSN = "SPART_FK_CLI_SSN";
            internal const string CONTROL_BLOCK = "CONTROL_BLOCK";
            internal const string COMMAND_CODE = "COMMAND_CODE";
            internal const string COMMAND_ID = "COMMAND_ID";
            internal const string FILE_NUMBER = "FILE_NUMBER";
            internal const string RESPONSE_CODE = "RESPONSE_CODE";
            internal const string ISN = "ISN";
            internal const string ISN_LOWER_LIMIT = "ISN_LOWER_LIMIT";
            internal const string ISN_QUANTITY = "ISN_QUANTITY";
            internal const string FORMAT_BUFFER_LENGTH = "FORMAT_BUFFER_LENGTH";
            internal const string RECORD_BUFFER_LENGTH = "RECORD_BUFFER_LENGTH";
            internal const string SEARCH_BUFFER_LENGTH = "SEARCH_BUFFER_LENGTH";
            internal const string VALUE_BUFFER_LENGTH = "VALUE_BUFFER_LENGTH";
            internal const string ISN_BUFFER_LENGTH = "ISN_BUFFER_LENGTH";
            internal const string COMMAND_OPTION_1 = "COMMAND_OPTION_1";
            internal const string COMMAND_OPTION_2 = "COMMAND_OPTION_2";
            internal const string ADDITIONS_1 = "ADDITIONS_1";
            internal const string ADDITIONS_2 = "ADDITIONS_2";
            internal const string ADDITIONS_3 = "ADDITIONS_3";
            internal const string ADDITIONS_4 = "ADDITIONS_4";
            internal const string COMMAND_TIME = "COMMAND_TIME";
            internal const string USER_AREA = "USER_AREA";
        }
        #endregion

        #region Direct-access element properties
        public IField ADIM1 { get { return GetElementByName<IField>(Names.ADIM1); } }
        public IField ADIM2 { get { return GetElementByName<IField>(Names.ADIM2); } }
        public IField ADIM3 { get { return GetElementByName<IField>(Names.ADIM3); } }
        public IField OUTPUT_GROUP_ALIASES_0001FL { get { return GetElementByName<IField>(Names.OUTPUT_GROUP_ALIASES_0001FL); } }
        public IField OUTPUT_GROUP_ALIASES_0001PS { get { return GetElementByName<IField>(Names.OUTPUT_GROUP_ALIASES_0001PS); } }
        public IField OUTPUT_GROUP_ALIASES_0001RF { get { return GetElementByName<IField>(Names.OUTPUT_GROUP_ALIASES_0001RF); } }
        public IField FUNC_0544735563_ESC_FLAG { get { return GetElementByName<IField>(Names.FUNC_0544735563_ESC_FLAG); } }
        public IGroup EXTERNAL_ACTION_BLOCK_WS { get { return GetElementByName<IGroup>(Names.EXTERNAL_ACTION_BLOCK_WS); } }
        public IField SRADALNK { get { return GetElementByName<IField>(Names.SRADALNK); } }
        public IField SRMODLNK { get { return GetElementByName<IField>(Names.SRMODLNK); } }
        public IGroup MV_ABEND_FIELDS { get { return GetElementByName<IGroup>(Names.MV_ABEND_FIELDS); } }
        public IField MV_ABEND_TYPE { get { return GetElementByName<IField>(Names.MV_ABEND_TYPE); } }
        public ICheckField MV_ABEND_TYPE_NONE { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_NONE); } }
        public ICheckField MV_ABEND_TYPE_ADABAS { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_ADABAS); } }
        public ICheckField MV_ABEND_TYPE_CICS { get { return GetElementByName<ICheckField>(Names.MV_ABEND_TYPE_CICS); } }
        public IGroup MV_ABEND_ADABAS { get { return GetElementByName<IGroup>(Names.MV_ABEND_ADABAS); } }
        public IField MV_ADA_FILE_NUMBER { get { return GetElementByName<IField>(Names.MV_ADA_FILE_NUMBER); } }
        public IField MV_ADA_FILE_ACTION { get { return GetElementByName<IField>(Names.MV_ADA_FILE_ACTION); } }
        public IField MV_ADA_RESPONSE_CD { get { return GetElementByName<IField>(Names.MV_ADA_RESPONSE_CD); } }
        public IGroup MV_ABEND_CICS { get { return GetElementByName<IGroup>(Names.MV_ABEND_CICS); } }
        public IField MV_CICS_RESOURCE_NM { get { return GetElementByName<IField>(Names.MV_CICS_RESOURCE_NM); } }
        public IField MV_CICS_FUNCTION_CD { get { return GetElementByName<IField>(Names.MV_CICS_FUNCTION_CD); } }
        public IField MV_CICS_RESPONSE_CD { get { return GetElementByName<IField>(Names.MV_CICS_RESPONSE_CD); } }
        public IGroup MV_SWITCHES { get { return GetElementByName<IGroup>(Names.MV_SWITCHES); } }
        public IField MV_EOF_SW { get { return GetElementByName<IField>(Names.MV_EOF_SW); } }
        public ICheckField MV_EOF_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.MV_EOF_NOT_FOUND); } }
        public ICheckField MV_EOF_NO { get { return GetElementByName<ICheckField>(Names.MV_EOF_NO); } }
        public ICheckField MV_EOF_YES { get { return GetElementByName<ICheckField>(Names.MV_EOF_YES); } }
        public IField MV_ERR_SW { get { return GetElementByName<IField>(Names.MV_ERR_SW); } }
        public ICheckField MV_ERR_NO { get { return GetElementByName<ICheckField>(Names.MV_ERR_NO); } }
        public ICheckField MV_ERR_YES { get { return GetElementByName<ICheckField>(Names.MV_ERR_YES); } }
        public IGroup PREFETCH_ADDRESSING_AREA { get { return GetElementByName<IGroup>(Names.PREFETCH_ADDRESSING_AREA); } }
        public IField PRF_POINTER_CLIENT_DBF { get { return GetElementByName<IField>(Names.PRF_POINTER_CLIENT_DBF); } }
        public IField PRF_SUB { get { return GetElementByName<IField>(Names.PRF_SUB); } }
        public IField MC_CLIENT_ENTRY_MAX { get { return GetElementByName<IField>(Names.MC_CLIENT_ENTRY_MAX); } }
        public IField MC_CLIENT_ENTRY_EXP { get { return GetElementByName<IField>(Names.MC_CLIENT_ENTRY_EXP); } }
        public IField MV_CLIENT_ENTRY_NUM { get { return GetElementByName<IField>(Names.MV_CLIENT_ENTRY_NUM); } }
        public IField MV_CLIENT_ENTRY_SUB { get { return GetElementByName<IField>(Names.MV_CLIENT_ENTRY_SUB); } }
        public IField MV_ABS_TIME { get { return GetElementByName<IField>(Names.MV_ABS_TIME); } }
        public IGroup MV_CCYYMMDD_X8 { get { return GetElementByName<IGroup>(Names.MV_CCYYMMDD_X8); } }
        public IField MV_CC { get { return GetElementByName<IField>(Names.MV_CC); } }
        public IGroup MV_YYMMDD { get { return GetElementByName<IGroup>(Names.MV_YYMMDD); } }
        public IField MV_YY { get { return GetElementByName<IField>(Names.MV_YY); } }
        public IField MV_MM { get { return GetElementByName<IField>(Names.MV_MM); } }
        public IField MV_DD { get { return GetElementByName<IField>(Names.MV_DD); } }
        public IField MV_CURRENT_CCYY { get { return GetElementByName<IField>(Names.MV_CURRENT_CCYY); } }
        public IField MV_CURRENT_MMDD { get { return GetElementByName<IField>(Names.MV_CURRENT_MMDD); } }
        public IGroup MV_RECORD_NAME { get { return GetElementByName<IGroup>(Names.MV_RECORD_NAME); } }
        public IField MV_RECORD_LAST_NAME { get { return GetElementByName<IField>(Names.MV_RECORD_LAST_NAME); } }
        public IGroup MV_RECORD_FIRST_NAME { get { return GetElementByName<IGroup>(Names.MV_RECORD_FIRST_NAME); } }
        public IField MV_RECORD_FIRST_NAME_1 { get { return GetElementByName<IField>(Names.MV_RECORD_FIRST_NAME_1); } }
        public IField MV_RECORD_FIRST_NAME_11 { get { return GetElementByName<IField>(Names.MV_RECORD_FIRST_NAME_11); } }
        public IField MV_RECORD_INITIAL { get { return GetElementByName<IField>(Names.MV_RECORD_INITIAL); } }
        public IGroup MV_DATE_OF_BIRTH_SEX { get { return GetElementByName<IGroup>(Names.MV_DATE_OF_BIRTH_SEX); } }
        public IGroup MV_DATE_OF_BIRTH_X8 { get { return GetElementByName<IGroup>(Names.MV_DATE_OF_BIRTH_X8); } }
        public IField MV_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.MV_DATE_OF_BIRTH); } }
        public IField MV_BIRTH_CCYY { get { return GetElementByName<IField>(Names.MV_BIRTH_CCYY); } }
        public IField MV_BIRTH_MMDD { get { return GetElementByName<IField>(Names.MV_BIRTH_MMDD); } }
        public IField MV_SEX { get { return GetElementByName<IField>(Names.MV_SEX); } }
        public IGroup MV_SSN_X9 { get { return GetElementByName<IGroup>(Names.MV_SSN_X9); } }
        public IField MV_SSN { get { return GetElementByName<IField>(Names.MV_SSN); } }
        public IGroup MV_SYSTEM_CODES { get { return GetElementByName<IGroup>(Names.MV_SYSTEM_CODES); } }
        public IField MV_SYSTEM_CODE_AE { get { return GetElementByName<IField>(Names.MV_SYSTEM_CODE_AE); } }
        public IField MV_SYSTEM_CODE_CS { get { return GetElementByName<IField>(Names.MV_SYSTEM_CODE_CS); } }
        public IField MV_SYSTEM_CODE_KA { get { return GetElementByName<IField>(Names.MV_SYSTEM_CODE_KA); } }
        public IField MV_SYSTEM_CODE_KS { get { return GetElementByName<IField>(Names.MV_SYSTEM_CODE_KS); } }
        public IField MV_SYSTEM_CODE_FA { get { return GetElementByName<IField>(Names.MV_SYSTEM_CODE_FA); } }
        public IField MV_SYSTEM_CODE_KM { get { return GetElementByName<IField>(Names.MV_SYSTEM_CODE_KM); } }
        public IGroup MV_CLIENT_POINTER { get { return GetElementByName<IGroup>(Names.MV_CLIENT_POINTER); } }
        public IField MV_CLIENT_ID { get { return GetElementByName<IField>(Names.MV_CLIENT_ID); } }
        public IGroup MV_CLIENT_POINTER_X21 { get { return GetElementByName<IGroup>(Names.MV_CLIENT_POINTER_X21); } }
        public IField MV_VERIFIED_SSN_FLAG { get { return GetElementByName<IField>(Names.MV_VERIFIED_SSN_FLAG); } }
        public IGroup MV_SYSTEM_PARTICIPATION { get { return GetElementByName<IGroup>(Names.MV_SYSTEM_PARTICIPATION); } }
        public IField MV_SYS_PART_AE { get { return GetElementByName<IField>(Names.MV_SYS_PART_AE); } }
        public ICheckField MV_SYS_PART_AE_YES { get { return GetElementByName<ICheckField>(Names.MV_SYS_PART_AE_YES); } }
        public IField MV_SYS_PART_CSE { get { return GetElementByName<IField>(Names.MV_SYS_PART_CSE); } }
        public ICheckField MV_SYS_PART_CSE_YES { get { return GetElementByName<ICheckField>(Names.MV_SYS_PART_CSE_YES); } }
        public IField MV_SYS_PART_KANPAY { get { return GetElementByName<IField>(Names.MV_SYS_PART_KANPAY); } }
        public ICheckField MV_SYS_PART_KANPAY_YES { get { return GetElementByName<ICheckField>(Names.MV_SYS_PART_KANPAY_YES); } }
        public IField MV_SYS_PART_KSCARES { get { return GetElementByName<IField>(Names.MV_SYS_PART_KSCARES); } }
        public ICheckField MV_SYS_PART_KSCARES_YES { get { return GetElementByName<ICheckField>(Names.MV_SYS_PART_KSCARES_YES); } }
        public IField MV_SYS_PART_FACTS { get { return GetElementByName<IField>(Names.MV_SYS_PART_FACTS); } }
        public ICheckField MV_SYS_PART_FACTS_YES { get { return GetElementByName<ICheckField>(Names.MV_SYS_PART_FACTS_YES); } }
        public IField MV_SYS_PART_KMIS { get { return GetElementByName<IField>(Names.MV_SYS_PART_KMIS); } }
        public ICheckField MV_SYS_PART_KMIS_YES { get { return GetElementByName<ICheckField>(Names.MV_SYS_PART_KMIS_YES); } }
        public IGroup MVW_CLIENT_KEY { get { return GetElementByName<IGroup>(Names.MVW_CLIENT_KEY); } }
        public IField MVW_CLIENT_ID { get { return GetElementByName<IField>(Names.MVW_CLIENT_ID); } }
        public IField MVW_CLIENT_NAME { get { return GetElementByName<IField>(Names.MVW_CLIENT_NAME); } }
        public IField MVW_SSN { get { return GetElementByName<IField>(Names.MVW_SSN); } }
        public IField MVW_DATE_OF_BIRTH_SEX { get { return GetElementByName<IField>(Names.MVW_DATE_OF_BIRTH_SEX); } }
        public IField MVW_CLIENT_POINTER_X21 { get { return GetElementByName<IField>(Names.MVW_CLIENT_POINTER_X21); } }
        public IGroup IMP_CLIENT_NUMBER_X10 { get { return GetElementByName<IGroup>(Names.IMP_CLIENT_NUMBER_X10); } }
        public IField IMP_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.IMP_CLIENT_NUMBER); } }
        public IGroup MV_CLIENT_ARRAY { get { return GetElementByName<IGroup>(Names.MV_CLIENT_ARRAY); } }
        public IArrayElementAccessor<IGroup> MV_CLIENT_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.MV_CLIENT_ENTRY); } }
        public IArrayElementAccessor<IGroup> MV_CLIENT_NAME { get { return GetArrayElementAccessor<IGroup>(Names.MV_CLIENT_NAME); } }
        public IArrayElementAccessor<IField> MV_CLIENT_LAST_NAME { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_LAST_NAME); } }
        public IArrayElementAccessor<IField> MV_CLIENT_FIRST_NAME { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_FIRST_NAME); } }
        public IArrayElementAccessor<IField> MV_CLIENT_INITIAL { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_INITIAL); } }
        public IArrayElementAccessor<IGroup> MV_CLIENT_DATE_OF_BIRTH_SEX { get { return GetArrayElementAccessor<IGroup>(Names.MV_CLIENT_DATE_OF_BIRTH_SEX); } }
        public IArrayElementAccessor<IGroup> MV_CLIENT_DATE_OF_BIRTH_X8 { get { return GetArrayElementAccessor<IGroup>(Names.MV_CLIENT_DATE_OF_BIRTH_X8); } }
        public IArrayElementAccessor<IField> MV_CLIENT_DATE_OF_BIRTH { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_DATE_OF_BIRTH); } }
        public IArrayElementAccessor<IField> MV_CLIENT_SEX { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_SEX); } }
        public IArrayElementAccessor<IGroup> MV_CLIENT_SOC_SEC_NUM_X9 { get { return GetArrayElementAccessor<IGroup>(Names.MV_CLIENT_SOC_SEC_NUM_X9); } }
        public IArrayElementAccessor<IField> MV_CLIENT_SOC_SEC_NUM { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_SOC_SEC_NUM); } }
        public IArrayElementAccessor<IGroup> MV_CLIENT_SYSTEM_PARTICIPATION { get { return GetArrayElementAccessor<IGroup>(Names.MV_CLIENT_SYSTEM_PARTICIPATION); } }
        public IArrayElementAccessor<IField> MV_CLIENT_SYS_PART_AE { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_SYS_PART_AE); } }
        public IArrayElementAccessor<IField> MV_CLIENT_SYS_PART_CSE { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_SYS_PART_CSE); } }
        public IArrayElementAccessor<IField> MV_CLIENT_SYS_PART_KANPAY { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_SYS_PART_KANPAY); } }
        public IArrayElementAccessor<IField> MV_CLIENT_SYS_PART_KSCARES { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_SYS_PART_KSCARES); } }
        public IArrayElementAccessor<IField> MV_CLIENT_SYS_PART_FACTS { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_SYS_PART_FACTS); } }
        public IArrayElementAccessor<IField> MV_CLIENT_SYS_PART_KMIS { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_SYS_PART_KMIS); } }
        public IArrayElementAccessor<IField> MV_CLIENT_KEY { get { return GetArrayElementAccessor<IField>(Names.MV_CLIENT_KEY); } }
        public IGroup DATABASE_KEYS { get { return GetElementByName<IGroup>(Names.DATABASE_KEYS); } }
        public IField DBK_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.DBK_CLIENT_NUMBER); } }
        public IGroup DBK_CLIENT_NAME { get { return GetElementByName<IGroup>(Names.DBK_CLIENT_NAME); } }
        public IField DBK_CLIENT_LAST_NAME { get { return GetElementByName<IField>(Names.DBK_CLIENT_LAST_NAME); } }
        public IField DBK_CLIENT_FIRST_NAME { get { return GetElementByName<IField>(Names.DBK_CLIENT_FIRST_NAME); } }
        public IField DBK_CLIENT_INITIAL { get { return GetElementByName<IField>(Names.DBK_CLIENT_INITIAL); } }
        public IField DBK_SSN { get { return GetElementByName<IField>(Names.DBK_SSN); } }
        public IGroup DCLKSD_CLIENT_BASIC { get { return GetElementByName<IGroup>(Names.DCLKSD_CLIENT_BASIC); } }
        public IField CLIENTB_CLIENT_NUMBER { get { return GetElementByName<IField>(Names.CLIENTB_CLIENT_NUMBER); } }
        public IField CLIENTB_CLIENT_GIVEN_NAME { get { return GetElementByName<IField>(Names.CLIENTB_CLIENT_GIVEN_NAME); } }
        public IField CLIENTB_CLIENT_INITIALS { get { return GetElementByName<IField>(Names.CLIENTB_CLIENT_INITIALS); } }
        public IField CLIENTB_CLIENT_SURNAME { get { return GetElementByName<IField>(Names.CLIENTB_CLIENT_SURNAME); } }
        public IField CLIENTB_CIS_REPL_IND { get { return GetElementByName<IField>(Names.CLIENTB_CIS_REPL_IND); } }
        public IField CLIENTB_WORK_PHONE { get { return GetElementByName<IField>(Names.CLIENTB_WORK_PHONE); } }
        public IField CLIENTB_SSN { get { return GetElementByName<IField>(Names.CLIENTB_SSN); } }
        public IField CLIENTB_GENDER { get { return GetElementByName<IField>(Names.CLIENTB_GENDER); } }
        public IField CLIENTB_PARENT_RGHTS_SEV { get { return GetElementByName<IField>(Names.CLIENTB_PARENT_RGHTS_SEV); } }
        public IField CLIENTB_PRNT_RGHTS_SEV_DT { get { return GetElementByName<IField>(Names.CLIENTB_PRNT_RGHTS_SEV_DT); } }
        public IField CLIENTB_LEGAL_STATUS { get { return GetElementByName<IField>(Names.CLIENTB_LEGAL_STATUS); } }
        public IField CLIENTB_INSURANCE_CODE { get { return GetElementByName<IField>(Names.CLIENTB_INSURANCE_CODE); } }
        public IField CLIENTB_INITIAL_CUSTODY_DT { get { return GetElementByName<IField>(Names.CLIENTB_INITIAL_CUSTODY_DT); } }
        public IField CLIENTB_HOME_PHONE { get { return GetElementByName<IField>(Names.CLIENTB_HOME_PHONE); } }
        public IField CLIENTB_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.CLIENTB_DATE_OF_BIRTH); } }
        public IGroup DCLKSD_CLIENT { get { return GetElementByName<IGroup>(Names.DCLKSD_CLIENT); } }
        public IField CLIENT_SSN { get { return GetElementByName<IField>(Names.CLIENT_SSN); } }
        public IField CLIENT_PREVIOUS_SSN { get { return GetElementByName<IField>(Names.CLIENT_PREVIOUS_SSN); } }
        public IField CLIENT_PHONETIC_DATA { get { return GetElementByName<IField>(Names.CLIENT_PHONETIC_DATA); } }
        public IField CLIENT_DT_OF_LAST_UPDATE { get { return GetElementByName<IField>(Names.CLIENT_DT_OF_LAST_UPDATE); } }
        public IField CLIENT_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.CLIENT_DATE_OF_BIRTH); } }
        public IField CLIENT_GENDER { get { return GetElementByName<IField>(Names.CLIENT_GENDER); } }
        public IField CLIENT_VERIFIED_SSN_FLAG { get { return GetElementByName<IField>(Names.CLIENT_VERIFIED_SSN_FLAG); } }
        public IField CLIENT_CLIENT_NAME { get { return GetElementByName<IField>(Names.CLIENT_CLIENT_NAME); } }
        public IField CLIENT_CREATED_BY { get { return GetElementByName<IField>(Names.CLIENT_CREATED_BY); } }
        public IField CLIENT_CREATED_TIMESTAMP { get { return GetElementByName<IField>(Names.CLIENT_CREATED_TIMESTAMP); } }
        public IField CLIENT_LAST_MODIFIED_BY { get { return GetElementByName<IField>(Names.CLIENT_LAST_MODIFIED_BY); } }
        public IField CLIENT_LAST_MODIFIED_TMST { get { return GetElementByName<IField>(Names.CLIENT_LAST_MODIFIED_TMST); } }
        public IField CLIENT_FK_CLB_CLIENT_NO { get { return GetElementByName<IField>(Names.CLIENT_FK_CLB_CLIENT_NO); } }
        public IGroup DCLKSD_SYSTEM_PART { get { return GetElementByName<IGroup>(Names.DCLKSD_SYSTEM_PART); } }
        public IField SPART_SYSTEM_CODE { get { return GetElementByName<IField>(Names.SPART_SYSTEM_CODE); } }
        public IField SPART_PARTICIPATION_FLAG { get { return GetElementByName<IField>(Names.SPART_PARTICIPATION_FLAG); } }
        public IField SPART_CREATED_TIMESTAMP { get { return GetElementByName<IField>(Names.SPART_CREATED_TIMESTAMP); } }
        public IField SPART_CREATED_BY { get { return GetElementByName<IField>(Names.SPART_CREATED_BY); } }
        public IField SPART_LAST_MODIFIED_BY { get { return GetElementByName<IField>(Names.SPART_LAST_MODIFIED_BY); } }
        public IField SPART_LAST_MODIFIED_TMST { get { return GetElementByName<IField>(Names.SPART_LAST_MODIFIED_TMST); } }
        public IField SPART_FK_CLB_CLIENT_NO { get { return GetElementByName<IField>(Names.SPART_FK_CLB_CLIENT_NO); } }
        public IField SPART_FK_CLI_CLIENT_NAME { get { return GetElementByName<IField>(Names.SPART_FK_CLI_CLIENT_NAME); } }
        public IField SPART_FK_CLI_SSN { get { return GetElementByName<IField>(Names.SPART_FK_CLI_SSN); } }
        public IGroup CONTROL_BLOCK { get { return GetElementByName<IGroup>(Names.CONTROL_BLOCK); } }
        public IField COMMAND_CODE { get { return GetElementByName<IField>(Names.COMMAND_CODE); } }
        public IField COMMAND_ID { get { return GetElementByName<IField>(Names.COMMAND_ID); } }
        public IField FILE_NUMBER { get { return GetElementByName<IField>(Names.FILE_NUMBER); } }
        public IField RESPONSE_CODE { get { return GetElementByName<IField>(Names.RESPONSE_CODE); } }
        public IField ISN { get { return GetElementByName<IField>(Names.ISN); } }
        public IField ISN_LOWER_LIMIT { get { return GetElementByName<IField>(Names.ISN_LOWER_LIMIT); } }
        public IField ISN_QUANTITY { get { return GetElementByName<IField>(Names.ISN_QUANTITY); } }
        public IField FORMAT_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.FORMAT_BUFFER_LENGTH); } }
        public IField RECORD_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.RECORD_BUFFER_LENGTH); } }
        public IField SEARCH_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.SEARCH_BUFFER_LENGTH); } }
        public IField VALUE_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.VALUE_BUFFER_LENGTH); } }
        public IField ISN_BUFFER_LENGTH { get { return GetElementByName<IField>(Names.ISN_BUFFER_LENGTH); } }
        public IField COMMAND_OPTION_1 { get { return GetElementByName<IField>(Names.COMMAND_OPTION_1); } }
        public IField COMMAND_OPTION_2 { get { return GetElementByName<IField>(Names.COMMAND_OPTION_2); } }
        public IField ADDITIONS_1 { get { return GetElementByName<IField>(Names.ADDITIONS_1); } }
        public IField ADDITIONS_2 { get { return GetElementByName<IField>(Names.ADDITIONS_2); } }
        public IField ADDITIONS_3 { get { return GetElementByName<IField>(Names.ADDITIONS_3); } }
        public IField ADDITIONS_4 { get { return GetElementByName<IField>(Names.ADDITIONS_4); } }
        public IField COMMAND_TIME { get { return GetElementByName<IField>(Names.COMMAND_TIME); } }
        public IField USER_AREA { get { return GetElementByName<IField>(Names.USER_AREA); } }

        public CPY_SQLCA SQLCA = new CPY_SQLCA(null, true);
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup("FILLER", (FILLER) =>
           {
               FILLER.CreateNewField(Names.ADIM1, FieldType.CompInt, 8);
               FILLER.CreateNewField(Names.ADIM2, FieldType.CompInt, 8);
               FILLER.CreateNewField(Names.ADIM3, FieldType.CompInt, 8);
           });

            recordDef.CreateNewGroup("FILLER_d2", (FILLER_d2) =>
           {
               FILLER_d2.CreateNewField(Names.OUTPUT_GROUP_ALIASES_0001FL, FieldType.String, 1);
               FILLER_d2.CreateNewField(Names.OUTPUT_GROUP_ALIASES_0001PS, FieldType.CompShort, 4);
               FILLER_d2.CreateNewField(Names.OUTPUT_GROUP_ALIASES_0001RF, FieldType.String, 1);
           });
            recordDef.CreateNewField(Names.FUNC_0544735563_ESC_FLAG, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.EXTERNAL_ACTION_BLOCK_WS, (EXTERNAL_ACTION_BLOCK_WS) =>
           {
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.SRADALNK, FieldType.String, 8, "SWASZ990");
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.SRMODLNK, FieldType.String, 8, "SWEXIR10");
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_ABEND_FIELDS, (MV_ABEND_FIELDS) =>
               {
                   MV_ABEND_FIELDS.CreateNewField(Names.MV_ABEND_TYPE, FieldType.String, 1)
                       .NewCheckField(Names.MV_ABEND_TYPE_NONE, SPACE)
                       .NewCheckField(Names.MV_ABEND_TYPE_ADABAS, "A")
                       .NewCheckField(Names.MV_ABEND_TYPE_CICS, "C")
                       ;
                   MV_ABEND_FIELDS.CreateNewGroup(Names.MV_ABEND_ADABAS, (MV_ABEND_ADABAS) =>
                   {
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_FILE_NUMBER, FieldType.UnsignedNumeric, 4);
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_FILE_ACTION, FieldType.String, 3);
                       MV_ABEND_ADABAS.CreateNewField(Names.MV_ADA_RESPONSE_CD, FieldType.UnsignedNumeric, 4);
                   });
                   MV_ABEND_FIELDS.CreateNewGroup(Names.MV_ABEND_CICS, (MV_ABEND_CICS) =>
                   {
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_RESOURCE_NM, FieldType.String, 8);
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_FUNCTION_CD, FieldType.String, 2);
                       MV_ABEND_CICS.CreateNewField(Names.MV_CICS_RESPONSE_CD, FieldType.String, 6);
                   });
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_SWITCHES, (MV_SWITCHES) =>
               {
                   MV_SWITCHES.CreateNewField(Names.MV_EOF_SW, FieldType.String, 1)
                       .NewCheckField(Names.MV_EOF_NOT_FOUND, SPACE)
                       .NewCheckField(Names.MV_EOF_NO, "N")
                       .NewCheckField(Names.MV_EOF_YES, "Y")
                       ;
                   MV_SWITCHES.CreateNewField(Names.MV_ERR_SW, FieldType.String, 1, "N")
                       .NewCheckField(Names.MV_ERR_NO, "N")
                       .NewCheckField(Names.MV_ERR_YES, "Y")
                       ;
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.PREFETCH_ADDRESSING_AREA, (PREFETCH_ADDRESSING_AREA) =>
               {
                   PREFETCH_ADDRESSING_AREA.CreateNewField(Names.PRF_POINTER_CLIENT_DBF, FieldType.ReferencePointer, 4);
                   PREFETCH_ADDRESSING_AREA.CreateNewField(Names.PRF_SUB, FieldType.CompInt, 8);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MC_CLIENT_ENTRY_MAX, FieldType.CompShort, 4, 7);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MC_CLIENT_ENTRY_EXP, FieldType.CompShort, 4, 6);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_CLIENT_ENTRY_NUM, FieldType.CompShort, 4);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_CLIENT_ENTRY_SUB, FieldType.CompShort, 4);
               EXTERNAL_ACTION_BLOCK_WS.CreateNewField(Names.MV_ABS_TIME, FieldType.PackedDecimal, 15);
               IGroup MV_CCYYMMDD_X8_local = (IGroup)EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CCYYMMDD_X8, (MV_CCYYMMDD_X8) =>
               {
                   MV_CCYYMMDD_X8.CreateNewField(Names.MV_CC, FieldType.UnsignedNumeric, 2);
                   MV_CCYYMMDD_X8.CreateNewGroup(Names.MV_YYMMDD, (MV_YYMMDD) =>
                   {
                       MV_YYMMDD.CreateNewField(Names.MV_YY, FieldType.UnsignedNumeric, 2);
                       MV_YYMMDD.CreateNewField(Names.MV_MM, FieldType.UnsignedNumeric, 2);
                       MV_YYMMDD.CreateNewField(Names.MV_DD, FieldType.UnsignedNumeric, 2);
                       MV_YYMMDD.CreateNewFillerField(2, FillWith.Hashes);
                   });
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroupRedefine("FILLER_d4", MV_CCYYMMDD_X8_local, (FILLER_d4) =>
               {
                   FILLER_d4.CreateNewField(Names.MV_CURRENT_CCYY, FieldType.UnsignedNumeric, 4);
                   FILLER_d4.CreateNewField(Names.MV_CURRENT_MMDD, FieldType.UnsignedNumeric, 4);
                   FILLER_d4.CreateNewFillerField(2, FillWith.Hashes);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_RECORD_NAME, (MV_RECORD_NAME) =>
               {
                   MV_RECORD_NAME.CreateNewField(Names.MV_RECORD_LAST_NAME, FieldType.String, 17);
                   MV_RECORD_NAME.CreateNewGroup(Names.MV_RECORD_FIRST_NAME, (MV_RECORD_FIRST_NAME) =>
                   {
                       MV_RECORD_FIRST_NAME.CreateNewField(Names.MV_RECORD_FIRST_NAME_1, FieldType.String, 1);
                       MV_RECORD_FIRST_NAME.CreateNewField(Names.MV_RECORD_FIRST_NAME_11, FieldType.String, 11);
                   });
                   MV_RECORD_NAME.CreateNewField(Names.MV_RECORD_INITIAL, FieldType.String, 1);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_DATE_OF_BIRTH_SEX, (MV_DATE_OF_BIRTH_SEX) =>
               {
                   MV_DATE_OF_BIRTH_SEX.CreateNewGroup(Names.MV_DATE_OF_BIRTH_X8, (MV_DATE_OF_BIRTH_X8) =>
                   {

                       IField MV_DATE_OF_BIRTH_local = MV_DATE_OF_BIRTH_X8.CreateNewField(Names.MV_DATE_OF_BIRTH, FieldType.UnsignedNumeric, 8);
                       MV_DATE_OF_BIRTH_X8.CreateNewGroupRedefine("FILLER_d6", MV_DATE_OF_BIRTH_local, (FILLER_d6) =>
                       {
                           FILLER_d6.CreateNewField(Names.MV_BIRTH_CCYY, FieldType.UnsignedNumeric, 4);
                           FILLER_d6.CreateNewField(Names.MV_BIRTH_MMDD, FieldType.UnsignedNumeric, 4);
                       });
                   });
                   MV_DATE_OF_BIRTH_SEX.CreateNewField(Names.MV_SEX, FieldType.String, 1);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_SSN_X9, (MV_SSN_X9) =>
               {
                   MV_SSN_X9.CreateNewField(Names.MV_SSN, FieldType.UnsignedNumeric, 9);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_SYSTEM_CODES, (MV_SYSTEM_CODES) =>
               {
                   MV_SYSTEM_CODES.CreateNewField(Names.MV_SYSTEM_CODE_AE, FieldType.String, 2, "AE");
                   MV_SYSTEM_CODES.CreateNewField(Names.MV_SYSTEM_CODE_CS, FieldType.String, 2, "CS");
                   MV_SYSTEM_CODES.CreateNewField(Names.MV_SYSTEM_CODE_KA, FieldType.String, 2, "KA");
                   MV_SYSTEM_CODES.CreateNewField(Names.MV_SYSTEM_CODE_KS, FieldType.String, 2, "KS");
                   MV_SYSTEM_CODES.CreateNewField(Names.MV_SYSTEM_CODE_FA, FieldType.String, 2, "FA");
                   MV_SYSTEM_CODES.CreateNewField(Names.MV_SYSTEM_CODE_KM, FieldType.String, 2, "KM");
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CLIENT_POINTER, (MV_CLIENT_POINTER) =>
               {
                   MV_CLIENT_POINTER.CreateNewField(Names.MV_CLIENT_ID, FieldType.String, 10);
                   MV_CLIENT_POINTER.CreateNewGroup(Names.MV_CLIENT_POINTER_X21, (MV_CLIENT_POINTER_X21) =>
                   {
                       MV_CLIENT_POINTER_X21.CreateNewField(Names.MV_VERIFIED_SSN_FLAG, FieldType.String, 1);
                       MV_CLIENT_POINTER_X21.CreateNewGroup(Names.MV_SYSTEM_PARTICIPATION, (MV_SYSTEM_PARTICIPATION) =>
                       {
                           MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_AE, FieldType.String, 1)
                               .NewCheckField(Names.MV_SYS_PART_AE_YES, "Y")
                               ;
                           MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_CSE, FieldType.String, 1)
                               .NewCheckField(Names.MV_SYS_PART_CSE_YES, "Y")
                               ;
                           MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_KANPAY, FieldType.String, 1)
                               .NewCheckField(Names.MV_SYS_PART_KANPAY_YES, "Y")
                               ;
                           MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_KSCARES, FieldType.String, 1)
                               .NewCheckField(Names.MV_SYS_PART_KSCARES_YES, "Y")
                               ;
                           MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_FACTS, FieldType.String, 1)
                               .NewCheckField(Names.MV_SYS_PART_FACTS_YES, "Y")
                               ;
                           MV_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_SYS_PART_KMIS, FieldType.String, 1)
                               .NewCheckField(Names.MV_SYS_PART_KMIS_YES, "Y")
                               ;
                           MV_SYSTEM_PARTICIPATION.CreateNewFillerField(14, FillWith.Hashes);
                       });
                   });
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MVW_CLIENT_KEY, (MVW_CLIENT_KEY) =>
               {
                   MVW_CLIENT_KEY.CreateNewField(Names.MVW_CLIENT_ID, FieldType.String, 10);
                   MVW_CLIENT_KEY.CreateNewField(Names.MVW_CLIENT_NAME, FieldType.String, 30);
                   MVW_CLIENT_KEY.CreateNewField(Names.MVW_SSN, FieldType.String, 9);
                   MVW_CLIENT_KEY.CreateNewField(Names.MVW_DATE_OF_BIRTH_SEX, FieldType.String, 9);
                   MVW_CLIENT_KEY.CreateNewField(Names.MVW_CLIENT_POINTER_X21, FieldType.String, 21);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.IMP_CLIENT_NUMBER_X10, (IMP_CLIENT_NUMBER_X10) =>
               {
                   IMP_CLIENT_NUMBER_X10.CreateNewField(Names.IMP_CLIENT_NUMBER, FieldType.UnsignedNumeric, 10);
               });
               EXTERNAL_ACTION_BLOCK_WS.CreateNewGroup(Names.MV_CLIENT_ARRAY, (MV_CLIENT_ARRAY) =>
               {
                   MV_CLIENT_ARRAY.CreateNewGroupArray(Names.MV_CLIENT_ENTRY, 7, (MV_CLIENT_ENTRY) =>
                   {
                       MV_CLIENT_ENTRY.CreateNewGroup(Names.MV_CLIENT_NAME, (MV_CLIENT_NAME) =>
                       {
                           MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_LAST_NAME, FieldType.String, 17);
                           MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_FIRST_NAME, FieldType.String, 12);
                           MV_CLIENT_NAME.CreateNewField(Names.MV_CLIENT_INITIAL, FieldType.String, 1);
                       });
                       MV_CLIENT_ENTRY.CreateNewGroup(Names.MV_CLIENT_DATE_OF_BIRTH_SEX, (MV_CLIENT_DATE_OF_BIRTH_SEX) =>
                       {
                           MV_CLIENT_DATE_OF_BIRTH_SEX.CreateNewGroup(Names.MV_CLIENT_DATE_OF_BIRTH_X8, (MV_CLIENT_DATE_OF_BIRTH_X8) =>
                           {
                               MV_CLIENT_DATE_OF_BIRTH_X8.CreateNewField(Names.MV_CLIENT_DATE_OF_BIRTH, FieldType.UnsignedNumeric, 8);
                           });
                           MV_CLIENT_DATE_OF_BIRTH_SEX.CreateNewField(Names.MV_CLIENT_SEX, FieldType.String, 1);
                       });
                       MV_CLIENT_ENTRY.CreateNewGroup(Names.MV_CLIENT_SOC_SEC_NUM_X9, (MV_CLIENT_SOC_SEC_NUM_X9) =>
                       {
                           MV_CLIENT_SOC_SEC_NUM_X9.CreateNewField(Names.MV_CLIENT_SOC_SEC_NUM, FieldType.UnsignedNumeric, 9);
                       });
                       MV_CLIENT_ENTRY.CreateNewGroup(Names.MV_CLIENT_SYSTEM_PARTICIPATION, (MV_CLIENT_SYSTEM_PARTICIPATION) =>
                       {
                           MV_CLIENT_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_CLIENT_SYS_PART_AE, FieldType.String, 1);
                           MV_CLIENT_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_CLIENT_SYS_PART_CSE, FieldType.String, 1);
                           MV_CLIENT_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_CLIENT_SYS_PART_KANPAY, FieldType.String, 1);
                           MV_CLIENT_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_CLIENT_SYS_PART_KSCARES, FieldType.String, 1);
                           MV_CLIENT_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_CLIENT_SYS_PART_FACTS, FieldType.String, 1);
                           MV_CLIENT_SYSTEM_PARTICIPATION.CreateNewField(Names.MV_CLIENT_SYS_PART_KMIS, FieldType.String, 1);
                           MV_CLIENT_SYSTEM_PARTICIPATION.CreateNewFillerField(14, FillWith.Hashes);
                       });
                       MV_CLIENT_ENTRY.CreateNewField(Names.MV_CLIENT_KEY, FieldType.String, 100);
                   });
               });
           });

            recordDef.CreateNewGroup(Names.DATABASE_KEYS, (DATABASE_KEYS) =>
           {
               DATABASE_KEYS.CreateNewField(Names.DBK_CLIENT_NUMBER, FieldType.String, 10);
               DATABASE_KEYS.CreateNewGroup(Names.DBK_CLIENT_NAME, (DBK_CLIENT_NAME) =>
               {
                   DBK_CLIENT_NAME.CreateNewField(Names.DBK_CLIENT_LAST_NAME, FieldType.String, 17);
                   DBK_CLIENT_NAME.CreateNewField(Names.DBK_CLIENT_FIRST_NAME, FieldType.String, 12);
                   DBK_CLIENT_NAME.CreateNewField(Names.DBK_CLIENT_INITIAL, FieldType.String, 1);
               });
               DATABASE_KEYS.CreateNewField(Names.DBK_SSN, FieldType.CompInt, 9);
           });

            recordDef.CreateNewGroup(Names.DCLKSD_CLIENT_BASIC, (DCLKSD_CLIENT_BASIC) =>
           {
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_CLIENT_NUMBER, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_CLIENT_GIVEN_NAME, FieldType.String, 12);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_CLIENT_INITIALS, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_CLIENT_SURNAME, FieldType.String, 17);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_CIS_REPL_IND, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_WORK_PHONE, FieldType.PackedDecimal, 10, null, 0);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_SSN, FieldType.CompInt, 9);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_GENDER, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_PARENT_RGHTS_SEV, FieldType.String, 1);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_PRNT_RGHTS_SEV_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_LEGAL_STATUS, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_INSURANCE_CODE, FieldType.String, 2);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_INITIAL_CUSTODY_DT, FieldType.String, 10);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_HOME_PHONE, FieldType.PackedDecimal, 10, null, 0);
               DCLKSD_CLIENT_BASIC.CreateNewField(Names.CLIENTB_DATE_OF_BIRTH, FieldType.String, 10);
           });

            recordDef.CreateNewGroup(Names.DCLKSD_CLIENT, (DCLKSD_CLIENT) =>
           {
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_SSN, FieldType.CompInt, 9);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_PREVIOUS_SSN, FieldType.CompInt, 9);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_PHONETIC_DATA, FieldType.String, 21);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_DT_OF_LAST_UPDATE, FieldType.String, 10);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_DATE_OF_BIRTH, FieldType.String, 10);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_GENDER, FieldType.String, 1);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_VERIFIED_SSN_FLAG, FieldType.String, 1);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_CLIENT_NAME, FieldType.String, 30);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_CREATED_BY, FieldType.String, 8);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_CREATED_TIMESTAMP, FieldType.String, 26);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_LAST_MODIFIED_BY, FieldType.String, 8);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_LAST_MODIFIED_TMST, FieldType.String, 26);
               DCLKSD_CLIENT.CreateNewField(Names.CLIENT_FK_CLB_CLIENT_NO, FieldType.String, 10);
           });

            recordDef.CreateNewGroup(Names.DCLKSD_SYSTEM_PART, (DCLKSD_SYSTEM_PART) =>
           {
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SPART_SYSTEM_CODE, FieldType.String, 2);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SPART_PARTICIPATION_FLAG, FieldType.String, 1);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SPART_CREATED_TIMESTAMP, FieldType.String, 26);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SPART_CREATED_BY, FieldType.String, 8);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SPART_LAST_MODIFIED_BY, FieldType.String, 8);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SPART_LAST_MODIFIED_TMST, FieldType.String, 26);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SPART_FK_CLB_CLIENT_NO, FieldType.String, 10);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SPART_FK_CLI_CLIENT_NAME, FieldType.String, 30);
               DCLKSD_SYSTEM_PART.CreateNewField(Names.SPART_FK_CLI_SSN, FieldType.CompInt, 9);
           });

            recordDef.CreateNewGroup(Names.CONTROL_BLOCK, (CONTROL_BLOCK) =>
           {
               CONTROL_BLOCK.CreateNewFillerField(FieldType.String, 2, "AP");
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_CODE, FieldType.String, 2, "RC");
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_ID, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.FILE_NUMBER, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.RESPONSE_CODE, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN_LOWER_LIMIT, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN_QUANTITY, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.FORMAT_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.RECORD_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.SEARCH_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.VALUE_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.ISN_BUFFER_LENGTH, FieldType.CompShort, 4, +0);
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_OPTION_1, FieldType.String, 1, SPACE);
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_OPTION_2, FieldType.String, 1, SPACE);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_1, FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_2, FieldType.String, 4, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_3, FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.ADDITIONS_4, FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewFillerField(FieldType.String, 8, SPACES);
               CONTROL_BLOCK.CreateNewField(Names.COMMAND_TIME, FieldType.CompInt, 8, +0);
               CONTROL_BLOCK.CreateNewField(Names.USER_AREA, FieldType.String, 4, SPACES);
           });


        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            SQLCA.InitializeWithLowValues();
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXIR10_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXIR10_ls_LinkageSection";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string W_IA = "W_IA";
            internal const string A_0544735566_IA = "A_0544735566_IA";
            internal const string INPUT_0001EV = "INPUT_0001EV";
            internal const string CSE_PERSONS_WORK_SET_0001ET = "CSE_PERSONS_WORK_SET_0001ET";
            internal const string NUMBER_0001AS = "NUMBER_0001AS";
            internal const string NUMBER_0001 = "NUMBER_0001";
            internal const string NUMBER_0001XX = "NUMBER_0001XX";
            internal const string UNIQUE_KEY_0001AS = "UNIQUE_KEY_0001AS";
            internal const string UNIQUE_KEY_0001 = "UNIQUE_KEY_0001";
            internal const string UNIQUE_KEY_0001XX = "UNIQUE_KEY_0001XX";
            internal const string W_OA = "W_OA";
            internal const string A_0544735567_OA = "A_0544735567_OA";
            internal const string OUTPUT_0002EV = "OUTPUT_0002EV";
            internal const string ABEND_DATA_0002ET = "ABEND_DATA_0002ET";
            internal const string TYPE_0002AS = "TYPE_0002AS";
            internal const string TYPE_0002 = "TYPE_0002";
            internal const string TYPE_0002XX = "TYPE_0002XX";
            internal const string ADABAS_FILE_NUMBER_0002AS = "ADABAS_FILE_NUMBER_0002AS";
            internal const string ADABAS_FILE_NUMBER_0002 = "ADABAS_FILE_NUMBER_0002";
            internal const string ADABAS_FILE_NUMBER_0002XX = "ADABAS_FILE_NUMBER_0002XX";
            internal const string ADABAS_FILE_ACTION_0002AS = "ADABAS_FILE_ACTION_0002AS";
            internal const string ADABAS_FILE_ACTION_0002 = "ADABAS_FILE_ACTION_0002";
            internal const string ADABAS_FILE_ACTION_0002XX = "ADABAS_FILE_ACTION_0002XX";
            internal const string ADABAS_RESPONSE_CD_0002AS = "ADABAS_RESPONSE_CD_0002AS";
            internal const string ADABAS_RESPONSE_CD_0002 = "ADABAS_RESPONSE_CD_0002";
            internal const string ADABAS_RESPONSE_CD_0002XX = "ADABAS_RESPONSE_CD_0002XX";
            internal const string CICS_RESOURCE_NM_0002AS = "CICS_RESOURCE_NM_0002AS";
            internal const string CICS_RESOURCE_NM_0002 = "CICS_RESOURCE_NM_0002";
            internal const string CICS_RESOURCE_NM_0002XX = "CICS_RESOURCE_NM_0002XX";
            internal const string CICS_FUNCTION_CD_0002AS = "CICS_FUNCTION_CD_0002AS";
            internal const string CICS_FUNCTION_CD_0002 = "CICS_FUNCTION_CD_0002";
            internal const string CICS_FUNCTION_CD_0002XX = "CICS_FUNCTION_CD_0002XX";
            internal const string CICS_RESPONSE_CD_0002AS = "CICS_RESPONSE_CD_0002AS";
            internal const string CICS_RESPONSE_CD_0002 = "CICS_RESPONSE_CD_0002";
            internal const string CICS_RESPONSE_CD_0002XX = "CICS_RESPONSE_CD_0002XX";
            internal const string OUTPUT_NEXT_KEY_0003EV = "OUTPUT_NEXT_KEY_0003EV";
            internal const string CSE_PERSONS_WORK_SET_0003ET = "CSE_PERSONS_WORK_SET_0003ET";
            internal const string UNIQUE_KEY_0003AS = "UNIQUE_KEY_0003AS";
            internal const string UNIQUE_KEY_0003 = "UNIQUE_KEY_0003";
            internal const string UNIQUE_KEY_0003XX = "UNIQUE_KEY_0003XX";
            internal const string OUTPUT_GROUP_ALIASES_0001RG = "OUTPUT_GROUP_ALIASES_0001RG";
            internal const string OUTPUT_GROUP_ALIASES_0001MA = "OUTPUT_GROUP_ALIASES_0001MA";
            internal const string OUTPUT_GROUP_ALIASES_0001MX = "OUTPUT_GROUP_ALIASES_0001MX";
            internal const string OUTPUT_GROUP_ALIASES_0001 = "OUTPUT_GROUP_ALIASES_0001";
            internal const string OUTPUT_GROUP_ALIASES_0001AC = "OUTPUT_GROUP_ALIASES_0001AC";
            internal const string OUTPUT_G_0004EV = "OUTPUT_G_0004EV";
            internal const string CSE_PERSONS_WORK_SET_0004ET = "CSE_PERSONS_WORK_SET_0004ET";
            internal const string UNIQUE_KEY_0004AS = "UNIQUE_KEY_0004AS";
            internal const string UNIQUE_KEY_0004 = "UNIQUE_KEY_0004";
            internal const string UNIQUE_KEY_0004XX = "UNIQUE_KEY_0004XX";
            internal const string SSN_0004AS = "SSN_0004AS";
            internal const string SSN_0004 = "SSN_0004";
            internal const string SSN_0004XX = "SSN_0004XX";
            internal const string FIRST_NAME_0004AS = "FIRST_NAME_0004AS";
            internal const string FIRST_NAME_0004 = "FIRST_NAME_0004";
            internal const string FIRST_NAME_0004XX = "FIRST_NAME_0004XX";
            internal const string MIDDLE_INITIAL_0004AS = "MIDDLE_INITIAL_0004AS";
            internal const string MIDDLE_INITIAL_0004 = "MIDDLE_INITIAL_0004";
            internal const string MIDDLE_INITIAL_0004XX = "MIDDLE_INITIAL_0004XX";
            internal const string LAST_NAME_0004AS = "LAST_NAME_0004AS";
            internal const string LAST_NAME_0004 = "LAST_NAME_0004";
            internal const string LAST_NAME_0004XX = "LAST_NAME_0004XX";
            internal const string SEX_0004AS = "SEX_0004AS";
            internal const string SEX_0004 = "SEX_0004";
            internal const string SEX_0004XX = "SEX_0004XX";
            internal const string DOB_0004AS = "DOB_0004AS";
            internal const string DOB_0004 = "DOB_0004";
            internal const string DOB_0004XX = "DOB_0004XX";
            internal const string OUTPUT_G_KSCARES_0005EV = "OUTPUT_G_KSCARES_0005EV";
            internal const string IEF_SUPPLIED_0005ET = "IEF_SUPPLIED_0005ET";
            internal const string FLAG_0005AS = "FLAG_0005AS";
            internal const string FLAG_0005 = "FLAG_0005";
            internal const string FLAG_0005XX = "FLAG_0005XX";
            internal const string OUTPUT_G_KANPAY_0006EV = "OUTPUT_G_KANPAY_0006EV";
            internal const string IEF_SUPPLIED_0006ET = "IEF_SUPPLIED_0006ET";
            internal const string FLAG_0006AS = "FLAG_0006AS";
            internal const string FLAG_0006 = "FLAG_0006";
            internal const string FLAG_0006XX = "FLAG_0006XX";
            internal const string OUTPUT_G_CSE_0007EV = "OUTPUT_G_CSE_0007EV";
            internal const string IEF_SUPPLIED_0007ET = "IEF_SUPPLIED_0007ET";
            internal const string FLAG_0007AS = "FLAG_0007AS";
            internal const string FLAG_0007 = "FLAG_0007";
            internal const string FLAG_0007XX = "FLAG_0007XX";
            internal const string OUTPUT_G_AE_0008EV = "OUTPUT_G_AE_0008EV";
            internal const string IEF_SUPPLIED_0008ET = "IEF_SUPPLIED_0008ET";
            internal const string FLAG_0008AS = "FLAG_0008AS";
            internal const string FLAG_0008 = "FLAG_0008";
            internal const string FLAG_0008XX = "FLAG_0008XX";
            internal const string PRF_CLIENTS = "PRF_CLIENTS";
            internal const string PRF_ENTRY_TABLE = "PRF_ENTRY_TABLE";
            internal const string PRF_REC_LENGTH = "PRF_REC_LENGTH";
            internal const string PRF_RESPONSE_CODE = "PRF_RESPONSE_CODE";
            internal const string PRFTID = "PRFTID";
            internal const string PRF_ISN = "PRF_ISN";
            internal const string PRF_ISN_QUANTITY = "PRF_ISN_QUANTITY";
            internal const string PRF_RECORD = "PRF_RECORD";
            internal const string TWA = "TWA";
            internal const string TWA_ADABAS_PARMS = "TWA_ADABAS_PARMS";
            internal const string TWA_CICS_PARMS = "TWA_CICS_PARMS";
            internal const string TWA_PROGRAM_ID = "TWA_PROGRAM_ID";
            internal const string TWA_ADDR_LIST = "TWA_ADDR_LIST";
        }
        #endregion

        #region Direct-access element properties
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup W_IA { get { return GetElementByName<IGroup>(Names.W_IA); } }
        public IGroup A_0544735566_IA { get { return GetElementByName<IGroup>(Names.A_0544735566_IA); } }
        public IGroup INPUT_0001EV { get { return GetElementByName<IGroup>(Names.INPUT_0001EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0001ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0001ET); } }
        public IField NUMBER_0001AS { get { return GetElementByName<IField>(Names.NUMBER_0001AS); } }
        public IField NUMBER_0001 { get { return GetElementByName<IField>(Names.NUMBER_0001); } }
        public IField NUMBER_0001XX { get { return GetElementByName<IField>(Names.NUMBER_0001XX); } }
        public IField UNIQUE_KEY_0001AS { get { return GetElementByName<IField>(Names.UNIQUE_KEY_0001AS); } }
        public IField UNIQUE_KEY_0001 { get { return GetElementByName<IField>(Names.UNIQUE_KEY_0001); } }
        public IField UNIQUE_KEY_0001XX { get { return GetElementByName<IField>(Names.UNIQUE_KEY_0001XX); } }
        public IGroup W_OA { get { return GetElementByName<IGroup>(Names.W_OA); } }
        public IGroup A_0544735567_OA { get { return GetElementByName<IGroup>(Names.A_0544735567_OA); } }
        public IGroup OUTPUT_0002EV { get { return GetElementByName<IGroup>(Names.OUTPUT_0002EV); } }
        public IGroup ABEND_DATA_0002ET { get { return GetElementByName<IGroup>(Names.ABEND_DATA_0002ET); } }
        public IField TYPE_0002AS { get { return GetElementByName<IField>(Names.TYPE_0002AS); } }
        public IField TYPE_0002 { get { return GetElementByName<IField>(Names.TYPE_0002); } }
        public IField TYPE_0002XX { get { return GetElementByName<IField>(Names.TYPE_0002XX); } }
        public IField ADABAS_FILE_NUMBER_0002AS { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0002AS); } }
        public IField ADABAS_FILE_NUMBER_0002 { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0002); } }
        public IField ADABAS_FILE_NUMBER_0002XX { get { return GetElementByName<IField>(Names.ADABAS_FILE_NUMBER_0002XX); } }
        public IField ADABAS_FILE_ACTION_0002AS { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0002AS); } }
        public IField ADABAS_FILE_ACTION_0002 { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0002); } }
        public IField ADABAS_FILE_ACTION_0002XX { get { return GetElementByName<IField>(Names.ADABAS_FILE_ACTION_0002XX); } }
        public IField ADABAS_RESPONSE_CD_0002AS { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0002AS); } }
        public IField ADABAS_RESPONSE_CD_0002 { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0002); } }
        public IField ADABAS_RESPONSE_CD_0002XX { get { return GetElementByName<IField>(Names.ADABAS_RESPONSE_CD_0002XX); } }
        public IField CICS_RESOURCE_NM_0002AS { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0002AS); } }
        public IField CICS_RESOURCE_NM_0002 { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0002); } }
        public IField CICS_RESOURCE_NM_0002XX { get { return GetElementByName<IField>(Names.CICS_RESOURCE_NM_0002XX); } }
        public IField CICS_FUNCTION_CD_0002AS { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0002AS); } }
        public IField CICS_FUNCTION_CD_0002 { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0002); } }
        public IField CICS_FUNCTION_CD_0002XX { get { return GetElementByName<IField>(Names.CICS_FUNCTION_CD_0002XX); } }
        public IField CICS_RESPONSE_CD_0002AS { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0002AS); } }
        public IField CICS_RESPONSE_CD_0002 { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0002); } }
        public IField CICS_RESPONSE_CD_0002XX { get { return GetElementByName<IField>(Names.CICS_RESPONSE_CD_0002XX); } }
        public IGroup OUTPUT_NEXT_KEY_0003EV { get { return GetElementByName<IGroup>(Names.OUTPUT_NEXT_KEY_0003EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0003ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0003ET); } }
        public IField UNIQUE_KEY_0003AS { get { return GetElementByName<IField>(Names.UNIQUE_KEY_0003AS); } }
        public IField UNIQUE_KEY_0003 { get { return GetElementByName<IField>(Names.UNIQUE_KEY_0003); } }
        public IField UNIQUE_KEY_0003XX { get { return GetElementByName<IField>(Names.UNIQUE_KEY_0003XX); } }
        public IGroup OUTPUT_GROUP_ALIASES_0001RG { get { return GetElementByName<IGroup>(Names.OUTPUT_GROUP_ALIASES_0001RG); } }
        public IField OUTPUT_GROUP_ALIASES_0001MA { get { return GetElementByName<IField>(Names.OUTPUT_GROUP_ALIASES_0001MA); } }
        public IField OUTPUT_GROUP_ALIASES_0001MX { get { return GetElementByName<IField>(Names.OUTPUT_GROUP_ALIASES_0001MX); } }
        public IArrayElementAccessor<IGroup> OUTPUT_GROUP_ALIASES_0001 { get { return GetArrayElementAccessor<IGroup>(Names.OUTPUT_GROUP_ALIASES_0001); } }
        public IArrayElementAccessor<IField> OUTPUT_GROUP_ALIASES_0001AC { get { return GetArrayElementAccessor<IField>(Names.OUTPUT_GROUP_ALIASES_0001AC); } }
        public IArrayElementAccessor<IGroup> OUTPUT_G_0004EV { get { return GetArrayElementAccessor<IGroup>(Names.OUTPUT_G_0004EV); } }
        public IArrayElementAccessor<IGroup> CSE_PERSONS_WORK_SET_0004ET { get { return GetArrayElementAccessor<IGroup>(Names.CSE_PERSONS_WORK_SET_0004ET); } }
        public IArrayElementAccessor<IField> UNIQUE_KEY_0004AS { get { return GetArrayElementAccessor<IField>(Names.UNIQUE_KEY_0004AS); } }
        public IArrayElementAccessor<IField> UNIQUE_KEY_0004 { get { return GetArrayElementAccessor<IField>(Names.UNIQUE_KEY_0004); } }
        public IArrayElementAccessor<IField> UNIQUE_KEY_0004XX { get { return GetArrayElementAccessor<IField>(Names.UNIQUE_KEY_0004XX); } }
        public IArrayElementAccessor<IField> SSN_0004AS { get { return GetArrayElementAccessor<IField>(Names.SSN_0004AS); } }
        public IArrayElementAccessor<IField> SSN_0004 { get { return GetArrayElementAccessor<IField>(Names.SSN_0004); } }
        public IArrayElementAccessor<IField> SSN_0004XX { get { return GetArrayElementAccessor<IField>(Names.SSN_0004XX); } }
        public IArrayElementAccessor<IField> FIRST_NAME_0004AS { get { return GetArrayElementAccessor<IField>(Names.FIRST_NAME_0004AS); } }
        public IArrayElementAccessor<IField> FIRST_NAME_0004 { get { return GetArrayElementAccessor<IField>(Names.FIRST_NAME_0004); } }
        public IArrayElementAccessor<IField> FIRST_NAME_0004XX { get { return GetArrayElementAccessor<IField>(Names.FIRST_NAME_0004XX); } }
        public IArrayElementAccessor<IField> MIDDLE_INITIAL_0004AS { get { return GetArrayElementAccessor<IField>(Names.MIDDLE_INITIAL_0004AS); } }
        public IArrayElementAccessor<IField> MIDDLE_INITIAL_0004 { get { return GetArrayElementAccessor<IField>(Names.MIDDLE_INITIAL_0004); } }
        public IArrayElementAccessor<IField> MIDDLE_INITIAL_0004XX { get { return GetArrayElementAccessor<IField>(Names.MIDDLE_INITIAL_0004XX); } }
        public IArrayElementAccessor<IField> LAST_NAME_0004AS { get { return GetArrayElementAccessor<IField>(Names.LAST_NAME_0004AS); } }
        public IArrayElementAccessor<IField> LAST_NAME_0004 { get { return GetArrayElementAccessor<IField>(Names.LAST_NAME_0004); } }
        public IArrayElementAccessor<IField> LAST_NAME_0004XX { get { return GetArrayElementAccessor<IField>(Names.LAST_NAME_0004XX); } }
        public IArrayElementAccessor<IField> SEX_0004AS { get { return GetArrayElementAccessor<IField>(Names.SEX_0004AS); } }
        public IArrayElementAccessor<IField> SEX_0004 { get { return GetArrayElementAccessor<IField>(Names.SEX_0004); } }
        public IArrayElementAccessor<IField> SEX_0004XX { get { return GetArrayElementAccessor<IField>(Names.SEX_0004XX); } }
        public IArrayElementAccessor<IField> DOB_0004AS { get { return GetArrayElementAccessor<IField>(Names.DOB_0004AS); } }
        public IArrayElementAccessor<IField> DOB_0004 { get { return GetArrayElementAccessor<IField>(Names.DOB_0004); } }
        public IArrayElementAccessor<IField> DOB_0004XX { get { return GetArrayElementAccessor<IField>(Names.DOB_0004XX); } }
        public IArrayElementAccessor<IGroup> OUTPUT_G_KSCARES_0005EV { get { return GetArrayElementAccessor<IGroup>(Names.OUTPUT_G_KSCARES_0005EV); } }
        public IArrayElementAccessor<IGroup> IEF_SUPPLIED_0005ET { get { return GetArrayElementAccessor<IGroup>(Names.IEF_SUPPLIED_0005ET); } }
        public IArrayElementAccessor<IField> FLAG_0005AS { get { return GetArrayElementAccessor<IField>(Names.FLAG_0005AS); } }
        public IArrayElementAccessor<IField> FLAG_0005 { get { return GetArrayElementAccessor<IField>(Names.FLAG_0005); } }
        public IArrayElementAccessor<IField> FLAG_0005XX { get { return GetArrayElementAccessor<IField>(Names.FLAG_0005XX); } }
        public IArrayElementAccessor<IGroup> OUTPUT_G_KANPAY_0006EV { get { return GetArrayElementAccessor<IGroup>(Names.OUTPUT_G_KANPAY_0006EV); } }
        public IArrayElementAccessor<IGroup> IEF_SUPPLIED_0006ET { get { return GetArrayElementAccessor<IGroup>(Names.IEF_SUPPLIED_0006ET); } }
        public IArrayElementAccessor<IField> FLAG_0006AS { get { return GetArrayElementAccessor<IField>(Names.FLAG_0006AS); } }
        public IArrayElementAccessor<IField> FLAG_0006 { get { return GetArrayElementAccessor<IField>(Names.FLAG_0006); } }
        public IArrayElementAccessor<IField> FLAG_0006XX { get { return GetArrayElementAccessor<IField>(Names.FLAG_0006XX); } }
        public IArrayElementAccessor<IGroup> OUTPUT_G_CSE_0007EV { get { return GetArrayElementAccessor<IGroup>(Names.OUTPUT_G_CSE_0007EV); } }
        public IArrayElementAccessor<IGroup> IEF_SUPPLIED_0007ET { get { return GetArrayElementAccessor<IGroup>(Names.IEF_SUPPLIED_0007ET); } }
        public IArrayElementAccessor<IField> FLAG_0007AS { get { return GetArrayElementAccessor<IField>(Names.FLAG_0007AS); } }
        public IArrayElementAccessor<IField> FLAG_0007 { get { return GetArrayElementAccessor<IField>(Names.FLAG_0007); } }
        public IArrayElementAccessor<IField> FLAG_0007XX { get { return GetArrayElementAccessor<IField>(Names.FLAG_0007XX); } }
        public IArrayElementAccessor<IGroup> OUTPUT_G_AE_0008EV { get { return GetArrayElementAccessor<IGroup>(Names.OUTPUT_G_AE_0008EV); } }
        public IArrayElementAccessor<IGroup> IEF_SUPPLIED_0008ET { get { return GetArrayElementAccessor<IGroup>(Names.IEF_SUPPLIED_0008ET); } }
        public IArrayElementAccessor<IField> FLAG_0008AS { get { return GetArrayElementAccessor<IField>(Names.FLAG_0008AS); } }
        public IArrayElementAccessor<IField> FLAG_0008 { get { return GetArrayElementAccessor<IField>(Names.FLAG_0008); } }
        public IArrayElementAccessor<IField> FLAG_0008XX { get { return GetArrayElementAccessor<IField>(Names.FLAG_0008XX); } }
        public IGroup PRF_CLIENTS { get { return GetElementByName<IGroup>(Names.PRF_CLIENTS); } }
        public IArrayElementAccessor<IGroup> PRF_ENTRY_TABLE { get { return GetArrayElementAccessor<IGroup>(Names.PRF_ENTRY_TABLE); } }
        public IArrayElementAccessor<IField> PRF_REC_LENGTH { get { return GetArrayElementAccessor<IField>(Names.PRF_REC_LENGTH); } }
        public IArrayElementAccessor<IField> PRF_RESPONSE_CODE { get { return GetArrayElementAccessor<IField>(Names.PRF_RESPONSE_CODE); } }
        public IArrayElementAccessor<IField> PRFTID { get { return GetArrayElementAccessor<IField>(Names.PRFTID); } }
        public IArrayElementAccessor<IField> PRF_ISN { get { return GetArrayElementAccessor<IField>(Names.PRF_ISN); } }
        public IArrayElementAccessor<IField> PRF_ISN_QUANTITY { get { return GetArrayElementAccessor<IField>(Names.PRF_ISN_QUANTITY); } }
        public IArrayElementAccessor<IField> PRF_RECORD { get { return GetArrayElementAccessor<IField>(Names.PRF_RECORD); } }
        public IGroup TWA { get { return GetElementByName<IGroup>(Names.TWA); } }
        public IGroup TWA_ADABAS_PARMS { get { return GetElementByName<IGroup>(Names.TWA_ADABAS_PARMS); } }
        public IGroup TWA_CICS_PARMS { get { return GetElementByName<IGroup>(Names.TWA_CICS_PARMS); } }
        public IField TWA_PROGRAM_ID { get { return GetElementByName<IField>(Names.TWA_PROGRAM_ID); } }
        public IGroup TWA_ADDR_LIST { get { return GetElementByName<IGroup>(Names.TWA_ADDR_LIST); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
           {
               PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
               PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
               {
                   PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
               });
           });

            recordDef.CreateNewGroup(Names.W_IA, (W_IA) =>
           {
               W_IA.CreateNewGroup(Names.A_0544735566_IA, (A_0544735566_IA) =>
               {
                   A_0544735566_IA.CreateNewGroup(Names.INPUT_0001EV, (INPUT_0001EV) =>
                   {
                       INPUT_0001EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0001ET, (CSE_PERSONS_WORK_SET_0001ET) =>
                       {
                           CSE_PERSONS_WORK_SET_0001ET.CreateNewField(Names.NUMBER_0001AS, FieldType.String, 1);

                           IField NUMBER_0001_local = CSE_PERSONS_WORK_SET_0001ET.CreateNewField(Names.NUMBER_0001, FieldType.String, 10);
                           CSE_PERSONS_WORK_SET_0001ET.CreateNewFieldRedefine(Names.NUMBER_0001XX, FieldType.String, NUMBER_0001_local, 10);
                           CSE_PERSONS_WORK_SET_0001ET.CreateNewField(Names.UNIQUE_KEY_0001AS, FieldType.String, 1);

                           IField UNIQUE_KEY_0001_local = CSE_PERSONS_WORK_SET_0001ET.CreateNewField(Names.UNIQUE_KEY_0001, FieldType.String, 100);
                           CSE_PERSONS_WORK_SET_0001ET.CreateNewFieldRedefine(Names.UNIQUE_KEY_0001XX, FieldType.String, UNIQUE_KEY_0001_local, 100);
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.W_OA, (W_OA) =>
           {
               W_OA.CreateNewGroup(Names.A_0544735567_OA, (A_0544735567_OA) =>
               {
                   A_0544735567_OA.CreateNewGroup(Names.OUTPUT_0002EV, (OUTPUT_0002EV) =>
                   {
                       OUTPUT_0002EV.CreateNewGroup(Names.ABEND_DATA_0002ET, (ABEND_DATA_0002ET) =>
                       {
                           ABEND_DATA_0002ET.CreateNewField(Names.TYPE_0002AS, FieldType.String, 1);

                           IField TYPE_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.TYPE_0002, FieldType.String, 1);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.TYPE_0002XX, FieldType.String, TYPE_0002_local, 1);
                           ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_FILE_NUMBER_0002AS, FieldType.String, 1);

                           IField ADABAS_FILE_NUMBER_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_FILE_NUMBER_0002, FieldType.String, 4);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.ADABAS_FILE_NUMBER_0002XX, FieldType.String, ADABAS_FILE_NUMBER_0002_local, 4);
                           ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_FILE_ACTION_0002AS, FieldType.String, 1);

                           IField ADABAS_FILE_ACTION_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_FILE_ACTION_0002, FieldType.String, 3);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.ADABAS_FILE_ACTION_0002XX, FieldType.String, ADABAS_FILE_ACTION_0002_local, 3);
                           ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_RESPONSE_CD_0002AS, FieldType.String, 1);

                           IField ADABAS_RESPONSE_CD_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.ADABAS_RESPONSE_CD_0002, FieldType.String, 4);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.ADABAS_RESPONSE_CD_0002XX, FieldType.String, ADABAS_RESPONSE_CD_0002_local, 4);
                           ABEND_DATA_0002ET.CreateNewField(Names.CICS_RESOURCE_NM_0002AS, FieldType.String, 1);

                           IField CICS_RESOURCE_NM_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.CICS_RESOURCE_NM_0002, FieldType.String, 8);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.CICS_RESOURCE_NM_0002XX, FieldType.String, CICS_RESOURCE_NM_0002_local, 8);
                           ABEND_DATA_0002ET.CreateNewField(Names.CICS_FUNCTION_CD_0002AS, FieldType.String, 1);

                           IField CICS_FUNCTION_CD_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.CICS_FUNCTION_CD_0002, FieldType.String, 2);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.CICS_FUNCTION_CD_0002XX, FieldType.String, CICS_FUNCTION_CD_0002_local, 2);
                           ABEND_DATA_0002ET.CreateNewField(Names.CICS_RESPONSE_CD_0002AS, FieldType.String, 1);

                           IField CICS_RESPONSE_CD_0002_local = ABEND_DATA_0002ET.CreateNewField(Names.CICS_RESPONSE_CD_0002, FieldType.String, 6);
                           ABEND_DATA_0002ET.CreateNewFieldRedefine(Names.CICS_RESPONSE_CD_0002XX, FieldType.String, CICS_RESPONSE_CD_0002_local, 6);
                       });
                   });
                   A_0544735567_OA.CreateNewGroup(Names.OUTPUT_NEXT_KEY_0003EV, (OUTPUT_NEXT_KEY_0003EV) =>
                   {
                       OUTPUT_NEXT_KEY_0003EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0003ET, (CSE_PERSONS_WORK_SET_0003ET) =>
                       {
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.UNIQUE_KEY_0003AS, FieldType.String, 1);

                           IField UNIQUE_KEY_0003_local = CSE_PERSONS_WORK_SET_0003ET.CreateNewField(Names.UNIQUE_KEY_0003, FieldType.String, 100);
                           CSE_PERSONS_WORK_SET_0003ET.CreateNewFieldRedefine(Names.UNIQUE_KEY_0003XX, FieldType.String, UNIQUE_KEY_0003_local, 100);
                       });
                   });
                   A_0544735567_OA.CreateNewGroup(Names.OUTPUT_GROUP_ALIASES_0001RG, (OUTPUT_GROUP_ALIASES_0001RG) =>
                   {

                       IField OUTPUT_GROUP_ALIASES_0001MA_local = OUTPUT_GROUP_ALIASES_0001RG.CreateNewField(Names.OUTPUT_GROUP_ALIASES_0001MA, FieldType.SignedNumeric, 4);
                       OUTPUT_GROUP_ALIASES_0001RG.CreateNewFieldRedefine(Names.OUTPUT_GROUP_ALIASES_0001MX, FieldType.String, OUTPUT_GROUP_ALIASES_0001MA_local, 4);
                       OUTPUT_GROUP_ALIASES_0001RG.CreateNewGroupArray(Names.OUTPUT_GROUP_ALIASES_0001, 6, (OUTPUT_GROUP_ALIASES_0001) =>
                       {
                           OUTPUT_GROUP_ALIASES_0001.CreateNewField(Names.OUTPUT_GROUP_ALIASES_0001AC, FieldType.String, 1);
                           OUTPUT_GROUP_ALIASES_0001.CreateNewGroup(Names.OUTPUT_G_0004EV, (OUTPUT_G_0004EV) =>
                           {
                               OUTPUT_G_0004EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0004ET, (CSE_PERSONS_WORK_SET_0004ET) =>
                               {
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.UNIQUE_KEY_0004AS, FieldType.String, 1);

                                   IField UNIQUE_KEY_0004_local = CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.UNIQUE_KEY_0004, FieldType.String, 100);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewFieldRedefine(Names.UNIQUE_KEY_0004XX, FieldType.String, UNIQUE_KEY_0004_local, 100);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.SSN_0004AS, FieldType.String, 1);

                                   IField SSN_0004_local = CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.SSN_0004, FieldType.String, 9);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewFieldRedefine(Names.SSN_0004XX, FieldType.String, SSN_0004_local, 9);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.FIRST_NAME_0004AS, FieldType.String, 1);

                                   IField FIRST_NAME_0004_local = CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.FIRST_NAME_0004, FieldType.String, 12);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewFieldRedefine(Names.FIRST_NAME_0004XX, FieldType.String, FIRST_NAME_0004_local, 12);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.MIDDLE_INITIAL_0004AS, FieldType.String, 1);

                                   IField MIDDLE_INITIAL_0004_local = CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.MIDDLE_INITIAL_0004, FieldType.String, 1);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewFieldRedefine(Names.MIDDLE_INITIAL_0004XX, FieldType.String, MIDDLE_INITIAL_0004_local, 1);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.LAST_NAME_0004AS, FieldType.String, 1);

                                   IField LAST_NAME_0004_local = CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.LAST_NAME_0004, FieldType.String, 17);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewFieldRedefine(Names.LAST_NAME_0004XX, FieldType.String, LAST_NAME_0004_local, 17);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.SEX_0004AS, FieldType.String, 1);

                                   IField SEX_0004_local = CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.SEX_0004, FieldType.String, 1);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewFieldRedefine(Names.SEX_0004XX, FieldType.String, SEX_0004_local, 1);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.DOB_0004AS, FieldType.String, 1);

                                   IField DOB_0004_local = CSE_PERSONS_WORK_SET_0004ET.CreateNewField(Names.DOB_0004, FieldType.SignedNumeric, 8);
                                   CSE_PERSONS_WORK_SET_0004ET.CreateNewFieldRedefine(Names.DOB_0004XX, FieldType.String, DOB_0004_local, 8);
                               });
                           });
                           OUTPUT_GROUP_ALIASES_0001.CreateNewGroup(Names.OUTPUT_G_KSCARES_0005EV, (OUTPUT_G_KSCARES_0005EV) =>
                           {
                               OUTPUT_G_KSCARES_0005EV.CreateNewGroup(Names.IEF_SUPPLIED_0005ET, (IEF_SUPPLIED_0005ET) =>
                               {
                                   IEF_SUPPLIED_0005ET.CreateNewField(Names.FLAG_0005AS, FieldType.String, 1);

                                   IField FLAG_0005_local = IEF_SUPPLIED_0005ET.CreateNewField(Names.FLAG_0005, FieldType.String, 1);
                                   IEF_SUPPLIED_0005ET.CreateNewFieldRedefine(Names.FLAG_0005XX, FieldType.String, FLAG_0005_local, 1);
                               });
                           });
                           OUTPUT_GROUP_ALIASES_0001.CreateNewGroup(Names.OUTPUT_G_KANPAY_0006EV, (OUTPUT_G_KANPAY_0006EV) =>
                           {
                               OUTPUT_G_KANPAY_0006EV.CreateNewGroup(Names.IEF_SUPPLIED_0006ET, (IEF_SUPPLIED_0006ET) =>
                               {
                                   IEF_SUPPLIED_0006ET.CreateNewField(Names.FLAG_0006AS, FieldType.String, 1);

                                   IField FLAG_0006_local = IEF_SUPPLIED_0006ET.CreateNewField(Names.FLAG_0006, FieldType.String, 1);
                                   IEF_SUPPLIED_0006ET.CreateNewFieldRedefine(Names.FLAG_0006XX, FieldType.String, FLAG_0006_local, 1);
                               });
                           });
                           OUTPUT_GROUP_ALIASES_0001.CreateNewGroup(Names.OUTPUT_G_CSE_0007EV, (OUTPUT_G_CSE_0007EV) =>
                           {
                               OUTPUT_G_CSE_0007EV.CreateNewGroup(Names.IEF_SUPPLIED_0007ET, (IEF_SUPPLIED_0007ET) =>
                               {
                                   IEF_SUPPLIED_0007ET.CreateNewField(Names.FLAG_0007AS, FieldType.String, 1);

                                   IField FLAG_0007_local = IEF_SUPPLIED_0007ET.CreateNewField(Names.FLAG_0007, FieldType.String, 1);
                                   IEF_SUPPLIED_0007ET.CreateNewFieldRedefine(Names.FLAG_0007XX, FieldType.String, FLAG_0007_local, 1);
                               });
                           });
                           OUTPUT_GROUP_ALIASES_0001.CreateNewGroup(Names.OUTPUT_G_AE_0008EV, (OUTPUT_G_AE_0008EV) =>
                           {
                               OUTPUT_G_AE_0008EV.CreateNewGroup(Names.IEF_SUPPLIED_0008ET, (IEF_SUPPLIED_0008ET) =>
                               {
                                   IEF_SUPPLIED_0008ET.CreateNewField(Names.FLAG_0008AS, FieldType.String, 1);

                                   IField FLAG_0008_local = IEF_SUPPLIED_0008ET.CreateNewField(Names.FLAG_0008, FieldType.String, 1);
                                   IEF_SUPPLIED_0008ET.CreateNewFieldRedefine(Names.FLAG_0008XX, FieldType.String, FLAG_0008_local, 1);
                               });
                           });
                       });
                   });
               });
           });

            recordDef.CreateNewGroup(Names.PRF_CLIENTS, (PRF_CLIENTS) =>
           {
               PRF_CLIENTS.CreateNewGroupArray(Names.PRF_ENTRY_TABLE, 10, (PRF_ENTRY_TABLE) =>
               {
                   PRF_ENTRY_TABLE.CreateNewField(Names.PRF_REC_LENGTH, FieldType.CompShort, 4);
                   PRF_ENTRY_TABLE.CreateNewField(Names.PRF_RESPONSE_CODE, FieldType.CompShort, 4);
                   PRF_ENTRY_TABLE.CreateNewField(Names.PRFTID, FieldType.CompInt, 9);
                   PRF_ENTRY_TABLE.CreateNewField(Names.PRF_ISN, FieldType.CompInt, 9);
                   PRF_ENTRY_TABLE.CreateNewField(Names.PRF_ISN_QUANTITY, FieldType.CompInt, 9);
                   PRF_ENTRY_TABLE.CreateNewField(Names.PRF_RECORD, FieldType.String, 79);
               });
           });

            recordDef.CreateNewGroup(Names.TWA, (TWA) =>
           {
               IGroup TWA_ADABAS_PARMS_local = (IGroup)TWA.CreateNewGroup(Names.TWA_ADABAS_PARMS, (TWA_ADABAS_PARMS) =>
               {
                   TWA_ADABAS_PARMS.CreateNewFieldArray("FILLER_d11", 7, FieldType.CompInt, 4);
               });
               TWA.CreateNewGroupRedefine(Names.TWA_CICS_PARMS, TWA_ADABAS_PARMS_local, (TWA_CICS_PARMS) =>
               {
                   TWA_CICS_PARMS.CreateNewField(Names.TWA_PROGRAM_ID, FieldType.String, 8);
                   TWA_CICS_PARMS.CreateNewGroup(Names.TWA_ADDR_LIST, (TWA_ADDR_LIST) =>
                   {
                       TWA_ADDR_LIST.CreateNewFieldArray("FILLER_d12", 5, FieldType.CompInt, 4);
                   });
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(W_IA, args, 0);
            SetPassedParm(W_OA, args, 1);
            SetPassedParm(PSMGR_EAB_DATA, args, 2);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(W_IA, args, 0);
            SetReturnParm(W_OA, args, 1);
            SetReturnParm(PSMGR_EAB_DATA, args, 2);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXIR10 : OnlineProgramBase
    {

        #region Public Constructors
        public SWEXIR10()
            : base()
        {
            this.ProgramName = "SWEXIR10";

            WS = new SWEXIR10_ws();
            LS = new SWEXIR10_ls();
            DbConv = new DBConversation();
            DbConv.SQLCA.Record = WS.SQLCA.Record;

        }

        public SWEXIR10(OnlineControl controlData) : base(controlData)
        {
            this.ProgramName = "SWEXIR10";

            WS = new SWEXIR10_ws();
            LS = new SWEXIR10_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXIR10_ws WS;

        //==== Linkage Section Data Class ========================================
        private SWEXIR10_ls LS;
        private DBConversation DbConv;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING W-IA , W-OA , PSMGR-EAB-DATA.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                SetData();
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
            finally
            {
                Data.CloseConnection();
            }
        }
        #endregion

        #region Private Methods

        private void SetData()
        {
            LS.InitializeWithLowValues();
            WS.InitializeWithLowValues();
        }

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0544735563(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0544735563
        /// </summary>
        private void M_MAIN_0544735563(string returnMethod = "")
        {
            M_PARA_0544735563_INIT("M_PARA_0544735563_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0544735563-INIT THRU PARA-0544735563-INIT-EXIT
            M_PARA_0544735563("M_PARA_0544735563_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0544735563 THRU PARA-0544735563-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0544735563
        /// </summary>
        private void M_PARA_0544735563(string returnMethod = "")
        {
            WS.FUNC_0544735563_ESC_FLAG.SetValue("N");                                                          //COBOL==> MOVE 'N' TO FUNC-0544735563-ESC-FLAG.
            if (returnMethod != "" && returnMethod != "M_PARA_0544735563") { M_0000_ADABAS_ROUTINE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_ADABAS_ROUTINE
        /// </summary>
        /// <remarks>
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT: ****************************************************************
        ///COMMENT:                                                                *
        ///COMMENT:  INCLUDE NAME:  SWCSZG09.                                      *
        ///COMMENT:      EAB NAME:  SWEXIR10.                                      *
        ///COMMENT:   DESCRIPTION:  0000-ADABAS-ROUTINE.                           *
        ///COMMENT:      LOCATION:  PROCEDURE DIVISION.                            *
        ///COMMENT:                                                                *
        ///COMMENT:      INCLUDES:  SWCSZG07  WORKING-STORAGE SECTION.             *
        ///COMMENT:                 SWCSZ053  WORKING-STORAGE SECTION.             *
        ///COMMENT:                 SWCSZG08  LINKAGE SECTION.                     *
        ///COMMENT:                 SWCTWA    LINKAGE SECTION.                     *
        ///COMMENT:                                                                *
        ///COMMENT:       ACTIONS:  RECEIVE CSE-PERSON-NUMBER                      *
        ///COMMENT:                         NEXT-READLOGICAL-KEY.                  *
        ///COMMENT:                 READVALUE CLIENT-DBF USING                     *
        ///COMMENT:                         NEXT-READLOGICAL-KEY, IF NOT BLANK, OR *
        ///COMMENT:                         CSE-PERSON-NUMBER.                     *
        ///COMMENT:                 RETURN  UPTO 6 OCCURRANCES FOR                 *
        ///COMMENT:                                CSE-PERSON-NUMBER               *
        ///COMMENT:                         CLIENT-SURNAME                         *
        ///COMMENT:                         CLIENT-FIRST-NAME                      *
        ///COMMENT:                         CLIENT-MIDDLE-INITIAL                  *
        ///COMMENT:                         CLIENT-SOCIAL-SECURITY-NUMBER          *
        ///COMMENT:                         CLIENT-DATE-OF-BIRTH                   *
        ///COMMENT:                         CLIENTB-GENDER                         *
        ///COMMENT:                         CLIENT-SYSTEM-PARTICIPATION-INDICATORS.*
        ///COMMENT:                              1 OCCURRANCE  OF                  *
        ///COMMENT:                         ABEND-FIELDS                           *
        ///COMMENT:                         NEXT-READLOGICAL-KEY, IF AT LEAST      *
        ///COMMENT:                             1 MORE RECORD EXISTS FOR           *
        ///COMMENT:                                CSE-PERSON-NUMBER.              *
        ///COMMENT:                                                                *
        ///COMMENT:       CREATED:  09-NOV-95.                                     *
        ///COMMENT:            BY:  CTG/CEB.                                       *
        ///COMMENT:                                                                *
        ///COMMENT: ** MAINTENANCE *************************************************
        ///COMMENT:                   CHANGE                                       *
        ///COMMENT:                   CONTRL                                       *
        ///COMMENT:  DATE     AUTHOR  NUMBER  DESCRIPTION                          *
        ///COMMENT:  -------  ------  ------  ------------------------------------ *
        ///COMMENT:  8/29/17  RKM             ADDED WITH UR TO QUERIES             *
        ///COMMENT:                                                                *
        ///COMMENT:  9/25/17  RAJ             MODIFIED TO ADD KMIS SYSTEM FLAG     *
        ///COMMENT:                           POPULATION RELATED CODE.             *
        ///COMMENT:                                                                *
        ///COMMENT: ****************************************************************
        /// </remarks>
        private void M_0000_ADABAS_ROUTINE(string returnMethod = "")
        {
            WS.MV_ABEND_FIELDS.SetValueWithSpaces();                                                            //COBOL==> MOVE SPACES TO MV-ABEND-FIELDS.
            SetHandleCondtions(HandleCondition.ERROR, "M_9999_CICS_ABEND");                                     //COBOL==> EXEC CICS HANDLE CONDITION ERROR ( 9999-CICS-ABEND ) END-EXEC.
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT: *** MOVE IMPORT FIELDS TO WORKING-STORAGE FIELDS.
                                                                                                                //COMMENT: ****************************************************************
            WS.IMP_CLIENT_NUMBER_X10.SetValue(LS.NUMBER_0001);                                                  //COBOL==> MOVE NUMBER-0001 TO IMP-CLIENT-NUMBER-X10.
            WS.CLIENTB_CLIENT_NUMBER.SetValue(LS.NUMBER_0001);                                                  //COBOL==> MOVE NUMBER-0001 TO CLIENTB-CLIENT-NUMBER.
                                                                                                                //COMMENT:     MOVE UNIQUE-KEY-0001 TO IMP-CLIENT-KEY.
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT:     CALL 'SWADDRES' USING ISN-BUF149,
                                                                                                                //COMMENT:                           PRF-POINTER-CLIENT-DBF.
                                                                                                                //COMMENT:     SET ADDRESS OF PRF-CLIENTS TO PRF-POINTER-CLIENT-DBF.
                                                                                                                //COMMENT:     MOVE LOW-VALUES TO ISN-BUF149.
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:  INCLUDE NAME:  SWCSZ954 (FROM SWCSZ054).                      *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:      EAB NAME:  SWCSZ???.                                      *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:   DESCRIPTION:  ADABAS INITIALIZATION.                         *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:      LOCATION:  PROCEDURE DIVISION.                            *
                                                                                                                //COMMENT:                 MUST BE HARDCOPIED INTO EAB MAIN PROCEDURE     *
                                                                                                                //COMMENT:                   DIVISION INCLUDE SWCSZ???.                   *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:       ACTIONS:  RELEASES ANY OUTSTANDING COMMAND ID'S.         *
                                                                                                                //COMMENT:                 THIS ROUTINE REQUIRES INCLUDE SWCSZ053 IN THE  *
                                                                                                                //COMMENT:                   WORKING-STORAGE SECTION OF THIS PROGRAM.     *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT:       CREATED:  21-AUG-95.                                     *
                                                                                                                //COMMENT:            BY:  CTG/CEB.                                       *
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT: ** MAINTENANCE *************************************************
                                                                                                                //COMMENT:                   CHANGE                                       *
                                                                                                                //COMMENT:                   CONTRL                                       *
                                                                                                                //COMMENT:  DATE     AUTHOR  NUMBER  DESCRIPTION                          *
                                                                                                                //COMMENT:  -------  ------  ------  ------------------------------------ *
                                                                                                                //COMMENT:  05/08/14 LAT     CQ35825 CHANGE ADABAS TO DB2 FOR KEES PHASE 3*
                                                                                                                //COMMENT:                                                                *
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT:     CALL 'ADASTWA' USING TWA CONTROL-BLOCK.
                                                                                                                //COMMENT:     CALL SRADALNK  USING DFHEIBLK DFHCOMMAREA TWA SRMODLNK.
                                                                                                                //COMMENT:     IF RESPONSE-CODE > ZERO AND NOT = 9
                                                                                                                //COMMENT:         MOVE 'A'           TO MV-ABEND-TYPE
                                                                                                                //COMMENT:         MOVE ZERO          TO MV-ADA-FILE-NUMBER
                                                                                                                //COMMENT:         MOVE 'INI'         TO MV-ADA-FILE-ACTION
                                                                                                                //COMMENT:         MOVE RESPONSE-CODE TO MV-ADA-RESPONSE-CD
                                                                                                                //COMMENT:         GO TO 0000-ADABAS-EXIT
                                                                                                                //COMMENT:     END-IF.
            WS.MV_CLIENT_ARRAY.SetValueWithSpaces();                                                            //COBOL==> MOVE SPACES TO MV-CLIENT-ARRAY.
            WS.MV_CLIENT_ENTRY_NUM.SetValueWithZeroes();                                                        //COBOL==> MOVE ZERO TO MV-CLIENT-ENTRY-NUM.
            WS.PRF_SUB.SetValue(1);                                                                             //COBOL==> MOVE 1 TO PRF-SUB.
            M_1000_GET_ALIAS_NAME_LIST("M_1000_EXIT"); if (Control.ExitProgram) { return; }                       //COBOL==> PERFORM 1000-GET-ALIAS-NAME-LIST THRU 1000-EXIT.
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                M_0000_ADABAS_EXIT(CheckGotoReturn(returnMethod)); return;                                          //COBOL==> GO TO 0000-ADABAS-EXIT
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT: *** MOVE WORKING-STORAGE FIELDS TO EXPORT FIELDS.
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT: *** MOVE MV-CLIENT-NUMBER-X10 TO
            if (WS.MV_CLIENT_ENTRY_NUM.IsLessThanOrEqualTo(WS.MC_CLIENT_ENTRY_EXP))                             //COBOL==> IF MV-CLIENT-ENTRY-NUM NOT > MC-CLIENT-ENTRY-EXP
            {
                LS.OUTPUT_GROUP_ALIASES_0001MA.SetValue(WS.MV_CLIENT_ENTRY_NUM);                                    //COBOL==> MOVE MV-CLIENT-ENTRY-NUM TO OUTPUT-GROUP-ALIASES-0001MA
            }                                                                                                   //COBOL==> ELSE
            else
            {
                LS.OUTPUT_GROUP_ALIASES_0001MA.SetValue(WS.MC_CLIENT_ENTRY_EXP);                                    //COBOL==> MOVE MC-CLIENT-ENTRY-EXP TO OUTPUT-GROUP-ALIASES-0001MA
            }                                                                                                   //COBOL==> END-IF.
            for (WS.MV_CLIENT_ENTRY_SUB.SetValue(1); (!((WS.MV_CLIENT_ENTRY_SUB.IsGreaterThan(WS.MC_CLIENT_ENTRY_EXP)) || (WS.MV_CLIENT_ENTRY_SUB.IsGreaterThan(WS.MV_CLIENT_ENTRY_NUM)))); WS.MV_CLIENT_ENTRY_SUB.Add(1))  //COBOL==> PERFORM VARYING MV-CLIENT-ENTRY-SUB FROM 1 BY 1 UNTIL MV-CLIENT-ENTRY-SUB > MC-CLIENT-ENTRY-EXP OR MV-CLIENT-ENTRY-SUB > MV-CLIENT-ENTRY-NUM
            {
                LS.LAST_NAME_0004[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue(WS.MV_CLIENT_LAST_NAME[WS.MV_CLIENT_ENTRY_SUB.AsInt()]);  //COBOL==> MOVE MV-CLIENT-LAST-NAME ( MV-CLIENT-ENTRY-SUB ) TO LAST-NAME-0004 ( MV-CLIENT-ENTRY-SUB )
                LS.FIRST_NAME_0004[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue(WS.MV_CLIENT_FIRST_NAME[WS.MV_CLIENT_ENTRY_SUB.AsInt()]);  //COBOL==> MOVE MV-CLIENT-FIRST-NAME ( MV-CLIENT-ENTRY-SUB ) TO FIRST-NAME-0004 ( MV-CLIENT-ENTRY-SUB )
                LS.MIDDLE_INITIAL_0004[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue(WS.MV_CLIENT_INITIAL[WS.MV_CLIENT_ENTRY_SUB.AsInt()]);  //COBOL==> MOVE MV-CLIENT-INITIAL ( MV-CLIENT-ENTRY-SUB ) TO MIDDLE-INITIAL-0004 ( MV-CLIENT-ENTRY-SUB )
                LS.DOB_0004XX[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue("00000000");                                 //COBOL==> MOVE '00000000' TO DOB-0004XX ( MV-CLIENT-ENTRY-SUB )
                if ((WS.MV_CLIENT_DATE_OF_BIRTH_X8[WS.MV_CLIENT_ENTRY_SUB.AsInt()].IsNumericValue())
             && (WS.MV_CLIENT_DATE_OF_BIRTH_X8[WS.MV_CLIENT_ENTRY_SUB.AsInt()].IsGreaterThan("00010101")))  //COBOL==> IF MV-CLIENT-DATE-OF-BIRTH-X8 ( MV-CLIENT-ENTRY-SUB ) NUMERIC AND MV-CLIENT-DATE-OF-BIRTH-X8 ( MV-CLIENT-ENTRY-SUB ) > '00010101'
                {
                    LS.DOB_0004XX[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue(WS.MV_CLIENT_DATE_OF_BIRTH_X8[WS.MV_CLIENT_ENTRY_SUB.AsInt()]);  //COBOL==> MOVE MV-CLIENT-DATE-OF-BIRTH-X8 ( MV-CLIENT-ENTRY-SUB ) TO DOB-0004XX ( MV-CLIENT-ENTRY-SUB )
                }                                                                                                   //COBOL==> END-IF
                LS.SEX_0004[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue(WS.MV_CLIENT_SEX[WS.MV_CLIENT_ENTRY_SUB.AsInt()]);  //COBOL==> MOVE MV-CLIENT-SEX ( MV-CLIENT-ENTRY-SUB ) TO SEX-0004 ( MV-CLIENT-ENTRY-SUB )
                LS.SSN_0004[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValueWithSpaces();                                   //COBOL==> MOVE SPACES TO SSN-0004 ( MV-CLIENT-ENTRY-SUB )
                if ((WS.MV_CLIENT_SOC_SEC_NUM_X9[WS.MV_CLIENT_ENTRY_SUB.AsInt()].IsNumericValue())
             && (WS.MV_CLIENT_SOC_SEC_NUM_X9[WS.MV_CLIENT_ENTRY_SUB.AsInt()].IsGreaterThan("000000000")))  //COBOL==> IF MV-CLIENT-SOC-SEC-NUM-X9 ( MV-CLIENT-ENTRY-SUB ) NUMERIC AND MV-CLIENT-SOC-SEC-NUM-X9 ( MV-CLIENT-ENTRY-SUB ) > '000000000'
                {
                    LS.SSN_0004[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue(WS.MV_CLIENT_SOC_SEC_NUM_X9[WS.MV_CLIENT_ENTRY_SUB.AsInt()]);  //COBOL==> MOVE MV-CLIENT-SOC-SEC-NUM-X9 ( MV-CLIENT-ENTRY-SUB ) TO SSN-0004 ( MV-CLIENT-ENTRY-SUB )
                }                                                                                                   //COBOL==> END-IF
                LS.FLAG_0008[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue(WS.MV_CLIENT_SYS_PART_AE[WS.MV_CLIENT_ENTRY_SUB.AsInt()]);  //COBOL==> MOVE MV-CLIENT-SYS-PART-AE ( MV-CLIENT-ENTRY-SUB ) TO FLAG-0008 ( MV-CLIENT-ENTRY-SUB )
                LS.FLAG_0007[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue(WS.MV_CLIENT_SYS_PART_CSE[WS.MV_CLIENT_ENTRY_SUB.AsInt()]);  //COBOL==> MOVE MV-CLIENT-SYS-PART-CSE ( MV-CLIENT-ENTRY-SUB ) TO FLAG-0007 ( MV-CLIENT-ENTRY-SUB )
                LS.FLAG_0006[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue(WS.MV_CLIENT_SYS_PART_KANPAY[WS.MV_CLIENT_ENTRY_SUB.AsInt()]);  //COBOL==> MOVE MV-CLIENT-SYS-PART-KANPAY ( MV-CLIENT-ENTRY-SUB ) TO FLAG-0006 ( MV-CLIENT-ENTRY-SUB )
                LS.FLAG_0005[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue(WS.MV_CLIENT_SYS_PART_KSCARES[WS.MV_CLIENT_ENTRY_SUB.AsInt()]);  //COBOL==> MOVE MV-CLIENT-SYS-PART-KSCARES ( MV-CLIENT-ENTRY-SUB ) TO FLAG-0005 ( MV-CLIENT-ENTRY-SUB )
                LS.UNIQUE_KEY_0004[WS.MV_CLIENT_ENTRY_SUB.AsInt()].SetValue(WS.MV_CLIENT_KEY[WS.MV_CLIENT_ENTRY_SUB.AsInt()]);  //COBOL==> MOVE MV-CLIENT-KEY ( MV-CLIENT-ENTRY-SUB ) TO UNIQUE-KEY-0004 ( MV-CLIENT-ENTRY-SUB )
            }                                                                                                   //COBOL==> END-PERFORM.
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT: *** MOVE NEXT KEY TO EXPORT FIELD.
                                                                                                                //COMMENT: ****************************************************************
            if (WS.MV_CLIENT_ENTRY_NUM.IsEqualTo(WS.MC_CLIENT_ENTRY_MAX))                                       //COBOL==> IF MV-CLIENT-ENTRY-NUM EQUAL MC-CLIENT-ENTRY-MAX
            {
                LS.UNIQUE_KEY_0003.SetValue(WS.MV_CLIENT_KEY[WS.MC_CLIENT_ENTRY_MAX.AsInt()]);                      //COBOL==> MOVE MV-CLIENT-KEY ( MC-CLIENT-ENTRY-MAX ) TO UNIQUE-KEY-0003
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT: ****************************************************************
                                                                                                                //COMMENT: ****************************************************************
            M_0000_ADABAS_EXIT(CheckGotoReturn(returnMethod)); return;                                          //COBOL==> GO TO 0000-ADABAS-EXIT.
        }
        /// <summary>
        /// Method M_1000_GET_ALIAS_NAME_LIST
        /// </summary>
        /// <remarks>
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        ///COMMENT: * COMMENT OUT ADABASE LOGIC 1000-GET-ALIAS-NAME LIST          **
        ///COMMENT: *                   THROUGH 1000-EXIT                         **
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        ///COMMENT: 1000-GET-ALIAS-NAME-LIST.
        ///COMMENT:     @READISN154 ISN = IMP-CLIENT-NUMBER.
        ///COMMENT:     IF RESPONSE-CODE154 > ZERO
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 154              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RI '            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE154 TO MV-ADA-RESPONSE-CD
        ///COMMENT:         GO TO 1000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     IF CLIENT-NUMBER154 NOT = IMP-CLIENT-NUMBER-X10
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 154              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE ' NE'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE ZERO             TO MV-ADA-RESPONSE-CD
        ///COMMENT:         GO TO 1000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     MOVE CLIENT-INFO154       TO MV-RECORD-NAME.
        ///COMMENT:     MOVE DATE-OF-BIRTH154     TO MV-DATE-OF-BIRTH-X8.
        ///COMMENT:     MOVE SEX154               TO MV-SEX.
        ///COMMENT:     IF IMP-CLIENT-KEY NOT = SPACES
        ///COMMENT:         MOVE IMP-CLIENT-KEY        TO V-CLIENT-ID-KEY149
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE IMP-CLIENT-NUMBER-X10 TO V-CLIENT-POINTER-1-10149
        ///COMMENT:     END-IF.
        ///COMMENT:     @READVALUE149  FIRST.
        ///COMMENT:     IF RESPONSE-CODE149 > ZERO
        ///COMMENT:         MOVE 'A'              TO MV-ABEND-TYPE
        ///COMMENT:         MOVE 149              TO MV-ADA-FILE-NUMBER
        ///COMMENT:         MOVE 'RVF'            TO MV-ADA-FILE-ACTION
        ///COMMENT:         MOVE RESPONSE-CODE149 TO MV-ADA-RESPONSE-CD
        ///COMMENT:         GO TO 1000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT: 1000-GET-ALIAS-NAME-LOOP.
        ///COMMENT:     IF EOF149 OR
        ///COMMENT:        MV-CLIENT-ENTRY-NUM NOT < MC-CLIENT-ENTRY-MAX
        ///COMMENT:         GO TO 1000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     IF CLIENT-POINTER-1-10149 NOT = V-CLIENT-POINTER-1-10149
        ///COMMENT:         GO TO 1000-EXIT
        ///COMMENT:     END-IF.
        ///COMMENT:     IF CLIENT-POINTER-1-10149 = CLIENT-NUMBER154     AND
        ///COMMENT:        CLIENT-NAME149         = MV-RECORD-NAME       AND
        ///COMMENT:        SSN149                 = SSN154               AND
        ///COMMENT:        DATE-OF-BIRTH-SEX149   = MV-DATE-OF-BIRTH-SEX
        ///COMMENT:         GO TO 1000-GET-ALIAS-NAME-NEXT
        ///COMMENT:     END-IF.
        ///COMMENT:     ADD 1 TO MV-CLIENT-ENTRY-NUM.
        ///COMMENT:     MOVE CLIENT-POINTER-11-31149
        ///COMMENT:                                 TO MV-CLIENT-POINTER-X21.
        ///COMMENT:     MOVE CLIENT-NAME149         TO MV-CLIENT-NAME
        ///COMMENT:                                            (MV-CLIENT-ENTRY-NUM).
        ///COMMENT:     MOVE DATE-OF-BIRTH-SEX149   TO MV-CLIENT-DATE-OF-BIRTH-SEX
        ///COMMENT:                                            (MV-CLIENT-ENTRY-NUM).
        ///COMMENT:     MOVE SSN149                 TO MV-CLIENT-SOC-SEC-NUM
        ///COMMENT:                                            (MV-CLIENT-ENTRY-NUM).
        ///COMMENT:     MOVE MV-SYSTEM-PARTICIPATION
        ///COMMENT:                                 TO MV-CLIENT-SYSTEM-PARTICIPATION
        ///COMMENT:                                            (MV-CLIENT-ENTRY-NUM).
        ///COMMENT:     MOVE CLIENT-ID-KEY149       TO
        ///COMMENT:                              MV-CLIENT-KEY (MV-CLIENT-ENTRY-NUM).
        ///COMMENT: 1000-GET-ALIAS-NAME-NEXT.
        ///COMMENT:     ADD 1 TO PRF-SUB.
        ///COMMENT:     IF PRF-REC-LENGTH (PRF-SUB) > ZERO
        ///COMMENT:         MOVE PRF-RESPONSE-CODE (PRF-SUB) TO RESPONSE-CODE149
        ///COMMENT:         MOVE PRF-ISN           (PRF-SUB) TO ISN149
        ///COMMENT:         MOVE PRF-ISN-QUANTITY  (PRF-SUB) TO ISN-QUANTITY149
        ///COMMENT:         MOVE PRF-RECORD        (PRF-SUB) TO RECORD-BUF149
        ///COMMENT:         IF RESPONSE-CODE149     = 3
        ///COMMENT:             MOVE 1                       TO EOF-COB149
        ///COMMENT:         END-IF
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE 'P'        TO COMMAND-OPTION-1149
        ///COMMENT:         MOVE 1          TO PRF-SUB
        ///COMMENT:         MOVE LOW-VALUES TO ISN-BUF149
        ///COMMENT:         PERFORM 1149-READVALUE-CLIENT-DBF
        ///COMMENT:            THRU 1149-EXIT
        ///COMMENT:         IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:             GO TO 1000-EXIT
        ///COMMENT:         END-IF
        ///COMMENT:     END-IF.
        ///COMMENT:     GO TO 1000-GET-ALIAS-NAME-LOOP.
        ///COMMENT: 1000-EXIT.
        ///COMMENT:     EXIT.
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        ///COMMENT: * READ CLIENT BASIC.  IF GOOD RETURN, MOVE CLIENT INFORMATION **
        ///COMMENT: *  TO 'MV' AREA, MOVE CLIENT NAME (FIRST, MI, LAST) TO        **
        ///COMMENT: *  STORAGE AREA 'DATABASE-KEYS'.                              **
        ///COMMENT: * MOVE CLIENT NUMBER, CLIENT NAME (FROM DATABASE-KEYS), AND   **
        ///COMMENT: *  CLIENT SSN TO 'CLIENT' KEY AREA                            **
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        /// </remarks>
        private void M_1000_GET_ALIAS_NAME_LIST(string returnMethod = "")
        {
            DbConv.ExecuteSqlQuery("SELECT CLIENT_NUMBER , CLIENT_GIVEN_NAME , CLIENT_INITIALS , CLIENT_SURNAME , SSN , GENDER , DATE_OF_BIRTH INTO {0} , {1} , {2} , {3} , {4} , {5} , {6} FROM KSD_CLIENT_BASIC WHERE CLIENT_NUMBER = {7} WITH UR ",  //COBOL==> EXEC SQL SELECT CLIENT_NUMBER , CLIENT_GIVEN_NAME , CLIENT_INITIALS , CLIENT_SURNAME , SSN , GENDER , DATE_OF_BIRTH INTO :CLIENTB-CLIENT-NUMBER , :CLIENTB-CLIENT-GIVEN-NAME , :CLIENTB-CLIENT-INITIALS , :CLIENTB-CLIENT-SURNAME , :CLIENTB-SSN , :CLIENTB-GENDER , :CLIENTB-DATE-OF-BIRTH FROM KSD_CLIENT_BASIC WHERE CLIENT_NUMBER = :CLIENTB-CLIENT-NUMBER WITH UR END-EXEC.
                                 WS.CLIENTB_CLIENT_NUMBER, WS.CLIENTB_CLIENT_GIVEN_NAME, WS.CLIENTB_CLIENT_INITIALS, WS.CLIENTB_CLIENT_SURNAME, WS.CLIENTB_SSN, WS.CLIENTB_GENDER, WS.CLIENTB_DATE_OF_BIRTH, WS.CLIENTB_CLIENT_NUMBER);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN 0
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN 100
            else
            if ((WS.SQLCA.SQLCODE.IsEqualTo(100)))
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(154);                                                                //COBOL==> MOVE 154 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RHI");                                                              //COBOL==> MOVE 'RHI' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(154);                                                                //COBOL==> MOVE 154 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue(" NE");                                                              //COBOL==> MOVE ' NE' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
            }                                                                                                   //COBOL==> END-EVALUATE.
            WS.MV_CLIENT_ID.SetValue(WS.CLIENTB_CLIENT_NUMBER);                                                 //COBOL==> MOVE CLIENTB-CLIENT-NUMBER TO MV-CLIENT-ID CLIENT-FK-CLB-CLIENT-NO.
            WS.CLIENT_FK_CLB_CLIENT_NO.SetValue(WS.CLIENTB_CLIENT_NUMBER);
            WS.MV_RECORD_LAST_NAME.SetValue(WS.CLIENTB_CLIENT_SURNAME);                                         //COBOL==> MOVE CLIENTB-CLIENT-SURNAME TO MV-RECORD-LAST-NAME DBK-CLIENT-LAST-NAME.
            WS.DBK_CLIENT_LAST_NAME.SetValue(WS.CLIENTB_CLIENT_SURNAME);
            WS.MV_RECORD_FIRST_NAME.SetValue(WS.CLIENTB_CLIENT_GIVEN_NAME);                                     //COBOL==> MOVE CLIENTB-CLIENT-GIVEN-NAME TO MV-RECORD-FIRST-NAME DBK-CLIENT-FIRST-NAME.
            WS.DBK_CLIENT_FIRST_NAME.SetValue(WS.CLIENTB_CLIENT_GIVEN_NAME);
            WS.MV_RECORD_INITIAL.SetValue(WS.CLIENTB_CLIENT_INITIALS);                                          //COBOL==> MOVE CLIENTB-CLIENT-INITIALS TO MV-RECORD-INITIAL DBK-CLIENT-INITIAL.
            WS.DBK_CLIENT_INITIAL.SetValue(WS.CLIENTB_CLIENT_INITIALS);
            //COMMENT:     MOVE CLIENTB-DATE-OF-BIRTH     TO MV-DATE-OF-BIRTH-X8.
            WS.MV_DATE_OF_BIRTH_X8.SetValue(StringUtils.Stringify(StringUtils.DelimitedBySize(WS.CLIENTB_DATE_OF_BIRTH.GetSubstring(1, 4), WS.CLIENTB_DATE_OF_BIRTH.GetSubstring(6, 2), WS.CLIENTB_DATE_OF_BIRTH.GetSubstring(9, 2))));  //COBOL==> STRING CLIENTB-DATE-OF-BIRTH ( 1:4 ) CLIENTB-DATE-OF-BIRTH ( 6:2 ) CLIENTB-DATE-OF-BIRTH ( 9:2 ) DELIMITED BY SIZE INTO MV-DATE-OF-BIRTH-X8.
            WS.MV_SEX.SetValue(WS.CLIENTB_GENDER);                                                              //COBOL==> MOVE CLIENTB-GENDER TO MV-SEX.
            WS.MV_SSN.SetValue(WS.CLIENTB_SSN);                                                                 //COBOL==> MOVE CLIENTB-SSN TO MV-SSN CLIENT-SSN.
            WS.CLIENT_SSN.SetValue(WS.CLIENTB_SSN);
            WS.CLIENT_CLIENT_NAME.SetValue(WS.DBK_CLIENT_NAME);                                                 //COBOL==> MOVE DBK-CLIENT-NAME TO CLIENT-CLIENT-NAME.
            if (returnMethod != "" && returnMethod != "M_1000_GET_ALIAS_NAME_LIST") { M_1000_SELECT_CLIENT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1000_SELECT_CLIENT
        /// </summary>
        /// <remarks>
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        ///COMMENT: * READ CLIENT. SAVE VERIFIED SSN FLAG.                        **
        ///COMMENT: *   IF RECORD FOUND, GET SYSTEM PARTICIPATION CODES.          **
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        /// </remarks>
        private void M_1000_SELECT_CLIENT(string returnMethod = "")
        {
            DbConv.ExecuteSqlQuery("SELECT VERIFIED_SSN_FLAG INTO {0} FROM KSD_CLIENT WHERE FK_CLB_CLIENT_NO = {1} AND CLIENT_NAME = {2} AND SSN = {3} WITH UR ",  //COBOL==> EXEC SQL SELECT VERIFIED_SSN_FLAG INTO :CLIENT-VERIFIED-SSN-FLAG FROM KSD_CLIENT WHERE FK_CLB_CLIENT_NO = :CLIENT-FK-CLB-CLIENT-NO AND CLIENT_NAME = :CLIENT-CLIENT-NAME AND SSN = :CLIENT-SSN WITH UR END-EXEC.
                                 WS.CLIENT_VERIFIED_SSN_FLAG, WS.CLIENT_FK_CLB_CLIENT_NO, WS.CLIENT_CLIENT_NAME, WS.CLIENT_SSN);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN 100
            else
            if ((WS.SQLCA.SQLCODE.IsEqualTo(100)))
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(149);                                                                //COBOL==> MOVE 149 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RVF");                                                              //COBOL==> MOVE 'RVF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                M_1000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1000-EXIT
            }                                                                                                   //COBOL==> END-EVALUATE.
            WS.MV_VERIFIED_SSN_FLAG.SetValue(WS.CLIENT_VERIFIED_SSN_FLAG);                                      //COBOL==> MOVE CLIENT-VERIFIED-SSN-FLAG TO MV-VERIFIED-SSN-FLAG.
            if (returnMethod != "" && returnMethod != "M_1000_SELECT_CLIENT") { M_1000_GET_ALIAS_NAMES(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1000_GET_ALIAS_NAMES
        /// </summary>
        private void M_1000_GET_ALIAS_NAMES(string returnMethod = "")
        {
            //COMMENT: ****************************************************************
            //COMMENT: ****************************************************************
            //COMMENT: * MOVE CLIENT NUMBER, CLIENT NAME, AND CLIENT SSN TO KEY AREA **
            //COMMENT: *  FOR SYSTEM-PARTICIPATION CURSOR.                           **
            //COMMENT: * DECLARE CURSOR, OPEN CURSOR, FETCH CURSOR MULTIPLE TIMES    **
            //COMMENT: *   TO GET ALL SYSTEM PARTICIPATION CODES, AND CLOSE CURSOR.  **
            //COMMENT: ****************************************************************
            //COMMENT: ****************************************************************
            WS.SPART_FK_CLB_CLIENT_NO.SetValue(WS.CLIENT_FK_CLB_CLIENT_NO);                                     //COBOL==> MOVE CLIENT-FK-CLB-CLIENT-NO TO SPART-FK-CLB-CLIENT-NO.
            WS.SPART_FK_CLI_CLIENT_NAME.SetValue(WS.CLIENT_CLIENT_NAME);                                        //COBOL==> MOVE CLIENT-CLIENT-NAME TO SPART-FK-CLI-CLIENT-NAME.
            WS.SPART_FK_CLI_SSN.SetValue(WS.CLIENT_SSN);                                                        //COBOL==> MOVE CLIENT-SSN TO SPART-FK-CLI-SSN.
            M_99100_DECLARE_SYSPART_CURSOR(); if (Control.ExitProgram) { return; }                                //COBOL==> PERFORM 99100-DECLARE-SYSPART-CURSOR.
            if (WS.MV_ERR_YES.Value)                                                                            //COBOL==> IF MV-ERR-YES
            {
                M_1000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1000-EXIT
            }                                                                                                   //COBOL==> END-IF.
            M_99200_OPEN_SYSPART_CURSOR(); if (Control.ExitProgram) { return; }                                   //COBOL==> PERFORM 99200-OPEN-SYSPART-CURSOR.
            if (WS.MV_ERR_YES.Value)                                                                            //COBOL==> IF MV-ERR-YES
            {
                M_1000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1000-EXIT
            }                                                                                                   //COBOL==> END-IF.
            while (!(((WS.MV_EOF_YES.Value) || (WS.MV_ERR_YES.Value)) || (WS.MV_CLIENT_ENTRY_NUM.IsGreaterThanOrEqualTo(WS.MC_CLIENT_ENTRY_MAX))))  //COBOL==> PERFORM 99300-FETCH-SYSPART-CURSOR UNTIL MV-EOF-YES OR MV-ERR-YES OR MV-CLIENT-ENTRY-NUM NOT < MC-CLIENT-ENTRY-MAX.
            {
                M_99300_FETCH_SYSPART_CURSOR(); if (Control.ExitProgram) { return; }
            }
            M_99900_CLOSE_SYSPART_CURSOR(); if (Control.ExitProgram) { return; }                                  //COBOL==> PERFORM 99900-CLOSE-SYSPART-CURSOR.
            if (returnMethod != "" && returnMethod != "M_1000_GET_ALIAS_NAMES") { M_1000_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1000_EXIT
        /// </summary>
        /// <remarks>
        ///COMMENT:             MOVE 1                       TO EOF-COB149
        ///COMMENT:         END-IF
        ///COMMENT:     ELSE
        ///COMMENT:         MOVE 'P'        TO COMMAND-OPTION-1149
        ///COMMENT:         MOVE 1          TO PRF-SUB
        ///COMMENT:         MOVE LOW-VALUES TO ISN-BUF149
        ///COMMENT:         PERFORM 1149-READVALUE-CLIENT-DBF
        ///COMMENT:            THRU 1149-EXIT
        ///COMMENT:         IF NOT MV-ABEND-TYPE-NONE
        ///COMMENT:             GO TO 1000-EXIT
        ///COMMENT:         END-IF
        ///COMMENT:     END-IF.
        ///COMMENT:     GO TO 1000-GET-ALIAS-NAME-LOOP.
        /// </remarks>
        private void M_1000_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1000_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1000_EXIT") { M_9999_CICS_ABEND(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_9999_CICS_ABEND
        /// </summary>
        private void M_9999_CICS_ABEND(string returnMethod = "")
        {
            WS.MV_ABEND_TYPE.SetValue("C");                                                                     //COBOL==> MOVE 'C' TO MV-ABEND-TYPE.
            WS.MV_CICS_RESOURCE_NM.SetValue(Control.EIBRSRCE);                                                  //COBOL==> MOVE EIBRSRCE TO MV-CICS-RESOURCE-NM.
            WS.MV_CICS_FUNCTION_CD.SetValue(Control.EIBFN);                                                     //COBOL==> MOVE EIBFN TO MV-CICS-FUNCTION-CD.
            WS.MV_CICS_RESPONSE_CD.SetValue(Control.EIBRCODE);                                                  //COBOL==> MOVE EIBRCODE TO MV-CICS-RESPONSE-CD.
            if (returnMethod != "" && returnMethod != "M_9999_CICS_ABEND") { M_99100_DECLARE_SYSPART_CURSOR(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99100_DECLARE_SYSPART_CURSOR
        /// </summary>
        /// <remarks>
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        ///COMMENT: * DEFINE CURSOR TO SELECT SYSTEM-CODE AND PARTICIPATION-FLAG  **
        ///COMMENT: *  FROM SYSTEM PARTICIPATION DATABASE.                        **
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        /// </remarks>
        private void M_99100_DECLARE_SYSPART_CURSOR(string returnMethod = "")
        {
            DbConv.SetQueryText("SYSPART", "SELECT SYSTEM_CODE, PARTICIPATION_FLAG FROM KSD_SYSTEM_PART WHERE FK_CLB_CLIENT_NO = {0}  AND FK_CLI_CLIENT_NAME = {1}  AND FK_CLI_SSN = {2}  WITH UR",  //COBOL==> EXEC SQL DECLARE SYSPART CURSOR FOR SELECT SYSTEM_CODE , PARTICIPATION_FLAG FROM KSD_SYSTEM_PART WHERE FK_CLB_CLIENT_NO = :SPART-FK-CLB-CLIENT-NO AND FK_CLI_CLIENT_NAME = :SPART-FK-CLI-CLIENT-NAME AND FK_CLI_SSN = :SPART-FK-CLI-SSN WITH UR END-EXEC.
                                WS.SPART_FK_CLB_CLIENT_NO, WS.SPART_FK_CLI_CLIENT_NAME, WS.SPART_FK_CLI_SSN);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(149);                                                                //COBOL==> MOVE 149 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RLF");                                                              //COBOL==> MOVE 'RLF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                WS.MV_ERR_YES.SetValue(true);                                                                       //COBOL==> SET MV-ERR-YES TO TRUE
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_99100_DECLARE_SYSPART_CURSOR") { M_99100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99100_EXIT
        /// </summary>
        private void M_99100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99100_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99100_EXIT") { M_99200_OPEN_SYSPART_CURSOR(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99200_OPEN_SYSPART_CURSOR
        /// </summary>
        private void M_99200_OPEN_SYSPART_CURSOR(string returnMethod = "")
        {
            DbConv.OpenReader("SYSPART");                                                                       //COBOL==> EXEC SQL OPEN SYSPART END-EXEC.
                                                                                                                // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(149);                                                                //COBOL==> MOVE 149 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RLF");                                                              //COBOL==> MOVE 'RLF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                WS.MV_ERR_YES.SetValue(true);                                                                       //COBOL==> SET MV-ERR-YES TO TRUE
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_99200_OPEN_SYSPART_CURSOR") { M_99200_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99200_EXIT
        /// </summary>
        private void M_99200_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99200_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99200_EXIT") { M_99300_FETCH_SYSPART_CURSOR(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99300_FETCH_SYSPART_CURSOR
        /// </summary>
        /// <remarks>
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        ///COMMENT: * WHEN RECORD FOUND, INCREMENT COUNTER FOR CLIENT ARRAY       **
        ///COMMENT: *   AND PERFORM ROUTINE TO POPULATE THE CLIENT ARRAY.         **
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        /// </remarks>
        private void M_99300_FETCH_SYSPART_CURSOR(string returnMethod = "")
        {
            DbConv.FetchReaderRow("SYSPART",                                                                 //COBOL==> EXEC SQL FETCH SYSPART INTO :SPART-SYSTEM-CODE , :SPART-PARTICIPATION-FLAG END-EXEC.
                             WS.SPART_SYSTEM_CODE, WS.SPART_PARTICIPATION_FLAG);
            // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                WS.MV_EOF_NO.SetValue(true);                                                                        //COBOL==> SET MV-EOF-NO TO TRUE
                WS.MV_CLIENT_ENTRY_NUM.Add(1);                                                                      //COBOL==> ADD 1 TO MV-CLIENT-ENTRY-NUM
                M_99400_POPULATE_CLIENT_ARRAY(); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM 99400-POPULATE-CLIENT-ARRAY
            }                                                                                                //COBOL==> WHEN 100
            else
            if ((WS.SQLCA.SQLCODE.IsEqualTo(100)))
            {
                WS.MV_EOF_YES.SetValue(true);                                                                       //COBOL==> SET MV-EOF-YES TO TRUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(149);                                                                //COBOL==> MOVE 149 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                WS.MV_ERR_YES.SetValue(true);                                                                       //COBOL==> SET MV-ERR-YES TO TRUE
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_99300_FETCH_SYSPART_CURSOR") { M_99300_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99300_EXIT
        /// </summary>
        private void M_99300_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99300_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99300_EXIT") { M_99400_POPULATE_CLIENT_ARRAY(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99400_POPULATE_CLIENT_ARRAY
        /// </summary>
        /// <remarks>
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        ///COMMENT: * MOVE PARTICIPATION FLAG TO SYSTEM PARTICIPATION ARRAY       **
        ///COMMENT: *   BASED ON VALUE OF SYSTEM CODE.                            **
        ///COMMENT: *   THEN POPULATE THIS OCCURENCE OF THE CLIENT-ARRAY.         **
        ///COMMENT: ****************************************************************
        ///COMMENT: ****************************************************************
        /// </remarks>
        private void M_99400_POPULATE_CLIENT_ARRAY(string returnMethod = "")
        {
            // EvaluateList !TRUE!                                                                              //COBOL==> EVALUATE TRUE
            if (WS.SPART_SYSTEM_CODE.IsEqualTo(WS.MV_SYSTEM_CODE_AE))                                       //COBOL==> WHEN SPART-SYSTEM-CODE = MV-SYSTEM-CODE-AE
            {
                WS.MV_SYS_PART_AE.SetValue(WS.SPART_PARTICIPATION_FLAG);                                            //COBOL==> MOVE SPART-PARTICIPATION-FLAG TO MV-SYS-PART-AE
            }                                                                                               //COBOL==> WHEN SPART-SYSTEM-CODE = MV-SYSTEM-CODE-CS
            else
            if (WS.SPART_SYSTEM_CODE.IsEqualTo(WS.MV_SYSTEM_CODE_CS))
            {
                WS.MV_SYS_PART_CSE.SetValue(WS.SPART_PARTICIPATION_FLAG);                                           //COBOL==> MOVE SPART-PARTICIPATION-FLAG TO MV-SYS-PART-CSE
            }                                                                                               //COBOL==> WHEN SPART-SYSTEM-CODE = MV-SYSTEM-CODE-KA
            else
            if (WS.SPART_SYSTEM_CODE.IsEqualTo(WS.MV_SYSTEM_CODE_KA))
            {
                WS.MV_SYS_PART_KANPAY.SetValue(WS.SPART_PARTICIPATION_FLAG);                                        //COBOL==> MOVE SPART-PARTICIPATION-FLAG TO MV-SYS-PART-KANPAY
            }                                                                                               //COBOL==> WHEN SPART-SYSTEM-CODE = MV-SYSTEM-CODE-KS
            else
            if (WS.SPART_SYSTEM_CODE.IsEqualTo(WS.MV_SYSTEM_CODE_KS))
            {
                WS.MV_SYS_PART_KSCARES.SetValue(WS.SPART_PARTICIPATION_FLAG);                                       //COBOL==> MOVE SPART-PARTICIPATION-FLAG TO MV-SYS-PART-KSCARES
            }                                                                                               //COBOL==> WHEN SPART-SYSTEM-CODE = MV-SYSTEM-CODE-FA
            else
            if (WS.SPART_SYSTEM_CODE.IsEqualTo(WS.MV_SYSTEM_CODE_FA))
            {
                WS.MV_SYS_PART_FACTS.SetValue(WS.SPART_PARTICIPATION_FLAG);                                         //COBOL==> MOVE SPART-PARTICIPATION-FLAG TO MV-SYS-PART-FACTS
            }                                                                                               //COBOL==> WHEN SPART-SYSTEM-CODE = MV-SYSTEM-CODE-KM
            else
            if (WS.SPART_SYSTEM_CODE.IsEqualTo(WS.MV_SYSTEM_CODE_KM))
            {
                WS.MV_SYS_PART_KMIS.SetValue(WS.SPART_PARTICIPATION_FLAG);                                          //COBOL==> MOVE SPART-PARTICIPATION-FLAG TO MV-SYS-PART-KMIS
            }                                                                                               //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue(149);                                                                //COBOL==> MOVE 149 TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                WS.MV_ERR_YES.SetValue(true);                                                                       //COBOL==> SET MV-ERR-YES TO TRUE
            }                                                                                                   //COBOL==> END-EVALUATE.
            WS.MV_CLIENT_NAME[WS.MV_CLIENT_ENTRY_NUM.AsInt()].SetValue(WS.MV_RECORD_NAME);                      //COBOL==> MOVE MV-RECORD-NAME TO MV-CLIENT-NAME ( MV-CLIENT-ENTRY-NUM ) .
            WS.MV_CLIENT_DATE_OF_BIRTH_SEX[WS.MV_CLIENT_ENTRY_NUM.AsInt()].SetValue(WS.MV_DATE_OF_BIRTH_SEX);   //COBOL==> MOVE MV-DATE-OF-BIRTH-SEX TO MV-CLIENT-DATE-OF-BIRTH-SEX ( MV-CLIENT-ENTRY-NUM ) .
            WS.MV_CLIENT_SOC_SEC_NUM[WS.MV_CLIENT_ENTRY_NUM.AsInt()].SetValue(WS.MV_SSN_X9);                    //COBOL==> MOVE MV-SSN-X9 TO MV-CLIENT-SOC-SEC-NUM ( MV-CLIENT-ENTRY-NUM ) .
            WS.MV_CLIENT_SYSTEM_PARTICIPATION[WS.MV_CLIENT_ENTRY_NUM.AsInt()].SetValue(WS.MV_SYSTEM_PARTICIPATION);  //COBOL==> MOVE MV-SYSTEM-PARTICIPATION TO MV-CLIENT-SYSTEM-PARTICIPATION ( MV-CLIENT-ENTRY-NUM ) .
            WS.MVW_CLIENT_ID.SetValue(WS.MV_CLIENT_ID);                                                         //COBOL==> MOVE MV-CLIENT-ID TO MVW-CLIENT-ID.
            WS.MVW_CLIENT_NAME.SetValue(WS.MV_RECORD_NAME);                                                     //COBOL==> MOVE MV-RECORD-NAME TO MVW-CLIENT-NAME.
            WS.MVW_SSN.SetValue(WS.MV_SSN_X9);                                                                  //COBOL==> MOVE MV-SSN-X9 TO MVW-SSN.
            WS.MVW_DATE_OF_BIRTH_SEX.SetValue(WS.MV_DATE_OF_BIRTH_SEX);                                         //COBOL==> MOVE MV-DATE-OF-BIRTH-SEX TO MVW-DATE-OF-BIRTH-SEX.
            WS.MVW_CLIENT_POINTER_X21.SetValue(WS.MV_CLIENT_POINTER_X21);                                       //COBOL==> MOVE MV-CLIENT-POINTER-X21 TO MVW-CLIENT-POINTER-X21.
            WS.MV_CLIENT_KEY[WS.MV_CLIENT_ENTRY_NUM.AsInt()].SetValue(WS.MVW_CLIENT_KEY);                       //COBOL==> MOVE MVW-CLIENT-KEY TO MV-CLIENT-KEY ( MV-CLIENT-ENTRY-NUM ) .
            if (returnMethod != "" && returnMethod != "M_99400_POPULATE_CLIENT_ARRAY") { M_99400_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99400_EXIT
        /// </summary>
        private void M_99400_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99400_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99400_EXIT") { M_99900_CLOSE_SYSPART_CURSOR(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99900_CLOSE_SYSPART_CURSOR
        /// </summary>
        private void M_99900_CLOSE_SYSPART_CURSOR(string returnMethod = "")
        {
            DbConv.CloseReader("SYSPART");                                                                      //COBOL==> EXEC SQL CLOSE SYSPART END-EXEC.
            if (WS.MV_ERR_YES.Value)                                                                            //COBOL==> IF MV-ERR-YES
            {
                M_99900_EXIT(CheckGotoReturn(returnMethod)); return;                                                //COBOL==> GO TO 99900-EXIT
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                // EvaluateList !WS.SQLCA.SQLCODE!                                                                  //COBOL==> EVALUATE SQLCODE
            if ((WS.SQLCA.SQLCODE.IsZeroes()))                                                                  //COBOL==> WHEN ZERO
            {
                //Continue                                                                                          //COBOL==> CONTINUE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                WS.MV_ABEND_TYPE.SetValue("A");                                                                     //COBOL==> MOVE 'A' TO MV-ABEND-TYPE
                WS.MV_ADA_FILE_NUMBER.SetValue("149");                                                              //COBOL==> MOVE '149' TO MV-ADA-FILE-NUMBER
                WS.MV_ADA_FILE_ACTION.SetValue("RLF");                                                              //COBOL==> MOVE 'RLF' TO MV-ADA-FILE-ACTION
                WS.MV_ADA_RESPONSE_CD.SetValue(WS.SQLCA.SQLCODE);                                                   //COBOL==> MOVE SQLCODE TO MV-ADA-RESPONSE-CD
                WS.MV_ERR_YES.SetValue(true);                                                                       //COBOL==> SET MV-ERR-YES TO TRUE
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_99900_CLOSE_SYSPART_CURSOR") { M_99900_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_99900_EXIT
        /// </summary>
        private void M_99900_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_99900_EXIT") { return; }                                                     //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_99900_EXIT") { M_0000_ADABAS_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_ADABAS_EXIT
        /// </summary>
        private void M_0000_ADABAS_EXIT(string returnMethod = "")
        {
            if (!(WS.MV_ABEND_TYPE_NONE.Value))                                                                //COBOL==> IF NOT MV-ABEND-TYPE-NONE
            {
                LS.TYPE_0002.SetValue(WS.MV_ABEND_TYPE);                                                            //COBOL==> MOVE MV-ABEND-TYPE TO TYPE-0002
                LS.ADABAS_FILE_NUMBER_0002.SetValue(WS.MV_ADA_FILE_NUMBER);                                         //COBOL==> MOVE MV-ADA-FILE-NUMBER TO ADABAS-FILE-NUMBER-0002
                LS.ADABAS_FILE_ACTION_0002.SetValue(WS.MV_ADA_FILE_ACTION);                                         //COBOL==> MOVE MV-ADA-FILE-ACTION TO ADABAS-FILE-ACTION-0002
                LS.ADABAS_RESPONSE_CD_0002.SetValue(WS.MV_ADA_RESPONSE_CD);                                         //COBOL==> MOVE MV-ADA-RESPONSE-CD TO ADABAS-RESPONSE-CD-0002
                LS.CICS_RESOURCE_NM_0002.SetValue(WS.MV_CICS_RESOURCE_NM);                                          //COBOL==> MOVE MV-CICS-RESOURCE-NM TO CICS-RESOURCE-NM-0002
                LS.CICS_FUNCTION_CD_0002.SetValue(WS.MV_CICS_FUNCTION_CD);                                          //COBOL==> MOVE MV-CICS-FUNCTION-CD TO CICS-FUNCTION-CD-0002
                LS.CICS_RESPONSE_CD_0002.SetValue(WS.MV_CICS_RESPONSE_CD);                                          //COBOL==> MOVE MV-CICS-RESPONSE-CD TO CICS-RESPONSE-CD-0002
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_0000_ADABAS_EXIT") { M_PARA_0544735563_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0544735563_EXIT
        /// </summary>
        /// <remarks>
        ///COMMENT: -INC SWNONC09
        /// </remarks>
        private void M_PARA_0544735563_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0544735563_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0544735563_EXIT") { M_PARA_0544735563_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0544735563_INIT
        /// </summary>
        private void M_PARA_0544735563_INIT(string returnMethod = "")
        {
            LS.OUTPUT_0002EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE OUTPUT-0002EV
            LS.OUTPUT_NEXT_KEY_0003EV.ResetToInitialValue();                                                    //COBOL==> INITIALIZE OUTPUT-NEXT-KEY-0003EV
            WS.OUTPUT_GROUP_ALIASES_0001PS.SetValue(1);                                                         //COBOL==> MOVE 1 TO OUTPUT-GROUP-ALIASES-0001PS
            LS.OUTPUT_GROUP_ALIASES_0001RG.ResetToInitialValue();                                               //COBOL==> INITIALIZE OUTPUT-GROUP-ALIASES-0001RG .
            if (returnMethod != "" && returnMethod != "M_PARA_0544735563_INIT") { M_PARA_0544735563_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0544735563_INIT_EXIT
        /// </summary>
        private void M_PARA_0544735563_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0544735563_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
