#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2022
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2022-03-02 04:43:19 PM
   **        *   FROM COBOL PGM   :  SWEXEE38
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                              COOL:GEN
               COPYRIGHT 2000, STERLING SOFTWARE, INC.
       NAME: EAB_FIDM_METHOD1_MATCH_DRVR      DATE: 2000/06/06
       TARGET OS:   MVS                       TIME: 16:07:06
       TARGET DBMS: DB2                       USER: SWSRPDP
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
       HIGH PERFORMANCE VIEW PASSING SELECTED
       LAST-STATEMENT-NUM EXECUTION SELECTED
       ENFORCE DEFAULT VALUES WITH DBMS NOT SELECTED
       INIT UNSPECIFIED OPTIONAL FIELDS TO NULL NOT SELECTED
   **************************************************************
   **************************************************************
      THE PURPOSE OF THIS EXTERNAL IS TO "READ" THE FIDM METHOD 1
       FLAT FILE AND PASS THE DATA BACK TO THE CALLING PROCEDURE.
      THE STATUS OF THE READ IS PASSED BACK TO THE PROCEDURE IN
       TEXT-RETURN-CODE-0002  USING THE FOLLOWING VALUES:
          "00" = ALL OK
          "EF" = END OF FILE
          "BI" = BAD INSTRUCTION (NOT OPEN, POSITION, OR CLOSE)
          "BR" = BAD READ
          "PE" = BAD OPEN
          "D1" = BAD MATCH DATE
          "D2" = BAD BIRTH DATE
   **************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.IO.Common;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
using GOV.KS.DCF.CSS.Common.BL;
using MDSY.Framework.IO.Common;
#endregion

namespace GOV.KS.DCF.CSS.Batch.BL
{
    #region File Section Class
    internal class SWEXEE38_fd : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string FileSection = "SWEXEE38_fd_FileSection";
            internal const string FIDM_INPUT_FILE = "FIDM_INPUT_FILE";
            internal const string FIDM_INPUT_RECORD = "FIDM_INPUT_RECORD";
            internal const string DETAIL_RECORD = "DETAIL_RECORD";
            internal const string FIDM_RECORD_TYPE_IN = "FIDM_RECORD_TYPE_IN";
            internal const string FIDM_FILLER = "FIDM_FILLER";
        }
        #endregion

        #region Direct-access element properties
        public IFileLink FIDM_INPUT_FILE { get; set; }
        public IGroup FIDM_INPUT_RECORD { get { return GetElementByName<IGroup>(Names.FIDM_INPUT_RECORD); } }
        public IGroup DETAIL_RECORD { get { return GetElementByName<IGroup>(Names.DETAIL_RECORD); } }
        public IField FIDM_RECORD_TYPE_IN { get { return GetElementByName<IField>(Names.FIDM_RECORD_TYPE_IN); } }
        public IField FIDM_FILLER { get { return GetElementByName<IField>(Names.FIDM_FILLER); } }


        internal SWEXEE38_ws WS;
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the FileSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.FIDM_INPUT_RECORD, (FIDM_INPUT_RECORD) =>
           {
               FIDM_INPUT_RECORD.CreateNewGroup(Names.DETAIL_RECORD, (DETAIL_RECORD) =>
               {
                   DETAIL_RECORD.CreateNewField(Names.FIDM_RECORD_TYPE_IN, FieldType.String, 1);
                   DETAIL_RECORD.CreateNewField(Names.FIDM_FILLER, FieldType.String, 419);
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.FileSection;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            IFileHandler FileHandler = InversionContainer.GetImplementingObject<IFileHandler>();

            FIDM_INPUT_FILE = FileHandler.GetFile("UT_S_MSFIDMIN");
            FIDM_INPUT_FILE.StatusField = WS.FIDM_FILE_STATUS;
            FIDM_INPUT_FILE.AssociatedBuffer = FIDM_INPUT_RECORD;
        }
        #endregion

        #region Constructors
        public SWEXEE38_fd(SWEXEE38_ws ws)
            : base()
        {
            this.WS = ws;
            Initialize();

        }
        #endregion
    }
    #endregion File Section Class
    #region Working Storage Class
    internal class SWEXEE38_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXEE38_ws_WorkingStorage";
            internal const string HOLD_RECORD = "HOLD_RECORD";
            internal const string HOLD_DETAIL_RECORD = "HOLD_DETAIL_RECORD";
            internal const string HOLD_RECORD_TYPE_IN = "HOLD_RECORD_TYPE_IN";
            internal const string HOLD_FILLER = "HOLD_FILLER";
            internal const string HOLD_TYPE_A = "HOLD_TYPE_A";
            internal const string HA_TYPE = "HA_TYPE";
            internal const string FILLER_A1 = "FILLER_A1";
            internal const string HA_SEQ = "HA_SEQ";
            internal const string HA_INST_TIN = "HA_INST_TIN";
            internal const string HA_INST_NAME_CNTL = "HA_INST_NAME_CNTL";
            internal const string HA_DATE = "HA_DATE";
            internal const string HA_YEAR = "HA_YEAR";
            internal const string HA_YEAR_CC = "HA_YEAR_CC";
            internal const string HA_YEAR_YY = "HA_YEAR_YY";
            internal const string HA_MONTH = "HA_MONTH";
            internal const string FILLER_A2 = "FILLER_A2";
            internal const string HA_TEST_COR_IND = "HA_TEST_COR_IND";
            internal const string HA_SERV_BUR_IND = "HA_SERV_BUR_IND";
            internal const string FILLER_A3 = "FILLER_A3";
            internal const string HA_MAG_TAPE_IND = "HA_MAG_TAPE_IND";
            internal const string FILLER_A4 = "FILLER_A4";
            internal const string HA_FRN_CORP_IND = "HA_FRN_CORP_IND";
            internal const string HA_INST_NAME = "HA_INST_NAME";
            internal const string HA_INST_NAME_SEC = "HA_INST_NAME_SEC";
            internal const string HA_TRN_AGT_ID = "HA_TRN_AGT_ID";
            internal const string HA_INST_ADDRESS = "HA_INST_ADDRESS";
            internal const string HA_INST_CITY = "HA_INST_CITY";
            internal const string HA_INST_STATE = "HA_INST_STATE";
            internal const string HA_INST_ZIP_5 = "HA_INST_ZIP_5";
            internal const string HA_INST_ZIP_4 = "HA_INST_ZIP_4";
            internal const string HA_RPT_AGT_TIN = "HA_RPT_AGT_TIN";
            internal const string HA_RPT_AGT_NAME = "HA_RPT_AGT_NAME";
            internal const string HA_TRN_ADDRESS = "HA_TRN_ADDRESS";
            internal const string HA_TRN_CITY = "HA_TRN_CITY";
            internal const string HA_TRN_STATE = "HA_TRN_STATE";
            internal const string HA_TRN_ZIP_5 = "HA_TRN_ZIP_5";
            internal const string HA_TRN_ZIP_4 = "HA_TRN_ZIP_4";
            internal const string HA_DATA_MATCH_IND = "HA_DATA_MATCH_IND";
            internal const string FILLER_A5 = "FILLER_A5";
            internal const string HOLD_TYPE_B = "HOLD_TYPE_B";
            internal const string HB_TYPE = "HB_TYPE";
            internal const string HB_DATE = "HB_DATE";
            internal const string HB_YEAR = "HB_YEAR";
            internal const string HB_YEAR_CC = "HB_YEAR_CC";
            internal const string HB_YEAR_YY = "HB_YEAR_YY";
            internal const string HB_MONTH = "HB_MONTH";
            internal const string HB_PAYEE_NAME_CNTL = "HB_PAYEE_NAME_CNTL";
            internal const string FILLER_B1 = "FILLER_B1";
            internal const string HB_SSN = "HB_SSN";
            internal const string HB_PAYEE_ACT = "HB_PAYEE_ACT";
            internal const string FILLER_B2 = "FILLER_B2";
            internal const string HB_ACT_LEGAL_TITLE = "HB_ACT_LEGAL_TITLE";
            internal const string HB_FRN_CNTRY_IND = "HB_FRN_CNTRY_IND";
            internal const string HB_PAYEE_NAME = "HB_PAYEE_NAME";
            internal const string HB_PAYEE_NAME_SEC = "HB_PAYEE_NAME_SEC";
            internal const string HB_PAYEE_ADDRESS = "HB_PAYEE_ADDRESS";
            internal const string HB_PAYEE_CITY = "HB_PAYEE_CITY";
            internal const string HB_PAYEE_STATE = "HB_PAYEE_STATE";
            internal const string HB_PAYEE_ZIP_5 = "HB_PAYEE_ZIP_5";
            internal const string HB_PAYEE_ZIP_4 = "HB_PAYEE_ZIP_4";
            internal const string FILLER_B3 = "FILLER_B3";
            internal const string HB_ACCOUNT_BALANCE = "HB_ACCOUNT_BALANCE";
            internal const string HB_ACCT_BAL_NUM = "HB_ACCT_BAL_NUM";
            internal const string FILLER_B4 = "FILLER_B4";
            internal const string HB_TRUST_FUND_IND = "HB_TRUST_FUND_IND";
            internal const string FILLER_B5 = "FILLER_B5";
            internal const string HB_ACCT_BAL_IND = "HB_ACCT_BAL_IND";
            internal const string HB_ACCT_UPDATE_IND = "HB_ACCT_UPDATE_IND";
            internal const string HB_DATE_OF_BIRTH = "HB_DATE_OF_BIRTH";
            internal const string HB_DOB_CCYY = "HB_DOB_CCYY";
            internal const string HB_DOB_CC = "HB_DOB_CC";
            internal const string HB_DOB_YY = "HB_DOB_YY";
            internal const string HB_DOB_MM = "HB_DOB_MM";
            internal const string HB_DOB_DD = "HB_DOB_DD";
            internal const string FILLER_B6 = "FILLER_B6";
            internal const string HB_ACCT_TYPE = "HB_ACCT_TYPE";
            internal const string FILLER_B7 = "FILLER_B7";
            internal const string HB_PAYEE_SSN_SEC = "HB_PAYEE_SSN_SEC";
            internal const string FILLER_B8 = "FILLER_B8";
            internal const string FIDM_FILE_STATUS = "FIDM_FILE_STATUS";
            internal const string WS_BAD_DATE_FLAG = "WS_BAD_DATE_FLAG";
            internal const string WS_DATE_CHECK = "WS_DATE_CHECK";
            internal const string WS_CHECK_CC = "WS_CHECK_CC";
            internal const string WS_CHECK_C1 = "WS_CHECK_C1";
            internal const string WS_CHECK_C2 = "WS_CHECK_C2";
            internal const string WS_CHECK_YY = "WS_CHECK_YY";
            internal const string WS_CHECK_Y1 = "WS_CHECK_Y1";
            internal const string WS_CHECK_Y2 = "WS_CHECK_Y2";
            internal const string WS_CHECK_MM = "WS_CHECK_MM";
            internal const string WS_CHECK_M1 = "WS_CHECK_M1";
            internal const string WS_CHECK_M2 = "WS_CHECK_M2";
            internal const string WS_CHECK_DD = "WS_CHECK_DD";
            internal const string WS_CHECK_D1 = "WS_CHECK_D1";
            internal const string WS_CHECK_D2 = "WS_CHECK_D2";
        }
        #endregion

        #region Direct-access element properties
        public IGroup HOLD_RECORD { get { return GetElementByName<IGroup>(Names.HOLD_RECORD); } }
        public IGroup HOLD_DETAIL_RECORD { get { return GetElementByName<IGroup>(Names.HOLD_DETAIL_RECORD); } }
        public IField HOLD_RECORD_TYPE_IN { get { return GetElementByName<IField>(Names.HOLD_RECORD_TYPE_IN); } }
        public IField HOLD_FILLER { get { return GetElementByName<IField>(Names.HOLD_FILLER); } }
        public IGroup HOLD_TYPE_A { get { return GetElementByName<IGroup>(Names.HOLD_TYPE_A); } }
        public IField HA_TYPE { get { return GetElementByName<IField>(Names.HA_TYPE); } }
        public IField FILLER_A1 { get { return GetElementByName<IField>(Names.FILLER_A1); } }
        public IField HA_SEQ { get { return GetElementByName<IField>(Names.HA_SEQ); } }
        public IField HA_INST_TIN { get { return GetElementByName<IField>(Names.HA_INST_TIN); } }
        public IField HA_INST_NAME_CNTL { get { return GetElementByName<IField>(Names.HA_INST_NAME_CNTL); } }
        public IGroup HA_DATE { get { return GetElementByName<IGroup>(Names.HA_DATE); } }
        public IGroup HA_YEAR { get { return GetElementByName<IGroup>(Names.HA_YEAR); } }
        public IField HA_YEAR_CC { get { return GetElementByName<IField>(Names.HA_YEAR_CC); } }
        public IField HA_YEAR_YY { get { return GetElementByName<IField>(Names.HA_YEAR_YY); } }
        public IField HA_MONTH { get { return GetElementByName<IField>(Names.HA_MONTH); } }
        public IField FILLER_A2 { get { return GetElementByName<IField>(Names.FILLER_A2); } }
        public IField HA_TEST_COR_IND { get { return GetElementByName<IField>(Names.HA_TEST_COR_IND); } }
        public IField HA_SERV_BUR_IND { get { return GetElementByName<IField>(Names.HA_SERV_BUR_IND); } }
        public IField FILLER_A3 { get { return GetElementByName<IField>(Names.FILLER_A3); } }
        public IField HA_MAG_TAPE_IND { get { return GetElementByName<IField>(Names.HA_MAG_TAPE_IND); } }
        public IField FILLER_A4 { get { return GetElementByName<IField>(Names.FILLER_A4); } }
        public IField HA_FRN_CORP_IND { get { return GetElementByName<IField>(Names.HA_FRN_CORP_IND); } }
        public IField HA_INST_NAME { get { return GetElementByName<IField>(Names.HA_INST_NAME); } }
        public IField HA_INST_NAME_SEC { get { return GetElementByName<IField>(Names.HA_INST_NAME_SEC); } }
        public IField HA_TRN_AGT_ID { get { return GetElementByName<IField>(Names.HA_TRN_AGT_ID); } }
        public IField HA_INST_ADDRESS { get { return GetElementByName<IField>(Names.HA_INST_ADDRESS); } }
        public IField HA_INST_CITY { get { return GetElementByName<IField>(Names.HA_INST_CITY); } }
        public IField HA_INST_STATE { get { return GetElementByName<IField>(Names.HA_INST_STATE); } }
        public IField HA_INST_ZIP_5 { get { return GetElementByName<IField>(Names.HA_INST_ZIP_5); } }
        public IField HA_INST_ZIP_4 { get { return GetElementByName<IField>(Names.HA_INST_ZIP_4); } }
        public IField HA_RPT_AGT_TIN { get { return GetElementByName<IField>(Names.HA_RPT_AGT_TIN); } }
        public IField HA_RPT_AGT_NAME { get { return GetElementByName<IField>(Names.HA_RPT_AGT_NAME); } }
        public IField HA_TRN_ADDRESS { get { return GetElementByName<IField>(Names.HA_TRN_ADDRESS); } }
        public IField HA_TRN_CITY { get { return GetElementByName<IField>(Names.HA_TRN_CITY); } }
        public IField HA_TRN_STATE { get { return GetElementByName<IField>(Names.HA_TRN_STATE); } }
        public IField HA_TRN_ZIP_5 { get { return GetElementByName<IField>(Names.HA_TRN_ZIP_5); } }
        public IField HA_TRN_ZIP_4 { get { return GetElementByName<IField>(Names.HA_TRN_ZIP_4); } }
        public IField HA_DATA_MATCH_IND { get { return GetElementByName<IField>(Names.HA_DATA_MATCH_IND); } }
        public IField FILLER_A5 { get { return GetElementByName<IField>(Names.FILLER_A5); } }
        public IGroup HOLD_TYPE_B { get { return GetElementByName<IGroup>(Names.HOLD_TYPE_B); } }
        public IField HB_TYPE { get { return GetElementByName<IField>(Names.HB_TYPE); } }
        public IGroup HB_DATE { get { return GetElementByName<IGroup>(Names.HB_DATE); } }
        public IGroup HB_YEAR { get { return GetElementByName<IGroup>(Names.HB_YEAR); } }
        public IField HB_YEAR_CC { get { return GetElementByName<IField>(Names.HB_YEAR_CC); } }
        public IField HB_YEAR_YY { get { return GetElementByName<IField>(Names.HB_YEAR_YY); } }
        public IField HB_MONTH { get { return GetElementByName<IField>(Names.HB_MONTH); } }
        public IField HB_PAYEE_NAME_CNTL { get { return GetElementByName<IField>(Names.HB_PAYEE_NAME_CNTL); } }
        public IField FILLER_B1 { get { return GetElementByName<IField>(Names.FILLER_B1); } }
        public IField HB_SSN { get { return GetElementByName<IField>(Names.HB_SSN); } }
        public IField HB_PAYEE_ACT { get { return GetElementByName<IField>(Names.HB_PAYEE_ACT); } }
        public IField FILLER_B2 { get { return GetElementByName<IField>(Names.FILLER_B2); } }
        public IField HB_ACT_LEGAL_TITLE { get { return GetElementByName<IField>(Names.HB_ACT_LEGAL_TITLE); } }
        public IField HB_FRN_CNTRY_IND { get { return GetElementByName<IField>(Names.HB_FRN_CNTRY_IND); } }
        public IField HB_PAYEE_NAME { get { return GetElementByName<IField>(Names.HB_PAYEE_NAME); } }
        public IField HB_PAYEE_NAME_SEC { get { return GetElementByName<IField>(Names.HB_PAYEE_NAME_SEC); } }
        public IField HB_PAYEE_ADDRESS { get { return GetElementByName<IField>(Names.HB_PAYEE_ADDRESS); } }
        public IField HB_PAYEE_CITY { get { return GetElementByName<IField>(Names.HB_PAYEE_CITY); } }
        public IField HB_PAYEE_STATE { get { return GetElementByName<IField>(Names.HB_PAYEE_STATE); } }
        public IField HB_PAYEE_ZIP_5 { get { return GetElementByName<IField>(Names.HB_PAYEE_ZIP_5); } }
        public IField HB_PAYEE_ZIP_4 { get { return GetElementByName<IField>(Names.HB_PAYEE_ZIP_4); } }
        public IField FILLER_B3 { get { return GetElementByName<IField>(Names.FILLER_B3); } }
        public IField HB_ACCOUNT_BALANCE { get { return GetElementByName<IField>(Names.HB_ACCOUNT_BALANCE); } }
        public IField HB_ACCT_BAL_NUM { get { return GetElementByName<IField>(Names.HB_ACCT_BAL_NUM); } }
        public IField FILLER_B4 { get { return GetElementByName<IField>(Names.FILLER_B4); } }
        public IField HB_TRUST_FUND_IND { get { return GetElementByName<IField>(Names.HB_TRUST_FUND_IND); } }
        public IField FILLER_B5 { get { return GetElementByName<IField>(Names.FILLER_B5); } }
        public IField HB_ACCT_BAL_IND { get { return GetElementByName<IField>(Names.HB_ACCT_BAL_IND); } }
        public IField HB_ACCT_UPDATE_IND { get { return GetElementByName<IField>(Names.HB_ACCT_UPDATE_IND); } }
        public IGroup HB_DATE_OF_BIRTH { get { return GetElementByName<IGroup>(Names.HB_DATE_OF_BIRTH); } }
        public IGroup HB_DOB_CCYY { get { return GetElementByName<IGroup>(Names.HB_DOB_CCYY); } }
        public IField HB_DOB_CC { get { return GetElementByName<IField>(Names.HB_DOB_CC); } }
        public IField HB_DOB_YY { get { return GetElementByName<IField>(Names.HB_DOB_YY); } }
        public IField HB_DOB_MM { get { return GetElementByName<IField>(Names.HB_DOB_MM); } }
        public IField HB_DOB_DD { get { return GetElementByName<IField>(Names.HB_DOB_DD); } }
        public IField FILLER_B6 { get { return GetElementByName<IField>(Names.FILLER_B6); } }
        public IField HB_ACCT_TYPE { get { return GetElementByName<IField>(Names.HB_ACCT_TYPE); } }
        public IField FILLER_B7 { get { return GetElementByName<IField>(Names.FILLER_B7); } }
        public IField HB_PAYEE_SSN_SEC { get { return GetElementByName<IField>(Names.HB_PAYEE_SSN_SEC); } }
        public IField FILLER_B8 { get { return GetElementByName<IField>(Names.FILLER_B8); } }
        public IField FIDM_FILE_STATUS { get { return GetElementByName<IField>(Names.FIDM_FILE_STATUS); } }
        public IField WS_BAD_DATE_FLAG { get { return GetElementByName<IField>(Names.WS_BAD_DATE_FLAG); } }
        public IGroup WS_DATE_CHECK { get { return GetElementByName<IGroup>(Names.WS_DATE_CHECK); } }
        public IGroup WS_CHECK_CC { get { return GetElementByName<IGroup>(Names.WS_CHECK_CC); } }
        public IField WS_CHECK_C1 { get { return GetElementByName<IField>(Names.WS_CHECK_C1); } }
        public IField WS_CHECK_C2 { get { return GetElementByName<IField>(Names.WS_CHECK_C2); } }
        public IGroup WS_CHECK_YY { get { return GetElementByName<IGroup>(Names.WS_CHECK_YY); } }
        public IField WS_CHECK_Y1 { get { return GetElementByName<IField>(Names.WS_CHECK_Y1); } }
        public IField WS_CHECK_Y2 { get { return GetElementByName<IField>(Names.WS_CHECK_Y2); } }
        public IGroup WS_CHECK_MM { get { return GetElementByName<IGroup>(Names.WS_CHECK_MM); } }
        public IField WS_CHECK_M1 { get { return GetElementByName<IField>(Names.WS_CHECK_M1); } }
        public IField WS_CHECK_M2 { get { return GetElementByName<IField>(Names.WS_CHECK_M2); } }
        public IGroup WS_CHECK_DD { get { return GetElementByName<IGroup>(Names.WS_CHECK_DD); } }
        public IField WS_CHECK_D1 { get { return GetElementByName<IField>(Names.WS_CHECK_D1); } }
        public IField WS_CHECK_D2 { get { return GetElementByName<IField>(Names.WS_CHECK_D2); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.HOLD_RECORD, (HOLD_RECORD) =>
           {
               HOLD_RECORD.CreateNewGroup(Names.HOLD_DETAIL_RECORD, (HOLD_DETAIL_RECORD) =>
               {
                   HOLD_DETAIL_RECORD.CreateNewField(Names.HOLD_RECORD_TYPE_IN, FieldType.String, 1);
                   HOLD_DETAIL_RECORD.CreateNewField(Names.HOLD_FILLER, FieldType.String, 419);
               });
           });

            recordDef.CreateNewGroup(Names.HOLD_TYPE_A, (HOLD_TYPE_A) =>
           {
               HOLD_TYPE_A.CreateNewField(Names.HA_TYPE, FieldType.String, 1, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.FILLER_A1, FieldType.String, 2, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_SEQ, FieldType.String, 3, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_INST_TIN, FieldType.String, 9, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_INST_NAME_CNTL, FieldType.String, 4, SPACES);
               HOLD_TYPE_A.CreateNewGroup(Names.HA_DATE, (HA_DATE) =>
               {
                   HA_DATE.CreateNewGroup(Names.HA_YEAR, (HA_YEAR) =>
                   {
                       HA_YEAR.CreateNewField(Names.HA_YEAR_CC, FieldType.String, 2, SPACES);
                       HA_YEAR.CreateNewField(Names.HA_YEAR_YY, FieldType.String, 2, SPACES);
                   });
                   HA_DATE.CreateNewField(Names.HA_MONTH, FieldType.String, 2, SPACES);
               });
               HOLD_TYPE_A.CreateNewField(Names.FILLER_A2, FieldType.String, 6, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_TEST_COR_IND, FieldType.String, 1, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_SERV_BUR_IND, FieldType.String, 1, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.FILLER_A3, FieldType.String, 8, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_MAG_TAPE_IND, FieldType.String, 2, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.FILLER_A4, FieldType.String, 5, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_FRN_CORP_IND, FieldType.String, 1, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_INST_NAME, FieldType.String, 40, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_INST_NAME_SEC, FieldType.String, 40, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_TRN_AGT_ID, FieldType.String, 1, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_INST_ADDRESS, FieldType.String, 40, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_INST_CITY, FieldType.String, 29, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_INST_STATE, FieldType.String, 2, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_INST_ZIP_5, FieldType.String, 5, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_INST_ZIP_4, FieldType.String, 4, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_RPT_AGT_TIN, FieldType.String, 9, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_RPT_AGT_NAME, FieldType.String, 71, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_TRN_ADDRESS, FieldType.String, 40, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_TRN_CITY, FieldType.String, 29, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_TRN_STATE, FieldType.String, 2, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_TRN_ZIP_5, FieldType.String, 5, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_TRN_ZIP_4, FieldType.String, 4, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.HA_DATA_MATCH_IND, FieldType.String, 1, SPACES);
               HOLD_TYPE_A.CreateNewField(Names.FILLER_A5, FieldType.String, 49, SPACES);
           });

            recordDef.CreateNewGroup(Names.HOLD_TYPE_B, (HOLD_TYPE_B) =>
           {
               HOLD_TYPE_B.CreateNewField(Names.HB_TYPE, FieldType.String, 1, SPACES);
               HOLD_TYPE_B.CreateNewGroup(Names.HB_DATE, (HB_DATE) =>
               {
                   HB_DATE.CreateNewGroup(Names.HB_YEAR, (HB_YEAR) =>
                   {
                       HB_YEAR.CreateNewField(Names.HB_YEAR_CC, FieldType.String, 2, SPACES);
                       HB_YEAR.CreateNewField(Names.HB_YEAR_YY, FieldType.String, 2, SPACES);
                   });
                   HB_DATE.CreateNewField(Names.HB_MONTH, FieldType.String, 2, SPACES);
               });
               HOLD_TYPE_B.CreateNewField(Names.HB_PAYEE_NAME_CNTL, FieldType.String, 4, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.FILLER_B1, FieldType.String, 3, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_SSN, FieldType.String, 9, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_PAYEE_ACT, FieldType.String, 20, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.FILLER_B2, FieldType.String, 17, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_ACT_LEGAL_TITLE, FieldType.String, 100, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_FRN_CNTRY_IND, FieldType.String, 1, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_PAYEE_NAME, FieldType.String, 40, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_PAYEE_NAME_SEC, FieldType.String, 40, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_PAYEE_ADDRESS, FieldType.String, 40, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_PAYEE_CITY, FieldType.String, 29, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_PAYEE_STATE, FieldType.String, 2, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_PAYEE_ZIP_5, FieldType.String, 5, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_PAYEE_ZIP_4, FieldType.String, 4, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.FILLER_B3, FieldType.String, 29, SPACES);

               IField HB_ACCOUNT_BALANCE_local = HOLD_TYPE_B.CreateNewField(Names.HB_ACCOUNT_BALANCE, FieldType.String, 7);
               HOLD_TYPE_B.CreateNewFieldRedefine(Names.HB_ACCT_BAL_NUM, FieldType.UnsignedNumeric, HB_ACCOUNT_BALANCE_local, 7);
               HOLD_TYPE_B.CreateNewField(Names.FILLER_B4, FieldType.String, 1, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_TRUST_FUND_IND, FieldType.String, 1, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.FILLER_B5, FieldType.String, 1, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_ACCT_BAL_IND, FieldType.String, 1, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_ACCT_UPDATE_IND, FieldType.String, 1, SPACES);
               HOLD_TYPE_B.CreateNewGroup(Names.HB_DATE_OF_BIRTH, (HB_DATE_OF_BIRTH) =>
               {
                   HB_DATE_OF_BIRTH.CreateNewGroup(Names.HB_DOB_CCYY, (HB_DOB_CCYY) =>
                   {
                       HB_DOB_CCYY.CreateNewField(Names.HB_DOB_CC, FieldType.String, 2, SPACES);
                       HB_DOB_CCYY.CreateNewField(Names.HB_DOB_YY, FieldType.String, 2, SPACES);
                   });
                   HB_DATE_OF_BIRTH.CreateNewField(Names.HB_DOB_MM, FieldType.String, 2, SPACES);
                   HB_DATE_OF_BIRTH.CreateNewField(Names.HB_DOB_DD, FieldType.String, 2, SPACES);
               });
               HOLD_TYPE_B.CreateNewField(Names.FILLER_B6, FieldType.String, 10, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_ACCT_TYPE, FieldType.String, 2, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.FILLER_B7, FieldType.String, 28, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.HB_PAYEE_SSN_SEC, FieldType.String, 9, SPACES);
               HOLD_TYPE_B.CreateNewField(Names.FILLER_B8, FieldType.String, 1, SPACES);
           });
            recordDef.CreateNewField(Names.FIDM_FILE_STATUS, FieldType.String, 2);
            recordDef.CreateNewField(Names.WS_BAD_DATE_FLAG, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.WS_DATE_CHECK, (WS_DATE_CHECK) =>
           {
               WS_DATE_CHECK.CreateNewGroup(Names.WS_CHECK_CC, (WS_CHECK_CC) =>
               {
                   WS_CHECK_CC.CreateNewField(Names.WS_CHECK_C1, FieldType.String, 1);
                   WS_CHECK_CC.CreateNewField(Names.WS_CHECK_C2, FieldType.String, 1);
               });
               WS_DATE_CHECK.CreateNewGroup(Names.WS_CHECK_YY, (WS_CHECK_YY) =>
               {
                   WS_CHECK_YY.CreateNewField(Names.WS_CHECK_Y1, FieldType.String, 1);
                   WS_CHECK_YY.CreateNewField(Names.WS_CHECK_Y2, FieldType.String, 1);
               });
               WS_DATE_CHECK.CreateNewGroup(Names.WS_CHECK_MM, (WS_CHECK_MM) =>
               {
                   WS_CHECK_MM.CreateNewField(Names.WS_CHECK_M1, FieldType.String, 1);
                   WS_CHECK_MM.CreateNewField(Names.WS_CHECK_M2, FieldType.String, 1);
               });
               WS_DATE_CHECK.CreateNewGroup(Names.WS_CHECK_DD, (WS_CHECK_DD) =>
               {
                   WS_CHECK_DD.CreateNewField(Names.WS_CHECK_D1, FieldType.String, 1);
                   WS_CHECK_DD.CreateNewField(Names.WS_CHECK_D2, FieldType.String, 1);
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXEE38_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXEE38_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string GLOBDATA = "GLOBDATA";
            internal const string PSMGR_IEF_COMMAND = "PSMGR_IEF_COMMAND";
            internal const string PSMGR_IEF_COMMAND_1 = "PSMGR_IEF_COMMAND_1";
            internal const string PSMGR_IEF_COMMAND_2 = "PSMGR_IEF_COMMAND_2";
            internal const string PSMGR_IEF_TRANCODE = "PSMGR_IEF_TRANCODE";
            internal const string PSMGR_EXIT_STATE = "PSMGR_EXIT_STATE";
            internal const string PSMGR_EXIT_INFOMSG = "PSMGR_EXIT_INFOMSG";
            internal const string PSMGR_USER_ID = "PSMGR_USER_ID";
            internal const string PSMGR_TERMINAL_ID = "PSMGR_TERMINAL_ID";
            internal const string PSMGR_PRINTER_ID = "PSMGR_PRINTER_ID";
            internal const string PSMGR_CURRENT_DATE = "PSMGR_CURRENT_DATE";
            internal const string PSMGR_CURRENT_TIME = "PSMGR_CURRENT_TIME";
            internal const string PSMGR_RUNTIME_TYPE = "PSMGR_RUNTIME_TYPE";
            internal const string PSMGR_FUNCTION_DATA = "PSMGR_FUNCTION_DATA";
            internal const string PSMGR_FUNC_ERRMSG = "PSMGR_FUNC_ERRMSG";
            internal const string PSMGR_FUNC_NAME = "PSMGR_FUNC_NAME";
            internal const string PSMGR_FUNC_IN_DATE = "PSMGR_FUNC_IN_DATE";
            internal const string PSMGR_FUNC_IN_DDURA = "PSMGR_FUNC_IN_DDURA";
            internal const string DDURA_YEAR = "DDURA_YEAR";
            internal const string DDURA_Y_MISS = "DDURA_Y_MISS";
            internal const string DDURA_YYYY = "DDURA_YYYY";
            internal const string DDURA_MONTH = "DDURA_MONTH";
            internal const string DDURA_M_MISS = "DDURA_M_MISS";
            internal const string DDURA_MM = "DDURA_MM";
            internal const string DDURA_DAY = "DDURA_DAY";
            internal const string DDURA_D_MISS = "DDURA_D_MISS";
            internal const string DDURA_DD = "DDURA_DD";
            internal const string PSMGR_FUNC_OUT_DATE = "PSMGR_FUNC_OUT_DATE";
            internal const string PSMGR_FUNC_IN_TIME = "PSMGR_FUNC_IN_TIME";
            internal const string PSMGR_FUNC_IN_TDURA = "PSMGR_FUNC_IN_TDURA";
            internal const string TDURA_HOUR = "TDURA_HOUR";
            internal const string TDURA_H_MISS = "TDURA_H_MISS";
            internal const string TDURA_HH = "TDURA_HH";
            internal const string TDURA_MINUTE = "TDURA_MINUTE";
            internal const string TDURA_M_MISS = "TDURA_M_MISS";
            internal const string TDURA_MM = "TDURA_MM";
            internal const string TDURA_SECOND = "TDURA_SECOND";
            internal const string TDURA_S_MISS = "TDURA_S_MISS";
            internal const string TDURA_SS = "TDURA_SS";
            internal const string PSMGR_FUNC_OUT_TIME = "PSMGR_FUNC_OUT_TIME";
            internal const string PSMGR_IEF_NEXTTRAN = "PSMGR_IEF_NEXTTRAN";
            internal const string PSMGR_EXIT_MSGTYPE = "PSMGR_EXIT_MSGTYPE";
            internal const string PSMGR_IEF_DEBUG_FLAGS = "PSMGR_IEF_DEBUG_FLAGS";
            internal const string PSMGR_IEF_DEBUG = "PSMGR_IEF_DEBUG";
            internal const string PSMGR_DEBUG_ON = "PSMGR_DEBUG_ON";
            internal const string PSMGR_ENVIRONMENT_DATA = "PSMGR_ENVIRONMENT_DATA";
            internal const string PSMGR_PCB_CNT = "PSMGR_PCB_CNT";
            internal const string PSMGR_PCB_ENTRY = "PSMGR_PCB_ENTRY";
            internal const string PSMGR_PCB_ADR = "PSMGR_PCB_ADR";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string PSMGR_ERROR_DATA = "PSMGR_ERROR_DATA";
            internal const string ERROR_ACTION_NAME = "ERROR_ACTION_NAME";
            internal const string ERROR_ENCOUNTERED_SW = "ERROR_ENCOUNTERED_SW";
            internal const string VIEW_OVERFLOW_SW = "VIEW_OVERFLOW_SW";
            internal const string PSMGR_DASG_DATA = "PSMGR_DASG_DATA";
            internal const string ACTION_ID_X = "ACTION_ID_X";
            internal const string ACTION_ID = "ACTION_ID";
            internal const string ATTRIBUTE_ID_X = "ATTRIBUTE_ID_X";
            internal const string ATTRIBUTE_ID = "ATTRIBUTE_ID";
            internal const string STATUS_FLAG = "STATUS_FLAG";
            internal const string FATAL_ERROR_SF = "FATAL_ERROR_SF";
            internal const string DB_ERROR_SF = "DB_ERROR_SF";
            internal const string ABORT_SHOW_DBMS_MSG_SF = "ABORT_SHOW_DBMS_MSG_SF";
            internal const string ABORT_SHOW_USER_MSG_SF = "ABORT_SHOW_USER_MSG_SF";
            internal const string RETRY_TRAN_REQUESTED_SF = "RETRY_TRAN_REQUESTED_SF";
            internal const string PSTEP_USE_FAILURE = "PSTEP_USE_FAILURE";
            internal const string LAST_STATUS = "LAST_STATUS";
            internal const string DB_ERROR_FL_LS = "DB_ERROR_FL_LS";
            internal const string DB_DEADLOCK_TIMOUT_FL_LS = "DB_DEADLOCK_TIMOUT_FL_LS";
            internal const string DUPLICATE_FOUND_FL_LS = "DUPLICATE_FOUND_FL_LS";
            internal const string INVALID_DATAA_FL_LS = "INVALID_DATAA_FL_LS";
            internal const string INVALID_DATAB_TYPE_FL_LS = "INVALID_DATAB_TYPE_FL_LS";
            internal const string INVALID_DATAB_PERM_FL_LS = "INVALID_DATAB_PERM_FL_LS";
            internal const string FATAL_ERROR_FL_LS = "FATAL_ERROR_FL_LS";
            internal const string NOT_FOUND_FL_LS = "NOT_FOUND_FL_LS";
            internal const string NOT_UNIQUE_FL_LS = "NOT_UNIQUE_FL_LS";
            internal const string IEF_FUNCTION_ERROR_FL_LS = "IEF_FUNCTION_ERROR_FL_LS";
            internal const string IEF_DURATION_ERROR_FL_LS = "IEF_DURATION_ERROR_FL_LS";
            internal const string USED_PSTEP_NOT_FOUND = "USED_PSTEP_NOT_FOUND";
            internal const string USED_PSTEP_ROUTING_ERR = "USED_PSTEP_ROUTING_ERR";
            internal const string USED_PSTEP_SND_FMT_ERR = "USED_PSTEP_SND_FMT_ERR";
            internal const string USED_PSTEP_ENCRYPT_ERR = "USED_PSTEP_ENCRYPT_ERR";
            internal const string USED_PSTEP_SND_BFR_ERR = "USED_PSTEP_SND_BFR_ERR";
            internal const string USED_PSTEP_RCV_BFR_ERR = "USED_PSTEP_RCV_BFR_ERR";
            internal const string USED_PSTEP_RCV_FMT_ERR = "USED_PSTEP_RCV_FMT_ERR";
            internal const string USED_PSTEP_TIRSECR_ERR = "USED_PSTEP_TIRSECR_ERR";
            internal const string USED_PSTEP_TOKEN_ERR = "USED_PSTEP_TOKEN_ERR";
            internal const string USED_PSTEP_SEND_MAX_SIZE = "USED_PSTEP_SEND_MAX_SIZE";
            internal const string USED_PSTEP_SECG_ERR = "USED_PSTEP_SECG_ERR";
            internal const string USED_PSTEP_ALLOC_ERR = "USED_PSTEP_ALLOC_ERR";
            internal const string USED_PSTEP_CONNECT_ERR = "USED_PSTEP_CONNECT_ERR";
            internal const string USED_PSTEP_XERR = "USED_PSTEP_XERR";
            internal const string USED_PSTEP_RCV_UA_ERR = "USED_PSTEP_RCV_UA_ERR";
            internal const string USED_PSTEP_RCV_ES_ERR = "USED_PSTEP_RCV_ES_ERR";
            internal const string USED_PSTEP_XFAL = "USED_PSTEP_XFAL";
            internal const string USED_PSTEP_SETOA_ERR = "USED_PSTEP_SETOA_ERR";
            internal const string USED_PSTEP_RCV_VIEW_ERR = "USED_PSTEP_RCV_VIEW_ERR";
            internal const string USED_PSTEP_DECRYPT_ERR = "USED_PSTEP_DECRYPT_ERR";
            internal const string SAVE_SQLCA = "SAVE_SQLCA";
            internal const string PSMGR_DEBUG_DATA = "PSMGR_DEBUG_DATA";
            internal const string PSMGR_TRACE_ADR = "PSMGR_TRACE_ADR";
            internal const string LAST_STATEMENT_X = "LAST_STATEMENT_X";
            internal const string LAST_STATEMENT_NUM = "LAST_STATEMENT_NUM";
            internal const string CUR_AB_ID = "CUR_AB_ID";
            internal const string CUR_AB_NAME = "CUR_AB_NAME";
            internal const string PSMGR_TIRDATE_SAVEAREA = "PSMGR_TIRDATE_SAVEAREA";
            internal const string PSMGR_TIRDATE_CMCB = "PSMGR_TIRDATE_CMCB";
            internal const string PSMGR_TIRDATE_DATE = "PSMGR_TIRDATE_DATE";
            internal const string PSMGR_TIRDATE_TIME = "PSMGR_TIRDATE_TIME";
            internal const string PSMGR_TIRDATE_INC = "PSMGR_TIRDATE_INC";
            internal const string PSMGR_TIRDATE_RC = "PSMGR_TIRDATE_RC";
            internal const string PSMGR_TIRDATE_OK = "PSMGR_TIRDATE_OK";
            internal const string PSMGR_TIRDATE_WARNING = "PSMGR_TIRDATE_WARNING";
            internal const string PSMGR_TIRDATE_ERROR = "PSMGR_TIRDATE_ERROR";
            internal const string PSMGR_TIRDATE_REQ = "PSMGR_TIRDATE_REQ";
            internal const string PSMGR_TIRDATE_DATEF = "PSMGR_TIRDATE_DATEF";
            internal const string PSMGR_TIRDATE_TIMEF = "PSMGR_TIRDATE_TIMEF";
            internal const string PSMGR_TIRDATE_RETMSG = "PSMGR_TIRDATE_RETMSG";
            internal const string PSMGR_TIRDATE_TSTAMP = "PSMGR_TIRDATE_TSTAMP";
            internal const string PSMGR_TIRDATE_DATE_Z = "PSMGR_TIRDATE_DATE_Z";
            internal const string PSMGR_TIRDATE_TIME_Z = "PSMGR_TIRDATE_TIME_Z";
            internal const string PSMGR_TIRDATE_SKIP_VAL = "PSMGR_TIRDATE_SKIP_VAL";
            internal const string PSMGR_ROLLBACK_RQSTED = "PSMGR_ROLLBACK_RQSTED";
            internal const string ROLLBACK_RQSTED = "ROLLBACK_RQSTED";
            internal const string ABEND_RQSTED = "ABEND_RQSTED";
            internal const string TERMINATE_RQSTED = "TERMINATE_RQSTED";
            internal const string TIRTRCE_SAVE_AREA = "TIRTRCE_SAVE_AREA";
            internal const string TOP_INDX = "TOP_INDX";
            internal const string BOTTOM_INDX = "BOTTOM_INDX";
            internal const string END_INDX = "END_INDX";
            internal const string LAST_STMT = "LAST_STMT";
            internal const string TOP_OF_CALL = "TOP_OF_CALL";
            internal const string TRACE_BREAK_POINT = "TRACE_BREAK_POINT";
            internal const string TRACE_BREAK_POINT_STATUS = "TRACE_BREAK_POINT_STATUS";
            internal const string LAST_AB_NAME = "LAST_AB_NAME";
            internal const string COLOR = "COLOR";
            internal const string COLORT = "COLORT";
            internal const string HILITE = "HILITE";
            internal const string TRACE_ON_OFF = "TRACE_ON_OFF";
            internal const string CASCADE_DELETE_FLAGS = "CASCADE_DELETE_FLAGS";
            internal const string V1PRESENT = "V1PRESENT";
            internal const string V2PRESENT = "V2PRESENT";
            internal const string CASCADE1 = "CASCADE1";
            internal const string CASCADE2 = "CASCADE2";
            internal const string PROCESSQ_FLAG = "PROCESSQ_FLAG";
            internal const string PSMGR_ACTIVE_DIALECT = "PSMGR_ACTIVE_DIALECT";
            internal const string DIALECT_NAME = "DIALECT_NAME";
            internal const string MESSAGE_TABLE_NAME = "MESSAGE_TABLE_NAME";
            internal const string TRANSLATE_TABLE_NAME = "TRANSLATE_TABLE_NAME";
            internal const string PSMGR_FUNCTION_DATA_EXT = "PSMGR_FUNCTION_DATA_EXT";
            internal const string PSMGR_FUNC_IN_TIMESTAMP = "PSMGR_FUNC_IN_TIMESTAMP";
            internal const string PSMGR_FUNC_IN_TSDURA = "PSMGR_FUNC_IN_TSDURA";
            internal const string TSDURA_MICROSECOND = "TSDURA_MICROSECOND";
            internal const string TSDURA_M_MISS = "TSDURA_M_MISS";
            internal const string TSDURA_MS = "TSDURA_MS";
            internal const string PSMGR_FUNC_OUT_TIMESTAMP = "PSMGR_FUNC_OUT_TIMESTAMP";
            internal const string PSMGR_CICS_FAIL_SW = "PSMGR_CICS_FAIL_SW";
            internal const string INHIBIT_CICS_RECEIVE = "INHIBIT_CICS_RECEIVE";
            internal const string CLIENT_USERID = "CLIENT_USERID";
            internal const string CLIENT_PASSWORD = "CLIENT_PASSWORD";
            internal const string LOAD_MODULE_NAME = "LOAD_MODULE_NAME";
            internal const string INSTRUMENT_CODE = "INSTRUMENT_CODE";
            internal const string TX_RETRY_LIMIT = "TX_RETRY_LIMIT";
            internal const string TX_TIMEOUT = "TX_TIMEOUT";
            internal const string PSMGR_EXTRA_ERRINFO = "PSMGR_EXTRA_ERRINFO";
            internal const string ERRINFO_BUF_SIZE = "ERRINFO_BUF_SIZE";
            internal const string ERRINFO_MSG_SIZE = "ERRINFO_MSG_SIZE";
            internal const string ERRINFO_BUF_ADDR = "ERRINFO_BUF_ADDR";
            internal const string TX_RETRY_COUNT = "TX_RETRY_COUNT";
            internal const string TX_USER_RETRY_ALLOWED = "TX_USER_RETRY_ALLOWED";
            internal const string PSMGR_PSTEP_USE_PTRS = "PSMGR_PSTEP_USE_PTRS";
            internal const string PSTEP_FAIL_MSG_PTR = "PSTEP_FAIL_MSG_PTR";
            internal const string PSTEP_GURB_REST_PTR = "PSTEP_GURB_REST_PTR";
            internal const string PSTEP_LIPS_PTR = "PSTEP_LIPS_PTR";
            internal const string PSTEP_TBL_PTR = "PSTEP_TBL_PTR";
            internal const string PSTEP_DDF_PTR = "PSTEP_DDF_PTR";
            internal const string PSTEP_COMM_ID = "PSTEP_COMM_ID";
            internal const string PSTEP_APPL_LIST_PTR = "PSTEP_APPL_LIST_PTR";
            internal const string PSTEP_CURR_PST_PTR = "PSTEP_CURR_PST_PTR";
            internal const string PSMGR_PSTEP_USE_SYSFLDS = "PSMGR_PSTEP_USE_SYSFLDS";
            internal const string PSMGR_EIBERRCD = "PSMGR_EIBERRCD";
            internal const string PSMGR_EIBFN = "PSMGR_EIBFN";
            internal const string PSMGR_EIBRESP = "PSMGR_EIBRESP";
            internal const string PSMGR_EIBRESP2 = "PSMGR_EIBRESP2";
            internal const string IMPORT_RESTART_0001EV = "IMPORT_RESTART_0001EV";
            internal const string FINANCIAL_INSTITUTION_D_0001ET = "FINANCIAL_INSTITUTION_D_0001ET";
            internal const string INSTITUTION_TIN_0001AS = "INSTITUTION_TIN_0001AS";
            internal const string INSTITUTION_TIN_0001 = "INSTITUTION_TIN_0001";
            internal const string INSTITUTION_TIN_0001XX = "INSTITUTION_TIN_0001XX";
            internal const string MATCH_RUN_DATE_0001AS = "MATCH_RUN_DATE_0001AS";
            internal const string MATCH_RUN_DATE_0001 = "MATCH_RUN_DATE_0001";
            internal const string MATCH_RUN_DATE_0001XX = "MATCH_RUN_DATE_0001XX";
            internal const string INSTITUTION_NAME_0001AS = "INSTITUTION_NAME_0001AS";
            internal const string INSTITUTION_NAME_0001 = "INSTITUTION_NAME_0001";
            internal const string INSTITUTION_NAME_0001XX = "INSTITUTION_NAME_0001XX";
            internal const string IMPORT_PASS_AREA_0002EV = "IMPORT_PASS_AREA_0002EV";
            internal const string EXTERNAL_0002ET = "EXTERNAL_0002ET";
            internal const string FILE_INSTRUCTION_0002AS = "FILE_INSTRUCTION_0002AS";
            internal const string FILE_INSTRUCTION_0002 = "FILE_INSTRUCTION_0002";
            internal const string FILE_INSTRUCTION_0002XX = "FILE_INSTRUCTION_0002XX";
            internal const string NUMERIC_RETURN_CODE_0002AS = "NUMERIC_RETURN_CODE_0002AS";
            internal const string NUMERIC_RETURN_CODE_0002 = "NUMERIC_RETURN_CODE_0002";
            internal const string NUMERIC_RETURN_CODE_0002XX = "NUMERIC_RETURN_CODE_0002XX";
            internal const string TEXT_RETURN_CODE_0002AS = "TEXT_RETURN_CODE_0002AS";
            internal const string TEXT_RETURN_CODE_0002 = "TEXT_RETURN_CODE_0002";
            internal const string TEXT_RETURN_CODE_0002XX = "TEXT_RETURN_CODE_0002XX";
            internal const string TEXT_LINE_80_0002AS = "TEXT_LINE_80_0002AS";
            internal const string TEXT_LINE_80_0002 = "TEXT_LINE_80_0002";
            internal const string TEXT_LINE_80_0002XX = "TEXT_LINE_80_0002XX";
            internal const string EXPORT_RETURNED_0003EV = "EXPORT_RETURNED_0003EV";
            internal const string EXTERNAL_0003ET = "EXTERNAL_0003ET";
            internal const string NUMERIC_RETURN_CODE_0003AS = "NUMERIC_RETURN_CODE_0003AS";
            internal const string NUMERIC_RETURN_CODE_0003 = "NUMERIC_RETURN_CODE_0003";
            internal const string NUMERIC_RETURN_CODE_0003XX = "NUMERIC_RETURN_CODE_0003XX";
            internal const string TEXT_LINE_80_0003AS = "TEXT_LINE_80_0003AS";
            internal const string TEXT_LINE_80_0003 = "TEXT_LINE_80_0003";
            internal const string TEXT_LINE_80_0003XX = "TEXT_LINE_80_0003XX";
            internal const string TEXT_RETURN_CODE_0003AS = "TEXT_RETURN_CODE_0003AS";
            internal const string TEXT_RETURN_CODE_0003 = "TEXT_RETURN_CODE_0003";
            internal const string TEXT_RETURN_CODE_0003XX = "TEXT_RETURN_CODE_0003XX";
            internal const string EXPORT_RETURNED_REC_TYP_0004EV = "EXPORT_RETURNED_REC_TYP_0004EV";
            internal const string TEXT_WORK_AREA_0004ET = "TEXT_WORK_AREA_0004ET";
            internal const string TEXT_1_0004AS = "TEXT_1_0004AS";
            internal const string TEXT_1_0004 = "TEXT_1_0004";
            internal const string TEXT_1_0004XX = "TEXT_1_0004XX";
            internal const string EXPORT_RETURNED_0005EV = "EXPORT_RETURNED_0005EV";
            internal const string FINANCIAL_INSTITUTION_D_0005ET = "FINANCIAL_INSTITUTION_D_0005ET";
            internal const string CSE_PERSON_NUMBER_0005AS = "CSE_PERSON_NUMBER_0005AS";
            internal const string CSE_PERSON_NUMBER_0005 = "CSE_PERSON_NUMBER_0005";
            internal const string CSE_PERSON_NUMBER_0005XX = "CSE_PERSON_NUMBER_0005XX";
            internal const string INSTITUTION_TIN_0005AS = "INSTITUTION_TIN_0005AS";
            internal const string INSTITUTION_TIN_0005 = "INSTITUTION_TIN_0005";
            internal const string INSTITUTION_TIN_0005XX = "INSTITUTION_TIN_0005XX";
            internal const string MATCHED_PAYEE_ACCOUNT_N_0006AS = "MATCHED_PAYEE_ACCOUNT_N_0006AS";
            internal const string MATCHED_PAYEE_ACCOUNT_NUM_0006 = "MATCHED_PAYEE_ACCOUNT_NUM_0006";
            internal const string MATCHED_PAYEE_ACCOUNT_N_0006XX = "MATCHED_PAYEE_ACCOUNT_N_0006XX";
            internal const string MATCH_RUN_DATE_0006AS = "MATCH_RUN_DATE_0006AS";
            internal const string MATCH_RUN_DATE_0006 = "MATCH_RUN_DATE_0006";
            internal const string MATCH_RUN_DATE_0006XX = "MATCH_RUN_DATE_0006XX";
            internal const string MATCHED_PAYEE_SSN_0006AS = "MATCHED_PAYEE_SSN_0006AS";
            internal const string MATCHED_PAYEE_SSN_0006 = "MATCHED_PAYEE_SSN_0006";
            internal const string MATCHED_PAYEE_SSN_0006XX = "MATCHED_PAYEE_SSN_0006XX";
            internal const string MATCHED_PAYEE_NAME_0006AS = "MATCHED_PAYEE_NAME_0006AS";
            internal const string MATCHED_PAYEE_NAME_0006 = "MATCHED_PAYEE_NAME_0006";
            internal const string MATCHED_PAYEE_NAME_0006XX = "MATCHED_PAYEE_NAME_0006XX";
            internal const string MATCHED_PAYEE_STREET_AD_0007AS = "MATCHED_PAYEE_STREET_AD_0007AS";
            internal const string MATCHED_PAYEE_STREET_ADDR_0007 = "MATCHED_PAYEE_STREET_ADDR_0007";
            internal const string MATCHED_PAYEE_STREET_AD_0007XX = "MATCHED_PAYEE_STREET_AD_0007XX";
            internal const string MATCHED_PAYEE_CITY_0007AS = "MATCHED_PAYEE_CITY_0007AS";
            internal const string MATCHED_PAYEE_CITY_0007 = "MATCHED_PAYEE_CITY_0007";
            internal const string MATCHED_PAYEE_CITY_0007XX = "MATCHED_PAYEE_CITY_0007XX";
            internal const string MATCHED_PAYEE_STATE_0007AS = "MATCHED_PAYEE_STATE_0007AS";
            internal const string MATCHED_PAYEE_STATE_0007 = "MATCHED_PAYEE_STATE_0007";
            internal const string MATCHED_PAYEE_STATE_0007XX = "MATCHED_PAYEE_STATE_0007XX";
            internal const string MATCHED_PAYEE_ZIP_CODE_0007AS = "MATCHED_PAYEE_ZIP_CODE_0007AS";
            internal const string MATCHED_PAYEE_ZIP_CODE_0007 = "MATCHED_PAYEE_ZIP_CODE_0007";
            internal const string MATCHED_PAYEE_ZIP_CODE_0007XX = "MATCHED_PAYEE_ZIP_CODE_0007XX";
            internal const string MATCHED_PAYEE_ZIP4_0007AS = "MATCHED_PAYEE_ZIP4_0007AS";
            internal const string MATCHED_PAYEE_ZIP4_0007 = "MATCHED_PAYEE_ZIP4_0007";
            internal const string MATCHED_PAYEE_ZIP4_0007XX = "MATCHED_PAYEE_ZIP4_0007XX";
            internal const string MATCHED_PAYEE_ZIP3_0007AS = "MATCHED_PAYEE_ZIP3_0007AS";
            internal const string MATCHED_PAYEE_ZIP3_0007 = "MATCHED_PAYEE_ZIP3_0007";
            internal const string MATCHED_PAYEE_ZIP3_0007XX = "MATCHED_PAYEE_ZIP3_0007XX";
            internal const string PAYEE_FOREIGN_COUNTRY_I_0008AS = "PAYEE_FOREIGN_COUNTRY_I_0008AS";
            internal const string PAYEE_FOREIGN_COUNTRY_IND_0008 = "PAYEE_FOREIGN_COUNTRY_IND_0008";
            internal const string PAYEE_FOREIGN_COUNTRY_I_0008XX = "PAYEE_FOREIGN_COUNTRY_I_0008XX";
            internal const string MATCH_FLAG_0008AS = "MATCH_FLAG_0008AS";
            internal const string MATCH_FLAG_0008 = "MATCH_FLAG_0008";
            internal const string MATCH_FLAG_0008XX = "MATCH_FLAG_0008XX";
            internal const string ACCOUNT_BALANCE_0008AS = "ACCOUNT_BALANCE_0008AS";
            internal const string ACCOUNT_BALANCE_0008 = "ACCOUNT_BALANCE_0008";
            internal const string ACCOUNT_BALANCE_0008XX = "ACCOUNT_BALANCE_0008XX";
            internal const string ACCOUNT_TYPE_0008AS = "ACCOUNT_TYPE_0008AS";
            internal const string ACCOUNT_TYPE_0008 = "ACCOUNT_TYPE_0008";
            internal const string ACCOUNT_TYPE_0008XX = "ACCOUNT_TYPE_0008XX";
            internal const string TRUST_FUND_INDICATOR_0008AS = "TRUST_FUND_INDICATOR_0008AS";
            internal const string TRUST_FUND_INDICATOR_0008 = "TRUST_FUND_INDICATOR_0008";
            internal const string TRUST_FUND_INDICATOR_0008XX = "TRUST_FUND_INDICATOR_0008XX";
            internal const string ACCOUNT_BALANCE_INDICAT_0009AS = "ACCOUNT_BALANCE_INDICAT_0009AS";
            internal const string ACCOUNT_BALANCE_INDICATOR_0009 = "ACCOUNT_BALANCE_INDICATOR_0009";
            internal const string ACCOUNT_BALANCE_INDICAT_0009XX = "ACCOUNT_BALANCE_INDICAT_0009XX";
            internal const string DATE_OF_BIRTH_0009AS = "DATE_OF_BIRTH_0009AS";
            internal const string DATE_OF_BIRTH_0009 = "DATE_OF_BIRTH_0009";
            internal const string DATE_OF_BIRTH_0009XX = "DATE_OF_BIRTH_0009XX";
            internal const string PAYEE_INDICATOR_0009AS = "PAYEE_INDICATOR_0009AS";
            internal const string PAYEE_INDICATOR_0009 = "PAYEE_INDICATOR_0009";
            internal const string PAYEE_INDICATOR_0009XX = "PAYEE_INDICATOR_0009XX";
            internal const string ACCOUNT_FULL_LEGAL_TITL_0010AS = "ACCOUNT_FULL_LEGAL_TITL_0010AS";
            internal const string ACCOUNT_FULL_LEGAL_TITLE_0010 = "ACCOUNT_FULL_LEGAL_TITLE_0010";
            internal const string ACCOUNT_FULL_LEGAL_TITL_0010XX = "ACCOUNT_FULL_LEGAL_TITL_0010XX";
            internal const string PRIMARY_SSN_0010AS = "PRIMARY_SSN_0010AS";
            internal const string PRIMARY_SSN_0010 = "PRIMARY_SSN_0010";
            internal const string PRIMARY_SSN_0010XX = "PRIMARY_SSN_0010XX";
            internal const string SECOND_PAYEE_NAME_0010AS = "SECOND_PAYEE_NAME_0010AS";
            internal const string SECOND_PAYEE_NAME_0010 = "SECOND_PAYEE_NAME_0010";
            internal const string SECOND_PAYEE_NAME_0010XX = "SECOND_PAYEE_NAME_0010XX";
            internal const string SECOND_PAYEE_SSN_0010AS = "SECOND_PAYEE_SSN_0010AS";
            internal const string SECOND_PAYEE_SSN_0010 = "SECOND_PAYEE_SSN_0010";
            internal const string SECOND_PAYEE_SSN_0010XX = "SECOND_PAYEE_SSN_0010XX";
            internal const string MSFIDM_INDICATOR_0010AS = "MSFIDM_INDICATOR_0010AS";
            internal const string MSFIDM_INDICATOR_0010 = "MSFIDM_INDICATOR_0010";
            internal const string MSFIDM_INDICATOR_0010XX = "MSFIDM_INDICATOR_0010XX";
            internal const string INSTITUTION_NAME_0010AS = "INSTITUTION_NAME_0010AS";
            internal const string INSTITUTION_NAME_0010 = "INSTITUTION_NAME_0010";
            internal const string INSTITUTION_NAME_0010XX = "INSTITUTION_NAME_0010XX";
            internal const string INSTITUTION_STREET_ADDR_0011AS = "INSTITUTION_STREET_ADDR_0011AS";
            internal const string INSTITUTION_STREET_ADDRES_0011 = "INSTITUTION_STREET_ADDRES_0011";
            internal const string INSTITUTION_STREET_ADDR_0011XX = "INSTITUTION_STREET_ADDR_0011XX";
            internal const string INSTITUTION_CITY_0011AS = "INSTITUTION_CITY_0011AS";
            internal const string INSTITUTION_CITY_0011 = "INSTITUTION_CITY_0011";
            internal const string INSTITUTION_CITY_0011XX = "INSTITUTION_CITY_0011XX";
            internal const string INSTITUTION_STATE_0011AS = "INSTITUTION_STATE_0011AS";
            internal const string INSTITUTION_STATE_0011 = "INSTITUTION_STATE_0011";
            internal const string INSTITUTION_STATE_0011XX = "INSTITUTION_STATE_0011XX";
            internal const string INSTITUTION_ZIP_CODE_0011AS = "INSTITUTION_ZIP_CODE_0011AS";
            internal const string INSTITUTION_ZIP_CODE_0011 = "INSTITUTION_ZIP_CODE_0011";
            internal const string INSTITUTION_ZIP_CODE_0011XX = "INSTITUTION_ZIP_CODE_0011XX";
            internal const string INSTITUTION_ZIP4_0011AS = "INSTITUTION_ZIP4_0011AS";
            internal const string INSTITUTION_ZIP4_0011 = "INSTITUTION_ZIP4_0011";
            internal const string INSTITUTION_ZIP4_0011XX = "INSTITUTION_ZIP4_0011XX";
            internal const string INSTITUTION_ZIP3_0011AS = "INSTITUTION_ZIP3_0011AS";
            internal const string INSTITUTION_ZIP3_0011 = "INSTITUTION_ZIP3_0011";
            internal const string INSTITUTION_ZIP3_0011XX = "INSTITUTION_ZIP3_0011XX";
            internal const string SECOND_INSTITUTION_NAME_0012AS = "SECOND_INSTITUTION_NAME_0012AS";
            internal const string SECOND_INSTITUTION_NAME_0012 = "SECOND_INSTITUTION_NAME_0012";
            internal const string SECOND_INSTITUTION_NAME_0012XX = "SECOND_INSTITUTION_NAME_0012XX";
            internal const string TRANSMITTER_TIN_0012AS = "TRANSMITTER_TIN_0012AS";
            internal const string TRANSMITTER_TIN_0012 = "TRANSMITTER_TIN_0012";
            internal const string TRANSMITTER_TIN_0012XX = "TRANSMITTER_TIN_0012XX";
            internal const string TRANSMITTER_NAME_0012AS = "TRANSMITTER_NAME_0012AS";
            internal const string TRANSMITTER_NAME_0012 = "TRANSMITTER_NAME_0012";
            internal const string TRANSMITTER_NAME_0012XX = "TRANSMITTER_NAME_0012XX";
            internal const string TRANSMITTER_STREET_ADDR_0013AS = "TRANSMITTER_STREET_ADDR_0013AS";
            internal const string TRANSMITTER_STREET_ADDRES_0013 = "TRANSMITTER_STREET_ADDRES_0013";
            internal const string TRANSMITTER_STREET_ADDR_0013XX = "TRANSMITTER_STREET_ADDR_0013XX";
            internal const string TRANSMITTER_CITY_0013AS = "TRANSMITTER_CITY_0013AS";
            internal const string TRANSMITTER_CITY_0013 = "TRANSMITTER_CITY_0013";
            internal const string TRANSMITTER_CITY_0013XX = "TRANSMITTER_CITY_0013XX";
            internal const string TRANSMITTER_STATE_0013AS = "TRANSMITTER_STATE_0013AS";
            internal const string TRANSMITTER_STATE_0013 = "TRANSMITTER_STATE_0013";
            internal const string TRANSMITTER_STATE_0013XX = "TRANSMITTER_STATE_0013XX";
            internal const string TRANSMITTER_ZIP_CODE_0013AS = "TRANSMITTER_ZIP_CODE_0013AS";
            internal const string TRANSMITTER_ZIP_CODE_0013 = "TRANSMITTER_ZIP_CODE_0013";
            internal const string TRANSMITTER_ZIP_CODE_0013XX = "TRANSMITTER_ZIP_CODE_0013XX";
            internal const string TRANSMITTER_ZIP4_0013AS = "TRANSMITTER_ZIP4_0013AS";
            internal const string TRANSMITTER_ZIP4_0013 = "TRANSMITTER_ZIP4_0013";
            internal const string TRANSMITTER_ZIP4_0013XX = "TRANSMITTER_ZIP4_0013XX";
            internal const string TRANSMITTER_ZIP3_0013AS = "TRANSMITTER_ZIP3_0013AS";
            internal const string TRANSMITTER_ZIP3_0013 = "TRANSMITTER_ZIP3_0013";
            internal const string TRANSMITTER_ZIP3_0013XX = "TRANSMITTER_ZIP3_0013XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup GLOBDATA { get { return GetElementByName<IGroup>(Names.GLOBDATA); } }
        public IGroup PSMGR_IEF_COMMAND { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_COMMAND); } }
        public IField PSMGR_IEF_COMMAND_1 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_1); } }
        public IField PSMGR_IEF_COMMAND_2 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_2); } }
        public IField PSMGR_IEF_TRANCODE { get { return GetElementByName<IField>(Names.PSMGR_IEF_TRANCODE); } }
        public IField PSMGR_EXIT_STATE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_STATE); } }
        public IField PSMGR_EXIT_INFOMSG { get { return GetElementByName<IField>(Names.PSMGR_EXIT_INFOMSG); } }
        public IField PSMGR_USER_ID { get { return GetElementByName<IField>(Names.PSMGR_USER_ID); } }
        public IField PSMGR_TERMINAL_ID { get { return GetElementByName<IField>(Names.PSMGR_TERMINAL_ID); } }
        public IField PSMGR_PRINTER_ID { get { return GetElementByName<IField>(Names.PSMGR_PRINTER_ID); } }
        public IField PSMGR_CURRENT_DATE { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_DATE); } }
        public IField PSMGR_CURRENT_TIME { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_TIME); } }
        public IField PSMGR_RUNTIME_TYPE { get { return GetElementByName<IField>(Names.PSMGR_RUNTIME_TYPE); } }
        public IGroup PSMGR_FUNCTION_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA); } }
        public IField PSMGR_FUNC_ERRMSG { get { return GetElementByName<IField>(Names.PSMGR_FUNC_ERRMSG); } }
        public IField PSMGR_FUNC_NAME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_NAME); } }
        public IField PSMGR_FUNC_IN_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_DATE); } }
        public IGroup PSMGR_FUNC_IN_DDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_DDURA); } }
        public IGroup DDURA_YEAR { get { return GetElementByName<IGroup>(Names.DDURA_YEAR); } }
        public IField DDURA_Y_MISS { get { return GetElementByName<IField>(Names.DDURA_Y_MISS); } }
        public IField DDURA_YYYY { get { return GetElementByName<IField>(Names.DDURA_YYYY); } }
        public IGroup DDURA_MONTH { get { return GetElementByName<IGroup>(Names.DDURA_MONTH); } }
        public IField DDURA_M_MISS { get { return GetElementByName<IField>(Names.DDURA_M_MISS); } }
        public IField DDURA_MM { get { return GetElementByName<IField>(Names.DDURA_MM); } }
        public IGroup DDURA_DAY { get { return GetElementByName<IGroup>(Names.DDURA_DAY); } }
        public IField DDURA_D_MISS { get { return GetElementByName<IField>(Names.DDURA_D_MISS); } }
        public IField DDURA_DD { get { return GetElementByName<IField>(Names.DDURA_DD); } }
        public IField PSMGR_FUNC_OUT_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_DATE); } }
        public IField PSMGR_FUNC_IN_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIME); } }
        public IGroup PSMGR_FUNC_IN_TDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TDURA); } }
        public IGroup TDURA_HOUR { get { return GetElementByName<IGroup>(Names.TDURA_HOUR); } }
        public IField TDURA_H_MISS { get { return GetElementByName<IField>(Names.TDURA_H_MISS); } }
        public IField TDURA_HH { get { return GetElementByName<IField>(Names.TDURA_HH); } }
        public IGroup TDURA_MINUTE { get { return GetElementByName<IGroup>(Names.TDURA_MINUTE); } }
        public IField TDURA_M_MISS { get { return GetElementByName<IField>(Names.TDURA_M_MISS); } }
        public IField TDURA_MM { get { return GetElementByName<IField>(Names.TDURA_MM); } }
        public IGroup TDURA_SECOND { get { return GetElementByName<IGroup>(Names.TDURA_SECOND); } }
        public IField TDURA_S_MISS { get { return GetElementByName<IField>(Names.TDURA_S_MISS); } }
        public IField TDURA_SS { get { return GetElementByName<IField>(Names.TDURA_SS); } }
        public IField PSMGR_FUNC_OUT_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIME); } }
        public IField PSMGR_IEF_NEXTTRAN { get { return GetElementByName<IField>(Names.PSMGR_IEF_NEXTTRAN); } }
        public IField PSMGR_EXIT_MSGTYPE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_MSGTYPE); } }
        public IGroup PSMGR_IEF_DEBUG_FLAGS { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_DEBUG_FLAGS); } }
        public IField PSMGR_IEF_DEBUG { get { return GetElementByName<IField>(Names.PSMGR_IEF_DEBUG); } }
        public ICheckField PSMGR_DEBUG_ON { get { return GetElementByName<ICheckField>(Names.PSMGR_DEBUG_ON); } }
        public IGroup PSMGR_ENVIRONMENT_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ENVIRONMENT_DATA); } }
        public IField PSMGR_PCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_PCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_PCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_PCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_PCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_PCB_ADR); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup PSMGR_ERROR_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ERROR_DATA); } }
        public IField ERROR_ACTION_NAME { get { return GetElementByName<IField>(Names.ERROR_ACTION_NAME); } }
        public IField ERROR_ENCOUNTERED_SW { get { return GetElementByName<IField>(Names.ERROR_ENCOUNTERED_SW); } }
        public IField VIEW_OVERFLOW_SW { get { return GetElementByName<IField>(Names.VIEW_OVERFLOW_SW); } }
        public IGroup PSMGR_DASG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DASG_DATA); } }
        public IGroup ACTION_ID_X { get { return GetElementByName<IGroup>(Names.ACTION_ID_X); } }
        public IField ACTION_ID { get { return GetElementByName<IField>(Names.ACTION_ID); } }
        public IGroup ATTRIBUTE_ID_X { get { return GetElementByName<IGroup>(Names.ATTRIBUTE_ID_X); } }
        public IField ATTRIBUTE_ID { get { return GetElementByName<IField>(Names.ATTRIBUTE_ID); } }
        public IField STATUS_FLAG { get { return GetElementByName<IField>(Names.STATUS_FLAG); } }
        public ICheckField FATAL_ERROR_SF { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_SF); } }
        public ICheckField DB_ERROR_SF { get { return GetElementByName<ICheckField>(Names.DB_ERROR_SF); } }
        public ICheckField ABORT_SHOW_DBMS_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_DBMS_MSG_SF); } }
        public ICheckField ABORT_SHOW_USER_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_USER_MSG_SF); } }
        public ICheckField RETRY_TRAN_REQUESTED_SF { get { return GetElementByName<ICheckField>(Names.RETRY_TRAN_REQUESTED_SF); } }
        public ICheckField PSTEP_USE_FAILURE { get { return GetElementByName<ICheckField>(Names.PSTEP_USE_FAILURE); } }
        public IField LAST_STATUS { get { return GetElementByName<IField>(Names.LAST_STATUS); } }
        public ICheckField DB_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_ERROR_FL_LS); } }
        public ICheckField DB_DEADLOCK_TIMOUT_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_DEADLOCK_TIMOUT_FL_LS); } }
        public ICheckField DUPLICATE_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.DUPLICATE_FOUND_FL_LS); } }
        public ICheckField INVALID_DATAA_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAA_FL_LS); } }
        public ICheckField INVALID_DATAB_TYPE_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_TYPE_FL_LS); } }
        public ICheckField INVALID_DATAB_PERM_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_PERM_FL_LS); } }
        public ICheckField FATAL_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_FL_LS); } }
        public ICheckField NOT_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_FOUND_FL_LS); } }
        public ICheckField NOT_UNIQUE_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_UNIQUE_FL_LS); } }
        public ICheckField IEF_FUNCTION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_FUNCTION_ERROR_FL_LS); } }
        public ICheckField IEF_DURATION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_DURATION_ERROR_FL_LS); } }
        public ICheckField USED_PSTEP_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_NOT_FOUND); } }
        public ICheckField USED_PSTEP_ROUTING_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ROUTING_ERR); } }
        public ICheckField USED_PSTEP_SND_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_FMT_ERR); } }
        public ICheckField USED_PSTEP_ENCRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ENCRYPT_ERR); } }
        public ICheckField USED_PSTEP_SND_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_FMT_ERR); } }
        public ICheckField USED_PSTEP_TIRSECR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TIRSECR_ERR); } }
        public ICheckField USED_PSTEP_TOKEN_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TOKEN_ERR); } }
        public ICheckField USED_PSTEP_SEND_MAX_SIZE { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SEND_MAX_SIZE); } }
        public ICheckField USED_PSTEP_SECG_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SECG_ERR); } }
        public ICheckField USED_PSTEP_ALLOC_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ALLOC_ERR); } }
        public ICheckField USED_PSTEP_CONNECT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_CONNECT_ERR); } }
        public ICheckField USED_PSTEP_XERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XERR); } }
        public ICheckField USED_PSTEP_RCV_UA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_UA_ERR); } }
        public ICheckField USED_PSTEP_RCV_ES_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_ES_ERR); } }
        public ICheckField USED_PSTEP_XFAL { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XFAL); } }
        public ICheckField USED_PSTEP_SETOA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SETOA_ERR); } }
        public ICheckField USED_PSTEP_RCV_VIEW_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_VIEW_ERR); } }
        public ICheckField USED_PSTEP_DECRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_DECRYPT_ERR); } }
        public IField SAVE_SQLCA { get { return GetElementByName<IField>(Names.SAVE_SQLCA); } }
        public IGroup PSMGR_DEBUG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DEBUG_DATA); } }
        public IField PSMGR_TRACE_ADR { get { return GetElementByName<IField>(Names.PSMGR_TRACE_ADR); } }
        public IGroup LAST_STATEMENT_X { get { return GetElementByName<IGroup>(Names.LAST_STATEMENT_X); } }
        public IField LAST_STATEMENT_NUM { get { return GetElementByName<IField>(Names.LAST_STATEMENT_NUM); } }
        public IField CUR_AB_ID { get { return GetElementByName<IField>(Names.CUR_AB_ID); } }
        public IField CUR_AB_NAME { get { return GetElementByName<IField>(Names.CUR_AB_NAME); } }
        public IField PSMGR_TIRDATE_SAVEAREA { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SAVEAREA); } }
        public IGroup PSMGR_TIRDATE_CMCB { get { return GetElementByName<IGroup>(Names.PSMGR_TIRDATE_CMCB); } }
        public IField PSMGR_TIRDATE_DATE { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE); } }
        public IField PSMGR_TIRDATE_TIME { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME); } }
        public IField PSMGR_TIRDATE_INC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_INC); } }
        public IField PSMGR_TIRDATE_RC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RC); } }
        public ICheckField PSMGR_TIRDATE_OK { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_OK); } }
        public ICheckField PSMGR_TIRDATE_WARNING { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_WARNING); } }
        public ICheckField PSMGR_TIRDATE_ERROR { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_ERROR); } }
        public IField PSMGR_TIRDATE_REQ { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_REQ); } }
        public IField PSMGR_TIRDATE_DATEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATEF); } }
        public IField PSMGR_TIRDATE_TIMEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIMEF); } }
        public IField PSMGR_TIRDATE_RETMSG { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RETMSG); } }
        public IField PSMGR_TIRDATE_TSTAMP { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TSTAMP); } }
        public IField PSMGR_TIRDATE_DATE_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE_Z); } }
        public IField PSMGR_TIRDATE_TIME_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME_Z); } }
        public IField PSMGR_TIRDATE_SKIP_VAL { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SKIP_VAL); } }
        public IField PSMGR_ROLLBACK_RQSTED { get { return GetElementByName<IField>(Names.PSMGR_ROLLBACK_RQSTED); } }
        public ICheckField ROLLBACK_RQSTED { get { return GetElementByName<ICheckField>(Names.ROLLBACK_RQSTED); } }
        public ICheckField ABEND_RQSTED { get { return GetElementByName<ICheckField>(Names.ABEND_RQSTED); } }
        public ICheckField TERMINATE_RQSTED { get { return GetElementByName<ICheckField>(Names.TERMINATE_RQSTED); } }
        public IGroup TIRTRCE_SAVE_AREA { get { return GetElementByName<IGroup>(Names.TIRTRCE_SAVE_AREA); } }
        public IField TOP_INDX { get { return GetElementByName<IField>(Names.TOP_INDX); } }
        public IField BOTTOM_INDX { get { return GetElementByName<IField>(Names.BOTTOM_INDX); } }
        public IField END_INDX { get { return GetElementByName<IField>(Names.END_INDX); } }
        public IField LAST_STMT { get { return GetElementByName<IField>(Names.LAST_STMT); } }
        public IField TOP_OF_CALL { get { return GetElementByName<IField>(Names.TOP_OF_CALL); } }
        public IField TRACE_BREAK_POINT { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT); } }
        public IField TRACE_BREAK_POINT_STATUS { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT_STATUS); } }
        public IField LAST_AB_NAME { get { return GetElementByName<IField>(Names.LAST_AB_NAME); } }
        public IField COLOR { get { return GetElementByName<IField>(Names.COLOR); } }
        public IField COLORT { get { return GetElementByName<IField>(Names.COLORT); } }
        public IField HILITE { get { return GetElementByName<IField>(Names.HILITE); } }
        public IField TRACE_ON_OFF { get { return GetElementByName<IField>(Names.TRACE_ON_OFF); } }
        public IGroup CASCADE_DELETE_FLAGS { get { return GetElementByName<IGroup>(Names.CASCADE_DELETE_FLAGS); } }
        public IField V1PRESENT { get { return GetElementByName<IField>(Names.V1PRESENT); } }
        public IField V2PRESENT { get { return GetElementByName<IField>(Names.V2PRESENT); } }
        public IField CASCADE1 { get { return GetElementByName<IField>(Names.CASCADE1); } }
        public IField CASCADE2 { get { return GetElementByName<IField>(Names.CASCADE2); } }
        public IField PROCESSQ_FLAG { get { return GetElementByName<IField>(Names.PROCESSQ_FLAG); } }
        public IGroup PSMGR_ACTIVE_DIALECT { get { return GetElementByName<IGroup>(Names.PSMGR_ACTIVE_DIALECT); } }
        public IField DIALECT_NAME { get { return GetElementByName<IField>(Names.DIALECT_NAME); } }
        public IField MESSAGE_TABLE_NAME { get { return GetElementByName<IField>(Names.MESSAGE_TABLE_NAME); } }
        public IField TRANSLATE_TABLE_NAME { get { return GetElementByName<IField>(Names.TRANSLATE_TABLE_NAME); } }
        public IGroup PSMGR_FUNCTION_DATA_EXT { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA_EXT); } }
        public IField PSMGR_FUNC_IN_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIMESTAMP); } }
        public IGroup PSMGR_FUNC_IN_TSDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TSDURA); } }
        public IGroup TSDURA_MICROSECOND { get { return GetElementByName<IGroup>(Names.TSDURA_MICROSECOND); } }
        public IField TSDURA_M_MISS { get { return GetElementByName<IField>(Names.TSDURA_M_MISS); } }
        public IField TSDURA_MS { get { return GetElementByName<IField>(Names.TSDURA_MS); } }
        public IField PSMGR_FUNC_OUT_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIMESTAMP); } }
        public IField PSMGR_CICS_FAIL_SW { get { return GetElementByName<IField>(Names.PSMGR_CICS_FAIL_SW); } }
        public ICheckField INHIBIT_CICS_RECEIVE { get { return GetElementByName<ICheckField>(Names.INHIBIT_CICS_RECEIVE); } }
        public IField CLIENT_USERID { get { return GetElementByName<IField>(Names.CLIENT_USERID); } }
        public IField CLIENT_PASSWORD { get { return GetElementByName<IField>(Names.CLIENT_PASSWORD); } }
        public IField LOAD_MODULE_NAME { get { return GetElementByName<IField>(Names.LOAD_MODULE_NAME); } }
        public IField INSTRUMENT_CODE { get { return GetElementByName<IField>(Names.INSTRUMENT_CODE); } }
        public IField TX_RETRY_LIMIT { get { return GetElementByName<IField>(Names.TX_RETRY_LIMIT); } }
        public IField TX_TIMEOUT { get { return GetElementByName<IField>(Names.TX_TIMEOUT); } }
        public IGroup PSMGR_EXTRA_ERRINFO { get { return GetElementByName<IGroup>(Names.PSMGR_EXTRA_ERRINFO); } }
        public IField ERRINFO_BUF_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_BUF_SIZE); } }
        public IField ERRINFO_MSG_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_MSG_SIZE); } }
        public IField ERRINFO_BUF_ADDR { get { return GetElementByName<IField>(Names.ERRINFO_BUF_ADDR); } }
        public IField TX_RETRY_COUNT { get { return GetElementByName<IField>(Names.TX_RETRY_COUNT); } }
        public IField TX_USER_RETRY_ALLOWED { get { return GetElementByName<IField>(Names.TX_USER_RETRY_ALLOWED); } }
        public IGroup PSMGR_PSTEP_USE_PTRS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_PTRS); } }
        public IField PSTEP_FAIL_MSG_PTR { get { return GetElementByName<IField>(Names.PSTEP_FAIL_MSG_PTR); } }
        public IField PSTEP_GURB_REST_PTR { get { return GetElementByName<IField>(Names.PSTEP_GURB_REST_PTR); } }
        public IField PSTEP_LIPS_PTR { get { return GetElementByName<IField>(Names.PSTEP_LIPS_PTR); } }
        public IField PSTEP_TBL_PTR { get { return GetElementByName<IField>(Names.PSTEP_TBL_PTR); } }
        public IField PSTEP_DDF_PTR { get { return GetElementByName<IField>(Names.PSTEP_DDF_PTR); } }
        public IField PSTEP_COMM_ID { get { return GetElementByName<IField>(Names.PSTEP_COMM_ID); } }
        public IField PSTEP_APPL_LIST_PTR { get { return GetElementByName<IField>(Names.PSTEP_APPL_LIST_PTR); } }
        public IField PSTEP_CURR_PST_PTR { get { return GetElementByName<IField>(Names.PSTEP_CURR_PST_PTR); } }
        public IGroup PSMGR_PSTEP_USE_SYSFLDS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_SYSFLDS); } }
        public IField PSMGR_EIBERRCD { get { return GetElementByName<IField>(Names.PSMGR_EIBERRCD); } }
        public IField PSMGR_EIBFN { get { return GetElementByName<IField>(Names.PSMGR_EIBFN); } }
        public IField PSMGR_EIBRESP { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP); } }
        public IField PSMGR_EIBRESP2 { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP2); } }
        public IGroup IMPORT_RESTART_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_RESTART_0001EV); } }
        public IGroup FINANCIAL_INSTITUTION_D_0001ET { get { return GetElementByName<IGroup>(Names.FINANCIAL_INSTITUTION_D_0001ET); } }
        public IField INSTITUTION_TIN_0001AS { get { return GetElementByName<IField>(Names.INSTITUTION_TIN_0001AS); } }
        public IField INSTITUTION_TIN_0001 { get { return GetElementByName<IField>(Names.INSTITUTION_TIN_0001); } }
        public IField INSTITUTION_TIN_0001XX { get { return GetElementByName<IField>(Names.INSTITUTION_TIN_0001XX); } }
        public IField MATCH_RUN_DATE_0001AS { get { return GetElementByName<IField>(Names.MATCH_RUN_DATE_0001AS); } }
        public IField MATCH_RUN_DATE_0001 { get { return GetElementByName<IField>(Names.MATCH_RUN_DATE_0001); } }
        public IField MATCH_RUN_DATE_0001XX { get { return GetElementByName<IField>(Names.MATCH_RUN_DATE_0001XX); } }
        public IField INSTITUTION_NAME_0001AS { get { return GetElementByName<IField>(Names.INSTITUTION_NAME_0001AS); } }
        public IField INSTITUTION_NAME_0001 { get { return GetElementByName<IField>(Names.INSTITUTION_NAME_0001); } }
        public IField INSTITUTION_NAME_0001XX { get { return GetElementByName<IField>(Names.INSTITUTION_NAME_0001XX); } }
        public IGroup IMPORT_PASS_AREA_0002EV { get { return GetElementByName<IGroup>(Names.IMPORT_PASS_AREA_0002EV); } }
        public IGroup EXTERNAL_0002ET { get { return GetElementByName<IGroup>(Names.EXTERNAL_0002ET); } }
        public IField FILE_INSTRUCTION_0002AS { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0002AS); } }
        public IField FILE_INSTRUCTION_0002 { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0002); } }
        public IField FILE_INSTRUCTION_0002XX { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0002XX); } }
        public IField NUMERIC_RETURN_CODE_0002AS { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0002AS); } }
        public IField NUMERIC_RETURN_CODE_0002 { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0002); } }
        public IField NUMERIC_RETURN_CODE_0002XX { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0002XX); } }
        public IField TEXT_RETURN_CODE_0002AS { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0002AS); } }
        public IField TEXT_RETURN_CODE_0002 { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0002); } }
        public IField TEXT_RETURN_CODE_0002XX { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0002XX); } }
        public IField TEXT_LINE_80_0002AS { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0002AS); } }
        public IField TEXT_LINE_80_0002 { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0002); } }
        public IField TEXT_LINE_80_0002XX { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0002XX); } }
        public IGroup EXPORT_RETURNED_0003EV { get { return GetElementByName<IGroup>(Names.EXPORT_RETURNED_0003EV); } }
        public IGroup EXTERNAL_0003ET { get { return GetElementByName<IGroup>(Names.EXTERNAL_0003ET); } }
        public IField NUMERIC_RETURN_CODE_0003AS { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0003AS); } }
        public IField NUMERIC_RETURN_CODE_0003 { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0003); } }
        public IField NUMERIC_RETURN_CODE_0003XX { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0003XX); } }
        public IField TEXT_LINE_80_0003AS { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0003AS); } }
        public IField TEXT_LINE_80_0003 { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0003); } }
        public IField TEXT_LINE_80_0003XX { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0003XX); } }
        public IField TEXT_RETURN_CODE_0003AS { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0003AS); } }
        public IField TEXT_RETURN_CODE_0003 { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0003); } }
        public IField TEXT_RETURN_CODE_0003XX { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0003XX); } }
        public IGroup EXPORT_RETURNED_REC_TYP_0004EV { get { return GetElementByName<IGroup>(Names.EXPORT_RETURNED_REC_TYP_0004EV); } }
        public IGroup TEXT_WORK_AREA_0004ET { get { return GetElementByName<IGroup>(Names.TEXT_WORK_AREA_0004ET); } }
        public IField TEXT_1_0004AS { get { return GetElementByName<IField>(Names.TEXT_1_0004AS); } }
        public IField TEXT_1_0004 { get { return GetElementByName<IField>(Names.TEXT_1_0004); } }
        public IField TEXT_1_0004XX { get { return GetElementByName<IField>(Names.TEXT_1_0004XX); } }
        public IGroup EXPORT_RETURNED_0005EV { get { return GetElementByName<IGroup>(Names.EXPORT_RETURNED_0005EV); } }
        public IGroup FINANCIAL_INSTITUTION_D_0005ET { get { return GetElementByName<IGroup>(Names.FINANCIAL_INSTITUTION_D_0005ET); } }
        public IField CSE_PERSON_NUMBER_0005AS { get { return GetElementByName<IField>(Names.CSE_PERSON_NUMBER_0005AS); } }
        public IField CSE_PERSON_NUMBER_0005 { get { return GetElementByName<IField>(Names.CSE_PERSON_NUMBER_0005); } }
        public IField CSE_PERSON_NUMBER_0005XX { get { return GetElementByName<IField>(Names.CSE_PERSON_NUMBER_0005XX); } }
        public IField INSTITUTION_TIN_0005AS { get { return GetElementByName<IField>(Names.INSTITUTION_TIN_0005AS); } }
        public IField INSTITUTION_TIN_0005 { get { return GetElementByName<IField>(Names.INSTITUTION_TIN_0005); } }
        public IField INSTITUTION_TIN_0005XX { get { return GetElementByName<IField>(Names.INSTITUTION_TIN_0005XX); } }
        public IField MATCHED_PAYEE_ACCOUNT_N_0006AS { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ACCOUNT_N_0006AS); } }
        public IField MATCHED_PAYEE_ACCOUNT_NUM_0006 { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ACCOUNT_NUM_0006); } }
        public IField MATCHED_PAYEE_ACCOUNT_N_0006XX { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ACCOUNT_N_0006XX); } }
        public IField MATCH_RUN_DATE_0006AS { get { return GetElementByName<IField>(Names.MATCH_RUN_DATE_0006AS); } }
        public IField MATCH_RUN_DATE_0006 { get { return GetElementByName<IField>(Names.MATCH_RUN_DATE_0006); } }
        public IField MATCH_RUN_DATE_0006XX { get { return GetElementByName<IField>(Names.MATCH_RUN_DATE_0006XX); } }
        public IField MATCHED_PAYEE_SSN_0006AS { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_SSN_0006AS); } }
        public IField MATCHED_PAYEE_SSN_0006 { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_SSN_0006); } }
        public IField MATCHED_PAYEE_SSN_0006XX { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_SSN_0006XX); } }
        public IField MATCHED_PAYEE_NAME_0006AS { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_NAME_0006AS); } }
        public IField MATCHED_PAYEE_NAME_0006 { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_NAME_0006); } }
        public IField MATCHED_PAYEE_NAME_0006XX { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_NAME_0006XX); } }
        public IField MATCHED_PAYEE_STREET_AD_0007AS { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_STREET_AD_0007AS); } }
        public IField MATCHED_PAYEE_STREET_ADDR_0007 { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_STREET_ADDR_0007); } }
        public IField MATCHED_PAYEE_STREET_AD_0007XX { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_STREET_AD_0007XX); } }
        public IField MATCHED_PAYEE_CITY_0007AS { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_CITY_0007AS); } }
        public IField MATCHED_PAYEE_CITY_0007 { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_CITY_0007); } }
        public IField MATCHED_PAYEE_CITY_0007XX { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_CITY_0007XX); } }
        public IField MATCHED_PAYEE_STATE_0007AS { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_STATE_0007AS); } }
        public IField MATCHED_PAYEE_STATE_0007 { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_STATE_0007); } }
        public IField MATCHED_PAYEE_STATE_0007XX { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_STATE_0007XX); } }
        public IField MATCHED_PAYEE_ZIP_CODE_0007AS { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ZIP_CODE_0007AS); } }
        public IField MATCHED_PAYEE_ZIP_CODE_0007 { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ZIP_CODE_0007); } }
        public IField MATCHED_PAYEE_ZIP_CODE_0007XX { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ZIP_CODE_0007XX); } }
        public IField MATCHED_PAYEE_ZIP4_0007AS { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ZIP4_0007AS); } }
        public IField MATCHED_PAYEE_ZIP4_0007 { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ZIP4_0007); } }
        public IField MATCHED_PAYEE_ZIP4_0007XX { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ZIP4_0007XX); } }
        public IField MATCHED_PAYEE_ZIP3_0007AS { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ZIP3_0007AS); } }
        public IField MATCHED_PAYEE_ZIP3_0007 { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ZIP3_0007); } }
        public IField MATCHED_PAYEE_ZIP3_0007XX { get { return GetElementByName<IField>(Names.MATCHED_PAYEE_ZIP3_0007XX); } }
        public IField PAYEE_FOREIGN_COUNTRY_I_0008AS { get { return GetElementByName<IField>(Names.PAYEE_FOREIGN_COUNTRY_I_0008AS); } }
        public IField PAYEE_FOREIGN_COUNTRY_IND_0008 { get { return GetElementByName<IField>(Names.PAYEE_FOREIGN_COUNTRY_IND_0008); } }
        public IField PAYEE_FOREIGN_COUNTRY_I_0008XX { get { return GetElementByName<IField>(Names.PAYEE_FOREIGN_COUNTRY_I_0008XX); } }
        public IField MATCH_FLAG_0008AS { get { return GetElementByName<IField>(Names.MATCH_FLAG_0008AS); } }
        public IField MATCH_FLAG_0008 { get { return GetElementByName<IField>(Names.MATCH_FLAG_0008); } }
        public IField MATCH_FLAG_0008XX { get { return GetElementByName<IField>(Names.MATCH_FLAG_0008XX); } }
        public IField ACCOUNT_BALANCE_0008AS { get { return GetElementByName<IField>(Names.ACCOUNT_BALANCE_0008AS); } }
        public IField ACCOUNT_BALANCE_0008 { get { return GetElementByName<IField>(Names.ACCOUNT_BALANCE_0008); } }
        public IField ACCOUNT_BALANCE_0008XX { get { return GetElementByName<IField>(Names.ACCOUNT_BALANCE_0008XX); } }
        public IField ACCOUNT_TYPE_0008AS { get { return GetElementByName<IField>(Names.ACCOUNT_TYPE_0008AS); } }
        public IField ACCOUNT_TYPE_0008 { get { return GetElementByName<IField>(Names.ACCOUNT_TYPE_0008); } }
        public IField ACCOUNT_TYPE_0008XX { get { return GetElementByName<IField>(Names.ACCOUNT_TYPE_0008XX); } }
        public IField TRUST_FUND_INDICATOR_0008AS { get { return GetElementByName<IField>(Names.TRUST_FUND_INDICATOR_0008AS); } }
        public IField TRUST_FUND_INDICATOR_0008 { get { return GetElementByName<IField>(Names.TRUST_FUND_INDICATOR_0008); } }
        public IField TRUST_FUND_INDICATOR_0008XX { get { return GetElementByName<IField>(Names.TRUST_FUND_INDICATOR_0008XX); } }
        public IField ACCOUNT_BALANCE_INDICAT_0009AS { get { return GetElementByName<IField>(Names.ACCOUNT_BALANCE_INDICAT_0009AS); } }
        public IField ACCOUNT_BALANCE_INDICATOR_0009 { get { return GetElementByName<IField>(Names.ACCOUNT_BALANCE_INDICATOR_0009); } }
        public IField ACCOUNT_BALANCE_INDICAT_0009XX { get { return GetElementByName<IField>(Names.ACCOUNT_BALANCE_INDICAT_0009XX); } }
        public IField DATE_OF_BIRTH_0009AS { get { return GetElementByName<IField>(Names.DATE_OF_BIRTH_0009AS); } }
        public IField DATE_OF_BIRTH_0009 { get { return GetElementByName<IField>(Names.DATE_OF_BIRTH_0009); } }
        public IField DATE_OF_BIRTH_0009XX { get { return GetElementByName<IField>(Names.DATE_OF_BIRTH_0009XX); } }
        public IField PAYEE_INDICATOR_0009AS { get { return GetElementByName<IField>(Names.PAYEE_INDICATOR_0009AS); } }
        public IField PAYEE_INDICATOR_0009 { get { return GetElementByName<IField>(Names.PAYEE_INDICATOR_0009); } }
        public IField PAYEE_INDICATOR_0009XX { get { return GetElementByName<IField>(Names.PAYEE_INDICATOR_0009XX); } }
        public IField ACCOUNT_FULL_LEGAL_TITL_0010AS { get { return GetElementByName<IField>(Names.ACCOUNT_FULL_LEGAL_TITL_0010AS); } }
        public IField ACCOUNT_FULL_LEGAL_TITLE_0010 { get { return GetElementByName<IField>(Names.ACCOUNT_FULL_LEGAL_TITLE_0010); } }
        public IField ACCOUNT_FULL_LEGAL_TITL_0010XX { get { return GetElementByName<IField>(Names.ACCOUNT_FULL_LEGAL_TITL_0010XX); } }
        public IField PRIMARY_SSN_0010AS { get { return GetElementByName<IField>(Names.PRIMARY_SSN_0010AS); } }
        public IField PRIMARY_SSN_0010 { get { return GetElementByName<IField>(Names.PRIMARY_SSN_0010); } }
        public IField PRIMARY_SSN_0010XX { get { return GetElementByName<IField>(Names.PRIMARY_SSN_0010XX); } }
        public IField SECOND_PAYEE_NAME_0010AS { get { return GetElementByName<IField>(Names.SECOND_PAYEE_NAME_0010AS); } }
        public IField SECOND_PAYEE_NAME_0010 { get { return GetElementByName<IField>(Names.SECOND_PAYEE_NAME_0010); } }
        public IField SECOND_PAYEE_NAME_0010XX { get { return GetElementByName<IField>(Names.SECOND_PAYEE_NAME_0010XX); } }
        public IField SECOND_PAYEE_SSN_0010AS { get { return GetElementByName<IField>(Names.SECOND_PAYEE_SSN_0010AS); } }
        public IField SECOND_PAYEE_SSN_0010 { get { return GetElementByName<IField>(Names.SECOND_PAYEE_SSN_0010); } }
        public IField SECOND_PAYEE_SSN_0010XX { get { return GetElementByName<IField>(Names.SECOND_PAYEE_SSN_0010XX); } }
        public IField MSFIDM_INDICATOR_0010AS { get { return GetElementByName<IField>(Names.MSFIDM_INDICATOR_0010AS); } }
        public IField MSFIDM_INDICATOR_0010 { get { return GetElementByName<IField>(Names.MSFIDM_INDICATOR_0010); } }
        public IField MSFIDM_INDICATOR_0010XX { get { return GetElementByName<IField>(Names.MSFIDM_INDICATOR_0010XX); } }
        public IField INSTITUTION_NAME_0010AS { get { return GetElementByName<IField>(Names.INSTITUTION_NAME_0010AS); } }
        public IField INSTITUTION_NAME_0010 { get { return GetElementByName<IField>(Names.INSTITUTION_NAME_0010); } }
        public IField INSTITUTION_NAME_0010XX { get { return GetElementByName<IField>(Names.INSTITUTION_NAME_0010XX); } }
        public IField INSTITUTION_STREET_ADDR_0011AS { get { return GetElementByName<IField>(Names.INSTITUTION_STREET_ADDR_0011AS); } }
        public IField INSTITUTION_STREET_ADDRES_0011 { get { return GetElementByName<IField>(Names.INSTITUTION_STREET_ADDRES_0011); } }
        public IField INSTITUTION_STREET_ADDR_0011XX { get { return GetElementByName<IField>(Names.INSTITUTION_STREET_ADDR_0011XX); } }
        public IField INSTITUTION_CITY_0011AS { get { return GetElementByName<IField>(Names.INSTITUTION_CITY_0011AS); } }
        public IField INSTITUTION_CITY_0011 { get { return GetElementByName<IField>(Names.INSTITUTION_CITY_0011); } }
        public IField INSTITUTION_CITY_0011XX { get { return GetElementByName<IField>(Names.INSTITUTION_CITY_0011XX); } }
        public IField INSTITUTION_STATE_0011AS { get { return GetElementByName<IField>(Names.INSTITUTION_STATE_0011AS); } }
        public IField INSTITUTION_STATE_0011 { get { return GetElementByName<IField>(Names.INSTITUTION_STATE_0011); } }
        public IField INSTITUTION_STATE_0011XX { get { return GetElementByName<IField>(Names.INSTITUTION_STATE_0011XX); } }
        public IField INSTITUTION_ZIP_CODE_0011AS { get { return GetElementByName<IField>(Names.INSTITUTION_ZIP_CODE_0011AS); } }
        public IField INSTITUTION_ZIP_CODE_0011 { get { return GetElementByName<IField>(Names.INSTITUTION_ZIP_CODE_0011); } }
        public IField INSTITUTION_ZIP_CODE_0011XX { get { return GetElementByName<IField>(Names.INSTITUTION_ZIP_CODE_0011XX); } }
        public IField INSTITUTION_ZIP4_0011AS { get { return GetElementByName<IField>(Names.INSTITUTION_ZIP4_0011AS); } }
        public IField INSTITUTION_ZIP4_0011 { get { return GetElementByName<IField>(Names.INSTITUTION_ZIP4_0011); } }
        public IField INSTITUTION_ZIP4_0011XX { get { return GetElementByName<IField>(Names.INSTITUTION_ZIP4_0011XX); } }
        public IField INSTITUTION_ZIP3_0011AS { get { return GetElementByName<IField>(Names.INSTITUTION_ZIP3_0011AS); } }
        public IField INSTITUTION_ZIP3_0011 { get { return GetElementByName<IField>(Names.INSTITUTION_ZIP3_0011); } }
        public IField INSTITUTION_ZIP3_0011XX { get { return GetElementByName<IField>(Names.INSTITUTION_ZIP3_0011XX); } }
        public IField SECOND_INSTITUTION_NAME_0012AS { get { return GetElementByName<IField>(Names.SECOND_INSTITUTION_NAME_0012AS); } }
        public IField SECOND_INSTITUTION_NAME_0012 { get { return GetElementByName<IField>(Names.SECOND_INSTITUTION_NAME_0012); } }
        public IField SECOND_INSTITUTION_NAME_0012XX { get { return GetElementByName<IField>(Names.SECOND_INSTITUTION_NAME_0012XX); } }
        public IField TRANSMITTER_TIN_0012AS { get { return GetElementByName<IField>(Names.TRANSMITTER_TIN_0012AS); } }
        public IField TRANSMITTER_TIN_0012 { get { return GetElementByName<IField>(Names.TRANSMITTER_TIN_0012); } }
        public IField TRANSMITTER_TIN_0012XX { get { return GetElementByName<IField>(Names.TRANSMITTER_TIN_0012XX); } }
        public IField TRANSMITTER_NAME_0012AS { get { return GetElementByName<IField>(Names.TRANSMITTER_NAME_0012AS); } }
        public IField TRANSMITTER_NAME_0012 { get { return GetElementByName<IField>(Names.TRANSMITTER_NAME_0012); } }
        public IField TRANSMITTER_NAME_0012XX { get { return GetElementByName<IField>(Names.TRANSMITTER_NAME_0012XX); } }
        public IField TRANSMITTER_STREET_ADDR_0013AS { get { return GetElementByName<IField>(Names.TRANSMITTER_STREET_ADDR_0013AS); } }
        public IField TRANSMITTER_STREET_ADDRES_0013 { get { return GetElementByName<IField>(Names.TRANSMITTER_STREET_ADDRES_0013); } }
        public IField TRANSMITTER_STREET_ADDR_0013XX { get { return GetElementByName<IField>(Names.TRANSMITTER_STREET_ADDR_0013XX); } }
        public IField TRANSMITTER_CITY_0013AS { get { return GetElementByName<IField>(Names.TRANSMITTER_CITY_0013AS); } }
        public IField TRANSMITTER_CITY_0013 { get { return GetElementByName<IField>(Names.TRANSMITTER_CITY_0013); } }
        public IField TRANSMITTER_CITY_0013XX { get { return GetElementByName<IField>(Names.TRANSMITTER_CITY_0013XX); } }
        public IField TRANSMITTER_STATE_0013AS { get { return GetElementByName<IField>(Names.TRANSMITTER_STATE_0013AS); } }
        public IField TRANSMITTER_STATE_0013 { get { return GetElementByName<IField>(Names.TRANSMITTER_STATE_0013); } }
        public IField TRANSMITTER_STATE_0013XX { get { return GetElementByName<IField>(Names.TRANSMITTER_STATE_0013XX); } }
        public IField TRANSMITTER_ZIP_CODE_0013AS { get { return GetElementByName<IField>(Names.TRANSMITTER_ZIP_CODE_0013AS); } }
        public IField TRANSMITTER_ZIP_CODE_0013 { get { return GetElementByName<IField>(Names.TRANSMITTER_ZIP_CODE_0013); } }
        public IField TRANSMITTER_ZIP_CODE_0013XX { get { return GetElementByName<IField>(Names.TRANSMITTER_ZIP_CODE_0013XX); } }
        public IField TRANSMITTER_ZIP4_0013AS { get { return GetElementByName<IField>(Names.TRANSMITTER_ZIP4_0013AS); } }
        public IField TRANSMITTER_ZIP4_0013 { get { return GetElementByName<IField>(Names.TRANSMITTER_ZIP4_0013); } }
        public IField TRANSMITTER_ZIP4_0013XX { get { return GetElementByName<IField>(Names.TRANSMITTER_ZIP4_0013XX); } }
        public IField TRANSMITTER_ZIP3_0013AS { get { return GetElementByName<IField>(Names.TRANSMITTER_ZIP3_0013AS); } }
        public IField TRANSMITTER_ZIP3_0013 { get { return GetElementByName<IField>(Names.TRANSMITTER_ZIP3_0013); } }
        public IField TRANSMITTER_ZIP3_0013XX { get { return GetElementByName<IField>(Names.TRANSMITTER_ZIP3_0013XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.GLOBDATA, (GLOBDATA) =>
           {
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_COMMAND, (PSMGR_IEF_COMMAND) =>
               {
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_1, FieldType.String, 8);
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_2, FieldType.String, 72);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_TRANCODE, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_STATE, FieldType.PackedDecimal, 11);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_INFOMSG, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_USER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_TERMINAL_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_PRINTER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_DATE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_TIME, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_RUNTIME_TYPE, FieldType.String, 4);
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA, (PSMGR_FUNCTION_DATA) =>
               {
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_ERRMSG, FieldType.String, 4);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_NAME, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_DDURA, (PSMGR_FUNC_IN_DDURA) =>
                   {
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_YEAR, (DDURA_YEAR) =>
                       {
                           DDURA_YEAR.CreateNewField(Names.DDURA_Y_MISS, FieldType.String, 1);
                           DDURA_YEAR.CreateNewField(Names.DDURA_YYYY, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_MONTH, (DDURA_MONTH) =>
                       {
                           DDURA_MONTH.CreateNewField(Names.DDURA_M_MISS, FieldType.String, 1);
                           DDURA_MONTH.CreateNewField(Names.DDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_DAY, (DDURA_DAY) =>
                       {
                           DDURA_DAY.CreateNewField(Names.DDURA_D_MISS, FieldType.String, 1);
                           DDURA_DAY.CreateNewField(Names.DDURA_DD, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_TIME, FieldType.String, 6);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_TDURA, (PSMGR_FUNC_IN_TDURA) =>
                   {
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_HOUR, (TDURA_HOUR) =>
                       {
                           TDURA_HOUR.CreateNewField(Names.TDURA_H_MISS, FieldType.String, 1);
                           TDURA_HOUR.CreateNewField(Names.TDURA_HH, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_MINUTE, (TDURA_MINUTE) =>
                       {
                           TDURA_MINUTE.CreateNewField(Names.TDURA_M_MISS, FieldType.String, 1);
                           TDURA_MINUTE.CreateNewField(Names.TDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_SECOND, (TDURA_SECOND) =>
                       {
                           TDURA_SECOND.CreateNewField(Names.TDURA_S_MISS, FieldType.String, 1);
                           TDURA_SECOND.CreateNewField(Names.TDURA_SS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_TIME, FieldType.String, 6);
               });
               GLOBDATA.CreateNewFillerField(2, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_NEXTTRAN, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_MSGTYPE, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(11, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_DEBUG_FLAGS, (PSMGR_IEF_DEBUG_FLAGS) =>
               {
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewField(Names.PSMGR_IEF_DEBUG, FieldType.String, 1)
                       .NewCheckField(Names.PSMGR_DEBUG_ON, "Y")
                       ;
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewFillerField(15, FillWith.Hashes);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ENVIRONMENT_DATA, (PSMGR_ENVIRONMENT_DATA) =>
               {
                   PSMGR_ENVIRONMENT_DATA.CreateNewField(Names.PSMGR_PCB_CNT, FieldType.CompInt, 9);
                   PSMGR_ENVIRONMENT_DATA.CreateNewGroupArray(Names.PSMGR_PCB_ENTRY, 255, (PSMGR_PCB_ENTRY) =>
                   {
                       PSMGR_PCB_ENTRY.CreateNewField(Names.PSMGR_PCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
               {
                   PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
                   PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
                   {
                       PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ERROR_DATA, (PSMGR_ERROR_DATA) =>
               {
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ACTION_NAME, FieldType.String, 32);
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ENCOUNTERED_SW, FieldType.String, 1);
                   PSMGR_ERROR_DATA.CreateNewField(Names.VIEW_OVERFLOW_SW, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DASG_DATA, (PSMGR_DASG_DATA) =>
               {
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ACTION_ID_X, (ACTION_ID_X) =>
                   {
                       ACTION_ID_X.CreateNewField(Names.ACTION_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ATTRIBUTE_ID_X, (ATTRIBUTE_ID_X) =>
                   {
                       ATTRIBUTE_ID_X.CreateNewField(Names.ATTRIBUTE_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewField(Names.STATUS_FLAG, FieldType.String, 2)
                       .NewCheckField(Names.FATAL_ERROR_SF, "FE")
                       .NewCheckField(Names.DB_ERROR_SF, "DB")
                       .NewCheckField(Names.ABORT_SHOW_DBMS_MSG_SF, "AB")
                       .NewCheckField(Names.ABORT_SHOW_USER_MSG_SF, "AM")
                       .NewCheckField(Names.RETRY_TRAN_REQUESTED_SF, "RT")
                       .NewCheckField(Names.PSTEP_USE_FAILURE, "PU")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.LAST_STATUS, FieldType.String, 2)
                       .NewCheckField(Names.DB_ERROR_FL_LS, "DB")
                       .NewCheckField(Names.DB_DEADLOCK_TIMOUT_FL_LS, "DT")
                       .NewCheckField(Names.DUPLICATE_FOUND_FL_LS, "DF")
                       .NewCheckField(Names.INVALID_DATAA_FL_LS, "IA")
                       .NewCheckField(Names.INVALID_DATAB_TYPE_FL_LS, "BT")
                       .NewCheckField(Names.INVALID_DATAB_PERM_FL_LS, "BP")
                       .NewCheckField(Names.FATAL_ERROR_FL_LS, "FE")
                       .NewCheckField(Names.NOT_FOUND_FL_LS, "NF")
                       .NewCheckField(Names.NOT_UNIQUE_FL_LS, "NU")
                       .NewCheckField(Names.IEF_FUNCTION_ERROR_FL_LS, "IE")
                       .NewCheckField(Names.IEF_DURATION_ERROR_FL_LS, "DE")
                       .NewCheckField(Names.USED_PSTEP_NOT_FOUND, "PO")
                       .NewCheckField(Names.USED_PSTEP_ROUTING_ERR, "PX")
                       .NewCheckField(Names.USED_PSTEP_SND_FMT_ERR, "PF")
                       .NewCheckField(Names.USED_PSTEP_ENCRYPT_ERR, "PN")
                       .NewCheckField(Names.USED_PSTEP_SND_BFR_ERR, "PS")
                       .NewCheckField(Names.USED_PSTEP_RCV_BFR_ERR, "PR")
                       .NewCheckField(Names.USED_PSTEP_RCV_FMT_ERR, "PU")
                       .NewCheckField(Names.USED_PSTEP_TIRSECR_ERR, "PE")
                       .NewCheckField(Names.USED_PSTEP_TOKEN_ERR, "PT")
                       .NewCheckField(Names.USED_PSTEP_SEND_MAX_SIZE, "PM")
                       .NewCheckField(Names.USED_PSTEP_SECG_ERR, "PB")
                       .NewCheckField(Names.USED_PSTEP_ALLOC_ERR, "PA")
                       .NewCheckField(Names.USED_PSTEP_CONNECT_ERR, "PC")
                       .NewCheckField(Names.USED_PSTEP_XERR, "PD")
                       .NewCheckField(Names.USED_PSTEP_RCV_UA_ERR, "PH")
                       .NewCheckField(Names.USED_PSTEP_RCV_ES_ERR, "PI")
                       .NewCheckField(Names.USED_PSTEP_XFAL, "PJ")
                       .NewCheckField(Names.USED_PSTEP_SETOA_ERR, "PK")
                       .NewCheckField(Names.USED_PSTEP_RCV_VIEW_ERR, "PL")
                       .NewCheckField(Names.USED_PSTEP_DECRYPT_ERR, "PP")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.SAVE_SQLCA, FieldType.String, 255);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DEBUG_DATA, (PSMGR_DEBUG_DATA) =>
               {
                   PSMGR_DEBUG_DATA.CreateNewField(Names.PSMGR_TRACE_ADR, FieldType.CompInt, 9);
                   PSMGR_DEBUG_DATA.CreateNewGroup(Names.LAST_STATEMENT_X, (LAST_STATEMENT_X) =>
                   {
                       LAST_STATEMENT_X.CreateNewField(Names.LAST_STATEMENT_NUM, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_ID, FieldType.String, 10);
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_NAME, FieldType.String, 32);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_TIRDATE_SAVEAREA, FieldType.String, 12);
               GLOBDATA.CreateNewGroup(Names.PSMGR_TIRDATE_CMCB, (PSMGR_TIRDATE_CMCB) =>
               {
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATE, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIME, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(8, FillWith.Hashes);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_INC, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RC, FieldType.CompShort, 4)
                       .NewCheckField(Names.PSMGR_TIRDATE_OK, +0)
                       .NewCheckField(Names.PSMGR_TIRDATE_WARNING, +4)
                       .NewCheckField(Names.PSMGR_TIRDATE_ERROR, +8)
                       ;
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_REQ, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIMEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RETMSG, FieldType.String, 60);

                   IField PSMGR_TIRDATE_TSTAMP_local = PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TSTAMP, FieldType.String, 20);
                   PSMGR_TIRDATE_CMCB.CreateNewGroupRedefine("FILLER_d5", PSMGR_TIRDATE_TSTAMP_local, (FILLER_d5) =>
                   {
                       FILLER_d5.CreateNewField(Names.PSMGR_TIRDATE_DATE_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d5.CreateNewField(Names.PSMGR_TIRDATE_TIME_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d5.CreateNewFillerField(4, FillWith.Hashes);
                   });
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_SKIP_VAL, FieldType.String, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(95, FillWith.Hashes);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_ROLLBACK_RQSTED, FieldType.String, 1)
                   .NewCheckField(Names.ROLLBACK_RQSTED, "R")
                   .NewCheckField(Names.ABEND_RQSTED, "A")
                   .NewCheckField(Names.TERMINATE_RQSTED, "T")
                   ;
               GLOBDATA.CreateNewGroup(Names.TIRTRCE_SAVE_AREA, (TIRTRCE_SAVE_AREA) =>
               {
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.BOTTOM_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.END_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_STMT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_OF_CALL, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT_STATUS, FieldType.String, 3);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_AB_NAME, FieldType.String, 32);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLOR, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLORT, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.HILITE, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_ON_OFF, FieldType.String, 3);
               });
               GLOBDATA.CreateNewGroup(Names.CASCADE_DELETE_FLAGS, (CASCADE_DELETE_FLAGS) =>
               {
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V1PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V2PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE1, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE2, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.PROCESSQ_FLAG, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ACTIVE_DIALECT, (PSMGR_ACTIVE_DIALECT) =>
               {
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.DIALECT_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.MESSAGE_TABLE_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.TRANSLATE_TABLE_NAME, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA_EXT, (PSMGR_FUNCTION_DATA_EXT) =>
               {
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_IN_TIMESTAMP, FieldType.String, 20);
                   PSMGR_FUNCTION_DATA_EXT.CreateNewGroup(Names.PSMGR_FUNC_IN_TSDURA, (PSMGR_FUNC_IN_TSDURA) =>
                   {
                       PSMGR_FUNC_IN_TSDURA.CreateNewGroup(Names.TSDURA_MICROSECOND, (TSDURA_MICROSECOND) =>
                       {
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_M_MISS, FieldType.String, 1);
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_MS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_OUT_TIMESTAMP, FieldType.String, 20);
               });
               GLOBDATA.CreateNewFillerField(8, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_CICS_FAIL_SW, FieldType.String, 1)
                   .NewCheckField(Names.INHIBIT_CICS_RECEIVE, "I")
                   ;
               GLOBDATA.CreateNewField(Names.CLIENT_USERID, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.CLIENT_PASSWORD, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.LOAD_MODULE_NAME, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.INSTRUMENT_CODE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_RETRY_LIMIT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_TIMEOUT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewGroup(Names.PSMGR_EXTRA_ERRINFO, (PSMGR_EXTRA_ERRINFO) =>
               {
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_MSG_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_ADDR, FieldType.String, 8);
               });
               GLOBDATA.CreateNewField(Names.TX_RETRY_COUNT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_USER_RETRY_ALLOWED, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(3, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_PTRS, (PSMGR_PSTEP_USE_PTRS) =>
               {
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_FAIL_MSG_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_GURB_REST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_LIPS_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_TBL_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_DDF_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_COMM_ID, FieldType.String, 8);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_APPL_LIST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_CURR_PST_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_SYSFLDS, (PSMGR_PSTEP_USE_SYSFLDS) =>
               {
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBERRCD, FieldType.String, 4);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBFN, FieldType.String, 2);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP, FieldType.String, 8);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP2, FieldType.String, 8);
               });
               GLOBDATA.CreateNewFillerField(199, FillWith.Hashes);
           });

            recordDef.CreateNewGroup(Names.IMPORT_RESTART_0001EV, (IMPORT_RESTART_0001EV) =>
           {
               IMPORT_RESTART_0001EV.CreateNewGroup(Names.FINANCIAL_INSTITUTION_D_0001ET, (FINANCIAL_INSTITUTION_D_0001ET) =>
               {
                   FINANCIAL_INSTITUTION_D_0001ET.CreateNewField(Names.INSTITUTION_TIN_0001AS, FieldType.String, 1);

                   IField INSTITUTION_TIN_0001_local = FINANCIAL_INSTITUTION_D_0001ET.CreateNewField(Names.INSTITUTION_TIN_0001, FieldType.String, 9);
                   FINANCIAL_INSTITUTION_D_0001ET.CreateNewFieldRedefine(Names.INSTITUTION_TIN_0001XX, FieldType.String, INSTITUTION_TIN_0001_local, 9);
                   FINANCIAL_INSTITUTION_D_0001ET.CreateNewField(Names.MATCH_RUN_DATE_0001AS, FieldType.String, 1);

                   IField MATCH_RUN_DATE_0001_local = FINANCIAL_INSTITUTION_D_0001ET.CreateNewField(Names.MATCH_RUN_DATE_0001, FieldType.String, 6);
                   FINANCIAL_INSTITUTION_D_0001ET.CreateNewFieldRedefine(Names.MATCH_RUN_DATE_0001XX, FieldType.String, MATCH_RUN_DATE_0001_local, 6);
                   FINANCIAL_INSTITUTION_D_0001ET.CreateNewField(Names.INSTITUTION_NAME_0001AS, FieldType.String, 1);

                   IField INSTITUTION_NAME_0001_local = FINANCIAL_INSTITUTION_D_0001ET.CreateNewField(Names.INSTITUTION_NAME_0001, FieldType.String, 40);
                   FINANCIAL_INSTITUTION_D_0001ET.CreateNewFieldRedefine(Names.INSTITUTION_NAME_0001XX, FieldType.String, INSTITUTION_NAME_0001_local, 40);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_PASS_AREA_0002EV, (IMPORT_PASS_AREA_0002EV) =>
           {
               IMPORT_PASS_AREA_0002EV.CreateNewGroup(Names.EXTERNAL_0002ET, (EXTERNAL_0002ET) =>
               {
                   EXTERNAL_0002ET.CreateNewField(Names.FILE_INSTRUCTION_0002AS, FieldType.String, 1);

                   IField FILE_INSTRUCTION_0002_local = EXTERNAL_0002ET.CreateNewField(Names.FILE_INSTRUCTION_0002, FieldType.String, 10);
                   EXTERNAL_0002ET.CreateNewFieldRedefine(Names.FILE_INSTRUCTION_0002XX, FieldType.String, FILE_INSTRUCTION_0002_local, 10);
                   EXTERNAL_0002ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0002AS, FieldType.String, 1);

                   IField NUMERIC_RETURN_CODE_0002_local = EXTERNAL_0002ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0002, FieldType.SignedNumeric, 2);
                   EXTERNAL_0002ET.CreateNewFieldRedefine(Names.NUMERIC_RETURN_CODE_0002XX, FieldType.String, NUMERIC_RETURN_CODE_0002_local, 2);
                   EXTERNAL_0002ET.CreateNewField(Names.TEXT_RETURN_CODE_0002AS, FieldType.String, 1);

                   IField TEXT_RETURN_CODE_0002_local = EXTERNAL_0002ET.CreateNewField(Names.TEXT_RETURN_CODE_0002, FieldType.String, 2);
                   EXTERNAL_0002ET.CreateNewFieldRedefine(Names.TEXT_RETURN_CODE_0002XX, FieldType.String, TEXT_RETURN_CODE_0002_local, 2);
                   EXTERNAL_0002ET.CreateNewField(Names.TEXT_LINE_80_0002AS, FieldType.String, 1);

                   IField TEXT_LINE_80_0002_local = EXTERNAL_0002ET.CreateNewField(Names.TEXT_LINE_80_0002, FieldType.String, 130);
                   EXTERNAL_0002ET.CreateNewFieldRedefine(Names.TEXT_LINE_80_0002XX, FieldType.String, TEXT_LINE_80_0002_local, 130);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_RETURNED_0003EV, (EXPORT_RETURNED_0003EV) =>
           {
               EXPORT_RETURNED_0003EV.CreateNewGroup(Names.EXTERNAL_0003ET, (EXTERNAL_0003ET) =>
               {
                   EXTERNAL_0003ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0003AS, FieldType.String, 1);

                   IField NUMERIC_RETURN_CODE_0003_local = EXTERNAL_0003ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0003, FieldType.SignedNumeric, 2);
                   EXTERNAL_0003ET.CreateNewFieldRedefine(Names.NUMERIC_RETURN_CODE_0003XX, FieldType.String, NUMERIC_RETURN_CODE_0003_local, 2);
                   EXTERNAL_0003ET.CreateNewField(Names.TEXT_LINE_80_0003AS, FieldType.String, 1);

                   IField TEXT_LINE_80_0003_local = EXTERNAL_0003ET.CreateNewField(Names.TEXT_LINE_80_0003, FieldType.String, 130);
                   EXTERNAL_0003ET.CreateNewFieldRedefine(Names.TEXT_LINE_80_0003XX, FieldType.String, TEXT_LINE_80_0003_local, 130);
                   EXTERNAL_0003ET.CreateNewField(Names.TEXT_RETURN_CODE_0003AS, FieldType.String, 1);

                   IField TEXT_RETURN_CODE_0003_local = EXTERNAL_0003ET.CreateNewField(Names.TEXT_RETURN_CODE_0003, FieldType.String, 2);
                   EXTERNAL_0003ET.CreateNewFieldRedefine(Names.TEXT_RETURN_CODE_0003XX, FieldType.String, TEXT_RETURN_CODE_0003_local, 2);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_RETURNED_REC_TYP_0004EV, (EXPORT_RETURNED_REC_TYP_0004EV) =>
           {
               EXPORT_RETURNED_REC_TYP_0004EV.CreateNewGroup(Names.TEXT_WORK_AREA_0004ET, (TEXT_WORK_AREA_0004ET) =>
               {
                   TEXT_WORK_AREA_0004ET.CreateNewField(Names.TEXT_1_0004AS, FieldType.String, 1);

                   IField TEXT_1_0004_local = TEXT_WORK_AREA_0004ET.CreateNewField(Names.TEXT_1_0004, FieldType.String, 1);
                   TEXT_WORK_AREA_0004ET.CreateNewFieldRedefine(Names.TEXT_1_0004XX, FieldType.String, TEXT_1_0004_local, 1);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_RETURNED_0005EV, (EXPORT_RETURNED_0005EV) =>
           {
               EXPORT_RETURNED_0005EV.CreateNewGroup(Names.FINANCIAL_INSTITUTION_D_0005ET, (FINANCIAL_INSTITUTION_D_0005ET) =>
               {
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.CSE_PERSON_NUMBER_0005AS, FieldType.String, 1);

                   IField CSE_PERSON_NUMBER_0005_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.CSE_PERSON_NUMBER_0005, FieldType.String, 10);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.CSE_PERSON_NUMBER_0005XX, FieldType.String, CSE_PERSON_NUMBER_0005_local, 10);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_TIN_0005AS, FieldType.String, 1);

                   IField INSTITUTION_TIN_0005_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_TIN_0005, FieldType.String, 9);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.INSTITUTION_TIN_0005XX, FieldType.String, INSTITUTION_TIN_0005_local, 9);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_ACCOUNT_N_0006AS, FieldType.String, 1);

                   IField MATCHED_PAYEE_ACCOUNT_NUM_0006_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_ACCOUNT_NUM_0006, FieldType.String, 20);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MATCHED_PAYEE_ACCOUNT_N_0006XX, FieldType.String, MATCHED_PAYEE_ACCOUNT_NUM_0006_local, 20);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCH_RUN_DATE_0006AS, FieldType.String, 1);

                   IField MATCH_RUN_DATE_0006_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCH_RUN_DATE_0006, FieldType.String, 6);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MATCH_RUN_DATE_0006XX, FieldType.String, MATCH_RUN_DATE_0006_local, 6);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_SSN_0006AS, FieldType.String, 1);

                   IField MATCHED_PAYEE_SSN_0006_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_SSN_0006, FieldType.String, 9);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MATCHED_PAYEE_SSN_0006XX, FieldType.String, MATCHED_PAYEE_SSN_0006_local, 9);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_NAME_0006AS, FieldType.String, 1);

                   IField MATCHED_PAYEE_NAME_0006_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_NAME_0006, FieldType.String, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MATCHED_PAYEE_NAME_0006XX, FieldType.String, MATCHED_PAYEE_NAME_0006_local, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_STREET_AD_0007AS, FieldType.String, 1);

                   IField MATCHED_PAYEE_STREET_ADDR_0007_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_STREET_ADDR_0007, FieldType.String, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MATCHED_PAYEE_STREET_AD_0007XX, FieldType.String, MATCHED_PAYEE_STREET_ADDR_0007_local, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_CITY_0007AS, FieldType.String, 1);

                   IField MATCHED_PAYEE_CITY_0007_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_CITY_0007, FieldType.String, 30);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MATCHED_PAYEE_CITY_0007XX, FieldType.String, MATCHED_PAYEE_CITY_0007_local, 30);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_STATE_0007AS, FieldType.String, 1);

                   IField MATCHED_PAYEE_STATE_0007_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_STATE_0007, FieldType.String, 2);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MATCHED_PAYEE_STATE_0007XX, FieldType.String, MATCHED_PAYEE_STATE_0007_local, 2);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_ZIP_CODE_0007AS, FieldType.String, 1);

                   IField MATCHED_PAYEE_ZIP_CODE_0007_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_ZIP_CODE_0007, FieldType.String, 5);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MATCHED_PAYEE_ZIP_CODE_0007XX, FieldType.String, MATCHED_PAYEE_ZIP_CODE_0007_local, 5);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_ZIP4_0007AS, FieldType.String, 1);

                   IField MATCHED_PAYEE_ZIP4_0007_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_ZIP4_0007, FieldType.String, 4);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MATCHED_PAYEE_ZIP4_0007XX, FieldType.String, MATCHED_PAYEE_ZIP4_0007_local, 4);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_ZIP3_0007AS, FieldType.String, 1);

                   IField MATCHED_PAYEE_ZIP3_0007_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCHED_PAYEE_ZIP3_0007, FieldType.String, 3);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MATCHED_PAYEE_ZIP3_0007XX, FieldType.String, MATCHED_PAYEE_ZIP3_0007_local, 3);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.PAYEE_FOREIGN_COUNTRY_I_0008AS, FieldType.String, 1);

                   IField PAYEE_FOREIGN_COUNTRY_IND_0008_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.PAYEE_FOREIGN_COUNTRY_IND_0008, FieldType.String, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.PAYEE_FOREIGN_COUNTRY_I_0008XX, FieldType.String, PAYEE_FOREIGN_COUNTRY_IND_0008_local, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCH_FLAG_0008AS, FieldType.String, 1);

                   IField MATCH_FLAG_0008_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MATCH_FLAG_0008, FieldType.String, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MATCH_FLAG_0008XX, FieldType.String, MATCH_FLAG_0008_local, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.ACCOUNT_BALANCE_0008AS, FieldType.String, 1);

                   IField ACCOUNT_BALANCE_0008_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.ACCOUNT_BALANCE_0008, FieldType.SignedNumeric, 9, null, 2);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.ACCOUNT_BALANCE_0008XX, FieldType.String, ACCOUNT_BALANCE_0008_local, 9);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.ACCOUNT_TYPE_0008AS, FieldType.String, 1);

                   IField ACCOUNT_TYPE_0008_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.ACCOUNT_TYPE_0008, FieldType.String, 2);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.ACCOUNT_TYPE_0008XX, FieldType.String, ACCOUNT_TYPE_0008_local, 2);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRUST_FUND_INDICATOR_0008AS, FieldType.String, 1);

                   IField TRUST_FUND_INDICATOR_0008_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRUST_FUND_INDICATOR_0008, FieldType.String, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.TRUST_FUND_INDICATOR_0008XX, FieldType.String, TRUST_FUND_INDICATOR_0008_local, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.ACCOUNT_BALANCE_INDICAT_0009AS, FieldType.String, 1);

                   IField ACCOUNT_BALANCE_INDICATOR_0009_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.ACCOUNT_BALANCE_INDICATOR_0009, FieldType.String, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.ACCOUNT_BALANCE_INDICAT_0009XX, FieldType.String, ACCOUNT_BALANCE_INDICATOR_0009_local, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.DATE_OF_BIRTH_0009AS, FieldType.String, 1);

                   IField DATE_OF_BIRTH_0009_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.DATE_OF_BIRTH_0009, FieldType.SignedNumeric, 8);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.DATE_OF_BIRTH_0009XX, FieldType.String, DATE_OF_BIRTH_0009_local, 8);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.PAYEE_INDICATOR_0009AS, FieldType.String, 1);

                   IField PAYEE_INDICATOR_0009_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.PAYEE_INDICATOR_0009, FieldType.String, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.PAYEE_INDICATOR_0009XX, FieldType.String, PAYEE_INDICATOR_0009_local, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.ACCOUNT_FULL_LEGAL_TITL_0010AS, FieldType.String, 1);

                   IField ACCOUNT_FULL_LEGAL_TITLE_0010_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.ACCOUNT_FULL_LEGAL_TITLE_0010, FieldType.String, 100);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.ACCOUNT_FULL_LEGAL_TITL_0010XX, FieldType.String, ACCOUNT_FULL_LEGAL_TITLE_0010_local, 100);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.PRIMARY_SSN_0010AS, FieldType.String, 1);

                   IField PRIMARY_SSN_0010_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.PRIMARY_SSN_0010, FieldType.String, 9);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.PRIMARY_SSN_0010XX, FieldType.String, PRIMARY_SSN_0010_local, 9);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.SECOND_PAYEE_NAME_0010AS, FieldType.String, 1);

                   IField SECOND_PAYEE_NAME_0010_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.SECOND_PAYEE_NAME_0010, FieldType.String, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.SECOND_PAYEE_NAME_0010XX, FieldType.String, SECOND_PAYEE_NAME_0010_local, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.SECOND_PAYEE_SSN_0010AS, FieldType.String, 1);

                   IField SECOND_PAYEE_SSN_0010_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.SECOND_PAYEE_SSN_0010, FieldType.String, 9);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.SECOND_PAYEE_SSN_0010XX, FieldType.String, SECOND_PAYEE_SSN_0010_local, 9);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MSFIDM_INDICATOR_0010AS, FieldType.String, 1);

                   IField MSFIDM_INDICATOR_0010_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.MSFIDM_INDICATOR_0010, FieldType.String, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.MSFIDM_INDICATOR_0010XX, FieldType.String, MSFIDM_INDICATOR_0010_local, 1);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_NAME_0010AS, FieldType.String, 1);

                   IField INSTITUTION_NAME_0010_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_NAME_0010, FieldType.String, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.INSTITUTION_NAME_0010XX, FieldType.String, INSTITUTION_NAME_0010_local, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_STREET_ADDR_0011AS, FieldType.String, 1);

                   IField INSTITUTION_STREET_ADDRES_0011_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_STREET_ADDRES_0011, FieldType.String, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.INSTITUTION_STREET_ADDR_0011XX, FieldType.String, INSTITUTION_STREET_ADDRES_0011_local, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_CITY_0011AS, FieldType.String, 1);

                   IField INSTITUTION_CITY_0011_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_CITY_0011, FieldType.String, 30);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.INSTITUTION_CITY_0011XX, FieldType.String, INSTITUTION_CITY_0011_local, 30);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_STATE_0011AS, FieldType.String, 1);

                   IField INSTITUTION_STATE_0011_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_STATE_0011, FieldType.String, 2);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.INSTITUTION_STATE_0011XX, FieldType.String, INSTITUTION_STATE_0011_local, 2);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_ZIP_CODE_0011AS, FieldType.String, 1);

                   IField INSTITUTION_ZIP_CODE_0011_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_ZIP_CODE_0011, FieldType.String, 5);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.INSTITUTION_ZIP_CODE_0011XX, FieldType.String, INSTITUTION_ZIP_CODE_0011_local, 5);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_ZIP4_0011AS, FieldType.String, 1);

                   IField INSTITUTION_ZIP4_0011_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_ZIP4_0011, FieldType.String, 4);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.INSTITUTION_ZIP4_0011XX, FieldType.String, INSTITUTION_ZIP4_0011_local, 4);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_ZIP3_0011AS, FieldType.String, 1);

                   IField INSTITUTION_ZIP3_0011_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.INSTITUTION_ZIP3_0011, FieldType.String, 3);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.INSTITUTION_ZIP3_0011XX, FieldType.String, INSTITUTION_ZIP3_0011_local, 3);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.SECOND_INSTITUTION_NAME_0012AS, FieldType.String, 1);

                   IField SECOND_INSTITUTION_NAME_0012_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.SECOND_INSTITUTION_NAME_0012, FieldType.String, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.SECOND_INSTITUTION_NAME_0012XX, FieldType.String, SECOND_INSTITUTION_NAME_0012_local, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_TIN_0012AS, FieldType.String, 1);

                   IField TRANSMITTER_TIN_0012_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_TIN_0012, FieldType.String, 9);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.TRANSMITTER_TIN_0012XX, FieldType.String, TRANSMITTER_TIN_0012_local, 9);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_NAME_0012AS, FieldType.String, 1);

                   IField TRANSMITTER_NAME_0012_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_NAME_0012, FieldType.String, 71);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.TRANSMITTER_NAME_0012XX, FieldType.String, TRANSMITTER_NAME_0012_local, 71);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_STREET_ADDR_0013AS, FieldType.String, 1);

                   IField TRANSMITTER_STREET_ADDRES_0013_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_STREET_ADDRES_0013, FieldType.String, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.TRANSMITTER_STREET_ADDR_0013XX, FieldType.String, TRANSMITTER_STREET_ADDRES_0013_local, 40);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_CITY_0013AS, FieldType.String, 1);

                   IField TRANSMITTER_CITY_0013_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_CITY_0013, FieldType.String, 30);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.TRANSMITTER_CITY_0013XX, FieldType.String, TRANSMITTER_CITY_0013_local, 30);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_STATE_0013AS, FieldType.String, 1);

                   IField TRANSMITTER_STATE_0013_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_STATE_0013, FieldType.String, 2);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.TRANSMITTER_STATE_0013XX, FieldType.String, TRANSMITTER_STATE_0013_local, 2);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_ZIP_CODE_0013AS, FieldType.String, 1);

                   IField TRANSMITTER_ZIP_CODE_0013_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_ZIP_CODE_0013, FieldType.String, 5);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.TRANSMITTER_ZIP_CODE_0013XX, FieldType.String, TRANSMITTER_ZIP_CODE_0013_local, 5);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_ZIP4_0013AS, FieldType.String, 1);

                   IField TRANSMITTER_ZIP4_0013_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_ZIP4_0013, FieldType.String, 4);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.TRANSMITTER_ZIP4_0013XX, FieldType.String, TRANSMITTER_ZIP4_0013_local, 4);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_ZIP3_0013AS, FieldType.String, 1);

                   IField TRANSMITTER_ZIP3_0013_local = FINANCIAL_INSTITUTION_D_0005ET.CreateNewField(Names.TRANSMITTER_ZIP3_0013, FieldType.String, 3);
                   FINANCIAL_INSTITUTION_D_0005ET.CreateNewFieldRedefine(Names.TRANSMITTER_ZIP3_0013XX, FieldType.String, TRANSMITTER_ZIP3_0013_local, 3);
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(IEF_RUNTIME_PARM1, args, 0);
            SetPassedParm(IEF_RUNTIME_PARM2, args, 1);
            SetPassedParm(GLOBDATA, args, 2);
            SetPassedParm(IMPORT_RESTART_0001EV, args, 3);
            SetPassedParm(IMPORT_PASS_AREA_0002EV, args, 4);
            SetPassedParm(EXPORT_RETURNED_0003EV, args, 5);
            SetPassedParm(EXPORT_RETURNED_REC_TYP_0004EV, args, 6);
            SetPassedParm(EXPORT_RETURNED_0005EV, args, 7);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(IEF_RUNTIME_PARM1, args, 0);
            SetReturnParm(IEF_RUNTIME_PARM2, args, 1);
            SetReturnParm(GLOBDATA, args, 2);
            SetReturnParm(IMPORT_RESTART_0001EV, args, 3);
            SetReturnParm(IMPORT_PASS_AREA_0002EV, args, 4);
            SetReturnParm(EXPORT_RETURNED_0003EV, args, 5);
            SetReturnParm(EXPORT_RETURNED_REC_TYP_0004EV, args, 6);
            SetReturnParm(EXPORT_RETURNED_0005EV, args, 7);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXEE38 : EABBase
    {

        #region Public Constructors
        public SWEXEE38()
            : base()
        {
            this.ProgramName.SetValue("SWEXEE38");

            WS = new SWEXEE38_ws();
            FD = new SWEXEE38_fd(WS);
            LS = new SWEXEE38_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXEE38_ws WS;

        //==== File Data Class ========================================
        private SWEXEE38_fd FD;

        //==== Linkage Section Data Class ========================================
        private SWEXEE38_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING IEF-RUNTIME-PARM1 , IEF-RUNTIME-PARM2 , GLOBDATA , IMPORT-RESTART-0001EV , IMPORT-PASS-AREA-0002EV , EXPORT-RETURNED-0003EV , EXPORT-RETURNED-REC-TYP-0004EV , EXPORT-RETURNED-0005EV.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_1905529358(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_1905529358
        /// </summary>
        private void M_MAIN_1905529358(string returnMethod = "")
        {
            M_PARA_1905529358_INIT("M_PARA_1905529358_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-1905529358-INIT THRU PARA-1905529358-INIT-EXIT
            M_PARA_1905529358("M_PARA_1905529358_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-1905529358 THRU PARA-1905529358-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_1905529358
        /// </summary>
        private void M_PARA_1905529358(string returnMethod = "")
        {
            if (returnMethod != "" && returnMethod != "M_PARA_1905529358") { M_0000_MAINLINE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_MAINLINE
        /// </summary>
        /// <remarks>
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT: ********************
        /// </remarks>
        private void M_0000_MAINLINE(string returnMethod = "")
        {
            //COMMENT: ********************
            // EvaluateList !LS.FILE_INSTRUCTION_0002!                                                          //COBOL==> EVALUATE FILE-INSTRUCTION-0002
            if ((LS.FILE_INSTRUCTION_0002.IsEqualTo("OPEN")))                                                   //COBOL==> WHEN 'OPEN'
            {
                M_1000_OPEN_FILE(); if (Control.ExitProgram) { return; }                                              //COBOL==> PERFORM 1000-OPEN-FILE
            }                                                                                                //COBOL==> WHEN 'READ'
            else
            if ((LS.FILE_INSTRUCTION_0002.IsEqualTo("READ")))
            {
                M_2000_READ_FILE(); if (Control.ExitProgram) { return; }                                              //COBOL==> PERFORM 2000-READ-FILE
            }                                                                                                //COBOL==> WHEN 'POSITION'
            else
            if ((LS.FILE_INSTRUCTION_0002.IsEqualTo("POSITION")))
            {
                M_8000_POSITION_FILE(); if (Control.ExitProgram) { return; }                                          //COBOL==> PERFORM 8000-POSITION-FILE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("BI");                                                            //COBOL==> MOVE 'BI' TO TEXT-RETURN-CODE-0003
            }                                                                                                   //COBOL==> END-EVALUATE
            M_9999_FINISHED(CheckGotoReturn(returnMethod)); return;                                             //COBOL==> GO TO 9999-FINISHED.
        }
        /// <summary>
        /// Method M_1000_OPEN_FILE
        /// </summary>
        /// <remarks>
        ///COMMENT: ****************
        /// </remarks>
        private void M_1000_OPEN_FILE(string returnMethod = "")
        {
            //COMMENT: ****************
            FD.FIDM_INPUT_FILE.OpenFile(FileAccessMode.Read);                                                   //COBOL==> OPEN INPUT FIDM-INPUT-FILE
            if (WS.FIDM_FILE_STATUS.IsEqualTo("00"))                                                            //COBOL==> IF FIDM-FILE-STATUS = '00'
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("00");                                                            //COBOL==> MOVE '00' TO TEXT-RETURN-CODE-0003
            }                                                                                                   //COBOL==> ELSE
            else
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("PE");                                                            //COBOL==> MOVE 'PE' TO TEXT-RETURN-CODE-0003
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_1000_OPEN_FILE") { M_1000_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1000_EXIT
        /// </summary>
        private void M_1000_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1000_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1000_EXIT") { M_2000_READ_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_2000_READ_FILE
        /// </summary>
        /// <remarks>
        ///COMMENT: *****************
        /// </remarks>
        private void M_2000_READ_FILE(string returnMethod = "")
        {
            //COMMENT: *****************
            WS.HOLD_RECORD.SetValue(FD.FIDM_INPUT_FILE.ReadLineInto());                                         //COBOL==> READ FIDM-INPUT-FILE INTO HOLD-RECORD.
            LS.TEXT_1_0004.SetValue(WS.HOLD_RECORD_TYPE_IN);                                                    //COBOL==> MOVE HOLD-RECORD-TYPE-IN TO TEXT-1-0004.
                                                                                                                // EvaluateList !WS.FIDM_FILE_STATUS!                                                               //COBOL==> EVALUATE FIDM-FILE-STATUS
            if ((WS.FIDM_FILE_STATUS.IsEqualTo("00")))                                                          //COBOL==> WHEN '00'
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("00");                                                            //COBOL==> MOVE '00' TO TEXT-RETURN-CODE-0003
                if (WS.HOLD_RECORD_TYPE_IN.IsEqualTo("A"))                                                          //COBOL==> IF HOLD-RECORD-TYPE-IN = 'A'
                {
                    M_3000_MOVE_A("M_3000_EXIT"); if (Control.ExitProgram) { return; }                                    //COBOL==> PERFORM 3000-MOVE-A THRU 3000-EXIT
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    if (WS.HOLD_RECORD_TYPE_IN.IsEqualTo("B"))                                                          //COBOL==> IF HOLD-RECORD-TYPE-IN = 'B'
                    {
                        M_4000_MOVE_B("M_4000_EXIT"); if (Control.ExitProgram) { return; }                                    //COBOL==> PERFORM 4000-MOVE-B THRU 4000-EXIT
                    }                                                                                                   //COBOL==> ELSE
                    else
                    {
                        LS.EXPORT_RETURNED_0005EV.ResetToInitialValue();                                                    //COBOL==> INITIALIZE EXPORT-RETURNED-0005EV
                        LS.ACCOUNT_BALANCE_0008.SetValueWithZeroes();                                                       //COBOL==> MOVE ZERO TO ACCOUNT-BALANCE-0008
                        LS.DATE_OF_BIRTH_0009.SetValue("00000000");                                                         //COBOL==> MOVE '00000000' TO DATE-OF-BIRTH-0009
                    }                                                                                                   //COBOL==> END-IF
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                //COBOL==> WHEN '10'
            else
            if ((WS.FIDM_FILE_STATUS.IsEqualTo("10")))
            {
                LS.ACCOUNT_BALANCE_0008.SetValueWithZeroes();                                                       //COBOL==> MOVE ZERO TO ACCOUNT-BALANCE-0008
                LS.DATE_OF_BIRTH_0009.SetValue("00000000");                                                         //COBOL==> MOVE '00000000' TO DATE-OF-BIRTH-0009
                LS.TEXT_RETURN_CODE_0003.SetValue("EF");                                                            //COBOL==> MOVE 'EF' TO TEXT-RETURN-CODE-0003
                M_9000_CLOSE_FILE(); if (Control.ExitProgram) { return; }                                             //COBOL==> PERFORM 9000-CLOSE-FILE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                LS.ACCOUNT_BALANCE_0008.SetValueWithZeroes();                                                       //COBOL==> MOVE ZERO TO ACCOUNT-BALANCE-0008
                LS.DATE_OF_BIRTH_0009.SetValue("00000000");                                                         //COBOL==> MOVE '00000000' TO DATE-OF-BIRTH-0009
                LS.TEXT_RETURN_CODE_0003.SetValue("BR");                                                            //COBOL==> MOVE 'BR' TO TEXT-RETURN-CODE-0003
                M_9000_CLOSE_FILE(); if (Control.ExitProgram) { return; }                                             //COBOL==> PERFORM 9000-CLOSE-FILE
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_2000_READ_FILE") { M_2000_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_2000_EXIT
        /// </summary>
        private void M_2000_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_2000_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_2000_EXIT") { M_3000_MOVE_A(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_3000_MOVE_A
        /// </summary>
        /// <remarks>
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        /// </remarks>
        private void M_3000_MOVE_A(string returnMethod = "")
        {
            WS.HOLD_TYPE_A.SetValue(WS.HOLD_RECORD);                                                            //COBOL==> MOVE HOLD-RECORD TO HOLD-TYPE-A.
            LS.TEXT_1_0004.SetValue(WS.HA_TYPE);                                                                //COBOL==> MOVE HA-TYPE TO TEXT-1-0004.
            LS.INSTITUTION_TIN_0005.SetValue(WS.HA_INST_TIN);                                                   //COBOL==> MOVE HA-INST-TIN TO INSTITUTION-TIN-0005.
            LS.MATCH_RUN_DATE_0006.SetValue(WS.HA_DATE);                                                        //COBOL==> MOVE HA-DATE TO MATCH-RUN-DATE-0006.
                                                                                                                //COMMENT: *   05 HA-TEST-COR-IND      PIC X     VALUE SPACES.
                                                                                                                //COMMENT: *   05 HA-SERV-BUR-IND      PIC X     VALUE SPACES.
                                                                                                                //COMMENT: *   05 HA-MAG-TAPE-IND      PIC XX    VALUE SPACES.
                                                                                                                //COMMENT: *   05 HA-FRN-CORP-IND      PIC X     VALUE SPACES.
            LS.INSTITUTION_NAME_0010.SetValue(WS.HA_INST_NAME);                                                 //COBOL==> MOVE HA-INST-NAME TO INSTITUTION-NAME-0010.
            LS.SECOND_INSTITUTION_NAME_0012.SetValue(WS.HA_INST_NAME_SEC);                                      //COBOL==> MOVE HA-INST-NAME-SEC TO SECOND-INSTITUTION-NAME-0012.
                                                                                                                //COMMENT:     05 HA-TRN-AGT-ID        PIC X     VALUE SPACES.
            LS.INSTITUTION_STREET_ADDRES_0011.SetValue(WS.HA_INST_ADDRESS);                                     //COBOL==> MOVE HA-INST-ADDRESS TO INSTITUTION-STREET-ADDRES-0011
            LS.INSTITUTION_CITY_0011.SetValue(WS.HA_INST_CITY);                                                 //COBOL==> MOVE HA-INST-CITY TO INSTITUTION-CITY-0011.
            LS.INSTITUTION_STATE_0011.SetValue(WS.HA_INST_STATE);                                               //COBOL==> MOVE HA-INST-STATE TO INSTITUTION-STATE-0011.
            LS.INSTITUTION_ZIP_CODE_0011.SetValue(WS.HA_INST_ZIP_5);                                            //COBOL==> MOVE HA-INST-ZIP-5 TO INSTITUTION-ZIP-CODE-0011
            LS.INSTITUTION_ZIP4_0011.SetValue(WS.HA_INST_ZIP_4);                                                //COBOL==> MOVE HA-INST-ZIP-4 TO INSTITUTION-ZIP4-0011
            LS.TRANSMITTER_TIN_0012.SetValue(WS.HA_RPT_AGT_TIN);                                                //COBOL==> MOVE HA-RPT-AGT-TIN TO TRANSMITTER-TIN-0012.
            LS.TRANSMITTER_NAME_0012.SetValue(WS.HA_RPT_AGT_NAME);                                              //COBOL==> MOVE HA-RPT-AGT-NAME TO TRANSMITTER-NAME-0012.
            LS.TRANSMITTER_STREET_ADDRES_0013.SetValue(WS.HA_TRN_ADDRESS);                                      //COBOL==> MOVE HA-TRN-ADDRESS TO TRANSMITTER-STREET-ADDRES-0013.
            LS.TRANSMITTER_CITY_0013.SetValue(WS.HA_TRN_CITY);                                                  //COBOL==> MOVE HA-TRN-CITY TO TRANSMITTER-CITY-0013.
            LS.TRANSMITTER_STATE_0013.SetValue(WS.HA_TRN_STATE);                                                //COBOL==> MOVE HA-TRN-STATE TO TRANSMITTER-STATE-0013.
            LS.TRANSMITTER_ZIP_CODE_0013.SetValue(WS.HA_TRN_ZIP_5);                                             //COBOL==> MOVE HA-TRN-ZIP-5 TO TRANSMITTER-ZIP-CODE-0013.
            LS.TRANSMITTER_ZIP4_0013.SetValue(WS.HA_TRN_ZIP_4);                                                 //COBOL==> MOVE HA-TRN-ZIP-4 TO TRANSMITTER-ZIP4-0013.
            LS.MATCH_FLAG_0008.SetValue(WS.HA_DATA_MATCH_IND);                                                  //COBOL==> MOVE HA-DATA-MATCH-IND TO MATCH-FLAG-0008.
            WS.WS_CHECK_MM.SetValue(WS.HA_MONTH);                                                               //COBOL==> MOVE HA-MONTH TO WS-CHECK-MM.
            WS.WS_CHECK_DD.SetValue("01");                                                                      //COBOL==> MOVE '01' TO WS-CHECK-DD.
            WS.WS_CHECK_YY.SetValue(WS.HA_YEAR_YY);                                                             //COBOL==> MOVE HA-YEAR-YY TO WS-CHECK-YY.
            WS.WS_CHECK_CC.SetValue(WS.HA_YEAR_CC);                                                             //COBOL==> MOVE HA-YEAR-CC TO WS-CHECK-CC.
            WS.WS_BAD_DATE_FLAG.SetValue("N");                                                                  //COBOL==> MOVE 'N' TO WS-BAD-DATE-FLAG.
            M_6000_VERIFY_DATE("M_6000_EXIT"); if (Control.ExitProgram) { return; }                               //COBOL==> PERFORM 6000-VERIFY-DATE THRU 6000-EXIT.
            if (WS.WS_BAD_DATE_FLAG.IsEqualTo("B"))                                                             //COBOL==> IF WS-BAD-DATE-FLAG = 'B'
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("D1");                                                            //COBOL==> MOVE 'D1' TO TEXT-RETURN-CODE-0003
                M_PARA_1905529358_EXIT(CheckGotoReturn(returnMethod)); return;                                      //COBOL==> GO TO PARA-1905529358-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_3000_MOVE_A") { M_3000_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_3000_EXIT
        /// </summary>
        private void M_3000_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_3000_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_3000_EXIT") { M_4000_MOVE_B(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_4000_MOVE_B
        /// </summary>
        private void M_4000_MOVE_B(string returnMethod = "")
        {
            WS.HOLD_TYPE_B.SetValue(WS.HOLD_RECORD);                                                            //COBOL==> MOVE HOLD-RECORD TO HOLD-TYPE-B.
            LS.TEXT_1_0004.SetValue(WS.HB_TYPE);                                                                //COBOL==> MOVE HB-TYPE TO TEXT-1-0004.
                                                                                                                //COMMENT:       TO CSE-PERSON-NUMBER-0005.
            LS.MATCH_RUN_DATE_0006.SetValue(WS.HB_DATE);                                                        //COBOL==> MOVE HB-DATE TO MATCH-RUN-DATE-0006.
                                                                                                                //COMMENT:     MOVE HB-PAYEE-NAME-CNTL
            LS.PRIMARY_SSN_0010.SetValue(WS.HB_SSN);                                                            //COBOL==> MOVE HB-SSN TO PRIMARY-SSN-0010.
            LS.MATCHED_PAYEE_ACCOUNT_NUM_0006.SetValue(WS.HB_PAYEE_ACT);                                        //COBOL==> MOVE HB-PAYEE-ACT TO MATCHED-PAYEE-ACCOUNT-NUM-0006.
            LS.ACCOUNT_FULL_LEGAL_TITLE_0010.SetValue(WS.HB_ACT_LEGAL_TITLE);                                   //COBOL==> MOVE HB-ACT-LEGAL-TITLE TO ACCOUNT-FULL-LEGAL-TITLE-0010.
            LS.PAYEE_FOREIGN_COUNTRY_IND_0008.SetValue(WS.HB_FRN_CNTRY_IND);                                    //COBOL==> MOVE HB-FRN-CNTRY-IND TO PAYEE-FOREIGN-COUNTRY-IND-0008.
            LS.MATCHED_PAYEE_NAME_0006.SetValue(WS.HB_PAYEE_NAME);                                              //COBOL==> MOVE HB-PAYEE-NAME TO MATCHED-PAYEE-NAME-0006.
            LS.SECOND_PAYEE_NAME_0010.SetValue(WS.HB_PAYEE_NAME_SEC);                                           //COBOL==> MOVE HB-PAYEE-NAME-SEC TO SECOND-PAYEE-NAME-0010.
            LS.MATCHED_PAYEE_STREET_ADDR_0007.SetValue(WS.HB_PAYEE_ADDRESS);                                    //COBOL==> MOVE HB-PAYEE-ADDRESS TO MATCHED-PAYEE-STREET-ADDR-0007.
            LS.MATCHED_PAYEE_CITY_0007.SetValue(WS.HB_PAYEE_CITY);                                              //COBOL==> MOVE HB-PAYEE-CITY TO MATCHED-PAYEE-CITY-0007.
            LS.MATCHED_PAYEE_STATE_0007.SetValue(WS.HB_PAYEE_STATE);                                            //COBOL==> MOVE HB-PAYEE-STATE TO MATCHED-PAYEE-STATE-0007.
            LS.MATCHED_PAYEE_ZIP_CODE_0007.SetValue(WS.HB_PAYEE_ZIP_5);                                         //COBOL==> MOVE HB-PAYEE-ZIP-5 TO MATCHED-PAYEE-ZIP-CODE-0007.
            LS.MATCHED_PAYEE_ZIP4_0007.SetValue(WS.HB_PAYEE_ZIP_4);                                             //COBOL==> MOVE HB-PAYEE-ZIP-4 TO MATCHED-PAYEE-ZIP4-0007.
            LS.ACCOUNT_BALANCE_0008.SetValue(WS.HB_ACCOUNT_BALANCE);                                            //COBOL==> MOVE HB-ACCOUNT-BALANCE TO ACCOUNT-BALANCE-0008
            LS.TRUST_FUND_INDICATOR_0008.SetValue(WS.HB_TRUST_FUND_IND);                                        //COBOL==> MOVE HB-TRUST-FUND-IND TO TRUST-FUND-INDICATOR-0008.
            LS.ACCOUNT_BALANCE_INDICATOR_0009.SetValue(WS.HB_ACCT_BAL_IND);                                     //COBOL==> MOVE HB-ACCT-BAL-IND TO ACCOUNT-BALANCE-INDICATOR-0009.
                                                                                                                //COMMENT:     MOVE HB-ACCT-UPDATE-IND
            LS.DATE_OF_BIRTH_0009.SetValue(WS.HB_DATE_OF_BIRTH);                                                //COBOL==> MOVE HB-DATE-OF-BIRTH TO DATE-OF-BIRTH-0009.
            LS.ACCOUNT_TYPE_0008.SetValue(WS.HB_ACCT_TYPE);                                                     //COBOL==> MOVE HB-ACCT-TYPE TO ACCOUNT-TYPE-0008.
            LS.SECOND_PAYEE_SSN_0010.SetValue(WS.HB_PAYEE_SSN_SEC);                                             //COBOL==> MOVE HB-PAYEE-SSN-SEC TO SECOND-PAYEE-SSN-0010.
                                                                                                                //COMMENT:     MOVE FIDM-MSFI-PAYEE-IND
                                                                                                                //COMMENT:       TO PAYEE-INDICATOR-0007.
                                                                                                                //COMMENT:     MOVE FIDM-MSFI-PRIMARY-SSN
                                                                                                                //COMMENT:       TO PRIMARY-SSN-0010.
            if (LS.DATE_OF_BIRTH_0009.IsEqualTo("        "))                                                    //COBOL==> IF DATE-OF-BIRTH-0009 = '        '
            {
                LS.DATE_OF_BIRTH_0009.SetValue("00000000");                                                         //COBOL==> MOVE '00000000' TO DATE-OF-BIRTH-0009
            }                                                                                                   //COBOL==> END-IF.
            if (LS.DATE_OF_BIRTH_0009.IsEqualTo("00000000"))                                                    //COBOL==> IF DATE-OF-BIRTH-0009 = '00000000'
            {
                M_4000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 4000-EXIT
            }                                                                                                   //COBOL==> END-IF.
            WS.WS_CHECK_CC.SetValue(WS.HB_DOB_CC);                                                              //COBOL==> MOVE HB-DOB-CC TO WS-CHECK-CC.
            WS.WS_CHECK_YY.SetValue(WS.HB_DOB_YY);                                                              //COBOL==> MOVE HB-DOB-YY TO WS-CHECK-YY.
            WS.WS_CHECK_MM.SetValue(WS.HB_DOB_MM);                                                              //COBOL==> MOVE HB-DOB-MM TO WS-CHECK-MM.
            WS.WS_CHECK_DD.SetValue(WS.HB_DOB_DD);                                                              //COBOL==> MOVE HB-DOB-DD TO WS-CHECK-DD.
            WS.WS_BAD_DATE_FLAG.SetValue("N");                                                                  //COBOL==> MOVE 'N' TO WS-BAD-DATE-FLAG
            M_6000_VERIFY_DATE("M_6000_EXIT"); if (Control.ExitProgram) { return; }                               //COBOL==> PERFORM 6000-VERIFY-DATE THRU 6000-EXIT
            if (WS.WS_BAD_DATE_FLAG.IsEqualTo("B"))                                                             //COBOL==> IF WS-BAD-DATE-FLAG = 'B'
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("D2");                                                            //COBOL==> MOVE 'D2' TO TEXT-RETURN-CODE-0003
                M_PARA_1905529358_EXIT(CheckGotoReturn(returnMethod)); return;                                      //COBOL==> GO TO PARA-1905529358-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_4000_MOVE_B") { M_4000_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_4000_EXIT
        /// </summary>
        private void M_4000_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_4000_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_4000_EXIT") { M_6000_VERIFY_DATE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_6000_VERIFY_DATE
        /// </summary>
        /// <remarks>
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        /// </remarks>
        private void M_6000_VERIFY_DATE(string returnMethod = "")
        {
            if ((WS.WS_CHECK_C1.IsLessThan("1"))
             || (WS.WS_CHECK_C1.IsGreaterThan("2")))        //COBOL==> IF WS-CHECK-C1 < '1' OR WS-CHECK-C1 > '2'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if ((WS.WS_CHECK_C2.IsLessThan("0"))
             || (WS.WS_CHECK_C2.IsGreaterThan("9")))        //COBOL==> IF WS-CHECK-C2 < '0' OR WS-CHECK-C2 > '9'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if ((WS.WS_CHECK_CC.IsLessThan("19"))
             || (WS.WS_CHECK_CC.IsGreaterThan("20")))      //COBOL==> IF WS-CHECK-CC < '19' OR WS-CHECK-CC > '20'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if ((WS.WS_CHECK_Y1.IsLessThan("0"))
             || (WS.WS_CHECK_Y1.IsGreaterThan("9")))        //COBOL==> IF WS-CHECK-Y1 < '0' OR WS-CHECK-Y1 > '9'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if ((WS.WS_CHECK_Y2.IsLessThan("0"))
             || (WS.WS_CHECK_Y2.IsGreaterThan("9")))        //COBOL==> IF WS-CHECK-Y2 < '0' OR WS-CHECK-Y2 > '9'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if ((WS.WS_CHECK_YY.IsLessThan("00"))
             || (WS.WS_CHECK_YY.IsGreaterThan("99")))      //COBOL==> IF WS-CHECK-YY < '00' OR WS-CHECK-YY > '99'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if ((WS.WS_CHECK_M1.IsLessThan("0"))
             || (WS.WS_CHECK_M1.IsGreaterThan("1")))        //COBOL==> IF WS-CHECK-M1 < '0' OR WS-CHECK-M1 > '1'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if ((WS.WS_CHECK_M2.IsLessThan("0"))
             || (WS.WS_CHECK_M2.IsGreaterThan("9")))        //COBOL==> IF WS-CHECK-M2 < '0' OR WS-CHECK-M2 > '9'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if ((WS.WS_CHECK_MM.IsLessThan("01"))
             || (WS.WS_CHECK_MM.IsGreaterThan("12")))      //COBOL==> IF WS-CHECK-MM < '01' OR WS-CHECK-MM > '12'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if ((WS.WS_CHECK_D1.IsLessThan("0"))
             || (WS.WS_CHECK_D1.IsGreaterThan("3")))        //COBOL==> IF WS-CHECK-D1 < '0' OR WS-CHECK-D1 > '3'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if ((WS.WS_CHECK_D2.IsLessThan("0"))
             || (WS.WS_CHECK_D2.IsGreaterThan("9")))        //COBOL==> IF WS-CHECK-D2 < '0' OR WS-CHECK-D2 > '9'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if ((WS.WS_CHECK_DD.IsLessThan("01"))
             || (WS.WS_CHECK_DD.IsGreaterThan("31")))      //COBOL==> IF WS-CHECK-DD < '01' OR WS-CHECK-DD > '31'
            {
                WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
            }
            if (WS.WS_CHECK_MM.IsEqualTo("02"))                                                                 //COBOL==> IF WS-CHECK-MM = '02'
            {
                if ((WS.WS_CHECK_DD.IsLessThan("01"))
             || (WS.WS_CHECK_DD.IsGreaterThan("29")))      //COBOL==> IF WS-CHECK-DD < '01' OR WS-CHECK-DD > '29'
                {
                    WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                    M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
                }
            }
            if ((((WS.WS_CHECK_MM.IsEqualTo("04"))
             || (WS.WS_CHECK_MM.IsEqualTo("06")))
             || (WS.WS_CHECK_MM.IsEqualTo("09")))
             || (WS.WS_CHECK_MM.IsEqualTo("11")))  //COBOL==> IF WS-CHECK-MM = '04' OR '06' OR '09' OR '11'
            {
                if ((WS.WS_CHECK_DD.IsLessThan("01"))
             || (WS.WS_CHECK_DD.IsGreaterThan("30")))      //COBOL==> IF WS-CHECK-DD < '01' OR WS-CHECK-DD > '30'
                {
                    WS.WS_BAD_DATE_FLAG.SetValue("B");                                                                  //COBOL==> MOVE 'B' TO WS-BAD-DATE-FLAG
                    M_6000_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 6000-EXIT.
                }
            }
            if (returnMethod != "" && returnMethod != "M_6000_VERIFY_DATE") { M_6000_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_6000_EXIT
        /// </summary>
        private void M_6000_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_6000_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_6000_EXIT") { M_8000_POSITION_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8000_POSITION_FILE
        /// </summary>
        private void M_8000_POSITION_FILE(string returnMethod = "")
        {
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            WS.FIDM_FILE_STATUS.SetValue("00");                                                                 //COBOL==> MOVE '00' TO FIDM-FILE-STATUS.
            M_1000_OPEN_FILE("M_1000_EXIT"); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM 1000-OPEN-FILE THRU 1000-EXIT.
            while (!((!(WS.FIDM_FILE_STATUS.IsEqualTo("00"))) || (((LS.INSTITUTION_TIN_0001.IsEqualTo(WS.HA_INST_TIN)) && (LS.MATCH_RUN_DATE_0001.IsEqualTo(WS.HA_DATE))) && (LS.INSTITUTION_NAME_0001.IsEqualTo(WS.HA_INST_NAME)))))  //COBOL==> PERFORM 8100-POSITION-FILE THRU 8100-EXIT UNTIL FIDM-FILE-STATUS NOT = '00' OR ( INSTITUTION-TIN-0001 = HA-INST-TIN AND MATCH-RUN-DATE-0001 = HA-DATE AND INSTITUTION-NAME-0001 = HA-INST-NAME ) .
            {
                M_8100_POSITION_FILE("M_8100_EXIT"); if (Control.ExitProgram) { return; }
            }
            if (WS.FIDM_FILE_STATUS.IsEqualTo("00"))                                                            //COBOL==> IF FIDM-FILE-STATUS = '00'
            {
                M_3000_MOVE_A("M_3000_EXIT"); if (Control.ExitProgram) { return; }                                    //COBOL==> PERFORM 3000-MOVE-A THRU 3000-EXIT.
            }
            if (returnMethod != "" && returnMethod != "M_8000_POSITION_FILE") { M_8000_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8000_EXIT
        /// </summary>
        private void M_8000_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_8000_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_8000_EXIT") { M_8100_POSITION_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8100_POSITION_FILE
        /// </summary>
        /// <remarks>
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT: *****************
        /// </remarks>
        private void M_8100_POSITION_FILE(string returnMethod = "")
        {
            //COMMENT: *****************
            WS.HOLD_RECORD.SetValue(FD.FIDM_INPUT_FILE.ReadLineInto());                                         //COBOL==> READ FIDM-INPUT-FILE INTO HOLD-RECORD.
            LS.TEXT_1_0004.SetValue(WS.HOLD_RECORD_TYPE_IN);                                                    //COBOL==> MOVE HOLD-RECORD-TYPE-IN TO TEXT-1-0004.
                                                                                                                // EvaluateList !WS.FIDM_FILE_STATUS!                                                               //COBOL==> EVALUATE FIDM-FILE-STATUS
            if ((WS.FIDM_FILE_STATUS.IsEqualTo("00")))                                                          //COBOL==> WHEN '00'
            {
                if (FD.FIDM_RECORD_TYPE_IN.IsEqualTo("A"))                                                          //COBOL==> IF FIDM-RECORD-TYPE-IN = 'A'
                {
                    WS.HOLD_TYPE_A.SetValue(WS.HOLD_RECORD);                                                            //COBOL==> MOVE HOLD-RECORD TO HOLD-TYPE-A
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                //COBOL==> WHEN '10'
            else
            if ((WS.FIDM_FILE_STATUS.IsEqualTo("10")))
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("EF");                                                            //COBOL==> MOVE 'EF' TO TEXT-RETURN-CODE-0003
                M_9000_CLOSE_FILE(); if (Control.ExitProgram) { return; }                                             //COBOL==> PERFORM 9000-CLOSE-FILE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                LS.TEXT_RETURN_CODE_0003.SetValue("BR");                                                            //COBOL==> MOVE 'BR' TO TEXT-RETURN-CODE-0003
                M_9000_CLOSE_FILE(); if (Control.ExitProgram) { return; }                                             //COBOL==> PERFORM 9000-CLOSE-FILE
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_8100_POSITION_FILE") { M_8100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_8100_EXIT
        /// </summary>
        private void M_8100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_8100_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_8100_EXIT") { M_9000_CLOSE_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_9000_CLOSE_FILE
        /// </summary>
        private void M_9000_CLOSE_FILE(string returnMethod = "")
        {
            FD.FIDM_INPUT_FILE.CloseFile();                                                                     //COBOL==> CLOSE FIDM-INPUT-FILE.
            if (returnMethod != "" && returnMethod != "M_9000_CLOSE_FILE") { M_9999_FINISHED(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_9999_FINISHED
        /// </summary>
        private void M_9999_FINISHED(string returnMethod = "")
        {
            if (returnMethod == "M_9999_FINISHED") { return; }                                                  //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_9999_FINISHED") { M_PARA_1905529358_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_1905529358_EXIT
        /// </summary>
        private void M_PARA_1905529358_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_1905529358_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_1905529358_EXIT") { M_PARA_1905529358_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_1905529358_INIT
        /// </summary>
        private void M_PARA_1905529358_INIT(string returnMethod = "")
        {
            LS.EXPORT_RETURNED_0003EV.ResetToInitialValue();                                                    //COBOL==> INITIALIZE EXPORT-RETURNED-0003EV
            LS.EXPORT_RETURNED_REC_TYP_0004EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-RETURNED-REC-TYP-0004EV
            LS.EXPORT_RETURNED_0005EV.ResetToInitialValue();                                                    //COBOL==> INITIALIZE EXPORT-RETURNED-0005EV .
            if (returnMethod != "" && returnMethod != "M_PARA_1905529358_INIT") { M_PARA_1905529358_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_1905529358_INIT_EXIT
        /// </summary>
        private void M_PARA_1905529358_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_1905529358_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
