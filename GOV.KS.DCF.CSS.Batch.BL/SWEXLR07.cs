#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2022
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2022-03-02 04:53:36 PM
   **        *   FROM COBOL PGM   :  SWEXLR07
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   ***************************************************************
                       SOURCE CODE GENERATED BY
                             CA GEN 8.5
      COPYRIGHT (C) 2016 CA TECHNOLOGIES. ALL RIGHTS RESERVED.
       NAME: LE_B589_READ_FILE                DATE: 2016/03/29
       TARGET OS:   MVS                       TIME: 09:11:21
       TARGET DBMS: DB2                       USER: SWSRGAV
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
       HIGH PERFORMANCE VIEW PASSING SELECTED
       LAST-STATEMENT-NUM EXECUTION SELECTED
       ENFORCE DEFAULT VALUES WITH DBMS NOT SELECTED
       INIT UNSPECIFIED OPTIONAL FIELDS TO NULL NOT SELECTED
       DYNAMIC LINK (Z/OS) USED BUS SYS DEFAULT OF "Yes"
   ***************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.IO.Common;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
using GOV.KS.DCF.CSS.Common.BL;
using MDSY.Framework.IO.Common;
#endregion

namespace GOV.KS.DCF.CSS.Batch.BL
{
    #region File Section Class
    internal class SWEXLR07_fd : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string FileSection = "SWEXLR07_fd_FileSection";
            internal const string EMPLIN = "EMPLIN";
            internal const string EMPLIN_RECORD = "EMPLIN_RECORD";
        }
        #endregion

        #region Direct-access element properties
        public IFileLink EMPLIN { get; set; }
        public IField EMPLIN_RECORD { get { return GetElementByName<IField>(Names.EMPLIN_RECORD); } }


        internal SWEXLR07_ws WS;
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the FileSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.EMPLIN_RECORD, FieldType.String, 573);

        }

        protected override string GetRecordName()
        {
            return Names.FileSection;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            IFileHandler FileHandler = InversionContainer.GetImplementingObject<IFileHandler>();

            EMPLIN = FileHandler.GetFile("EMPLIN");
            EMPLIN.StatusField = WS.EMPLIN_STAT;
            EMPLIN.AssociatedBuffer = EMPLIN_RECORD;
        }
        #endregion

        #region Constructors
        public SWEXLR07_fd(SWEXLR07_ws ws)
            : base()
        {
            this.WS = ws;
            Initialize();

        }
        #endregion
    }
    #endregion File Section Class
    #region Working Storage Class
    internal class SWEXLR07_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXLR07_ws_WorkingStorage";
            internal const string EMPLIN_STAT = "EMPLIN_STAT";
            internal const string WS_DATE_AREA = "WS_DATE_AREA";
            internal const string WS_TEST_DATE = "WS_TEST_DATE";
            internal const string WS_DATE_RETURN_CODE = "WS_DATE_RETURN_CODE";
            internal const string WS_DATETIME_AREA = "WS_DATETIME_AREA";
            internal const string HD_CRTIMESTAMP1 = "HD_CRTIMESTAMP1";
            internal const string HD_TIMESTAMP1 = "HD_TIMESTAMP1";
            internal const string HD_FILLER_ZERO_YEAR = "HD_FILLER_ZERO_YEAR";
            internal const string HD_FILLER_ZERO_MONTH = "HD_FILLER_ZERO_MONTH";
            internal const string HD_FILLER_ZERO_DAY = "HD_FILLER_ZERO_DAY";
            internal const string HD_FILLER_ZERO_TIME1 = "HD_FILLER_ZERO_TIME1";
            internal const string HD_TIMESTAMP1_XX = "HD_TIMESTAMP1_XX";
            internal const string WS_TEXT_DATE = "WS_TEXT_DATE";
            internal const string WS_YEAR = "WS_YEAR";
            internal const string WS_MONTH = "WS_MONTH";
            internal const string WS_DAY = "WS_DAY";
            internal const string WS_DATE = "WS_DATE";
            internal const string WS_YEAR1 = "WS_YEAR1";
            internal const string WS_MONTH1 = "WS_MONTH1";
            internal const string WS_DAY1 = "WS_DAY1";
            internal const string WS_MISC = "WS_MISC";
            internal const string WS_ENTRY = "WS_ENTRY";
            internal const string WS_RECORD_COUNT = "WS_RECORD_COUNT";
            internal const string WS_RECORD_AMOUNT = "WS_RECORD_AMOUNT";
            internal const string A_DASH = "A_DASH";
            internal const string A_PLUS = "A_PLUS";
            internal const string WS_HEADING = "WS_HEADING";
            internal const string DOC_CODE = "DOC_CODE";
            internal const string CONTROL_NUM = "CONTROL_NUM";
            internal const string ST_FIPS_CD = "ST_FIPS_CD";
            internal const string EIN = "EIN";
            internal const string PRIMARY_EIN = "PRIMARY_EIN";
            internal const string CREATE_DATE = "CREATE_DATE";
            internal const string CREATE_TIME = "CREATE_TIME";
            internal const string ERROR_FIELD = "ERROR_FIELD";
            internal const string WS_TRAILER = "WS_TRAILER";
            internal const string DOC_CODE_T = "DOC_CODE_T";
            internal const string CONTROL_NUM_T = "CONTROL_NUM_T";
            internal const string BATCH_COUNT = "BATCH_COUNT";
            internal const string RECORD_COUNT = "RECORD_COUNT";
            internal const string EMPLOYER_SENT_COUNT = "EMPLOYER_SENT_COUNT";
            internal const string STATE_SENT_COUNT = "STATE_SENT_COUNT";
            internal const string ERROR_FIELD_T = "ERROR_FIELD_T";
            internal const string WS_EMPLIN = "WS_EMPLIN";
            internal const string DOC_CODE_EMP = "DOC_CODE_EMP";
            internal const string ACTION_CODE = "ACTION_CODE";
            internal const string CASE_NUM = "CASE_NUM";
            internal const string EIN_EMP = "EIN_EMP";
            internal const string EMPLOYEE_LAST_NAME = "EMPLOYEE_LAST_NAME";
            internal const string EMPLOYEE_FIRST_NAME = "EMPLOYEE_FIRST_NAME";
            internal const string EMPLOYEE_MIDDLE_NAME = "EMPLOYEE_MIDDLE_NAME";
            internal const string EMPLOYEE_SUFFIX = "EMPLOYEE_SUFFIX";
            internal const string EMPLOYEE_SSN = "EMPLOYEE_SSN";
            internal const string DOC_TRACK_NUM = "DOC_TRACK_NUM";
            internal const string ORDER_ID = "ORDER_ID";
            internal const string REC_DISPOST_STATUS_CD = "REC_DISPOST_STATUS_CD";
            internal const string DISPOSITION_REASON_CD = "DISPOSITION_REASON_CD";
            internal const string TERMINATION_DATE = "TERMINATION_DATE";
            internal const string NCP_LAST_ADDR_LINE1 = "NCP_LAST_ADDR_LINE1";
            internal const string NCP_LAST_ADDR_LINE2 = "NCP_LAST_ADDR_LINE2";
            internal const string NCP_LAST_ADDR_CITY = "NCP_LAST_ADDR_CITY";
            internal const string NCP_LAST_ADDR_ST = "NCP_LAST_ADDR_ST";
            internal const string NCP_LAST_ADDR_ZIP = "NCP_LAST_ADDR_ZIP";
            internal const string NCP_LAST_ADDR_ZIP4 = "NCP_LAST_ADDR_ZIP4";
            internal const string FINAL_PAYMENT_DT = "FINAL_PAYMENT_DT";
            internal const string FINAL_PAYMENT_AMT = "FINAL_PAYMENT_AMT";
            internal const string NEW_EMPLOYER_NAME = "NEW_EMPLOYER_NAME";
            internal const string NEW_EMPLOYER_ADD_LINE1 = "NEW_EMPLOYER_ADD_LINE1";
            internal const string NEW_EMPLOYER_ADD_LINE2 = "NEW_EMPLOYER_ADD_LINE2";
            internal const string NEW_EMPLOYER_ADD_CITY = "NEW_EMPLOYER_ADD_CITY";
            internal const string NEW_EMPLOYER_ADD_STATE = "NEW_EMPLOYER_ADD_STATE";
            internal const string NEW_EMPLOYER_ADD_ZIP_CD = "NEW_EMPLOYER_ADD_ZIP_CD";
            internal const string NEW_EMPLOYER_ADD_ZIP4 = "NEW_EMPLOYER_ADD_ZIP4";
            internal const string PAYMENT_LUMP_SUM_DT = "PAYMENT_LUMP_SUM_DT";
            internal const string PAYMENT_LUMP_SUM_AMT = "PAYMENT_LUMP_SUM_AMT";
            internal const string PAYMENT_LUMP_SUM_TYPE = "PAYMENT_LUMP_SUM_TYPE";
            internal const string NCP_LAST_NONE_PHONE = "NCP_LAST_NONE_PHONE";
            internal const string NCP_LAST_AREA_CODE = "NCP_LAST_AREA_CODE";
            internal const string NCP_LAST_PHONE = "NCP_LAST_PHONE";
            internal const string nbr_1ST_ERROR_FIELD_NAME = "nbr_1ST_ERROR_FIELD_NAME";
            internal const string nbr_2ND_ERROR_FIELD_NAME = "nbr_2ND_ERROR_FIELD_NAME";
            internal const string MULTIPLE_ERROR_IND = "MULTIPLE_ERROR_IND";
            internal const string CORRECT_EIN = "CORRECT_EIN";
            internal const string MULTI_IWO_ST_CD = "MULTI_IWO_ST_CD";
        }
        #endregion

        #region Direct-access element properties
        public IField EMPLIN_STAT { get { return GetExternalElementByName<IField>(Names.EMPLIN_STAT); } }
        public IField WS_DATE_AREA { get { return GetElementByName<IField>(Names.WS_DATE_AREA); } }
        public IField WS_TEST_DATE { get { return GetElementByName<IField>(Names.WS_TEST_DATE); } }
        public IField WS_DATE_RETURN_CODE { get { return GetElementByName<IField>(Names.WS_DATE_RETURN_CODE); } }
        public IField WS_DATETIME_AREA { get { return GetElementByName<IField>(Names.WS_DATETIME_AREA); } }
        public IGroup HD_CRTIMESTAMP1 { get { return GetElementByName<IGroup>(Names.HD_CRTIMESTAMP1); } }
        public IGroup HD_TIMESTAMP1 { get { return GetElementByName<IGroup>(Names.HD_TIMESTAMP1); } }
        public IField HD_FILLER_ZERO_YEAR { get { return GetElementByName<IField>(Names.HD_FILLER_ZERO_YEAR); } }
        public IField HD_FILLER_ZERO_MONTH { get { return GetElementByName<IField>(Names.HD_FILLER_ZERO_MONTH); } }
        public IField HD_FILLER_ZERO_DAY { get { return GetElementByName<IField>(Names.HD_FILLER_ZERO_DAY); } }
        public IField HD_FILLER_ZERO_TIME1 { get { return GetElementByName<IField>(Names.HD_FILLER_ZERO_TIME1); } }
        public IField HD_TIMESTAMP1_XX { get { return GetElementByName<IField>(Names.HD_TIMESTAMP1_XX); } }
        public IGroup WS_TEXT_DATE { get { return GetElementByName<IGroup>(Names.WS_TEXT_DATE); } }
        public IField WS_YEAR { get { return GetElementByName<IField>(Names.WS_YEAR); } }
        public IField WS_MONTH { get { return GetElementByName<IField>(Names.WS_MONTH); } }
        public IField WS_DAY { get { return GetElementByName<IField>(Names.WS_DAY); } }
        public IGroup WS_DATE { get { return GetElementByName<IGroup>(Names.WS_DATE); } }
        public IField WS_YEAR1 { get { return GetElementByName<IField>(Names.WS_YEAR1); } }
        public IField WS_MONTH1 { get { return GetElementByName<IField>(Names.WS_MONTH1); } }
        public IField WS_DAY1 { get { return GetElementByName<IField>(Names.WS_DAY1); } }
        public IGroup WS_MISC { get { return GetElementByName<IGroup>(Names.WS_MISC); } }
        public IField WS_ENTRY { get { return GetElementByName<IField>(Names.WS_ENTRY); } }
        public IField WS_RECORD_COUNT { get { return GetElementByName<IField>(Names.WS_RECORD_COUNT); } }
        public IField WS_RECORD_AMOUNT { get { return GetElementByName<IField>(Names.WS_RECORD_AMOUNT); } }
        public IField A_DASH { get { return GetElementByName<IField>(Names.A_DASH); } }
        public IField A_PLUS { get { return GetElementByName<IField>(Names.A_PLUS); } }
        public IGroup WS_HEADING { get { return GetElementByName<IGroup>(Names.WS_HEADING); } }
        public IField DOC_CODE { get { return GetElementByName<IField>(Names.DOC_CODE); } }
        public IField CONTROL_NUM { get { return GetElementByName<IField>(Names.CONTROL_NUM); } }
        public IField ST_FIPS_CD { get { return GetElementByName<IField>(Names.ST_FIPS_CD); } }
        public IField EIN { get { return GetElementByName<IField>(Names.EIN); } }
        public IField PRIMARY_EIN { get { return GetElementByName<IField>(Names.PRIMARY_EIN); } }
        public IField CREATE_DATE { get { return GetElementByName<IField>(Names.CREATE_DATE); } }
        public IField CREATE_TIME { get { return GetElementByName<IField>(Names.CREATE_TIME); } }
        public IField ERROR_FIELD { get { return GetElementByName<IField>(Names.ERROR_FIELD); } }
        public IGroup WS_TRAILER { get { return GetElementByName<IGroup>(Names.WS_TRAILER); } }
        public IField DOC_CODE_T { get { return GetElementByName<IField>(Names.DOC_CODE_T); } }
        public IField CONTROL_NUM_T { get { return GetElementByName<IField>(Names.CONTROL_NUM_T); } }
        public IField BATCH_COUNT { get { return GetElementByName<IField>(Names.BATCH_COUNT); } }
        public IField RECORD_COUNT { get { return GetElementByName<IField>(Names.RECORD_COUNT); } }
        public IField EMPLOYER_SENT_COUNT { get { return GetElementByName<IField>(Names.EMPLOYER_SENT_COUNT); } }
        public IField STATE_SENT_COUNT { get { return GetElementByName<IField>(Names.STATE_SENT_COUNT); } }
        public IField ERROR_FIELD_T { get { return GetElementByName<IField>(Names.ERROR_FIELD_T); } }
        public IGroup WS_EMPLIN { get { return GetElementByName<IGroup>(Names.WS_EMPLIN); } }
        public IField DOC_CODE_EMP { get { return GetElementByName<IField>(Names.DOC_CODE_EMP); } }
        public IField ACTION_CODE { get { return GetElementByName<IField>(Names.ACTION_CODE); } }
        public IField CASE_NUM { get { return GetElementByName<IField>(Names.CASE_NUM); } }
        public IField EIN_EMP { get { return GetElementByName<IField>(Names.EIN_EMP); } }
        public IField EMPLOYEE_LAST_NAME { get { return GetElementByName<IField>(Names.EMPLOYEE_LAST_NAME); } }
        public IField EMPLOYEE_FIRST_NAME { get { return GetElementByName<IField>(Names.EMPLOYEE_FIRST_NAME); } }
        public IField EMPLOYEE_MIDDLE_NAME { get { return GetElementByName<IField>(Names.EMPLOYEE_MIDDLE_NAME); } }
        public IField EMPLOYEE_SUFFIX { get { return GetElementByName<IField>(Names.EMPLOYEE_SUFFIX); } }
        public IField EMPLOYEE_SSN { get { return GetElementByName<IField>(Names.EMPLOYEE_SSN); } }
        public IField DOC_TRACK_NUM { get { return GetElementByName<IField>(Names.DOC_TRACK_NUM); } }
        public IField ORDER_ID { get { return GetElementByName<IField>(Names.ORDER_ID); } }
        public IField REC_DISPOST_STATUS_CD { get { return GetElementByName<IField>(Names.REC_DISPOST_STATUS_CD); } }
        public IField DISPOSITION_REASON_CD { get { return GetElementByName<IField>(Names.DISPOSITION_REASON_CD); } }
        public IField TERMINATION_DATE { get { return GetElementByName<IField>(Names.TERMINATION_DATE); } }
        public IField NCP_LAST_ADDR_LINE1 { get { return GetElementByName<IField>(Names.NCP_LAST_ADDR_LINE1); } }
        public IField NCP_LAST_ADDR_LINE2 { get { return GetElementByName<IField>(Names.NCP_LAST_ADDR_LINE2); } }
        public IField NCP_LAST_ADDR_CITY { get { return GetElementByName<IField>(Names.NCP_LAST_ADDR_CITY); } }
        public IField NCP_LAST_ADDR_ST { get { return GetElementByName<IField>(Names.NCP_LAST_ADDR_ST); } }
        public IField NCP_LAST_ADDR_ZIP { get { return GetElementByName<IField>(Names.NCP_LAST_ADDR_ZIP); } }
        public IField NCP_LAST_ADDR_ZIP4 { get { return GetElementByName<IField>(Names.NCP_LAST_ADDR_ZIP4); } }
        public IField FINAL_PAYMENT_DT { get { return GetElementByName<IField>(Names.FINAL_PAYMENT_DT); } }
        public IField FINAL_PAYMENT_AMT { get { return GetElementByName<IField>(Names.FINAL_PAYMENT_AMT); } }
        public IField NEW_EMPLOYER_NAME { get { return GetElementByName<IField>(Names.NEW_EMPLOYER_NAME); } }
        public IField NEW_EMPLOYER_ADD_LINE1 { get { return GetElementByName<IField>(Names.NEW_EMPLOYER_ADD_LINE1); } }
        public IField NEW_EMPLOYER_ADD_LINE2 { get { return GetElementByName<IField>(Names.NEW_EMPLOYER_ADD_LINE2); } }
        public IField NEW_EMPLOYER_ADD_CITY { get { return GetElementByName<IField>(Names.NEW_EMPLOYER_ADD_CITY); } }
        public IField NEW_EMPLOYER_ADD_STATE { get { return GetElementByName<IField>(Names.NEW_EMPLOYER_ADD_STATE); } }
        public IField NEW_EMPLOYER_ADD_ZIP_CD { get { return GetElementByName<IField>(Names.NEW_EMPLOYER_ADD_ZIP_CD); } }
        public IField NEW_EMPLOYER_ADD_ZIP4 { get { return GetElementByName<IField>(Names.NEW_EMPLOYER_ADD_ZIP4); } }
        public IField PAYMENT_LUMP_SUM_DT { get { return GetElementByName<IField>(Names.PAYMENT_LUMP_SUM_DT); } }
        public IField PAYMENT_LUMP_SUM_AMT { get { return GetElementByName<IField>(Names.PAYMENT_LUMP_SUM_AMT); } }
        public IField PAYMENT_LUMP_SUM_TYPE { get { return GetElementByName<IField>(Names.PAYMENT_LUMP_SUM_TYPE); } }
        public IGroup NCP_LAST_NONE_PHONE { get { return GetElementByName<IGroup>(Names.NCP_LAST_NONE_PHONE); } }
        public IField NCP_LAST_AREA_CODE { get { return GetElementByName<IField>(Names.NCP_LAST_AREA_CODE); } }
        public IField NCP_LAST_PHONE { get { return GetElementByName<IField>(Names.NCP_LAST_PHONE); } }
        public IField nbr_1ST_ERROR_FIELD_NAME { get { return GetElementByName<IField>(Names.nbr_1ST_ERROR_FIELD_NAME); } }
        public IField nbr_2ND_ERROR_FIELD_NAME { get { return GetElementByName<IField>(Names.nbr_2ND_ERROR_FIELD_NAME); } }
        public IField MULTIPLE_ERROR_IND { get { return GetElementByName<IField>(Names.MULTIPLE_ERROR_IND); } }
        public IField CORRECT_EIN { get { return GetElementByName<IField>(Names.CORRECT_EIN); } }
        public IField MULTI_IWO_ST_CD { get { return GetElementByName<IField>(Names.MULTI_IWO_ST_CD); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            WsExternals.Instance.CreateNewField(Names.EMPLIN_STAT, FieldType.UnsignedNumeric, 2);

            IField WS_DATE_AREA_local = recordDef.CreateNewField(Names.WS_DATE_AREA, FieldType.String, 57, SPACES);
            recordDef.CreateNewGroupRedefine("FILLER", WS_DATE_AREA_local, (FILLER) =>
            {
                FILLER.CreateNewField(Names.WS_TEST_DATE, FieldType.UnsignedNumeric, 8);
                FILLER.CreateNewFillerField(8, FillWith.Hashes);
                FILLER.CreateNewField(Names.WS_DATE_RETURN_CODE, FieldType.String, 2);
            });

            IField WS_DATETIME_AREA_local = recordDef.CreateNewField(Names.WS_DATETIME_AREA, FieldType.String, 20, SPACES);
            recordDef.CreateNewGroupRedefine("FILLER_d3", WS_DATETIME_AREA_local, (FILLER_d3) =>
            {
                FILLER_d3.CreateNewGroup(Names.HD_CRTIMESTAMP1, (HD_CRTIMESTAMP1) =>
                {
                    IGroup HD_TIMESTAMP1_local = (IGroup)HD_CRTIMESTAMP1.CreateNewGroup(Names.HD_TIMESTAMP1, (HD_TIMESTAMP1) =>
                    {
                        HD_TIMESTAMP1.CreateNewField(Names.HD_FILLER_ZERO_YEAR, FieldType.UnsignedNumeric, 4);
                        HD_TIMESTAMP1.CreateNewField(Names.HD_FILLER_ZERO_MONTH, FieldType.UnsignedNumeric, 2);
                        HD_TIMESTAMP1.CreateNewField(Names.HD_FILLER_ZERO_DAY, FieldType.UnsignedNumeric, 2);
                        HD_TIMESTAMP1.CreateNewField(Names.HD_FILLER_ZERO_TIME1, FieldType.UnsignedNumeric, 12);
                    });
                    HD_CRTIMESTAMP1.CreateNewFieldRedefine(Names.HD_TIMESTAMP1_XX, FieldType.String, HD_TIMESTAMP1_local, 20);
                });
            });

            recordDef.CreateNewGroup(Names.WS_TEXT_DATE, (WS_TEXT_DATE) =>
           {
               WS_TEXT_DATE.CreateNewField(Names.WS_YEAR, FieldType.String, 4);
               WS_TEXT_DATE.CreateNewFillerField(FieldType.String, 1, "-");
               WS_TEXT_DATE.CreateNewField(Names.WS_MONTH, FieldType.String, 2);
               WS_TEXT_DATE.CreateNewFillerField(FieldType.String, 1, "-");
               WS_TEXT_DATE.CreateNewField(Names.WS_DAY, FieldType.String, 2);
           });

            recordDef.CreateNewGroup(Names.WS_DATE, (WS_DATE) =>
           {
               WS_DATE.CreateNewField(Names.WS_YEAR1, FieldType.String, 4);
               WS_DATE.CreateNewField(Names.WS_MONTH1, FieldType.String, 2);
               WS_DATE.CreateNewField(Names.WS_DAY1, FieldType.String, 2);
           });

            recordDef.CreateNewGroup(Names.WS_MISC, (WS_MISC) =>
           {
               WS_MISC.CreateNewField(Names.WS_ENTRY, FieldType.String, 40, "SWEXEW18 WORKING STORAGE STARTS HERE");
               WS_MISC.CreateNewField(Names.WS_RECORD_COUNT, FieldType.UnsignedNumeric, 7, ZEROES);
               WS_MISC.CreateNewField(Names.WS_RECORD_AMOUNT, FieldType.UnsignedNumeric, 8, ZEROES);
               WS_MISC.CreateNewField(Names.A_DASH, FieldType.String, 1, "-");
               WS_MISC.CreateNewField(Names.A_PLUS, FieldType.String, 1, "+");
           });

            recordDef.CreateNewGroup(Names.WS_HEADING, (WS_HEADING) =>
           {
               WS_HEADING.CreateNewField(Names.DOC_CODE, FieldType.String, 3);
               WS_HEADING.CreateNewField(Names.CONTROL_NUM, FieldType.String, 22);
               WS_HEADING.CreateNewField(Names.ST_FIPS_CD, FieldType.String, 5);
               WS_HEADING.CreateNewField(Names.EIN, FieldType.String, 9);
               WS_HEADING.CreateNewField(Names.PRIMARY_EIN, FieldType.String, 9);
               WS_HEADING.CreateNewField(Names.CREATE_DATE, FieldType.String, 8);
               WS_HEADING.CreateNewField(Names.CREATE_TIME, FieldType.String, 6);
               WS_HEADING.CreateNewField(Names.ERROR_FIELD, FieldType.String, 18);
               WS_HEADING.CreateNewFillerField(493, FillWith.Hashes);
           });

            recordDef.CreateNewGroup(Names.WS_TRAILER, (WS_TRAILER) =>
           {
               WS_TRAILER.CreateNewField(Names.DOC_CODE_T, FieldType.String, 3);
               WS_TRAILER.CreateNewField(Names.CONTROL_NUM_T, FieldType.String, 22);
               WS_TRAILER.CreateNewField(Names.BATCH_COUNT, FieldType.UnsignedNumeric, 5);
               WS_TRAILER.CreateNewField(Names.RECORD_COUNT, FieldType.UnsignedNumeric, 5);
               WS_TRAILER.CreateNewField(Names.EMPLOYER_SENT_COUNT, FieldType.UnsignedNumeric, 5);
               WS_TRAILER.CreateNewField(Names.STATE_SENT_COUNT, FieldType.UnsignedNumeric, 5);
               WS_TRAILER.CreateNewField(Names.ERROR_FIELD_T, FieldType.String, 18);
               WS_TRAILER.CreateNewFillerField(510, FillWith.Hashes);
           });

            recordDef.CreateNewGroup(Names.WS_EMPLIN, (WS_EMPLIN) =>
           {
               WS_EMPLIN.CreateNewField(Names.DOC_CODE_EMP, FieldType.String, 3);
               WS_EMPLIN.CreateNewField(Names.ACTION_CODE, FieldType.String, 3);
               WS_EMPLIN.CreateNewField(Names.CASE_NUM, FieldType.String, 15);
               WS_EMPLIN.CreateNewField(Names.EIN_EMP, FieldType.UnsignedNumeric, 9);
               WS_EMPLIN.CreateNewField(Names.EMPLOYEE_LAST_NAME, FieldType.String, 20);
               WS_EMPLIN.CreateNewField(Names.EMPLOYEE_FIRST_NAME, FieldType.String, 15);
               WS_EMPLIN.CreateNewField(Names.EMPLOYEE_MIDDLE_NAME, FieldType.String, 15);
               WS_EMPLIN.CreateNewField(Names.EMPLOYEE_SUFFIX, FieldType.String, 4);
               WS_EMPLIN.CreateNewField(Names.EMPLOYEE_SSN, FieldType.String, 9);
               WS_EMPLIN.CreateNewField(Names.DOC_TRACK_NUM, FieldType.String, 30);
               WS_EMPLIN.CreateNewField(Names.ORDER_ID, FieldType.String, 30);
               WS_EMPLIN.CreateNewField(Names.REC_DISPOST_STATUS_CD, FieldType.String, 2);
               WS_EMPLIN.CreateNewField(Names.DISPOSITION_REASON_CD, FieldType.String, 3);
               WS_EMPLIN.CreateNewFillerField(1, FillWith.Hashes);
               WS_EMPLIN.CreateNewField(Names.TERMINATION_DATE, FieldType.UnsignedNumeric, 8);
               WS_EMPLIN.CreateNewField(Names.NCP_LAST_ADDR_LINE1, FieldType.String, 25);
               WS_EMPLIN.CreateNewField(Names.NCP_LAST_ADDR_LINE2, FieldType.String, 25);
               WS_EMPLIN.CreateNewField(Names.NCP_LAST_ADDR_CITY, FieldType.String, 22);
               WS_EMPLIN.CreateNewField(Names.NCP_LAST_ADDR_ST, FieldType.String, 2);
               WS_EMPLIN.CreateNewField(Names.NCP_LAST_ADDR_ZIP, FieldType.String, 5);
               WS_EMPLIN.CreateNewField(Names.NCP_LAST_ADDR_ZIP4, FieldType.String, 4);
               WS_EMPLIN.CreateNewField(Names.FINAL_PAYMENT_DT, FieldType.UnsignedNumeric, 8);
               WS_EMPLIN.CreateNewField(Names.FINAL_PAYMENT_AMT, FieldType.UnsignedNumeric, 11, null, 2);
               WS_EMPLIN.CreateNewField(Names.NEW_EMPLOYER_NAME, FieldType.String, 57);
               WS_EMPLIN.CreateNewField(Names.NEW_EMPLOYER_ADD_LINE1, FieldType.String, 25);
               WS_EMPLIN.CreateNewField(Names.NEW_EMPLOYER_ADD_LINE2, FieldType.String, 25);
               WS_EMPLIN.CreateNewField(Names.NEW_EMPLOYER_ADD_CITY, FieldType.String, 22);
               WS_EMPLIN.CreateNewField(Names.NEW_EMPLOYER_ADD_STATE, FieldType.String, 2);
               WS_EMPLIN.CreateNewField(Names.NEW_EMPLOYER_ADD_ZIP_CD, FieldType.String, 5);
               WS_EMPLIN.CreateNewField(Names.NEW_EMPLOYER_ADD_ZIP4, FieldType.String, 4);
               WS_EMPLIN.CreateNewField(Names.PAYMENT_LUMP_SUM_DT, FieldType.UnsignedNumeric, 8);
               WS_EMPLIN.CreateNewField(Names.PAYMENT_LUMP_SUM_AMT, FieldType.UnsignedNumeric, 11, null, 2);
               WS_EMPLIN.CreateNewField(Names.PAYMENT_LUMP_SUM_TYPE, FieldType.String, 35);
               WS_EMPLIN.CreateNewGroup(Names.NCP_LAST_NONE_PHONE, (NCP_LAST_NONE_PHONE) =>
               {
                   NCP_LAST_NONE_PHONE.CreateNewField(Names.NCP_LAST_AREA_CODE, FieldType.String, 3);
                   NCP_LAST_NONE_PHONE.CreateNewField(Names.NCP_LAST_PHONE, FieldType.String, 7);
               });
               WS_EMPLIN.CreateNewField(Names.nbr_1ST_ERROR_FIELD_NAME, FieldType.String, 32);
               WS_EMPLIN.CreateNewField(Names.nbr_2ND_ERROR_FIELD_NAME, FieldType.String, 32);
               WS_EMPLIN.CreateNewField(Names.MULTIPLE_ERROR_IND, FieldType.String, 1);
               WS_EMPLIN.CreateNewField(Names.CORRECT_EIN, FieldType.UnsignedNumeric, 9);
               WS_EMPLIN.CreateNewField(Names.MULTI_IWO_ST_CD, FieldType.String, 2);
               WS_EMPLIN.CreateNewFillerField(24, FillWith.Hashes);
           });

        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXLR07_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXLR07_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string GLOBDATA = "GLOBDATA";
            internal const string PSMGR_IEF_COMMAND = "PSMGR_IEF_COMMAND";
            internal const string PSMGR_IEF_COMMAND_1 = "PSMGR_IEF_COMMAND_1";
            internal const string PSMGR_IEF_COMMAND_2 = "PSMGR_IEF_COMMAND_2";
            internal const string PSMGR_IEF_TRANCODE = "PSMGR_IEF_TRANCODE";
            internal const string PSMGR_EXIT_STATE = "PSMGR_EXIT_STATE";
            internal const string PSMGR_EXIT_INFOMSG = "PSMGR_EXIT_INFOMSG";
            internal const string PSMGR_USER_ID = "PSMGR_USER_ID";
            internal const string PSMGR_TERMINAL_ID = "PSMGR_TERMINAL_ID";
            internal const string PSMGR_PRINTER_ID = "PSMGR_PRINTER_ID";
            internal const string PSMGR_CURRENT_DATE = "PSMGR_CURRENT_DATE";
            internal const string PSMGR_CURRENT_TIME = "PSMGR_CURRENT_TIME";
            internal const string PSMGR_RUNTIME_TYPE = "PSMGR_RUNTIME_TYPE";
            internal const string PSMGR_FUNCTION_DATA = "PSMGR_FUNCTION_DATA";
            internal const string PSMGR_FUNC_ERRMSG = "PSMGR_FUNC_ERRMSG";
            internal const string PSMGR_FUNC_NAME = "PSMGR_FUNC_NAME";
            internal const string PSMGR_FUNC_IN_DATE = "PSMGR_FUNC_IN_DATE";
            internal const string PSMGR_FUNC_IN_DDURA = "PSMGR_FUNC_IN_DDURA";
            internal const string DDURA_YEAR = "DDURA_YEAR";
            internal const string DDURA_Y_MISS = "DDURA_Y_MISS";
            internal const string DDURA_YYYY = "DDURA_YYYY";
            internal const string DDURA_MONTH = "DDURA_MONTH";
            internal const string DDURA_M_MISS = "DDURA_M_MISS";
            internal const string DDURA_MM = "DDURA_MM";
            internal const string DDURA_DAY = "DDURA_DAY";
            internal const string DDURA_D_MISS = "DDURA_D_MISS";
            internal const string DDURA_DD = "DDURA_DD";
            internal const string PSMGR_FUNC_OUT_DATE = "PSMGR_FUNC_OUT_DATE";
            internal const string PSMGR_FUNC_IN_TIME = "PSMGR_FUNC_IN_TIME";
            internal const string PSMGR_FUNC_IN_TDURA = "PSMGR_FUNC_IN_TDURA";
            internal const string TDURA_HOUR = "TDURA_HOUR";
            internal const string TDURA_H_MISS = "TDURA_H_MISS";
            internal const string TDURA_HH = "TDURA_HH";
            internal const string TDURA_MINUTE = "TDURA_MINUTE";
            internal const string TDURA_M_MISS = "TDURA_M_MISS";
            internal const string TDURA_MM = "TDURA_MM";
            internal const string TDURA_SECOND = "TDURA_SECOND";
            internal const string TDURA_S_MISS = "TDURA_S_MISS";
            internal const string TDURA_SS = "TDURA_SS";
            internal const string PSMGR_FUNC_OUT_TIME = "PSMGR_FUNC_OUT_TIME";
            internal const string PSMGR_IEF_NEXTTRAN = "PSMGR_IEF_NEXTTRAN";
            internal const string PSMGR_EXIT_MSGTYPE = "PSMGR_EXIT_MSGTYPE";
            internal const string PSMGR_IEF_DEBUG_FLAGS = "PSMGR_IEF_DEBUG_FLAGS";
            internal const string PSMGR_IEF_DEBUG = "PSMGR_IEF_DEBUG";
            internal const string PSMGR_DEBUG_ON = "PSMGR_DEBUG_ON";
            internal const string PSMGR_ENVIRONMENT_DATA = "PSMGR_ENVIRONMENT_DATA";
            internal const string PSMGR_PCB_CNT = "PSMGR_PCB_CNT";
            internal const string PSMGR_PCB_ENTRY = "PSMGR_PCB_ENTRY";
            internal const string PSMGR_PCB_ADR = "PSMGR_PCB_ADR";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string PSMGR_ERROR_DATA = "PSMGR_ERROR_DATA";
            internal const string ERROR_ACTION_NAME = "ERROR_ACTION_NAME";
            internal const string ERROR_ENCOUNTERED_SW = "ERROR_ENCOUNTERED_SW";
            internal const string VIEW_OVERFLOW_SW = "VIEW_OVERFLOW_SW";
            internal const string PSMGR_DASG_DATA = "PSMGR_DASG_DATA";
            internal const string ACTION_ID_X = "ACTION_ID_X";
            internal const string ACTION_ID = "ACTION_ID";
            internal const string ATTRIBUTE_ID_X = "ATTRIBUTE_ID_X";
            internal const string ATTRIBUTE_ID = "ATTRIBUTE_ID";
            internal const string STATUS_FLAG = "STATUS_FLAG";
            internal const string WHEN_SUCCESSFUL_SF = "WHEN_SUCCESSFUL_SF";
            internal const string FATAL_ERROR_SF = "FATAL_ERROR_SF";
            internal const string DB_ERROR_SF = "DB_ERROR_SF";
            internal const string ABORT_SHOW_DBMS_MSG_SF = "ABORT_SHOW_DBMS_MSG_SF";
            internal const string ABORT_SHOW_USER_MSG_SF = "ABORT_SHOW_USER_MSG_SF";
            internal const string RETRY_TRAN_REQUESTED_SF = "RETRY_TRAN_REQUESTED_SF";
            internal const string PSTEP_USE_FAILURE = "PSTEP_USE_FAILURE";
            internal const string ASYNC_WHEN_AVAILABLE_SF = "ASYNC_WHEN_AVAILABLE_SF";
            internal const string ASYNC_WHEN_ACCEPTED_SF = "ASYNC_WHEN_ACCEPTED_SF";
            internal const string ASYNC_WHEN_NOT_ACCEPTED_SF = "ASYNC_WHEN_NOT_ACCEPTED_SF";
            internal const string ASYNC_WHEN_INVALID_ID_SF = "ASYNC_WHEN_INVALID_ID_SF";
            internal const string ASYNC_WHEN_PENDING_SF = "ASYNC_WHEN_PENDING_SF";
            internal const string ASYNC_WHEN_SERVER_ERROR_SF = "ASYNC_WHEN_SERVER_ERROR_SF";
            internal const string ASYNC_WHEN_COMM_ERROR_SF = "ASYNC_WHEN_COMM_ERROR_SF";
            internal const string LAST_STATUS = "LAST_STATUS";
            internal const string DB_ERROR_FL_LS = "DB_ERROR_FL_LS";
            internal const string DB_DEADLOCK_TIMOUT_FL_LS = "DB_DEADLOCK_TIMOUT_FL_LS";
            internal const string DUPLICATE_FOUND_FL_LS = "DUPLICATE_FOUND_FL_LS";
            internal const string INVALID_DATAA_FL_LS = "INVALID_DATAA_FL_LS";
            internal const string INVALID_DATAB_TYPE_FL_LS = "INVALID_DATAB_TYPE_FL_LS";
            internal const string INVALID_DATAB_PERM_FL_LS = "INVALID_DATAB_PERM_FL_LS";
            internal const string FATAL_ERROR_FL_LS = "FATAL_ERROR_FL_LS";
            internal const string NOT_FOUND_FL_LS = "NOT_FOUND_FL_LS";
            internal const string NOT_UNIQUE_FL_LS = "NOT_UNIQUE_FL_LS";
            internal const string IEF_FUNCTION_ERROR_FL_LS = "IEF_FUNCTION_ERROR_FL_LS";
            internal const string IEF_DURATION_ERROR_FL_LS = "IEF_DURATION_ERROR_FL_LS";
            internal const string USED_PSTEP_NOT_FOUND = "USED_PSTEP_NOT_FOUND";
            internal const string USED_PSTEP_ROUTING_ERR = "USED_PSTEP_ROUTING_ERR";
            internal const string USED_PSTEP_SND_FMT_ERR = "USED_PSTEP_SND_FMT_ERR";
            internal const string USED_PSTEP_ENCRYPT_ERR = "USED_PSTEP_ENCRYPT_ERR";
            internal const string USED_PSTEP_SND_BFR_ERR = "USED_PSTEP_SND_BFR_ERR";
            internal const string USED_PSTEP_RCV_BFR_ERR = "USED_PSTEP_RCV_BFR_ERR";
            internal const string USED_PSTEP_RCV_FMT_ERR = "USED_PSTEP_RCV_FMT_ERR";
            internal const string USED_PSTEP_TIRSECR_ERR = "USED_PSTEP_TIRSECR_ERR";
            internal const string USED_PSTEP_TOKEN_ERR = "USED_PSTEP_TOKEN_ERR";
            internal const string USED_PSTEP_SEND_MAX_SIZE = "USED_PSTEP_SEND_MAX_SIZE";
            internal const string USED_PSTEP_SECG_ERR = "USED_PSTEP_SECG_ERR";
            internal const string USED_PSTEP_ALLOC_ERR = "USED_PSTEP_ALLOC_ERR";
            internal const string USED_PSTEP_CONNECT_ERR = "USED_PSTEP_CONNECT_ERR";
            internal const string USED_PSTEP_XERR = "USED_PSTEP_XERR";
            internal const string USED_PSTEP_RCV_UA_ERR = "USED_PSTEP_RCV_UA_ERR";
            internal const string USED_PSTEP_RCV_ES_ERR = "USED_PSTEP_RCV_ES_ERR";
            internal const string USED_PSTEP_XFAL = "USED_PSTEP_XFAL";
            internal const string USED_PSTEP_SETOA_ERR = "USED_PSTEP_SETOA_ERR";
            internal const string USED_PSTEP_RCV_VIEW_ERR = "USED_PSTEP_RCV_VIEW_ERR";
            internal const string USED_PSTEP_DECRYPT_ERR = "USED_PSTEP_DECRYPT_ERR";
            internal const string SAVE_SQLCA = "SAVE_SQLCA";
            internal const string PSMGR_DEBUG_DATA = "PSMGR_DEBUG_DATA";
            internal const string PSMGR_TRACE_ADR = "PSMGR_TRACE_ADR";
            internal const string LAST_STATEMENT_X = "LAST_STATEMENT_X";
            internal const string LAST_STATEMENT_NUM = "LAST_STATEMENT_NUM";
            internal const string CUR_AB_ID = "CUR_AB_ID";
            internal const string CUR_AB_NAME = "CUR_AB_NAME";
            internal const string PSMGR_TIRDATE_SAVEAREA = "PSMGR_TIRDATE_SAVEAREA";
            internal const string PSMGR_TIRDATE_CMCB = "PSMGR_TIRDATE_CMCB";
            internal const string PSMGR_TIRDATE_DATE = "PSMGR_TIRDATE_DATE";
            internal const string PSMGR_TIRDATE_TIME = "PSMGR_TIRDATE_TIME";
            internal const string PSMGR_TIRDATE_INC = "PSMGR_TIRDATE_INC";
            internal const string PSMGR_TIRDATE_RC = "PSMGR_TIRDATE_RC";
            internal const string PSMGR_TIRDATE_OK = "PSMGR_TIRDATE_OK";
            internal const string PSMGR_TIRDATE_WARNING = "PSMGR_TIRDATE_WARNING";
            internal const string PSMGR_TIRDATE_ERROR = "PSMGR_TIRDATE_ERROR";
            internal const string PSMGR_TIRDATE_REQ = "PSMGR_TIRDATE_REQ";
            internal const string PSMGR_TIRDATE_DATEF = "PSMGR_TIRDATE_DATEF";
            internal const string PSMGR_TIRDATE_TIMEF = "PSMGR_TIRDATE_TIMEF";
            internal const string PSMGR_TIRDATE_RETMSG = "PSMGR_TIRDATE_RETMSG";
            internal const string PSMGR_TIRDATE_TSTAMP = "PSMGR_TIRDATE_TSTAMP";
            internal const string PSMGR_TIRDATE_DATE_Z = "PSMGR_TIRDATE_DATE_Z";
            internal const string PSMGR_TIRDATE_TIME_Z = "PSMGR_TIRDATE_TIME_Z";
            internal const string PSMGR_TIRDATE_SKIP_VAL = "PSMGR_TIRDATE_SKIP_VAL";
            internal const string PSMGR_ROLLBACK_RQSTED = "PSMGR_ROLLBACK_RQSTED";
            internal const string ROLLBACK_RQSTED = "ROLLBACK_RQSTED";
            internal const string ABEND_RQSTED = "ABEND_RQSTED";
            internal const string TERMINATE_RQSTED = "TERMINATE_RQSTED";
            internal const string TIRTRCE_SAVE_AREA = "TIRTRCE_SAVE_AREA";
            internal const string TOP_INDX = "TOP_INDX";
            internal const string BOTTOM_INDX = "BOTTOM_INDX";
            internal const string END_INDX = "END_INDX";
            internal const string LAST_STMT = "LAST_STMT";
            internal const string TOP_OF_CALL = "TOP_OF_CALL";
            internal const string TRACE_BREAK_POINT = "TRACE_BREAK_POINT";
            internal const string TRACE_BREAK_POINT_STATUS = "TRACE_BREAK_POINT_STATUS";
            internal const string LAST_AB_NAME = "LAST_AB_NAME";
            internal const string COLOR = "COLOR";
            internal const string COLORT = "COLORT";
            internal const string HILITE = "HILITE";
            internal const string TRACE_ON_OFF = "TRACE_ON_OFF";
            internal const string CASCADE_DELETE_FLAGS = "CASCADE_DELETE_FLAGS";
            internal const string V1PRESENT = "V1PRESENT";
            internal const string V2PRESENT = "V2PRESENT";
            internal const string CASCADE1 = "CASCADE1";
            internal const string CASCADE2 = "CASCADE2";
            internal const string PROCESSQ_FLAG = "PROCESSQ_FLAG";
            internal const string PSMGR_ACTIVE_DIALECT = "PSMGR_ACTIVE_DIALECT";
            internal const string DIALECT_NAME = "DIALECT_NAME";
            internal const string MESSAGE_TABLE_NAME = "MESSAGE_TABLE_NAME";
            internal const string TRANSLATE_TABLE_NAME = "TRANSLATE_TABLE_NAME";
            internal const string PSMGR_FUNCTION_DATA_EXT = "PSMGR_FUNCTION_DATA_EXT";
            internal const string PSMGR_FUNC_IN_TIMESTAMP = "PSMGR_FUNC_IN_TIMESTAMP";
            internal const string PSMGR_FUNC_IN_TSDURA = "PSMGR_FUNC_IN_TSDURA";
            internal const string TSDURA_MICROSECOND = "TSDURA_MICROSECOND";
            internal const string TSDURA_M_MISS = "TSDURA_M_MISS";
            internal const string TSDURA_MS = "TSDURA_MS";
            internal const string PSMGR_FUNC_OUT_TIMESTAMP = "PSMGR_FUNC_OUT_TIMESTAMP";
            internal const string PSMGR_CICS_FAIL_SW = "PSMGR_CICS_FAIL_SW";
            internal const string INHIBIT_CICS_RECEIVE = "INHIBIT_CICS_RECEIVE";
            internal const string CLIENT_USERID = "CLIENT_USERID";
            internal const string CLIENT_PASSWORD = "CLIENT_PASSWORD";
            internal const string LOAD_MODULE_NAME = "LOAD_MODULE_NAME";
            internal const string INSTRUMENT_CODE = "INSTRUMENT_CODE";
            internal const string TX_RETRY_LIMIT = "TX_RETRY_LIMIT";
            internal const string TX_TIMEOUT = "TX_TIMEOUT";
            internal const string PSMGR_EXTRA_ERRINFO = "PSMGR_EXTRA_ERRINFO";
            internal const string ERRINFO_BUF_SIZE = "ERRINFO_BUF_SIZE";
            internal const string ERRINFO_MSG_SIZE = "ERRINFO_MSG_SIZE";
            internal const string ERRINFO_BUF_ADDR = "ERRINFO_BUF_ADDR";
            internal const string TX_RETRY_COUNT = "TX_RETRY_COUNT";
            internal const string TX_USER_RETRY_ALLOWED = "TX_USER_RETRY_ALLOWED";
            internal const string PSMGR_PSTEP_USE_PTRS = "PSMGR_PSTEP_USE_PTRS";
            internal const string PSTEP_FAIL_MSG_PTR = "PSTEP_FAIL_MSG_PTR";
            internal const string PSTEP_GURB_REST_PTR = "PSTEP_GURB_REST_PTR";
            internal const string PSTEP_LIPS_PTR = "PSTEP_LIPS_PTR";
            internal const string PSTEP_TBL_PTR = "PSTEP_TBL_PTR";
            internal const string PSTEP_DDF_PTR = "PSTEP_DDF_PTR";
            internal const string PSTEP_COMM_ID = "PSTEP_COMM_ID";
            internal const string PSTEP_APPL_LIST_PTR = "PSTEP_APPL_LIST_PTR";
            internal const string PSTEP_CURR_PST_PTR = "PSTEP_CURR_PST_PTR";
            internal const string PSMGR_PSTEP_USE_SYSFLDS = "PSMGR_PSTEP_USE_SYSFLDS";
            internal const string PSMGR_EIBERRCD = "PSMGR_EIBERRCD";
            internal const string PSMGR_EIBFN = "PSMGR_EIBFN";
            internal const string PSMGR_EIBRESP = "PSMGR_EIBRESP";
            internal const string PSMGR_EIBRESP2 = "PSMGR_EIBRESP2";
            internal const string PSMGR_ASYNC_DATA = "PSMGR_ASYNC_DATA";
            internal const string ASYNC_MODE = "ASYNC_MODE";
            internal const string FLOW_TYPE_SYNC = "FLOW_TYPE_SYNC";
            internal const string FLOW_TYPE_ASYNC = "FLOW_TYPE_ASYNC";
            internal const string FLOW_TYPE_NO_RESPONSE = "FLOW_TYPE_NO_RESPONSE";
            internal const string ASYNC_FLOW_STATUS_TABLE_PTR = "ASYNC_FLOW_STATUS_TABLE_PTR";
            internal const string ASYNC_SERVER_LOC_TABLE_PTR = "ASYNC_SERVER_LOC_TABLE_PTR";
            internal const string PSMGR_HEAP = "PSMGR_HEAP";
            internal const string HEAP_CFB = "HEAP_CFB";
            internal const string HEAP_CFB_ADDR = "HEAP_CFB_ADDR";
            internal const string HEAP_CFB_ADDR_RESV = "HEAP_CFB_ADDR_RESV";
            internal const string HEAP_CFB_ID = "HEAP_CFB_ID";
            internal const string HEAP_CFB_LEN = "HEAP_CFB_LEN";
            internal const string HEAP_WGLOB = "HEAP_WGLOB";
            internal const string HEAP_WGLOB_ADDR = "HEAP_WGLOB_ADDR";
            internal const string HEAP_WGLOB_ADDR_RESV = "HEAP_WGLOB_ADDR_RESV";
            internal const string HEAP_WGLOB_ID = "HEAP_WGLOB_ID";
            internal const string HEAP_WGLOB_LEN = "HEAP_WGLOB_LEN";
            internal const string PSMGR_MMCB = "PSMGR_MMCB";
            internal const string PSMGR_MMCB_ACTIVE = "PSMGR_MMCB_ACTIVE";
            internal const string IMPORT_0001EV = "IMPORT_0001EV";
            internal const string EAB_FILE_HANDLING_0001ET = "EAB_FILE_HANDLING_0001ET";
            internal const string ACTION_0001AS = "ACTION_0001AS";
            internal const string ACTION_0001 = "ACTION_0001";
            internal const string ACTION_0001XX = "ACTION_0001XX";
            internal const string EXPORT_DOC_CODE_0002EV = "EXPORT_DOC_CODE_0002EV";
            internal const string WORK_AREA_0002ET = "WORK_AREA_0002ET";
            internal const string TEXT_3_0002AS = "TEXT_3_0002AS";
            internal const string TEXT_3_0002 = "TEXT_3_0002";
            internal const string TEXT_3_0002XX = "TEXT_3_0002XX";
            internal const string EXPORT_CONTROL_NUM_0003EV = "EXPORT_CONTROL_NUM_0003EV";
            internal const string WORK_AREA_0003ET = "WORK_AREA_0003ET";
            internal const string TEXT_22_0003AS = "TEXT_22_0003AS";
            internal const string TEXT_22_0003 = "TEXT_22_0003";
            internal const string TEXT_22_0003XX = "TEXT_22_0003XX";
            internal const string EXPORT_ST_FIPS_CODE_0004EV = "EXPORT_ST_FIPS_CODE_0004EV";
            internal const string WORK_AREA_0004ET = "WORK_AREA_0004ET";
            internal const string TEXT_5_0004AS = "TEXT_5_0004AS";
            internal const string TEXT_5_0004 = "TEXT_5_0004";
            internal const string TEXT_5_0004XX = "TEXT_5_0004XX";
            internal const string EXPORT_HEADER_EIN_0005EV = "EXPORT_HEADER_EIN_0005EV";
            internal const string WORK_AREA_0005ET = "WORK_AREA_0005ET";
            internal const string TEXT_9_0005AS = "TEXT_9_0005AS";
            internal const string TEXT_9_0005 = "TEXT_9_0005";
            internal const string TEXT_9_0005XX = "TEXT_9_0005XX";
            internal const string EXPORT_HEADER_PRIMARY_E_0006EV = "EXPORT_HEADER_PRIMARY_E_0006EV";
            internal const string WORK_AREA_0006ET = "WORK_AREA_0006ET";
            internal const string TEXT_9_0006AS = "TEXT_9_0006AS";
            internal const string TEXT_9_0006 = "TEXT_9_0006";
            internal const string TEXT_9_0006XX = "TEXT_9_0006XX";
            internal const string EXPORT_HEADER_CREATE_DA_0007EV = "EXPORT_HEADER_CREATE_DA_0007EV";
            internal const string DATE_WORK_AREA_0007ET = "DATE_WORK_AREA_0007ET";
            internal const string DATE_0007AS = "DATE_0007AS";
            internal const string DATE_0007 = "DATE_0007";
            internal const string DATE_0007XX = "DATE_0007XX";
            internal const string EXPORT_HEADER_CREATE_TI_0008EV = "EXPORT_HEADER_CREATE_TI_0008EV";
            internal const string DATE_WORK_AREA_0008ET = "DATE_WORK_AREA_0008ET";
            internal const string TIME_0008AS = "TIME_0008AS";
            internal const string TIME_0008 = "TIME_0008";
            internal const string TIME_0008XX = "TIME_0008XX";
            internal const string EXPORT_ERR_FIELD_NAME_0009EV = "EXPORT_ERR_FIELD_NAME_0009EV";
            internal const string WORK_AREA_0009ET = "WORK_AREA_0009ET";
            internal const string TEXT_18_0009AS = "TEXT_18_0009AS";
            internal const string TEXT_18_0009 = "TEXT_18_0009";
            internal const string TEXT_18_0009XX = "TEXT_18_0009XX";
            internal const string EXPORT_BATCH_0010EV = "EXPORT_BATCH_0010EV";
            internal const string IEF_SUPPLIED_0010ET = "IEF_SUPPLIED_0010ET";
            internal const string COUNT_0010AS = "COUNT_0010AS";
            internal const string COUNT_0010 = "COUNT_0010";
            internal const string COUNT_0010XX = "COUNT_0010XX";
            internal const string EXPORT_RECORD_0011EV = "EXPORT_RECORD_0011EV";
            internal const string IEF_SUPPLIED_0011ET = "IEF_SUPPLIED_0011ET";
            internal const string COUNT_0011AS = "COUNT_0011AS";
            internal const string COUNT_0011 = "COUNT_0011";
            internal const string COUNT_0011XX = "COUNT_0011XX";
            internal const string EXPORT_EMPLOYEE_SENT_0012EV = "EXPORT_EMPLOYEE_SENT_0012EV";
            internal const string IEF_SUPPLIED_0012ET = "IEF_SUPPLIED_0012ET";
            internal const string COUNT_0012AS = "COUNT_0012AS";
            internal const string COUNT_0012 = "COUNT_0012";
            internal const string COUNT_0012XX = "COUNT_0012XX";
            internal const string EXPORT_STATE_SENT_0013EV = "EXPORT_STATE_SENT_0013EV";
            internal const string IEF_SUPPLIED_0013ET = "IEF_SUPPLIED_0013ET";
            internal const string COUNT_0013AS = "COUNT_0013AS";
            internal const string COUNT_0013 = "COUNT_0013";
            internal const string COUNT_0013XX = "COUNT_0013XX";
            internal const string EXPORT_DOC_ACTION_CODE_0014EV = "EXPORT_DOC_ACTION_CODE_0014EV";
            internal const string WORK_AREA_0014ET = "WORK_AREA_0014ET";
            internal const string TEXT_3_0014AS = "TEXT_3_0014AS";
            internal const string TEXT_3_0014 = "TEXT_3_0014";
            internal const string TEXT_3_0014XX = "TEXT_3_0014XX";
            internal const string EXPORT_CASE_ID_0015EV = "EXPORT_CASE_ID_0015EV";
            internal const string WORK_AREA_0015ET = "WORK_AREA_0015ET";
            internal const string TEXT_15_0015AS = "TEXT_15_0015AS";
            internal const string TEXT_15_0015 = "TEXT_15_0015";
            internal const string TEXT_15_0015XX = "TEXT_15_0015XX";
            internal const string EXPORT_0016EV = "EXPORT_0016EV";
            internal const string EMPLOYER_0016ET = "EMPLOYER_0016ET";
            internal const string EIN_0016AS = "EIN_0016AS";
            internal const string EIN_0016 = "EIN_0016";
            internal const string EIN_0016XX = "EIN_0016XX";
            internal const string EXPORT_EMPLOYEE_0017EV = "EXPORT_EMPLOYEE_0017EV";
            internal const string CSE_PERSONS_WORK_SET_0017ET = "CSE_PERSONS_WORK_SET_0017ET";
            internal const string SSN_0017AS = "SSN_0017AS";
            internal const string SSN_0017 = "SSN_0017";
            internal const string SSN_0017XX = "SSN_0017XX";
            internal const string FIRST_NAME_0017AS = "FIRST_NAME_0017AS";
            internal const string FIRST_NAME_0017 = "FIRST_NAME_0017";
            internal const string FIRST_NAME_0017XX = "FIRST_NAME_0017XX";
            internal const string MIDDLE_INITIAL_0017AS = "MIDDLE_INITIAL_0017AS";
            internal const string MIDDLE_INITIAL_0017 = "MIDDLE_INITIAL_0017";
            internal const string MIDDLE_INITIAL_0017XX = "MIDDLE_INITIAL_0017XX";
            internal const string LAST_NAME_0017AS = "LAST_NAME_0017AS";
            internal const string LAST_NAME_0017 = "LAST_NAME_0017";
            internal const string LAST_NAME_0017XX = "LAST_NAME_0017XX";
            internal const string EXPORT_EMPLOYEE_SUFFIX_0018EV = "EXPORT_EMPLOYEE_SUFFIX_0018EV";
            internal const string WORK_AREA_0018ET = "WORK_AREA_0018ET";
            internal const string TEXT_4_0018AS = "TEXT_4_0018AS";
            internal const string TEXT_4_0018 = "TEXT_4_0018";
            internal const string TEXT_4_0018XX = "TEXT_4_0018XX";
            internal const string EXPORT_DOC_TRACKING_NUM_0019EV = "EXPORT_DOC_TRACKING_NUM_0019EV";
            internal const string TEXT_WORK_AREA_0019ET = "TEXT_WORK_AREA_0019ET";
            internal const string TEXT_30_0019AS = "TEXT_30_0019AS";
            internal const string TEXT_30_0019 = "TEXT_30_0019";
            internal const string TEXT_30_0019XX = "TEXT_30_0019XX";
            internal const string EXPORT_0020EV = "EXPORT_0020EV";
            internal const string LEGAL_ACTION_0020ET = "LEGAL_ACTION_0020ET";
            internal const string STANDARD_NUMBER_0020AS = "STANDARD_NUMBER_0020AS";
            internal const string STANDARD_NUMBER_0020 = "STANDARD_NUMBER_0020";
            internal const string STANDARD_NUMBER_0020XX = "STANDARD_NUMBER_0020XX";
            internal const string EXPORT_REC_DISP_STATS_C_0021EV = "EXPORT_REC_DISP_STATS_C_0021EV";
            internal const string WORK_AREA_0021ET = "WORK_AREA_0021ET";
            internal const string TEXT_2_0021AS = "TEXT_2_0021AS";
            internal const string TEXT_2_0021 = "TEXT_2_0021";
            internal const string TEXT_2_0021XX = "TEXT_2_0021XX";
            internal const string EXPORT_DISPOSION_REASON_0022EV = "EXPORT_DISPOSION_REASON_0022EV";
            internal const string WORK_AREA_0022ET = "WORK_AREA_0022ET";
            internal const string TEXT_3_0022AS = "TEXT_3_0022AS";
            internal const string TEXT_3_0022 = "TEXT_3_0022";
            internal const string TEXT_3_0022XX = "TEXT_3_0022XX";
            internal const string EXPORT_TERMINATION_DATE_0023EV = "EXPORT_TERMINATION_DATE_0023EV";
            internal const string DATE_WORK_AREA_0023ET = "DATE_WORK_AREA_0023ET";
            internal const string DATE_0023AS = "DATE_0023AS";
            internal const string DATE_0023 = "DATE_0023";
            internal const string DATE_0023XX = "DATE_0023XX";
            internal const string EXPORT_NCP_LAST_0024EV = "EXPORT_NCP_LAST_0024EV";
            internal const string CSE_PERSON_ADDRESS_0024ET = "CSE_PERSON_ADDRESS_0024ET";
            internal const string LOCATION_TYPE_0024AS = "LOCATION_TYPE_0024AS";
            internal const string LOCATION_TYPE_0024 = "LOCATION_TYPE_0024";
            internal const string LOCATION_TYPE_0024XX = "LOCATION_TYPE_0024XX";
            internal const string STREET_1_0024AS = "STREET_1_0024AS";
            internal const string STREET_1_0024 = "STREET_1_0024";
            internal const string STREET_1_0024XX = "STREET_1_0024XX";
            internal const string STREET_2_0024AS = "STREET_2_0024AS";
            internal const string STREET_2_0024 = "STREET_2_0024";
            internal const string STREET_2_0024XX = "STREET_2_0024XX";
            internal const string CITY_0024AS = "CITY_0024AS";
            internal const string CITY_0024 = "CITY_0024";
            internal const string CITY_0024XX = "CITY_0024XX";
            internal const string STATE_0024AS = "STATE_0024AS";
            internal const string STATE_0024 = "STATE_0024";
            internal const string STATE_0024XX = "STATE_0024XX";
            internal const string ZIP_CODE_0024AS = "ZIP_CODE_0024AS";
            internal const string ZIP_CODE_0024 = "ZIP_CODE_0024";
            internal const string ZIP_CODE_0024XX = "ZIP_CODE_0024XX";
            internal const string ZIP4_0024AS = "ZIP4_0024AS";
            internal const string ZIP4_0024 = "ZIP4_0024";
            internal const string ZIP4_0024XX = "ZIP4_0024XX";
            internal const string EXPORT_FINALLY_PAYMENT_0025EV = "EXPORT_FINALLY_PAYMENT_0025EV";
            internal const string DATE_WORK_AREA_0025ET = "DATE_WORK_AREA_0025ET";
            internal const string DATE_0025AS = "DATE_0025AS";
            internal const string DATE_0025 = "DATE_0025";
            internal const string DATE_0025XX = "DATE_0025XX";
            internal const string EXPORT_FINAL_PAYMENT_0026EV = "EXPORT_FINAL_PAYMENT_0026EV";
            internal const string IEF_SUPPLIED_0026ET = "IEF_SUPPLIED_0026ET";
            internal const string AVERAGE_CURRENCY_0026AS = "AVERAGE_CURRENCY_0026AS";
            internal const string AVERAGE_CURRENCY_0026 = "AVERAGE_CURRENCY_0026";
            internal const string AVERAGE_CURRENCY_0026XX = "AVERAGE_CURRENCY_0026XX";
            internal const string EXPORT_NEW_0027EV = "EXPORT_NEW_0027EV";
            internal const string EMPLOYER_0027ET = "EMPLOYER_0027ET";
            internal const string NAME_0027AS = "NAME_0027AS";
            internal const string NAME_0027 = "NAME_0027";
            internal const string NAME_0027XX = "NAME_0027XX";
            internal const string EXPORT_NEW_0028EV = "EXPORT_NEW_0028EV";
            internal const string EMPLOYER_ADDRESS_0028ET = "EMPLOYER_ADDRESS_0028ET";
            internal const string LOCATION_TYPE_0028AS = "LOCATION_TYPE_0028AS";
            internal const string LOCATION_TYPE_0028 = "LOCATION_TYPE_0028";
            internal const string LOCATION_TYPE_0028XX = "LOCATION_TYPE_0028XX";
            internal const string STREET1_0028AS = "STREET1_0028AS";
            internal const string STREET1_0028 = "STREET1_0028";
            internal const string STREET1_0028XX = "STREET1_0028XX";
            internal const string STREET2_0028AS = "STREET2_0028AS";
            internal const string STREET2_0028 = "STREET2_0028";
            internal const string STREET2_0028XX = "STREET2_0028XX";
            internal const string CITY_0028AS = "CITY_0028AS";
            internal const string CITY_0028 = "CITY_0028";
            internal const string CITY_0028XX = "CITY_0028XX";
            internal const string STATE_0028AS = "STATE_0028AS";
            internal const string STATE_0028 = "STATE_0028";
            internal const string STATE_0028XX = "STATE_0028XX";
            internal const string ZIP_CODE_0028AS = "ZIP_CODE_0028AS";
            internal const string ZIP_CODE_0028 = "ZIP_CODE_0028";
            internal const string ZIP_CODE_0028XX = "ZIP_CODE_0028XX";
            internal const string ZIP4_0028AS = "ZIP4_0028AS";
            internal const string ZIP4_0028 = "ZIP4_0028";
            internal const string ZIP4_0028XX = "ZIP4_0028XX";
            internal const string EXPORT_LUMP_SUM_0029EV = "EXPORT_LUMP_SUM_0029EV";
            internal const string DATE_WORK_AREA_0029ET = "DATE_WORK_AREA_0029ET";
            internal const string DATE_0029AS = "DATE_0029AS";
            internal const string DATE_0029 = "DATE_0029";
            internal const string DATE_0029XX = "DATE_0029XX";
            internal const string EXPORT_LUMP_SUM_0030EV = "EXPORT_LUMP_SUM_0030EV";
            internal const string IEF_SUPPLIED_0030ET = "IEF_SUPPLIED_0030ET";
            internal const string AVERAGE_CURRENCY_0030AS = "AVERAGE_CURRENCY_0030AS";
            internal const string AVERAGE_CURRENCY_0030 = "AVERAGE_CURRENCY_0030";
            internal const string AVERAGE_CURRENCY_0030XX = "AVERAGE_CURRENCY_0030XX";
            internal const string EXPORT_LUMP_SUM_TYPE_0031EV = "EXPORT_LUMP_SUM_TYPE_0031EV";
            internal const string WORK_AREA_0031ET = "WORK_AREA_0031ET";
            internal const string TEXT_35_0031AS = "TEXT_35_0031AS";
            internal const string TEXT_35_0031 = "TEXT_35_0031";
            internal const string TEXT_35_0031XX = "TEXT_35_0031XX";
            internal const string EXPORT_NCP_LAST_KNOWN_0032EV = "EXPORT_NCP_LAST_KNOWN_0032EV";
            internal const string CSE_PERSON_0032ET = "CSE_PERSON_0032ET";
            internal const string TYPE_0032AS = "TYPE_0032AS";
            internal const string TYPE_0032 = "TYPE_0032";
            internal const string TYPE_0032XX = "TYPE_0032XX";
            internal const string OTHER_AREA_CODE_0032AS = "OTHER_AREA_CODE_0032AS";
            internal const string OTHER_AREA_CODE_0032 = "OTHER_AREA_CODE_0032";
            internal const string OTHER_AREA_CODE_0032XX = "OTHER_AREA_CODE_0032XX";
            internal const string OTHER_NUMBER_0032AS = "OTHER_NUMBER_0032AS";
            internal const string OTHER_NUMBER_0032 = "OTHER_NUMBER_0032";
            internal const string OTHER_NUMBER_0032XX = "OTHER_NUMBER_0032XX";
            internal const string EXPORT_1ST_ERROR_FIELD__0033EV = "EXPORT_1ST_ERROR_FIELD__0033EV";
            internal const string WORK_AREA_0033ET = "WORK_AREA_0033ET";
            internal const string TEXT_32_0033AS = "TEXT_32_0033AS";
            internal const string TEXT_32_0033 = "TEXT_32_0033";
            internal const string TEXT_32_0033XX = "TEXT_32_0033XX";
            internal const string EXPORT_2ND_ERROR_FIELD__0034EV = "EXPORT_2ND_ERROR_FIELD__0034EV";
            internal const string WORK_AREA_0034ET = "WORK_AREA_0034ET";
            internal const string TEXT_32_0034AS = "TEXT_32_0034AS";
            internal const string TEXT_32_0034 = "TEXT_32_0034";
            internal const string TEXT_32_0034XX = "TEXT_32_0034XX";
            internal const string EXPORT_MULTIPLE_ERROR_I_0035EV = "EXPORT_MULTIPLE_ERROR_I_0035EV";
            internal const string WORK_AREA_0035ET = "WORK_AREA_0035ET";
            internal const string TEXT_1_0035AS = "TEXT_1_0035AS";
            internal const string TEXT_1_0035 = "TEXT_1_0035";
            internal const string TEXT_1_0035XX = "TEXT_1_0035XX";
            internal const string EXPORT_CORRECTED_0036EV = "EXPORT_CORRECTED_0036EV";
            internal const string EMPLOYER_0036ET = "EMPLOYER_0036ET";
            internal const string EIN_0036AS = "EIN_0036AS";
            internal const string EIN_0036 = "EIN_0036";
            internal const string EIN_0036XX = "EIN_0036XX";
            internal const string EXPORT_MULTI_IWO_ST_COD_0037EV = "EXPORT_MULTI_IWO_ST_COD_0037EV";
            internal const string WORK_AREA_0037ET = "WORK_AREA_0037ET";
            internal const string TEXT_2_0037AS = "TEXT_2_0037AS";
            internal const string TEXT_2_0037 = "TEXT_2_0037";
            internal const string TEXT_2_0037XX = "TEXT_2_0037XX";
            internal const string EXPORT_0038EV = "EXPORT_0038EV";
            internal const string EXTERNAL_0038ET = "EXTERNAL_0038ET";
            internal const string NUMERIC_RETURN_CODE_0038AS = "NUMERIC_RETURN_CODE_0038AS";
            internal const string NUMERIC_RETURN_CODE_0038 = "NUMERIC_RETURN_CODE_0038";
            internal const string NUMERIC_RETURN_CODE_0038XX = "NUMERIC_RETURN_CODE_0038XX";
            internal const string TEXT_RETURN_CODE_0038AS = "TEXT_RETURN_CODE_0038AS";
            internal const string TEXT_RETURN_CODE_0038 = "TEXT_RETURN_CODE_0038";
            internal const string TEXT_RETURN_CODE_0038XX = "TEXT_RETURN_CODE_0038XX";
            internal const string TEXT_LINE_80_0038AS = "TEXT_LINE_80_0038AS";
            internal const string TEXT_LINE_80_0038 = "TEXT_LINE_80_0038";
            internal const string TEXT_LINE_80_0038XX = "TEXT_LINE_80_0038XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup GLOBDATA { get { return GetElementByName<IGroup>(Names.GLOBDATA); } }
        public IGroup PSMGR_IEF_COMMAND { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_COMMAND); } }
        public IField PSMGR_IEF_COMMAND_1 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_1); } }
        public IField PSMGR_IEF_COMMAND_2 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_2); } }
        public IField PSMGR_IEF_TRANCODE { get { return GetElementByName<IField>(Names.PSMGR_IEF_TRANCODE); } }
        public IField PSMGR_EXIT_STATE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_STATE); } }
        public IField PSMGR_EXIT_INFOMSG { get { return GetElementByName<IField>(Names.PSMGR_EXIT_INFOMSG); } }
        public IField PSMGR_USER_ID { get { return GetElementByName<IField>(Names.PSMGR_USER_ID); } }
        public IField PSMGR_TERMINAL_ID { get { return GetElementByName<IField>(Names.PSMGR_TERMINAL_ID); } }
        public IField PSMGR_PRINTER_ID { get { return GetElementByName<IField>(Names.PSMGR_PRINTER_ID); } }
        public IField PSMGR_CURRENT_DATE { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_DATE); } }
        public IField PSMGR_CURRENT_TIME { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_TIME); } }
        public IField PSMGR_RUNTIME_TYPE { get { return GetElementByName<IField>(Names.PSMGR_RUNTIME_TYPE); } }
        public IGroup PSMGR_FUNCTION_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA); } }
        public IField PSMGR_FUNC_ERRMSG { get { return GetElementByName<IField>(Names.PSMGR_FUNC_ERRMSG); } }
        public IField PSMGR_FUNC_NAME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_NAME); } }
        public IField PSMGR_FUNC_IN_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_DATE); } }
        public IGroup PSMGR_FUNC_IN_DDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_DDURA); } }
        public IGroup DDURA_YEAR { get { return GetElementByName<IGroup>(Names.DDURA_YEAR); } }
        public IField DDURA_Y_MISS { get { return GetElementByName<IField>(Names.DDURA_Y_MISS); } }
        public IField DDURA_YYYY { get { return GetElementByName<IField>(Names.DDURA_YYYY); } }
        public IGroup DDURA_MONTH { get { return GetElementByName<IGroup>(Names.DDURA_MONTH); } }
        public IField DDURA_M_MISS { get { return GetElementByName<IField>(Names.DDURA_M_MISS); } }
        public IField DDURA_MM { get { return GetElementByName<IField>(Names.DDURA_MM); } }
        public IGroup DDURA_DAY { get { return GetElementByName<IGroup>(Names.DDURA_DAY); } }
        public IField DDURA_D_MISS { get { return GetElementByName<IField>(Names.DDURA_D_MISS); } }
        public IField DDURA_DD { get { return GetElementByName<IField>(Names.DDURA_DD); } }
        public IField PSMGR_FUNC_OUT_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_DATE); } }
        public IField PSMGR_FUNC_IN_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIME); } }
        public IGroup PSMGR_FUNC_IN_TDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TDURA); } }
        public IGroup TDURA_HOUR { get { return GetElementByName<IGroup>(Names.TDURA_HOUR); } }
        public IField TDURA_H_MISS { get { return GetElementByName<IField>(Names.TDURA_H_MISS); } }
        public IField TDURA_HH { get { return GetElementByName<IField>(Names.TDURA_HH); } }
        public IGroup TDURA_MINUTE { get { return GetElementByName<IGroup>(Names.TDURA_MINUTE); } }
        public IField TDURA_M_MISS { get { return GetElementByName<IField>(Names.TDURA_M_MISS); } }
        public IField TDURA_MM { get { return GetElementByName<IField>(Names.TDURA_MM); } }
        public IGroup TDURA_SECOND { get { return GetElementByName<IGroup>(Names.TDURA_SECOND); } }
        public IField TDURA_S_MISS { get { return GetElementByName<IField>(Names.TDURA_S_MISS); } }
        public IField TDURA_SS { get { return GetElementByName<IField>(Names.TDURA_SS); } }
        public IField PSMGR_FUNC_OUT_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIME); } }
        public IField PSMGR_IEF_NEXTTRAN { get { return GetElementByName<IField>(Names.PSMGR_IEF_NEXTTRAN); } }
        public IField PSMGR_EXIT_MSGTYPE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_MSGTYPE); } }
        public IGroup PSMGR_IEF_DEBUG_FLAGS { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_DEBUG_FLAGS); } }
        public IField PSMGR_IEF_DEBUG { get { return GetElementByName<IField>(Names.PSMGR_IEF_DEBUG); } }
        public ICheckField PSMGR_DEBUG_ON { get { return GetElementByName<ICheckField>(Names.PSMGR_DEBUG_ON); } }
        public IGroup PSMGR_ENVIRONMENT_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ENVIRONMENT_DATA); } }
        public IField PSMGR_PCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_PCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_PCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_PCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_PCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_PCB_ADR); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup PSMGR_ERROR_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ERROR_DATA); } }
        public IField ERROR_ACTION_NAME { get { return GetElementByName<IField>(Names.ERROR_ACTION_NAME); } }
        public IField ERROR_ENCOUNTERED_SW { get { return GetElementByName<IField>(Names.ERROR_ENCOUNTERED_SW); } }
        public IField VIEW_OVERFLOW_SW { get { return GetElementByName<IField>(Names.VIEW_OVERFLOW_SW); } }
        public IGroup PSMGR_DASG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DASG_DATA); } }
        public IGroup ACTION_ID_X { get { return GetElementByName<IGroup>(Names.ACTION_ID_X); } }
        public IField ACTION_ID { get { return GetElementByName<IField>(Names.ACTION_ID); } }
        public IGroup ATTRIBUTE_ID_X { get { return GetElementByName<IGroup>(Names.ATTRIBUTE_ID_X); } }
        public IField ATTRIBUTE_ID { get { return GetElementByName<IField>(Names.ATTRIBUTE_ID); } }
        public IField STATUS_FLAG { get { return GetElementByName<IField>(Names.STATUS_FLAG); } }
        public ICheckField WHEN_SUCCESSFUL_SF { get { return GetElementByName<ICheckField>(Names.WHEN_SUCCESSFUL_SF); } }
        public ICheckField FATAL_ERROR_SF { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_SF); } }
        public ICheckField DB_ERROR_SF { get { return GetElementByName<ICheckField>(Names.DB_ERROR_SF); } }
        public ICheckField ABORT_SHOW_DBMS_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_DBMS_MSG_SF); } }
        public ICheckField ABORT_SHOW_USER_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_USER_MSG_SF); } }
        public ICheckField RETRY_TRAN_REQUESTED_SF { get { return GetElementByName<ICheckField>(Names.RETRY_TRAN_REQUESTED_SF); } }
        public ICheckField PSTEP_USE_FAILURE { get { return GetElementByName<ICheckField>(Names.PSTEP_USE_FAILURE); } }
        public ICheckField ASYNC_WHEN_AVAILABLE_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_AVAILABLE_SF); } }
        public ICheckField ASYNC_WHEN_ACCEPTED_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_ACCEPTED_SF); } }
        public ICheckField ASYNC_WHEN_NOT_ACCEPTED_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_NOT_ACCEPTED_SF); } }
        public ICheckField ASYNC_WHEN_INVALID_ID_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_INVALID_ID_SF); } }
        public ICheckField ASYNC_WHEN_PENDING_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_PENDING_SF); } }
        public ICheckField ASYNC_WHEN_SERVER_ERROR_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_SERVER_ERROR_SF); } }
        public ICheckField ASYNC_WHEN_COMM_ERROR_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_COMM_ERROR_SF); } }
        public IField LAST_STATUS { get { return GetElementByName<IField>(Names.LAST_STATUS); } }
        public ICheckField DB_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_ERROR_FL_LS); } }
        public ICheckField DB_DEADLOCK_TIMOUT_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_DEADLOCK_TIMOUT_FL_LS); } }
        public ICheckField DUPLICATE_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.DUPLICATE_FOUND_FL_LS); } }
        public ICheckField INVALID_DATAA_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAA_FL_LS); } }
        public ICheckField INVALID_DATAB_TYPE_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_TYPE_FL_LS); } }
        public ICheckField INVALID_DATAB_PERM_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_PERM_FL_LS); } }
        public ICheckField FATAL_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_FL_LS); } }
        public ICheckField NOT_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_FOUND_FL_LS); } }
        public ICheckField NOT_UNIQUE_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_UNIQUE_FL_LS); } }
        public ICheckField IEF_FUNCTION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_FUNCTION_ERROR_FL_LS); } }
        public ICheckField IEF_DURATION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_DURATION_ERROR_FL_LS); } }
        public ICheckField USED_PSTEP_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_NOT_FOUND); } }
        public ICheckField USED_PSTEP_ROUTING_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ROUTING_ERR); } }
        public ICheckField USED_PSTEP_SND_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_FMT_ERR); } }
        public ICheckField USED_PSTEP_ENCRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ENCRYPT_ERR); } }
        public ICheckField USED_PSTEP_SND_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_FMT_ERR); } }
        public ICheckField USED_PSTEP_TIRSECR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TIRSECR_ERR); } }
        public ICheckField USED_PSTEP_TOKEN_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TOKEN_ERR); } }
        public ICheckField USED_PSTEP_SEND_MAX_SIZE { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SEND_MAX_SIZE); } }
        public ICheckField USED_PSTEP_SECG_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SECG_ERR); } }
        public ICheckField USED_PSTEP_ALLOC_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ALLOC_ERR); } }
        public ICheckField USED_PSTEP_CONNECT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_CONNECT_ERR); } }
        public ICheckField USED_PSTEP_XERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XERR); } }
        public ICheckField USED_PSTEP_RCV_UA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_UA_ERR); } }
        public ICheckField USED_PSTEP_RCV_ES_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_ES_ERR); } }
        public ICheckField USED_PSTEP_XFAL { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XFAL); } }
        public ICheckField USED_PSTEP_SETOA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SETOA_ERR); } }
        public ICheckField USED_PSTEP_RCV_VIEW_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_VIEW_ERR); } }
        public ICheckField USED_PSTEP_DECRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_DECRYPT_ERR); } }
        public IField SAVE_SQLCA { get { return GetElementByName<IField>(Names.SAVE_SQLCA); } }
        public IGroup PSMGR_DEBUG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DEBUG_DATA); } }
        public IField PSMGR_TRACE_ADR { get { return GetElementByName<IField>(Names.PSMGR_TRACE_ADR); } }
        public IGroup LAST_STATEMENT_X { get { return GetElementByName<IGroup>(Names.LAST_STATEMENT_X); } }
        public IField LAST_STATEMENT_NUM { get { return GetElementByName<IField>(Names.LAST_STATEMENT_NUM); } }
        public IField CUR_AB_ID { get { return GetElementByName<IField>(Names.CUR_AB_ID); } }
        public IField CUR_AB_NAME { get { return GetElementByName<IField>(Names.CUR_AB_NAME); } }
        public IField PSMGR_TIRDATE_SAVEAREA { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SAVEAREA); } }
        public IGroup PSMGR_TIRDATE_CMCB { get { return GetElementByName<IGroup>(Names.PSMGR_TIRDATE_CMCB); } }
        public IField PSMGR_TIRDATE_DATE { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE); } }
        public IField PSMGR_TIRDATE_TIME { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME); } }
        public IField PSMGR_TIRDATE_INC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_INC); } }
        public IField PSMGR_TIRDATE_RC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RC); } }
        public ICheckField PSMGR_TIRDATE_OK { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_OK); } }
        public ICheckField PSMGR_TIRDATE_WARNING { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_WARNING); } }
        public ICheckField PSMGR_TIRDATE_ERROR { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_ERROR); } }
        public IField PSMGR_TIRDATE_REQ { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_REQ); } }
        public IField PSMGR_TIRDATE_DATEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATEF); } }
        public IField PSMGR_TIRDATE_TIMEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIMEF); } }
        public IField PSMGR_TIRDATE_RETMSG { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RETMSG); } }
        public IField PSMGR_TIRDATE_TSTAMP { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TSTAMP); } }
        public IField PSMGR_TIRDATE_DATE_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE_Z); } }
        public IField PSMGR_TIRDATE_TIME_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME_Z); } }
        public IField PSMGR_TIRDATE_SKIP_VAL { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SKIP_VAL); } }
        public IField PSMGR_ROLLBACK_RQSTED { get { return GetElementByName<IField>(Names.PSMGR_ROLLBACK_RQSTED); } }
        public ICheckField ROLLBACK_RQSTED { get { return GetElementByName<ICheckField>(Names.ROLLBACK_RQSTED); } }
        public ICheckField ABEND_RQSTED { get { return GetElementByName<ICheckField>(Names.ABEND_RQSTED); } }
        public ICheckField TERMINATE_RQSTED { get { return GetElementByName<ICheckField>(Names.TERMINATE_RQSTED); } }
        public IGroup TIRTRCE_SAVE_AREA { get { return GetElementByName<IGroup>(Names.TIRTRCE_SAVE_AREA); } }
        public IField TOP_INDX { get { return GetElementByName<IField>(Names.TOP_INDX); } }
        public IField BOTTOM_INDX { get { return GetElementByName<IField>(Names.BOTTOM_INDX); } }
        public IField END_INDX { get { return GetElementByName<IField>(Names.END_INDX); } }
        public IField LAST_STMT { get { return GetElementByName<IField>(Names.LAST_STMT); } }
        public IField TOP_OF_CALL { get { return GetElementByName<IField>(Names.TOP_OF_CALL); } }
        public IField TRACE_BREAK_POINT { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT); } }
        public IField TRACE_BREAK_POINT_STATUS { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT_STATUS); } }
        public IField LAST_AB_NAME { get { return GetElementByName<IField>(Names.LAST_AB_NAME); } }
        public IField COLOR { get { return GetElementByName<IField>(Names.COLOR); } }
        public IField COLORT { get { return GetElementByName<IField>(Names.COLORT); } }
        public IField HILITE { get { return GetElementByName<IField>(Names.HILITE); } }
        public IField TRACE_ON_OFF { get { return GetElementByName<IField>(Names.TRACE_ON_OFF); } }
        public IGroup CASCADE_DELETE_FLAGS { get { return GetElementByName<IGroup>(Names.CASCADE_DELETE_FLAGS); } }
        public IField V1PRESENT { get { return GetElementByName<IField>(Names.V1PRESENT); } }
        public IField V2PRESENT { get { return GetElementByName<IField>(Names.V2PRESENT); } }
        public IField CASCADE1 { get { return GetElementByName<IField>(Names.CASCADE1); } }
        public IField CASCADE2 { get { return GetElementByName<IField>(Names.CASCADE2); } }
        public IField PROCESSQ_FLAG { get { return GetElementByName<IField>(Names.PROCESSQ_FLAG); } }
        public IGroup PSMGR_ACTIVE_DIALECT { get { return GetElementByName<IGroup>(Names.PSMGR_ACTIVE_DIALECT); } }
        public IField DIALECT_NAME { get { return GetElementByName<IField>(Names.DIALECT_NAME); } }
        public IField MESSAGE_TABLE_NAME { get { return GetElementByName<IField>(Names.MESSAGE_TABLE_NAME); } }
        public IField TRANSLATE_TABLE_NAME { get { return GetElementByName<IField>(Names.TRANSLATE_TABLE_NAME); } }
        public IGroup PSMGR_FUNCTION_DATA_EXT { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA_EXT); } }
        public IField PSMGR_FUNC_IN_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIMESTAMP); } }
        public IGroup PSMGR_FUNC_IN_TSDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TSDURA); } }
        public IGroup TSDURA_MICROSECOND { get { return GetElementByName<IGroup>(Names.TSDURA_MICROSECOND); } }
        public IField TSDURA_M_MISS { get { return GetElementByName<IField>(Names.TSDURA_M_MISS); } }
        public IField TSDURA_MS { get { return GetElementByName<IField>(Names.TSDURA_MS); } }
        public IField PSMGR_FUNC_OUT_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIMESTAMP); } }
        public IField PSMGR_CICS_FAIL_SW { get { return GetElementByName<IField>(Names.PSMGR_CICS_FAIL_SW); } }
        public ICheckField INHIBIT_CICS_RECEIVE { get { return GetElementByName<ICheckField>(Names.INHIBIT_CICS_RECEIVE); } }
        public IField CLIENT_USERID { get { return GetElementByName<IField>(Names.CLIENT_USERID); } }
        public IField CLIENT_PASSWORD { get { return GetElementByName<IField>(Names.CLIENT_PASSWORD); } }
        public IField LOAD_MODULE_NAME { get { return GetElementByName<IField>(Names.LOAD_MODULE_NAME); } }
        public IField INSTRUMENT_CODE { get { return GetElementByName<IField>(Names.INSTRUMENT_CODE); } }
        public IField TX_RETRY_LIMIT { get { return GetElementByName<IField>(Names.TX_RETRY_LIMIT); } }
        public IField TX_TIMEOUT { get { return GetElementByName<IField>(Names.TX_TIMEOUT); } }
        public IGroup PSMGR_EXTRA_ERRINFO { get { return GetElementByName<IGroup>(Names.PSMGR_EXTRA_ERRINFO); } }
        public IField ERRINFO_BUF_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_BUF_SIZE); } }
        public IField ERRINFO_MSG_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_MSG_SIZE); } }
        public IField ERRINFO_BUF_ADDR { get { return GetElementByName<IField>(Names.ERRINFO_BUF_ADDR); } }
        public IField TX_RETRY_COUNT { get { return GetElementByName<IField>(Names.TX_RETRY_COUNT); } }
        public IField TX_USER_RETRY_ALLOWED { get { return GetElementByName<IField>(Names.TX_USER_RETRY_ALLOWED); } }
        public IGroup PSMGR_PSTEP_USE_PTRS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_PTRS); } }
        public IField PSTEP_FAIL_MSG_PTR { get { return GetElementByName<IField>(Names.PSTEP_FAIL_MSG_PTR); } }
        public IField PSTEP_GURB_REST_PTR { get { return GetElementByName<IField>(Names.PSTEP_GURB_REST_PTR); } }
        public IField PSTEP_LIPS_PTR { get { return GetElementByName<IField>(Names.PSTEP_LIPS_PTR); } }
        public IField PSTEP_TBL_PTR { get { return GetElementByName<IField>(Names.PSTEP_TBL_PTR); } }
        public IField PSTEP_DDF_PTR { get { return GetElementByName<IField>(Names.PSTEP_DDF_PTR); } }
        public IField PSTEP_COMM_ID { get { return GetElementByName<IField>(Names.PSTEP_COMM_ID); } }
        public IField PSTEP_APPL_LIST_PTR { get { return GetElementByName<IField>(Names.PSTEP_APPL_LIST_PTR); } }
        public IField PSTEP_CURR_PST_PTR { get { return GetElementByName<IField>(Names.PSTEP_CURR_PST_PTR); } }
        public IGroup PSMGR_PSTEP_USE_SYSFLDS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_SYSFLDS); } }
        public IField PSMGR_EIBERRCD { get { return GetElementByName<IField>(Names.PSMGR_EIBERRCD); } }
        public IField PSMGR_EIBFN { get { return GetElementByName<IField>(Names.PSMGR_EIBFN); } }
        public IField PSMGR_EIBRESP { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP); } }
        public IField PSMGR_EIBRESP2 { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP2); } }
        public IGroup PSMGR_ASYNC_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ASYNC_DATA); } }
        public IField ASYNC_MODE { get { return GetElementByName<IField>(Names.ASYNC_MODE); } }
        public ICheckField FLOW_TYPE_SYNC { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_SYNC); } }
        public ICheckField FLOW_TYPE_ASYNC { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_ASYNC); } }
        public ICheckField FLOW_TYPE_NO_RESPONSE { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_NO_RESPONSE); } }
        public IField ASYNC_FLOW_STATUS_TABLE_PTR { get { return GetElementByName<IField>(Names.ASYNC_FLOW_STATUS_TABLE_PTR); } }
        public IField ASYNC_SERVER_LOC_TABLE_PTR { get { return GetElementByName<IField>(Names.ASYNC_SERVER_LOC_TABLE_PTR); } }
        public IGroup PSMGR_HEAP { get { return GetElementByName<IGroup>(Names.PSMGR_HEAP); } }
        public IGroup HEAP_CFB { get { return GetElementByName<IGroup>(Names.HEAP_CFB); } }
        public IField HEAP_CFB_ADDR { get { return GetElementByName<IField>(Names.HEAP_CFB_ADDR); } }
        public IField HEAP_CFB_ADDR_RESV { get { return GetElementByName<IField>(Names.HEAP_CFB_ADDR_RESV); } }
        public IField HEAP_CFB_ID { get { return GetElementByName<IField>(Names.HEAP_CFB_ID); } }
        public IField HEAP_CFB_LEN { get { return GetElementByName<IField>(Names.HEAP_CFB_LEN); } }
        public IGroup HEAP_WGLOB { get { return GetElementByName<IGroup>(Names.HEAP_WGLOB); } }
        public IField HEAP_WGLOB_ADDR { get { return GetElementByName<IField>(Names.HEAP_WGLOB_ADDR); } }
        public IField HEAP_WGLOB_ADDR_RESV { get { return GetElementByName<IField>(Names.HEAP_WGLOB_ADDR_RESV); } }
        public IField HEAP_WGLOB_ID { get { return GetElementByName<IField>(Names.HEAP_WGLOB_ID); } }
        public IField HEAP_WGLOB_LEN { get { return GetElementByName<IField>(Names.HEAP_WGLOB_LEN); } }
        public IField PSMGR_MMCB { get { return GetElementByName<IField>(Names.PSMGR_MMCB); } }
        public IField PSMGR_MMCB_ACTIVE { get { return GetElementByName<IField>(Names.PSMGR_MMCB_ACTIVE); } }
        public IGroup IMPORT_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_0001EV); } }
        public IGroup EAB_FILE_HANDLING_0001ET { get { return GetElementByName<IGroup>(Names.EAB_FILE_HANDLING_0001ET); } }
        public IField ACTION_0001AS { get { return GetElementByName<IField>(Names.ACTION_0001AS); } }
        public IField ACTION_0001 { get { return GetElementByName<IField>(Names.ACTION_0001); } }
        public IField ACTION_0001XX { get { return GetElementByName<IField>(Names.ACTION_0001XX); } }
        public IGroup EXPORT_DOC_CODE_0002EV { get { return GetElementByName<IGroup>(Names.EXPORT_DOC_CODE_0002EV); } }
        public IGroup WORK_AREA_0002ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0002ET); } }
        public IField TEXT_3_0002AS { get { return GetElementByName<IField>(Names.TEXT_3_0002AS); } }
        public IField TEXT_3_0002 { get { return GetElementByName<IField>(Names.TEXT_3_0002); } }
        public IField TEXT_3_0002XX { get { return GetElementByName<IField>(Names.TEXT_3_0002XX); } }
        public IGroup EXPORT_CONTROL_NUM_0003EV { get { return GetElementByName<IGroup>(Names.EXPORT_CONTROL_NUM_0003EV); } }
        public IGroup WORK_AREA_0003ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0003ET); } }
        public IField TEXT_22_0003AS { get { return GetElementByName<IField>(Names.TEXT_22_0003AS); } }
        public IField TEXT_22_0003 { get { return GetElementByName<IField>(Names.TEXT_22_0003); } }
        public IField TEXT_22_0003XX { get { return GetElementByName<IField>(Names.TEXT_22_0003XX); } }
        public IGroup EXPORT_ST_FIPS_CODE_0004EV { get { return GetElementByName<IGroup>(Names.EXPORT_ST_FIPS_CODE_0004EV); } }
        public IGroup WORK_AREA_0004ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0004ET); } }
        public IField TEXT_5_0004AS { get { return GetElementByName<IField>(Names.TEXT_5_0004AS); } }
        public IField TEXT_5_0004 { get { return GetElementByName<IField>(Names.TEXT_5_0004); } }
        public IField TEXT_5_0004XX { get { return GetElementByName<IField>(Names.TEXT_5_0004XX); } }
        public IGroup EXPORT_HEADER_EIN_0005EV { get { return GetElementByName<IGroup>(Names.EXPORT_HEADER_EIN_0005EV); } }
        public IGroup WORK_AREA_0005ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0005ET); } }
        public IField TEXT_9_0005AS { get { return GetElementByName<IField>(Names.TEXT_9_0005AS); } }
        public IField TEXT_9_0005 { get { return GetElementByName<IField>(Names.TEXT_9_0005); } }
        public IField TEXT_9_0005XX { get { return GetElementByName<IField>(Names.TEXT_9_0005XX); } }
        public IGroup EXPORT_HEADER_PRIMARY_E_0006EV { get { return GetElementByName<IGroup>(Names.EXPORT_HEADER_PRIMARY_E_0006EV); } }
        public IGroup WORK_AREA_0006ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0006ET); } }
        public IField TEXT_9_0006AS { get { return GetElementByName<IField>(Names.TEXT_9_0006AS); } }
        public IField TEXT_9_0006 { get { return GetElementByName<IField>(Names.TEXT_9_0006); } }
        public IField TEXT_9_0006XX { get { return GetElementByName<IField>(Names.TEXT_9_0006XX); } }
        public IGroup EXPORT_HEADER_CREATE_DA_0007EV { get { return GetElementByName<IGroup>(Names.EXPORT_HEADER_CREATE_DA_0007EV); } }
        public IGroup DATE_WORK_AREA_0007ET { get { return GetElementByName<IGroup>(Names.DATE_WORK_AREA_0007ET); } }
        public IField DATE_0007AS { get { return GetElementByName<IField>(Names.DATE_0007AS); } }
        public IField DATE_0007 { get { return GetElementByName<IField>(Names.DATE_0007); } }
        public IField DATE_0007XX { get { return GetElementByName<IField>(Names.DATE_0007XX); } }
        public IGroup EXPORT_HEADER_CREATE_TI_0008EV { get { return GetElementByName<IGroup>(Names.EXPORT_HEADER_CREATE_TI_0008EV); } }
        public IGroup DATE_WORK_AREA_0008ET { get { return GetElementByName<IGroup>(Names.DATE_WORK_AREA_0008ET); } }
        public IField TIME_0008AS { get { return GetElementByName<IField>(Names.TIME_0008AS); } }
        public IField TIME_0008 { get { return GetElementByName<IField>(Names.TIME_0008); } }
        public IField TIME_0008XX { get { return GetElementByName<IField>(Names.TIME_0008XX); } }
        public IGroup EXPORT_ERR_FIELD_NAME_0009EV { get { return GetElementByName<IGroup>(Names.EXPORT_ERR_FIELD_NAME_0009EV); } }
        public IGroup WORK_AREA_0009ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0009ET); } }
        public IField TEXT_18_0009AS { get { return GetElementByName<IField>(Names.TEXT_18_0009AS); } }
        public IField TEXT_18_0009 { get { return GetElementByName<IField>(Names.TEXT_18_0009); } }
        public IField TEXT_18_0009XX { get { return GetElementByName<IField>(Names.TEXT_18_0009XX); } }
        public IGroup EXPORT_BATCH_0010EV { get { return GetElementByName<IGroup>(Names.EXPORT_BATCH_0010EV); } }
        public IGroup IEF_SUPPLIED_0010ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0010ET); } }
        public IField COUNT_0010AS { get { return GetElementByName<IField>(Names.COUNT_0010AS); } }
        public IField COUNT_0010 { get { return GetElementByName<IField>(Names.COUNT_0010); } }
        public IField COUNT_0010XX { get { return GetElementByName<IField>(Names.COUNT_0010XX); } }
        public IGroup EXPORT_RECORD_0011EV { get { return GetElementByName<IGroup>(Names.EXPORT_RECORD_0011EV); } }
        public IGroup IEF_SUPPLIED_0011ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0011ET); } }
        public IField COUNT_0011AS { get { return GetElementByName<IField>(Names.COUNT_0011AS); } }
        public IField COUNT_0011 { get { return GetElementByName<IField>(Names.COUNT_0011); } }
        public IField COUNT_0011XX { get { return GetElementByName<IField>(Names.COUNT_0011XX); } }
        public IGroup EXPORT_EMPLOYEE_SENT_0012EV { get { return GetElementByName<IGroup>(Names.EXPORT_EMPLOYEE_SENT_0012EV); } }
        public IGroup IEF_SUPPLIED_0012ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0012ET); } }
        public IField COUNT_0012AS { get { return GetElementByName<IField>(Names.COUNT_0012AS); } }
        public IField COUNT_0012 { get { return GetElementByName<IField>(Names.COUNT_0012); } }
        public IField COUNT_0012XX { get { return GetElementByName<IField>(Names.COUNT_0012XX); } }
        public IGroup EXPORT_STATE_SENT_0013EV { get { return GetElementByName<IGroup>(Names.EXPORT_STATE_SENT_0013EV); } }
        public IGroup IEF_SUPPLIED_0013ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0013ET); } }
        public IField COUNT_0013AS { get { return GetElementByName<IField>(Names.COUNT_0013AS); } }
        public IField COUNT_0013 { get { return GetElementByName<IField>(Names.COUNT_0013); } }
        public IField COUNT_0013XX { get { return GetElementByName<IField>(Names.COUNT_0013XX); } }
        public IGroup EXPORT_DOC_ACTION_CODE_0014EV { get { return GetElementByName<IGroup>(Names.EXPORT_DOC_ACTION_CODE_0014EV); } }
        public IGroup WORK_AREA_0014ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0014ET); } }
        public IField TEXT_3_0014AS { get { return GetElementByName<IField>(Names.TEXT_3_0014AS); } }
        public IField TEXT_3_0014 { get { return GetElementByName<IField>(Names.TEXT_3_0014); } }
        public IField TEXT_3_0014XX { get { return GetElementByName<IField>(Names.TEXT_3_0014XX); } }
        public IGroup EXPORT_CASE_ID_0015EV { get { return GetElementByName<IGroup>(Names.EXPORT_CASE_ID_0015EV); } }
        public IGroup WORK_AREA_0015ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0015ET); } }
        public IField TEXT_15_0015AS { get { return GetElementByName<IField>(Names.TEXT_15_0015AS); } }
        public IField TEXT_15_0015 { get { return GetElementByName<IField>(Names.TEXT_15_0015); } }
        public IField TEXT_15_0015XX { get { return GetElementByName<IField>(Names.TEXT_15_0015XX); } }
        public IGroup EXPORT_0016EV { get { return GetElementByName<IGroup>(Names.EXPORT_0016EV); } }
        public IGroup EMPLOYER_0016ET { get { return GetElementByName<IGroup>(Names.EMPLOYER_0016ET); } }
        public IField EIN_0016AS { get { return GetElementByName<IField>(Names.EIN_0016AS); } }
        public IField EIN_0016 { get { return GetElementByName<IField>(Names.EIN_0016); } }
        public IField EIN_0016XX { get { return GetElementByName<IField>(Names.EIN_0016XX); } }
        public IGroup EXPORT_EMPLOYEE_0017EV { get { return GetElementByName<IGroup>(Names.EXPORT_EMPLOYEE_0017EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0017ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0017ET); } }
        public IField SSN_0017AS { get { return GetElementByName<IField>(Names.SSN_0017AS); } }
        public IField SSN_0017 { get { return GetElementByName<IField>(Names.SSN_0017); } }
        public IField SSN_0017XX { get { return GetElementByName<IField>(Names.SSN_0017XX); } }
        public IField FIRST_NAME_0017AS { get { return GetElementByName<IField>(Names.FIRST_NAME_0017AS); } }
        public IField FIRST_NAME_0017 { get { return GetElementByName<IField>(Names.FIRST_NAME_0017); } }
        public IField FIRST_NAME_0017XX { get { return GetElementByName<IField>(Names.FIRST_NAME_0017XX); } }
        public IField MIDDLE_INITIAL_0017AS { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0017AS); } }
        public IField MIDDLE_INITIAL_0017 { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0017); } }
        public IField MIDDLE_INITIAL_0017XX { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0017XX); } }
        public IField LAST_NAME_0017AS { get { return GetElementByName<IField>(Names.LAST_NAME_0017AS); } }
        public IField LAST_NAME_0017 { get { return GetElementByName<IField>(Names.LAST_NAME_0017); } }
        public IField LAST_NAME_0017XX { get { return GetElementByName<IField>(Names.LAST_NAME_0017XX); } }
        public IGroup EXPORT_EMPLOYEE_SUFFIX_0018EV { get { return GetElementByName<IGroup>(Names.EXPORT_EMPLOYEE_SUFFIX_0018EV); } }
        public IGroup WORK_AREA_0018ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0018ET); } }
        public IField TEXT_4_0018AS { get { return GetElementByName<IField>(Names.TEXT_4_0018AS); } }
        public IField TEXT_4_0018 { get { return GetElementByName<IField>(Names.TEXT_4_0018); } }
        public IField TEXT_4_0018XX { get { return GetElementByName<IField>(Names.TEXT_4_0018XX); } }
        public IGroup EXPORT_DOC_TRACKING_NUM_0019EV { get { return GetElementByName<IGroup>(Names.EXPORT_DOC_TRACKING_NUM_0019EV); } }
        public IGroup TEXT_WORK_AREA_0019ET { get { return GetElementByName<IGroup>(Names.TEXT_WORK_AREA_0019ET); } }
        public IField TEXT_30_0019AS { get { return GetElementByName<IField>(Names.TEXT_30_0019AS); } }
        public IField TEXT_30_0019 { get { return GetElementByName<IField>(Names.TEXT_30_0019); } }
        public IField TEXT_30_0019XX { get { return GetElementByName<IField>(Names.TEXT_30_0019XX); } }
        public IGroup EXPORT_0020EV { get { return GetElementByName<IGroup>(Names.EXPORT_0020EV); } }
        public IGroup LEGAL_ACTION_0020ET { get { return GetElementByName<IGroup>(Names.LEGAL_ACTION_0020ET); } }
        public IField STANDARD_NUMBER_0020AS { get { return GetElementByName<IField>(Names.STANDARD_NUMBER_0020AS); } }
        public IField STANDARD_NUMBER_0020 { get { return GetElementByName<IField>(Names.STANDARD_NUMBER_0020); } }
        public IField STANDARD_NUMBER_0020XX { get { return GetElementByName<IField>(Names.STANDARD_NUMBER_0020XX); } }
        public IGroup EXPORT_REC_DISP_STATS_C_0021EV { get { return GetElementByName<IGroup>(Names.EXPORT_REC_DISP_STATS_C_0021EV); } }
        public IGroup WORK_AREA_0021ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0021ET); } }
        public IField TEXT_2_0021AS { get { return GetElementByName<IField>(Names.TEXT_2_0021AS); } }
        public IField TEXT_2_0021 { get { return GetElementByName<IField>(Names.TEXT_2_0021); } }
        public IField TEXT_2_0021XX { get { return GetElementByName<IField>(Names.TEXT_2_0021XX); } }
        public IGroup EXPORT_DISPOSION_REASON_0022EV { get { return GetElementByName<IGroup>(Names.EXPORT_DISPOSION_REASON_0022EV); } }
        public IGroup WORK_AREA_0022ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0022ET); } }
        public IField TEXT_3_0022AS { get { return GetElementByName<IField>(Names.TEXT_3_0022AS); } }
        public IField TEXT_3_0022 { get { return GetElementByName<IField>(Names.TEXT_3_0022); } }
        public IField TEXT_3_0022XX { get { return GetElementByName<IField>(Names.TEXT_3_0022XX); } }
        public IGroup EXPORT_TERMINATION_DATE_0023EV { get { return GetElementByName<IGroup>(Names.EXPORT_TERMINATION_DATE_0023EV); } }
        public IGroup DATE_WORK_AREA_0023ET { get { return GetElementByName<IGroup>(Names.DATE_WORK_AREA_0023ET); } }
        public IField DATE_0023AS { get { return GetElementByName<IField>(Names.DATE_0023AS); } }
        public IField DATE_0023 { get { return GetElementByName<IField>(Names.DATE_0023); } }
        public IField DATE_0023XX { get { return GetElementByName<IField>(Names.DATE_0023XX); } }
        public IGroup EXPORT_NCP_LAST_0024EV { get { return GetElementByName<IGroup>(Names.EXPORT_NCP_LAST_0024EV); } }
        public IGroup CSE_PERSON_ADDRESS_0024ET { get { return GetElementByName<IGroup>(Names.CSE_PERSON_ADDRESS_0024ET); } }
        public IField LOCATION_TYPE_0024AS { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0024AS); } }
        public IField LOCATION_TYPE_0024 { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0024); } }
        public IField LOCATION_TYPE_0024XX { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0024XX); } }
        public IField STREET_1_0024AS { get { return GetElementByName<IField>(Names.STREET_1_0024AS); } }
        public IField STREET_1_0024 { get { return GetElementByName<IField>(Names.STREET_1_0024); } }
        public IField STREET_1_0024XX { get { return GetElementByName<IField>(Names.STREET_1_0024XX); } }
        public IField STREET_2_0024AS { get { return GetElementByName<IField>(Names.STREET_2_0024AS); } }
        public IField STREET_2_0024 { get { return GetElementByName<IField>(Names.STREET_2_0024); } }
        public IField STREET_2_0024XX { get { return GetElementByName<IField>(Names.STREET_2_0024XX); } }
        public IField CITY_0024AS { get { return GetElementByName<IField>(Names.CITY_0024AS); } }
        public IField CITY_0024 { get { return GetElementByName<IField>(Names.CITY_0024); } }
        public IField CITY_0024XX { get { return GetElementByName<IField>(Names.CITY_0024XX); } }
        public IField STATE_0024AS { get { return GetElementByName<IField>(Names.STATE_0024AS); } }
        public IField STATE_0024 { get { return GetElementByName<IField>(Names.STATE_0024); } }
        public IField STATE_0024XX { get { return GetElementByName<IField>(Names.STATE_0024XX); } }
        public IField ZIP_CODE_0024AS { get { return GetElementByName<IField>(Names.ZIP_CODE_0024AS); } }
        public IField ZIP_CODE_0024 { get { return GetElementByName<IField>(Names.ZIP_CODE_0024); } }
        public IField ZIP_CODE_0024XX { get { return GetElementByName<IField>(Names.ZIP_CODE_0024XX); } }
        public IField ZIP4_0024AS { get { return GetElementByName<IField>(Names.ZIP4_0024AS); } }
        public IField ZIP4_0024 { get { return GetElementByName<IField>(Names.ZIP4_0024); } }
        public IField ZIP4_0024XX { get { return GetElementByName<IField>(Names.ZIP4_0024XX); } }
        public IGroup EXPORT_FINALLY_PAYMENT_0025EV { get { return GetElementByName<IGroup>(Names.EXPORT_FINALLY_PAYMENT_0025EV); } }
        public IGroup DATE_WORK_AREA_0025ET { get { return GetElementByName<IGroup>(Names.DATE_WORK_AREA_0025ET); } }
        public IField DATE_0025AS { get { return GetElementByName<IField>(Names.DATE_0025AS); } }
        public IField DATE_0025 { get { return GetElementByName<IField>(Names.DATE_0025); } }
        public IField DATE_0025XX { get { return GetElementByName<IField>(Names.DATE_0025XX); } }
        public IGroup EXPORT_FINAL_PAYMENT_0026EV { get { return GetElementByName<IGroup>(Names.EXPORT_FINAL_PAYMENT_0026EV); } }
        public IGroup IEF_SUPPLIED_0026ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0026ET); } }
        public IField AVERAGE_CURRENCY_0026AS { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0026AS); } }
        public IField AVERAGE_CURRENCY_0026 { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0026); } }
        public IField AVERAGE_CURRENCY_0026XX { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0026XX); } }
        public IGroup EXPORT_NEW_0027EV { get { return GetElementByName<IGroup>(Names.EXPORT_NEW_0027EV); } }
        public IGroup EMPLOYER_0027ET { get { return GetElementByName<IGroup>(Names.EMPLOYER_0027ET); } }
        public IField NAME_0027AS { get { return GetElementByName<IField>(Names.NAME_0027AS); } }
        public IField NAME_0027 { get { return GetElementByName<IField>(Names.NAME_0027); } }
        public IField NAME_0027XX { get { return GetElementByName<IField>(Names.NAME_0027XX); } }
        public IGroup EXPORT_NEW_0028EV { get { return GetElementByName<IGroup>(Names.EXPORT_NEW_0028EV); } }
        public IGroup EMPLOYER_ADDRESS_0028ET { get { return GetElementByName<IGroup>(Names.EMPLOYER_ADDRESS_0028ET); } }
        public IField LOCATION_TYPE_0028AS { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0028AS); } }
        public IField LOCATION_TYPE_0028 { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0028); } }
        public IField LOCATION_TYPE_0028XX { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0028XX); } }
        public IField STREET1_0028AS { get { return GetElementByName<IField>(Names.STREET1_0028AS); } }
        public IField STREET1_0028 { get { return GetElementByName<IField>(Names.STREET1_0028); } }
        public IField STREET1_0028XX { get { return GetElementByName<IField>(Names.STREET1_0028XX); } }
        public IField STREET2_0028AS { get { return GetElementByName<IField>(Names.STREET2_0028AS); } }
        public IField STREET2_0028 { get { return GetElementByName<IField>(Names.STREET2_0028); } }
        public IField STREET2_0028XX { get { return GetElementByName<IField>(Names.STREET2_0028XX); } }
        public IField CITY_0028AS { get { return GetElementByName<IField>(Names.CITY_0028AS); } }
        public IField CITY_0028 { get { return GetElementByName<IField>(Names.CITY_0028); } }
        public IField CITY_0028XX { get { return GetElementByName<IField>(Names.CITY_0028XX); } }
        public IField STATE_0028AS { get { return GetElementByName<IField>(Names.STATE_0028AS); } }
        public IField STATE_0028 { get { return GetElementByName<IField>(Names.STATE_0028); } }
        public IField STATE_0028XX { get { return GetElementByName<IField>(Names.STATE_0028XX); } }
        public IField ZIP_CODE_0028AS { get { return GetElementByName<IField>(Names.ZIP_CODE_0028AS); } }
        public IField ZIP_CODE_0028 { get { return GetElementByName<IField>(Names.ZIP_CODE_0028); } }
        public IField ZIP_CODE_0028XX { get { return GetElementByName<IField>(Names.ZIP_CODE_0028XX); } }
        public IField ZIP4_0028AS { get { return GetElementByName<IField>(Names.ZIP4_0028AS); } }
        public IField ZIP4_0028 { get { return GetElementByName<IField>(Names.ZIP4_0028); } }
        public IField ZIP4_0028XX { get { return GetElementByName<IField>(Names.ZIP4_0028XX); } }
        public IGroup EXPORT_LUMP_SUM_0029EV { get { return GetElementByName<IGroup>(Names.EXPORT_LUMP_SUM_0029EV); } }
        public IGroup DATE_WORK_AREA_0029ET { get { return GetElementByName<IGroup>(Names.DATE_WORK_AREA_0029ET); } }
        public IField DATE_0029AS { get { return GetElementByName<IField>(Names.DATE_0029AS); } }
        public IField DATE_0029 { get { return GetElementByName<IField>(Names.DATE_0029); } }
        public IField DATE_0029XX { get { return GetElementByName<IField>(Names.DATE_0029XX); } }
        public IGroup EXPORT_LUMP_SUM_0030EV { get { return GetElementByName<IGroup>(Names.EXPORT_LUMP_SUM_0030EV); } }
        public IGroup IEF_SUPPLIED_0030ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0030ET); } }
        public IField AVERAGE_CURRENCY_0030AS { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0030AS); } }
        public IField AVERAGE_CURRENCY_0030 { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0030); } }
        public IField AVERAGE_CURRENCY_0030XX { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0030XX); } }
        public IGroup EXPORT_LUMP_SUM_TYPE_0031EV { get { return GetElementByName<IGroup>(Names.EXPORT_LUMP_SUM_TYPE_0031EV); } }
        public IGroup WORK_AREA_0031ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0031ET); } }
        public IField TEXT_35_0031AS { get { return GetElementByName<IField>(Names.TEXT_35_0031AS); } }
        public IField TEXT_35_0031 { get { return GetElementByName<IField>(Names.TEXT_35_0031); } }
        public IField TEXT_35_0031XX { get { return GetElementByName<IField>(Names.TEXT_35_0031XX); } }
        public IGroup EXPORT_NCP_LAST_KNOWN_0032EV { get { return GetElementByName<IGroup>(Names.EXPORT_NCP_LAST_KNOWN_0032EV); } }
        public IGroup CSE_PERSON_0032ET { get { return GetElementByName<IGroup>(Names.CSE_PERSON_0032ET); } }
        public IField TYPE_0032AS { get { return GetElementByName<IField>(Names.TYPE_0032AS); } }
        public IField TYPE_0032 { get { return GetElementByName<IField>(Names.TYPE_0032); } }
        public IField TYPE_0032XX { get { return GetElementByName<IField>(Names.TYPE_0032XX); } }
        public IField OTHER_AREA_CODE_0032AS { get { return GetElementByName<IField>(Names.OTHER_AREA_CODE_0032AS); } }
        public IField OTHER_AREA_CODE_0032 { get { return GetElementByName<IField>(Names.OTHER_AREA_CODE_0032); } }
        public IField OTHER_AREA_CODE_0032XX { get { return GetElementByName<IField>(Names.OTHER_AREA_CODE_0032XX); } }
        public IField OTHER_NUMBER_0032AS { get { return GetElementByName<IField>(Names.OTHER_NUMBER_0032AS); } }
        public IField OTHER_NUMBER_0032 { get { return GetElementByName<IField>(Names.OTHER_NUMBER_0032); } }
        public IField OTHER_NUMBER_0032XX { get { return GetElementByName<IField>(Names.OTHER_NUMBER_0032XX); } }
        public IGroup EXPORT_1ST_ERROR_FIELD__0033EV { get { return GetElementByName<IGroup>(Names.EXPORT_1ST_ERROR_FIELD__0033EV); } }
        public IGroup WORK_AREA_0033ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0033ET); } }
        public IField TEXT_32_0033AS { get { return GetElementByName<IField>(Names.TEXT_32_0033AS); } }
        public IField TEXT_32_0033 { get { return GetElementByName<IField>(Names.TEXT_32_0033); } }
        public IField TEXT_32_0033XX { get { return GetElementByName<IField>(Names.TEXT_32_0033XX); } }
        public IGroup EXPORT_2ND_ERROR_FIELD__0034EV { get { return GetElementByName<IGroup>(Names.EXPORT_2ND_ERROR_FIELD__0034EV); } }
        public IGroup WORK_AREA_0034ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0034ET); } }
        public IField TEXT_32_0034AS { get { return GetElementByName<IField>(Names.TEXT_32_0034AS); } }
        public IField TEXT_32_0034 { get { return GetElementByName<IField>(Names.TEXT_32_0034); } }
        public IField TEXT_32_0034XX { get { return GetElementByName<IField>(Names.TEXT_32_0034XX); } }
        public IGroup EXPORT_MULTIPLE_ERROR_I_0035EV { get { return GetElementByName<IGroup>(Names.EXPORT_MULTIPLE_ERROR_I_0035EV); } }
        public IGroup WORK_AREA_0035ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0035ET); } }
        public IField TEXT_1_0035AS { get { return GetElementByName<IField>(Names.TEXT_1_0035AS); } }
        public IField TEXT_1_0035 { get { return GetElementByName<IField>(Names.TEXT_1_0035); } }
        public IField TEXT_1_0035XX { get { return GetElementByName<IField>(Names.TEXT_1_0035XX); } }
        public IGroup EXPORT_CORRECTED_0036EV { get { return GetElementByName<IGroup>(Names.EXPORT_CORRECTED_0036EV); } }
        public IGroup EMPLOYER_0036ET { get { return GetElementByName<IGroup>(Names.EMPLOYER_0036ET); } }
        public IField EIN_0036AS { get { return GetElementByName<IField>(Names.EIN_0036AS); } }
        public IField EIN_0036 { get { return GetElementByName<IField>(Names.EIN_0036); } }
        public IField EIN_0036XX { get { return GetElementByName<IField>(Names.EIN_0036XX); } }
        public IGroup EXPORT_MULTI_IWO_ST_COD_0037EV { get { return GetElementByName<IGroup>(Names.EXPORT_MULTI_IWO_ST_COD_0037EV); } }
        public IGroup WORK_AREA_0037ET { get { return GetElementByName<IGroup>(Names.WORK_AREA_0037ET); } }
        public IField TEXT_2_0037AS { get { return GetElementByName<IField>(Names.TEXT_2_0037AS); } }
        public IField TEXT_2_0037 { get { return GetElementByName<IField>(Names.TEXT_2_0037); } }
        public IField TEXT_2_0037XX { get { return GetElementByName<IField>(Names.TEXT_2_0037XX); } }
        public IGroup EXPORT_0038EV { get { return GetElementByName<IGroup>(Names.EXPORT_0038EV); } }
        public IGroup EXTERNAL_0038ET { get { return GetElementByName<IGroup>(Names.EXTERNAL_0038ET); } }
        public IField NUMERIC_RETURN_CODE_0038AS { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0038AS); } }
        public IField NUMERIC_RETURN_CODE_0038 { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0038); } }
        public IField NUMERIC_RETURN_CODE_0038XX { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0038XX); } }
        public IField TEXT_RETURN_CODE_0038AS { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0038AS); } }
        public IField TEXT_RETURN_CODE_0038 { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0038); } }
        public IField TEXT_RETURN_CODE_0038XX { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0038XX); } }
        public IField TEXT_LINE_80_0038AS { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0038AS); } }
        public IField TEXT_LINE_80_0038 { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0038); } }
        public IField TEXT_LINE_80_0038XX { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0038XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.GLOBDATA, (GLOBDATA) =>
           {
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_COMMAND, (PSMGR_IEF_COMMAND) =>
               {
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_1, FieldType.String, 8);
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_2, FieldType.String, 72);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_TRANCODE, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_STATE, FieldType.PackedDecimal, 11);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_INFOMSG, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_USER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_TERMINAL_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_PRINTER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_DATE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_TIME, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_RUNTIME_TYPE, FieldType.String, 4);
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA, (PSMGR_FUNCTION_DATA) =>
               {
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_ERRMSG, FieldType.String, 4);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_NAME, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_DDURA, (PSMGR_FUNC_IN_DDURA) =>
                   {
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_YEAR, (DDURA_YEAR) =>
                       {
                           DDURA_YEAR.CreateNewField(Names.DDURA_Y_MISS, FieldType.String, 1);
                           DDURA_YEAR.CreateNewField(Names.DDURA_YYYY, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_MONTH, (DDURA_MONTH) =>
                       {
                           DDURA_MONTH.CreateNewField(Names.DDURA_M_MISS, FieldType.String, 1);
                           DDURA_MONTH.CreateNewField(Names.DDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_DAY, (DDURA_DAY) =>
                       {
                           DDURA_DAY.CreateNewField(Names.DDURA_D_MISS, FieldType.String, 1);
                           DDURA_DAY.CreateNewField(Names.DDURA_DD, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_TIME, FieldType.String, 6);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_TDURA, (PSMGR_FUNC_IN_TDURA) =>
                   {
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_HOUR, (TDURA_HOUR) =>
                       {
                           TDURA_HOUR.CreateNewField(Names.TDURA_H_MISS, FieldType.String, 1);
                           TDURA_HOUR.CreateNewField(Names.TDURA_HH, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_MINUTE, (TDURA_MINUTE) =>
                       {
                           TDURA_MINUTE.CreateNewField(Names.TDURA_M_MISS, FieldType.String, 1);
                           TDURA_MINUTE.CreateNewField(Names.TDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_SECOND, (TDURA_SECOND) =>
                       {
                           TDURA_SECOND.CreateNewField(Names.TDURA_S_MISS, FieldType.String, 1);
                           TDURA_SECOND.CreateNewField(Names.TDURA_SS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_TIME, FieldType.String, 6);
               });
               GLOBDATA.CreateNewFillerField(2, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_NEXTTRAN, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_MSGTYPE, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(11, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_DEBUG_FLAGS, (PSMGR_IEF_DEBUG_FLAGS) =>
               {
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewField(Names.PSMGR_IEF_DEBUG, FieldType.String, 1)
                       .NewCheckField(Names.PSMGR_DEBUG_ON, "Y")
                       ;
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewFillerField(15, FillWith.Hashes);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ENVIRONMENT_DATA, (PSMGR_ENVIRONMENT_DATA) =>
               {
                   PSMGR_ENVIRONMENT_DATA.CreateNewField(Names.PSMGR_PCB_CNT, FieldType.CompInt, 9);
                   PSMGR_ENVIRONMENT_DATA.CreateNewGroupArray(Names.PSMGR_PCB_ENTRY, 255, (PSMGR_PCB_ENTRY) =>
                   {
                       PSMGR_PCB_ENTRY.CreateNewField(Names.PSMGR_PCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
               {
                   PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
                   PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
                   {
                       PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ERROR_DATA, (PSMGR_ERROR_DATA) =>
               {
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ACTION_NAME, FieldType.String, 32);
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ENCOUNTERED_SW, FieldType.String, 1);
                   PSMGR_ERROR_DATA.CreateNewField(Names.VIEW_OVERFLOW_SW, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DASG_DATA, (PSMGR_DASG_DATA) =>
               {
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ACTION_ID_X, (ACTION_ID_X) =>
                   {
                       ACTION_ID_X.CreateNewField(Names.ACTION_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ATTRIBUTE_ID_X, (ATTRIBUTE_ID_X) =>
                   {
                       ATTRIBUTE_ID_X.CreateNewField(Names.ATTRIBUTE_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewField(Names.STATUS_FLAG, FieldType.String, 2)
                       .NewCheckField(Names.WHEN_SUCCESSFUL_SF, SPACES)
                       .NewCheckField(Names.FATAL_ERROR_SF, "FE")
                       .NewCheckField(Names.DB_ERROR_SF, "DB")
                       .NewCheckField(Names.ABORT_SHOW_DBMS_MSG_SF, "AB")
                       .NewCheckField(Names.ABORT_SHOW_USER_MSG_SF, "AM")
                       .NewCheckField(Names.RETRY_TRAN_REQUESTED_SF, "RT")
                       .NewCheckField(Names.PSTEP_USE_FAILURE, "PU")
                       .NewCheckField(Names.ASYNC_WHEN_AVAILABLE_SF, SPACES)
                       .NewCheckField(Names.ASYNC_WHEN_ACCEPTED_SF, SPACES)
                       .NewCheckField(Names.ASYNC_WHEN_NOT_ACCEPTED_SF, "NA")
                       .NewCheckField(Names.ASYNC_WHEN_INVALID_ID_SF, "II")
                       .NewCheckField(Names.ASYNC_WHEN_PENDING_SF, "PE")
                       .NewCheckField(Names.ASYNC_WHEN_SERVER_ERROR_SF, "SS")
                       .NewCheckField(Names.ASYNC_WHEN_COMM_ERROR_SF, "CE")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.LAST_STATUS, FieldType.String, 2)
                       .NewCheckField(Names.DB_ERROR_FL_LS, "DB")
                       .NewCheckField(Names.DB_DEADLOCK_TIMOUT_FL_LS, "DT")
                       .NewCheckField(Names.DUPLICATE_FOUND_FL_LS, "DF")
                       .NewCheckField(Names.INVALID_DATAA_FL_LS, "IA")
                       .NewCheckField(Names.INVALID_DATAB_TYPE_FL_LS, "BT")
                       .NewCheckField(Names.INVALID_DATAB_PERM_FL_LS, "BP")
                       .NewCheckField(Names.FATAL_ERROR_FL_LS, "FE")
                       .NewCheckField(Names.NOT_FOUND_FL_LS, "NF")
                       .NewCheckField(Names.NOT_UNIQUE_FL_LS, "NU")
                       .NewCheckField(Names.IEF_FUNCTION_ERROR_FL_LS, "IE")
                       .NewCheckField(Names.IEF_DURATION_ERROR_FL_LS, "DE")
                       .NewCheckField(Names.USED_PSTEP_NOT_FOUND, "PO")
                       .NewCheckField(Names.USED_PSTEP_ROUTING_ERR, "PX")
                       .NewCheckField(Names.USED_PSTEP_SND_FMT_ERR, "PF")
                       .NewCheckField(Names.USED_PSTEP_ENCRYPT_ERR, "PN")
                       .NewCheckField(Names.USED_PSTEP_SND_BFR_ERR, "PS")
                       .NewCheckField(Names.USED_PSTEP_RCV_BFR_ERR, "PR")
                       .NewCheckField(Names.USED_PSTEP_RCV_FMT_ERR, "PU")
                       .NewCheckField(Names.USED_PSTEP_TIRSECR_ERR, "PE")
                       .NewCheckField(Names.USED_PSTEP_TOKEN_ERR, "PT")
                       .NewCheckField(Names.USED_PSTEP_SEND_MAX_SIZE, "PM")
                       .NewCheckField(Names.USED_PSTEP_SECG_ERR, "PB")
                       .NewCheckField(Names.USED_PSTEP_ALLOC_ERR, "PA")
                       .NewCheckField(Names.USED_PSTEP_CONNECT_ERR, "PC")
                       .NewCheckField(Names.USED_PSTEP_XERR, "PD")
                       .NewCheckField(Names.USED_PSTEP_RCV_UA_ERR, "PH")
                       .NewCheckField(Names.USED_PSTEP_RCV_ES_ERR, "PI")
                       .NewCheckField(Names.USED_PSTEP_XFAL, "PJ")
                       .NewCheckField(Names.USED_PSTEP_SETOA_ERR, "PK")
                       .NewCheckField(Names.USED_PSTEP_RCV_VIEW_ERR, "PL")
                       .NewCheckField(Names.USED_PSTEP_DECRYPT_ERR, "PP")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.SAVE_SQLCA, FieldType.String, 255);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DEBUG_DATA, (PSMGR_DEBUG_DATA) =>
               {
                   PSMGR_DEBUG_DATA.CreateNewField(Names.PSMGR_TRACE_ADR, FieldType.CompInt, 9);
                   PSMGR_DEBUG_DATA.CreateNewGroup(Names.LAST_STATEMENT_X, (LAST_STATEMENT_X) =>
                   {
                       LAST_STATEMENT_X.CreateNewField(Names.LAST_STATEMENT_NUM, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_ID, FieldType.String, 10);
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_NAME, FieldType.String, 32);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_TIRDATE_SAVEAREA, FieldType.String, 12);
               GLOBDATA.CreateNewGroup(Names.PSMGR_TIRDATE_CMCB, (PSMGR_TIRDATE_CMCB) =>
               {
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATE, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIME, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(8, FillWith.Hashes);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_INC, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RC, FieldType.CompShort, 4)
                       .NewCheckField(Names.PSMGR_TIRDATE_OK, +0)
                       .NewCheckField(Names.PSMGR_TIRDATE_WARNING, +4)
                       .NewCheckField(Names.PSMGR_TIRDATE_ERROR, +8)
                       ;
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_REQ, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIMEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RETMSG, FieldType.String, 60);

                   IField PSMGR_TIRDATE_TSTAMP_local = PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TSTAMP, FieldType.String, 20);
                   PSMGR_TIRDATE_CMCB.CreateNewGroupRedefine("FILLER_d14", PSMGR_TIRDATE_TSTAMP_local, (FILLER_d14) =>
                   {
                       FILLER_d14.CreateNewField(Names.PSMGR_TIRDATE_DATE_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d14.CreateNewField(Names.PSMGR_TIRDATE_TIME_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d14.CreateNewFillerField(4, FillWith.Hashes);
                   });
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_SKIP_VAL, FieldType.String, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(95, FillWith.Hashes);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_ROLLBACK_RQSTED, FieldType.String, 1)
                   .NewCheckField(Names.ROLLBACK_RQSTED, "R")
                   .NewCheckField(Names.ABEND_RQSTED, "A")
                   .NewCheckField(Names.TERMINATE_RQSTED, "T")
                   ;
               GLOBDATA.CreateNewGroup(Names.TIRTRCE_SAVE_AREA, (TIRTRCE_SAVE_AREA) =>
               {
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.BOTTOM_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.END_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_STMT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_OF_CALL, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT_STATUS, FieldType.String, 3);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_AB_NAME, FieldType.String, 32);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLOR, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLORT, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.HILITE, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_ON_OFF, FieldType.String, 3);
               });
               GLOBDATA.CreateNewGroup(Names.CASCADE_DELETE_FLAGS, (CASCADE_DELETE_FLAGS) =>
               {
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V1PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V2PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE1, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE2, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.PROCESSQ_FLAG, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ACTIVE_DIALECT, (PSMGR_ACTIVE_DIALECT) =>
               {
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.DIALECT_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.MESSAGE_TABLE_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.TRANSLATE_TABLE_NAME, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA_EXT, (PSMGR_FUNCTION_DATA_EXT) =>
               {
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_IN_TIMESTAMP, FieldType.String, 20);
                   PSMGR_FUNCTION_DATA_EXT.CreateNewGroup(Names.PSMGR_FUNC_IN_TSDURA, (PSMGR_FUNC_IN_TSDURA) =>
                   {
                       PSMGR_FUNC_IN_TSDURA.CreateNewGroup(Names.TSDURA_MICROSECOND, (TSDURA_MICROSECOND) =>
                       {
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_M_MISS, FieldType.String, 1);
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_MS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_OUT_TIMESTAMP, FieldType.String, 20);
               });
               GLOBDATA.CreateNewFillerField(8, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_CICS_FAIL_SW, FieldType.String, 1)
                   .NewCheckField(Names.INHIBIT_CICS_RECEIVE, "I")
                   ;
               GLOBDATA.CreateNewField(Names.CLIENT_USERID, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.CLIENT_PASSWORD, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.LOAD_MODULE_NAME, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.INSTRUMENT_CODE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_RETRY_LIMIT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_TIMEOUT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewGroup(Names.PSMGR_EXTRA_ERRINFO, (PSMGR_EXTRA_ERRINFO) =>
               {
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_MSG_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_ADDR, FieldType.String, 8);
               });
               GLOBDATA.CreateNewField(Names.TX_RETRY_COUNT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_USER_RETRY_ALLOWED, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(3, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_PTRS, (PSMGR_PSTEP_USE_PTRS) =>
               {
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_FAIL_MSG_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_GURB_REST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_LIPS_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_TBL_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_DDF_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_COMM_ID, FieldType.String, 8);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_APPL_LIST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_CURR_PST_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_SYSFLDS, (PSMGR_PSTEP_USE_SYSFLDS) =>
               {
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBERRCD, FieldType.String, 4);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBFN, FieldType.String, 2);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP, FieldType.String, 8);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP2, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ASYNC_DATA, (PSMGR_ASYNC_DATA) =>
               {
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_MODE, FieldType.String, 1)
                       .NewCheckField(Names.FLOW_TYPE_SYNC, SPACE)
                       .NewCheckField(Names.FLOW_TYPE_ASYNC, "A")
                       .NewCheckField(Names.FLOW_TYPE_NO_RESPONSE, "N")
                       ;
                   PSMGR_ASYNC_DATA.CreateNewFillerField(1, FillWith.Hashes);
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_FLOW_STATUS_TABLE_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_SERVER_LOC_TABLE_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_HEAP, (PSMGR_HEAP) =>
               {
                   PSMGR_HEAP.CreateNewGroup(Names.HEAP_CFB, (HEAP_CFB) =>
                   {
                       HEAP_CFB.CreateNewField(Names.HEAP_CFB_ADDR, FieldType.ReferencePointer, 4);
                       HEAP_CFB.CreateNewField(Names.HEAP_CFB_ADDR_RESV, FieldType.SignedNumeric, 9);
                       HEAP_CFB.CreateNewField(Names.HEAP_CFB_ID, FieldType.SignedNumeric, 9);
                       HEAP_CFB.CreateNewField(Names.HEAP_CFB_LEN, FieldType.SignedNumeric, 9);
                   });
                   PSMGR_HEAP.CreateNewGroup(Names.HEAP_WGLOB, (HEAP_WGLOB) =>
                   {
                       HEAP_WGLOB.CreateNewField(Names.HEAP_WGLOB_ADDR, FieldType.ReferencePointer, 4);
                       HEAP_WGLOB.CreateNewField(Names.HEAP_WGLOB_ADDR_RESV, FieldType.SignedNumeric, 9);
                       HEAP_WGLOB.CreateNewField(Names.HEAP_WGLOB_ID, FieldType.SignedNumeric, 9);
                       HEAP_WGLOB.CreateNewField(Names.HEAP_WGLOB_LEN, FieldType.SignedNumeric, 9);
                   });
               });
               GLOBDATA.CreateNewField(Names.PSMGR_MMCB, FieldType.CompInt, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_MMCB_ACTIVE, FieldType.String, 4);
               GLOBDATA.CreateNewFillerField(149, FillWith.Hashes);
           });

            recordDef.CreateNewGroup(Names.IMPORT_0001EV, (IMPORT_0001EV) =>
           {
               IMPORT_0001EV.CreateNewGroup(Names.EAB_FILE_HANDLING_0001ET, (EAB_FILE_HANDLING_0001ET) =>
               {
                   EAB_FILE_HANDLING_0001ET.CreateNewField(Names.ACTION_0001AS, FieldType.String, 1);

                   IField ACTION_0001_local = EAB_FILE_HANDLING_0001ET.CreateNewField(Names.ACTION_0001, FieldType.String, 8);
                   EAB_FILE_HANDLING_0001ET.CreateNewFieldRedefine(Names.ACTION_0001XX, FieldType.String, ACTION_0001_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_DOC_CODE_0002EV, (EXPORT_DOC_CODE_0002EV) =>
           {
               EXPORT_DOC_CODE_0002EV.CreateNewGroup(Names.WORK_AREA_0002ET, (WORK_AREA_0002ET) =>
               {
                   WORK_AREA_0002ET.CreateNewField(Names.TEXT_3_0002AS, FieldType.String, 1);

                   IField TEXT_3_0002_local = WORK_AREA_0002ET.CreateNewField(Names.TEXT_3_0002, FieldType.String, 3);
                   WORK_AREA_0002ET.CreateNewFieldRedefine(Names.TEXT_3_0002XX, FieldType.String, TEXT_3_0002_local, 3);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_CONTROL_NUM_0003EV, (EXPORT_CONTROL_NUM_0003EV) =>
           {
               EXPORT_CONTROL_NUM_0003EV.CreateNewGroup(Names.WORK_AREA_0003ET, (WORK_AREA_0003ET) =>
               {
                   WORK_AREA_0003ET.CreateNewField(Names.TEXT_22_0003AS, FieldType.String, 1);

                   IField TEXT_22_0003_local = WORK_AREA_0003ET.CreateNewField(Names.TEXT_22_0003, FieldType.String, 22);
                   WORK_AREA_0003ET.CreateNewFieldRedefine(Names.TEXT_22_0003XX, FieldType.String, TEXT_22_0003_local, 22);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_ST_FIPS_CODE_0004EV, (EXPORT_ST_FIPS_CODE_0004EV) =>
           {
               EXPORT_ST_FIPS_CODE_0004EV.CreateNewGroup(Names.WORK_AREA_0004ET, (WORK_AREA_0004ET) =>
               {
                   WORK_AREA_0004ET.CreateNewField(Names.TEXT_5_0004AS, FieldType.String, 1);

                   IField TEXT_5_0004_local = WORK_AREA_0004ET.CreateNewField(Names.TEXT_5_0004, FieldType.String, 5);
                   WORK_AREA_0004ET.CreateNewFieldRedefine(Names.TEXT_5_0004XX, FieldType.String, TEXT_5_0004_local, 5);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_HEADER_EIN_0005EV, (EXPORT_HEADER_EIN_0005EV) =>
           {
               EXPORT_HEADER_EIN_0005EV.CreateNewGroup(Names.WORK_AREA_0005ET, (WORK_AREA_0005ET) =>
               {
                   WORK_AREA_0005ET.CreateNewField(Names.TEXT_9_0005AS, FieldType.String, 1);

                   IField TEXT_9_0005_local = WORK_AREA_0005ET.CreateNewField(Names.TEXT_9_0005, FieldType.String, 9);
                   WORK_AREA_0005ET.CreateNewFieldRedefine(Names.TEXT_9_0005XX, FieldType.String, TEXT_9_0005_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_HEADER_PRIMARY_E_0006EV, (EXPORT_HEADER_PRIMARY_E_0006EV) =>
           {
               EXPORT_HEADER_PRIMARY_E_0006EV.CreateNewGroup(Names.WORK_AREA_0006ET, (WORK_AREA_0006ET) =>
               {
                   WORK_AREA_0006ET.CreateNewField(Names.TEXT_9_0006AS, FieldType.String, 1);

                   IField TEXT_9_0006_local = WORK_AREA_0006ET.CreateNewField(Names.TEXT_9_0006, FieldType.String, 9);
                   WORK_AREA_0006ET.CreateNewFieldRedefine(Names.TEXT_9_0006XX, FieldType.String, TEXT_9_0006_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_HEADER_CREATE_DA_0007EV, (EXPORT_HEADER_CREATE_DA_0007EV) =>
           {
               EXPORT_HEADER_CREATE_DA_0007EV.CreateNewGroup(Names.DATE_WORK_AREA_0007ET, (DATE_WORK_AREA_0007ET) =>
               {
                   DATE_WORK_AREA_0007ET.CreateNewField(Names.DATE_0007AS, FieldType.String, 1);

                   IField DATE_0007_local = DATE_WORK_AREA_0007ET.CreateNewField(Names.DATE_0007, FieldType.SignedNumeric, 8);
                   DATE_WORK_AREA_0007ET.CreateNewFieldRedefine(Names.DATE_0007XX, FieldType.String, DATE_0007_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_HEADER_CREATE_TI_0008EV, (EXPORT_HEADER_CREATE_TI_0008EV) =>
           {
               EXPORT_HEADER_CREATE_TI_0008EV.CreateNewGroup(Names.DATE_WORK_AREA_0008ET, (DATE_WORK_AREA_0008ET) =>
               {
                   DATE_WORK_AREA_0008ET.CreateNewField(Names.TIME_0008AS, FieldType.String, 1);

                   IField TIME_0008_local = DATE_WORK_AREA_0008ET.CreateNewField(Names.TIME_0008, FieldType.SignedNumeric, 6);
                   DATE_WORK_AREA_0008ET.CreateNewFieldRedefine(Names.TIME_0008XX, FieldType.String, TIME_0008_local, 6);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_ERR_FIELD_NAME_0009EV, (EXPORT_ERR_FIELD_NAME_0009EV) =>
           {
               EXPORT_ERR_FIELD_NAME_0009EV.CreateNewGroup(Names.WORK_AREA_0009ET, (WORK_AREA_0009ET) =>
               {
                   WORK_AREA_0009ET.CreateNewField(Names.TEXT_18_0009AS, FieldType.String, 1);

                   IField TEXT_18_0009_local = WORK_AREA_0009ET.CreateNewField(Names.TEXT_18_0009, FieldType.String, 18);
                   WORK_AREA_0009ET.CreateNewFieldRedefine(Names.TEXT_18_0009XX, FieldType.String, TEXT_18_0009_local, 18);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_BATCH_0010EV, (EXPORT_BATCH_0010EV) =>
           {
               EXPORT_BATCH_0010EV.CreateNewGroup(Names.IEF_SUPPLIED_0010ET, (IEF_SUPPLIED_0010ET) =>
               {
                   IEF_SUPPLIED_0010ET.CreateNewField(Names.COUNT_0010AS, FieldType.String, 1);

                   IField COUNT_0010_local = IEF_SUPPLIED_0010ET.CreateNewField(Names.COUNT_0010, FieldType.SignedNumeric, 9);
                   IEF_SUPPLIED_0010ET.CreateNewFieldRedefine(Names.COUNT_0010XX, FieldType.String, COUNT_0010_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_RECORD_0011EV, (EXPORT_RECORD_0011EV) =>
           {
               EXPORT_RECORD_0011EV.CreateNewGroup(Names.IEF_SUPPLIED_0011ET, (IEF_SUPPLIED_0011ET) =>
               {
                   IEF_SUPPLIED_0011ET.CreateNewField(Names.COUNT_0011AS, FieldType.String, 1);

                   IField COUNT_0011_local = IEF_SUPPLIED_0011ET.CreateNewField(Names.COUNT_0011, FieldType.SignedNumeric, 9);
                   IEF_SUPPLIED_0011ET.CreateNewFieldRedefine(Names.COUNT_0011XX, FieldType.String, COUNT_0011_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_EMPLOYEE_SENT_0012EV, (EXPORT_EMPLOYEE_SENT_0012EV) =>
           {
               EXPORT_EMPLOYEE_SENT_0012EV.CreateNewGroup(Names.IEF_SUPPLIED_0012ET, (IEF_SUPPLIED_0012ET) =>
               {
                   IEF_SUPPLIED_0012ET.CreateNewField(Names.COUNT_0012AS, FieldType.String, 1);

                   IField COUNT_0012_local = IEF_SUPPLIED_0012ET.CreateNewField(Names.COUNT_0012, FieldType.SignedNumeric, 9);
                   IEF_SUPPLIED_0012ET.CreateNewFieldRedefine(Names.COUNT_0012XX, FieldType.String, COUNT_0012_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_STATE_SENT_0013EV, (EXPORT_STATE_SENT_0013EV) =>
           {
               EXPORT_STATE_SENT_0013EV.CreateNewGroup(Names.IEF_SUPPLIED_0013ET, (IEF_SUPPLIED_0013ET) =>
               {
                   IEF_SUPPLIED_0013ET.CreateNewField(Names.COUNT_0013AS, FieldType.String, 1);

                   IField COUNT_0013_local = IEF_SUPPLIED_0013ET.CreateNewField(Names.COUNT_0013, FieldType.SignedNumeric, 9);
                   IEF_SUPPLIED_0013ET.CreateNewFieldRedefine(Names.COUNT_0013XX, FieldType.String, COUNT_0013_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_DOC_ACTION_CODE_0014EV, (EXPORT_DOC_ACTION_CODE_0014EV) =>
           {
               EXPORT_DOC_ACTION_CODE_0014EV.CreateNewGroup(Names.WORK_AREA_0014ET, (WORK_AREA_0014ET) =>
               {
                   WORK_AREA_0014ET.CreateNewField(Names.TEXT_3_0014AS, FieldType.String, 1);

                   IField TEXT_3_0014_local = WORK_AREA_0014ET.CreateNewField(Names.TEXT_3_0014, FieldType.String, 3);
                   WORK_AREA_0014ET.CreateNewFieldRedefine(Names.TEXT_3_0014XX, FieldType.String, TEXT_3_0014_local, 3);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_CASE_ID_0015EV, (EXPORT_CASE_ID_0015EV) =>
           {
               EXPORT_CASE_ID_0015EV.CreateNewGroup(Names.WORK_AREA_0015ET, (WORK_AREA_0015ET) =>
               {
                   WORK_AREA_0015ET.CreateNewField(Names.TEXT_15_0015AS, FieldType.String, 1);

                   IField TEXT_15_0015_local = WORK_AREA_0015ET.CreateNewField(Names.TEXT_15_0015, FieldType.String, 15);
                   WORK_AREA_0015ET.CreateNewFieldRedefine(Names.TEXT_15_0015XX, FieldType.String, TEXT_15_0015_local, 15);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0016EV, (EXPORT_0016EV) =>
           {
               EXPORT_0016EV.CreateNewGroup(Names.EMPLOYER_0016ET, (EMPLOYER_0016ET) =>
               {
                   EMPLOYER_0016ET.CreateNewField(Names.EIN_0016AS, FieldType.String, 1);

                   IField EIN_0016_local = EMPLOYER_0016ET.CreateNewField(Names.EIN_0016, FieldType.String, 9);
                   EMPLOYER_0016ET.CreateNewFieldRedefine(Names.EIN_0016XX, FieldType.String, EIN_0016_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_EMPLOYEE_0017EV, (EXPORT_EMPLOYEE_0017EV) =>
           {
               EXPORT_EMPLOYEE_0017EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0017ET, (CSE_PERSONS_WORK_SET_0017ET) =>
               {
                   CSE_PERSONS_WORK_SET_0017ET.CreateNewField(Names.SSN_0017AS, FieldType.String, 1);

                   IField SSN_0017_local = CSE_PERSONS_WORK_SET_0017ET.CreateNewField(Names.SSN_0017, FieldType.String, 9);
                   CSE_PERSONS_WORK_SET_0017ET.CreateNewFieldRedefine(Names.SSN_0017XX, FieldType.String, SSN_0017_local, 9);
                   CSE_PERSONS_WORK_SET_0017ET.CreateNewField(Names.FIRST_NAME_0017AS, FieldType.String, 1);

                   IField FIRST_NAME_0017_local = CSE_PERSONS_WORK_SET_0017ET.CreateNewField(Names.FIRST_NAME_0017, FieldType.String, 12);
                   CSE_PERSONS_WORK_SET_0017ET.CreateNewFieldRedefine(Names.FIRST_NAME_0017XX, FieldType.String, FIRST_NAME_0017_local, 12);
                   CSE_PERSONS_WORK_SET_0017ET.CreateNewField(Names.MIDDLE_INITIAL_0017AS, FieldType.String, 1);

                   IField MIDDLE_INITIAL_0017_local = CSE_PERSONS_WORK_SET_0017ET.CreateNewField(Names.MIDDLE_INITIAL_0017, FieldType.String, 1);
                   CSE_PERSONS_WORK_SET_0017ET.CreateNewFieldRedefine(Names.MIDDLE_INITIAL_0017XX, FieldType.String, MIDDLE_INITIAL_0017_local, 1);
                   CSE_PERSONS_WORK_SET_0017ET.CreateNewField(Names.LAST_NAME_0017AS, FieldType.String, 1);

                   IField LAST_NAME_0017_local = CSE_PERSONS_WORK_SET_0017ET.CreateNewField(Names.LAST_NAME_0017, FieldType.String, 17);
                   CSE_PERSONS_WORK_SET_0017ET.CreateNewFieldRedefine(Names.LAST_NAME_0017XX, FieldType.String, LAST_NAME_0017_local, 17);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_EMPLOYEE_SUFFIX_0018EV, (EXPORT_EMPLOYEE_SUFFIX_0018EV) =>
           {
               EXPORT_EMPLOYEE_SUFFIX_0018EV.CreateNewGroup(Names.WORK_AREA_0018ET, (WORK_AREA_0018ET) =>
               {
                   WORK_AREA_0018ET.CreateNewField(Names.TEXT_4_0018AS, FieldType.String, 1);

                   IField TEXT_4_0018_local = WORK_AREA_0018ET.CreateNewField(Names.TEXT_4_0018, FieldType.String, 4);
                   WORK_AREA_0018ET.CreateNewFieldRedefine(Names.TEXT_4_0018XX, FieldType.String, TEXT_4_0018_local, 4);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_DOC_TRACKING_NUM_0019EV, (EXPORT_DOC_TRACKING_NUM_0019EV) =>
           {
               EXPORT_DOC_TRACKING_NUM_0019EV.CreateNewGroup(Names.TEXT_WORK_AREA_0019ET, (TEXT_WORK_AREA_0019ET) =>
               {
                   TEXT_WORK_AREA_0019ET.CreateNewField(Names.TEXT_30_0019AS, FieldType.String, 1);

                   IField TEXT_30_0019_local = TEXT_WORK_AREA_0019ET.CreateNewField(Names.TEXT_30_0019, FieldType.String, 30);
                   TEXT_WORK_AREA_0019ET.CreateNewFieldRedefine(Names.TEXT_30_0019XX, FieldType.String, TEXT_30_0019_local, 30);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0020EV, (EXPORT_0020EV) =>
           {
               EXPORT_0020EV.CreateNewGroup(Names.LEGAL_ACTION_0020ET, (LEGAL_ACTION_0020ET) =>
               {
                   LEGAL_ACTION_0020ET.CreateNewField(Names.STANDARD_NUMBER_0020AS, FieldType.String, 1);

                   IField STANDARD_NUMBER_0020_local = LEGAL_ACTION_0020ET.CreateNewField(Names.STANDARD_NUMBER_0020, FieldType.String, 20);
                   LEGAL_ACTION_0020ET.CreateNewFieldRedefine(Names.STANDARD_NUMBER_0020XX, FieldType.String, STANDARD_NUMBER_0020_local, 20);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_REC_DISP_STATS_C_0021EV, (EXPORT_REC_DISP_STATS_C_0021EV) =>
           {
               EXPORT_REC_DISP_STATS_C_0021EV.CreateNewGroup(Names.WORK_AREA_0021ET, (WORK_AREA_0021ET) =>
               {
                   WORK_AREA_0021ET.CreateNewField(Names.TEXT_2_0021AS, FieldType.String, 1);

                   IField TEXT_2_0021_local = WORK_AREA_0021ET.CreateNewField(Names.TEXT_2_0021, FieldType.String, 2);
                   WORK_AREA_0021ET.CreateNewFieldRedefine(Names.TEXT_2_0021XX, FieldType.String, TEXT_2_0021_local, 2);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_DISPOSION_REASON_0022EV, (EXPORT_DISPOSION_REASON_0022EV) =>
           {
               EXPORT_DISPOSION_REASON_0022EV.CreateNewGroup(Names.WORK_AREA_0022ET, (WORK_AREA_0022ET) =>
               {
                   WORK_AREA_0022ET.CreateNewField(Names.TEXT_3_0022AS, FieldType.String, 1);

                   IField TEXT_3_0022_local = WORK_AREA_0022ET.CreateNewField(Names.TEXT_3_0022, FieldType.String, 3);
                   WORK_AREA_0022ET.CreateNewFieldRedefine(Names.TEXT_3_0022XX, FieldType.String, TEXT_3_0022_local, 3);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_TERMINATION_DATE_0023EV, (EXPORT_TERMINATION_DATE_0023EV) =>
           {
               EXPORT_TERMINATION_DATE_0023EV.CreateNewGroup(Names.DATE_WORK_AREA_0023ET, (DATE_WORK_AREA_0023ET) =>
               {
                   DATE_WORK_AREA_0023ET.CreateNewField(Names.DATE_0023AS, FieldType.String, 1);

                   IField DATE_0023_local = DATE_WORK_AREA_0023ET.CreateNewField(Names.DATE_0023, FieldType.SignedNumeric, 8);
                   DATE_WORK_AREA_0023ET.CreateNewFieldRedefine(Names.DATE_0023XX, FieldType.String, DATE_0023_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_NCP_LAST_0024EV, (EXPORT_NCP_LAST_0024EV) =>
           {
               EXPORT_NCP_LAST_0024EV.CreateNewGroup(Names.CSE_PERSON_ADDRESS_0024ET, (CSE_PERSON_ADDRESS_0024ET) =>
               {
                   CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.LOCATION_TYPE_0024AS, FieldType.String, 1);

                   IField LOCATION_TYPE_0024_local = CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.LOCATION_TYPE_0024, FieldType.String, 1);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewFieldRedefine(Names.LOCATION_TYPE_0024XX, FieldType.String, LOCATION_TYPE_0024_local, 1);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.STREET_1_0024AS, FieldType.String, 1);

                   IField STREET_1_0024_local = CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.STREET_1_0024, FieldType.String, 25);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewFieldRedefine(Names.STREET_1_0024XX, FieldType.String, STREET_1_0024_local, 25);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.STREET_2_0024AS, FieldType.String, 1);

                   IField STREET_2_0024_local = CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.STREET_2_0024, FieldType.String, 25);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewFieldRedefine(Names.STREET_2_0024XX, FieldType.String, STREET_2_0024_local, 25);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.CITY_0024AS, FieldType.String, 1);

                   IField CITY_0024_local = CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.CITY_0024, FieldType.String, 15);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewFieldRedefine(Names.CITY_0024XX, FieldType.String, CITY_0024_local, 15);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.STATE_0024AS, FieldType.String, 1);

                   IField STATE_0024_local = CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.STATE_0024, FieldType.String, 2);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewFieldRedefine(Names.STATE_0024XX, FieldType.String, STATE_0024_local, 2);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.ZIP_CODE_0024AS, FieldType.String, 1);

                   IField ZIP_CODE_0024_local = CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.ZIP_CODE_0024, FieldType.String, 5);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewFieldRedefine(Names.ZIP_CODE_0024XX, FieldType.String, ZIP_CODE_0024_local, 5);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.ZIP4_0024AS, FieldType.String, 1);

                   IField ZIP4_0024_local = CSE_PERSON_ADDRESS_0024ET.CreateNewField(Names.ZIP4_0024, FieldType.String, 4);
                   CSE_PERSON_ADDRESS_0024ET.CreateNewFieldRedefine(Names.ZIP4_0024XX, FieldType.String, ZIP4_0024_local, 4);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_FINALLY_PAYMENT_0025EV, (EXPORT_FINALLY_PAYMENT_0025EV) =>
           {
               EXPORT_FINALLY_PAYMENT_0025EV.CreateNewGroup(Names.DATE_WORK_AREA_0025ET, (DATE_WORK_AREA_0025ET) =>
               {
                   DATE_WORK_AREA_0025ET.CreateNewField(Names.DATE_0025AS, FieldType.String, 1);

                   IField DATE_0025_local = DATE_WORK_AREA_0025ET.CreateNewField(Names.DATE_0025, FieldType.SignedNumeric, 8);
                   DATE_WORK_AREA_0025ET.CreateNewFieldRedefine(Names.DATE_0025XX, FieldType.String, DATE_0025_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_FINAL_PAYMENT_0026EV, (EXPORT_FINAL_PAYMENT_0026EV) =>
           {
               EXPORT_FINAL_PAYMENT_0026EV.CreateNewGroup(Names.IEF_SUPPLIED_0026ET, (IEF_SUPPLIED_0026ET) =>
               {
                   IEF_SUPPLIED_0026ET.CreateNewField(Names.AVERAGE_CURRENCY_0026AS, FieldType.String, 1);

                   IField AVERAGE_CURRENCY_0026_local = IEF_SUPPLIED_0026ET.CreateNewField(Names.AVERAGE_CURRENCY_0026, FieldType.SignedNumeric, 11, null, 2);
                   IEF_SUPPLIED_0026ET.CreateNewFieldRedefine(Names.AVERAGE_CURRENCY_0026XX, FieldType.String, AVERAGE_CURRENCY_0026_local, 11);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_NEW_0027EV, (EXPORT_NEW_0027EV) =>
           {
               EXPORT_NEW_0027EV.CreateNewGroup(Names.EMPLOYER_0027ET, (EMPLOYER_0027ET) =>
               {
                   EMPLOYER_0027ET.CreateNewField(Names.NAME_0027AS, FieldType.String, 1);

                   IField NAME_0027_local = EMPLOYER_0027ET.CreateNewField(Names.NAME_0027, FieldType.String, 33);
                   EMPLOYER_0027ET.CreateNewFieldRedefine(Names.NAME_0027XX, FieldType.String, NAME_0027_local, 33);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_NEW_0028EV, (EXPORT_NEW_0028EV) =>
           {
               EXPORT_NEW_0028EV.CreateNewGroup(Names.EMPLOYER_ADDRESS_0028ET, (EMPLOYER_ADDRESS_0028ET) =>
               {
                   EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.LOCATION_TYPE_0028AS, FieldType.String, 1);

                   IField LOCATION_TYPE_0028_local = EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.LOCATION_TYPE_0028, FieldType.String, 1);
                   EMPLOYER_ADDRESS_0028ET.CreateNewFieldRedefine(Names.LOCATION_TYPE_0028XX, FieldType.String, LOCATION_TYPE_0028_local, 1);
                   EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.STREET1_0028AS, FieldType.String, 1);

                   IField STREET1_0028_local = EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.STREET1_0028, FieldType.String, 25);
                   EMPLOYER_ADDRESS_0028ET.CreateNewFieldRedefine(Names.STREET1_0028XX, FieldType.String, STREET1_0028_local, 25);
                   EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.STREET2_0028AS, FieldType.String, 1);

                   IField STREET2_0028_local = EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.STREET2_0028, FieldType.String, 25);
                   EMPLOYER_ADDRESS_0028ET.CreateNewFieldRedefine(Names.STREET2_0028XX, FieldType.String, STREET2_0028_local, 25);
                   EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.CITY_0028AS, FieldType.String, 1);

                   IField CITY_0028_local = EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.CITY_0028, FieldType.String, 15);
                   EMPLOYER_ADDRESS_0028ET.CreateNewFieldRedefine(Names.CITY_0028XX, FieldType.String, CITY_0028_local, 15);
                   EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.STATE_0028AS, FieldType.String, 1);

                   IField STATE_0028_local = EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.STATE_0028, FieldType.String, 2);
                   EMPLOYER_ADDRESS_0028ET.CreateNewFieldRedefine(Names.STATE_0028XX, FieldType.String, STATE_0028_local, 2);
                   EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.ZIP_CODE_0028AS, FieldType.String, 1);

                   IField ZIP_CODE_0028_local = EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.ZIP_CODE_0028, FieldType.String, 5);
                   EMPLOYER_ADDRESS_0028ET.CreateNewFieldRedefine(Names.ZIP_CODE_0028XX, FieldType.String, ZIP_CODE_0028_local, 5);
                   EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.ZIP4_0028AS, FieldType.String, 1);

                   IField ZIP4_0028_local = EMPLOYER_ADDRESS_0028ET.CreateNewField(Names.ZIP4_0028, FieldType.String, 4);
                   EMPLOYER_ADDRESS_0028ET.CreateNewFieldRedefine(Names.ZIP4_0028XX, FieldType.String, ZIP4_0028_local, 4);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_LUMP_SUM_0029EV, (EXPORT_LUMP_SUM_0029EV) =>
           {
               EXPORT_LUMP_SUM_0029EV.CreateNewGroup(Names.DATE_WORK_AREA_0029ET, (DATE_WORK_AREA_0029ET) =>
               {
                   DATE_WORK_AREA_0029ET.CreateNewField(Names.DATE_0029AS, FieldType.String, 1);

                   IField DATE_0029_local = DATE_WORK_AREA_0029ET.CreateNewField(Names.DATE_0029, FieldType.SignedNumeric, 8);
                   DATE_WORK_AREA_0029ET.CreateNewFieldRedefine(Names.DATE_0029XX, FieldType.String, DATE_0029_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_LUMP_SUM_0030EV, (EXPORT_LUMP_SUM_0030EV) =>
           {
               EXPORT_LUMP_SUM_0030EV.CreateNewGroup(Names.IEF_SUPPLIED_0030ET, (IEF_SUPPLIED_0030ET) =>
               {
                   IEF_SUPPLIED_0030ET.CreateNewField(Names.AVERAGE_CURRENCY_0030AS, FieldType.String, 1);

                   IField AVERAGE_CURRENCY_0030_local = IEF_SUPPLIED_0030ET.CreateNewField(Names.AVERAGE_CURRENCY_0030, FieldType.SignedNumeric, 11, null, 2);
                   IEF_SUPPLIED_0030ET.CreateNewFieldRedefine(Names.AVERAGE_CURRENCY_0030XX, FieldType.String, AVERAGE_CURRENCY_0030_local, 11);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_LUMP_SUM_TYPE_0031EV, (EXPORT_LUMP_SUM_TYPE_0031EV) =>
           {
               EXPORT_LUMP_SUM_TYPE_0031EV.CreateNewGroup(Names.WORK_AREA_0031ET, (WORK_AREA_0031ET) =>
               {
                   WORK_AREA_0031ET.CreateNewField(Names.TEXT_35_0031AS, FieldType.String, 1);

                   IField TEXT_35_0031_local = WORK_AREA_0031ET.CreateNewField(Names.TEXT_35_0031, FieldType.String, 35);
                   WORK_AREA_0031ET.CreateNewFieldRedefine(Names.TEXT_35_0031XX, FieldType.String, TEXT_35_0031_local, 35);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_NCP_LAST_KNOWN_0032EV, (EXPORT_NCP_LAST_KNOWN_0032EV) =>
           {
               EXPORT_NCP_LAST_KNOWN_0032EV.CreateNewGroup(Names.CSE_PERSON_0032ET, (CSE_PERSON_0032ET) =>
               {
                   CSE_PERSON_0032ET.CreateNewField(Names.TYPE_0032AS, FieldType.String, 1);

                   IField TYPE_0032_local = CSE_PERSON_0032ET.CreateNewField(Names.TYPE_0032, FieldType.String, 1);
                   CSE_PERSON_0032ET.CreateNewFieldRedefine(Names.TYPE_0032XX, FieldType.String, TYPE_0032_local, 1);
                   CSE_PERSON_0032ET.CreateNewField(Names.OTHER_AREA_CODE_0032AS, FieldType.String, 1);

                   IField OTHER_AREA_CODE_0032_local = CSE_PERSON_0032ET.CreateNewField(Names.OTHER_AREA_CODE_0032, FieldType.SignedNumeric, 3);
                   CSE_PERSON_0032ET.CreateNewFieldRedefine(Names.OTHER_AREA_CODE_0032XX, FieldType.String, OTHER_AREA_CODE_0032_local, 3);
                   CSE_PERSON_0032ET.CreateNewField(Names.OTHER_NUMBER_0032AS, FieldType.String, 1);

                   IField OTHER_NUMBER_0032_local = CSE_PERSON_0032ET.CreateNewField(Names.OTHER_NUMBER_0032, FieldType.SignedNumeric, 7);
                   CSE_PERSON_0032ET.CreateNewFieldRedefine(Names.OTHER_NUMBER_0032XX, FieldType.String, OTHER_NUMBER_0032_local, 7);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_1ST_ERROR_FIELD__0033EV, (EXPORT_1ST_ERROR_FIELD__0033EV) =>
           {
               EXPORT_1ST_ERROR_FIELD__0033EV.CreateNewGroup(Names.WORK_AREA_0033ET, (WORK_AREA_0033ET) =>
               {
                   WORK_AREA_0033ET.CreateNewField(Names.TEXT_32_0033AS, FieldType.String, 1);

                   IField TEXT_32_0033_local = WORK_AREA_0033ET.CreateNewField(Names.TEXT_32_0033, FieldType.String, 32);
                   WORK_AREA_0033ET.CreateNewFieldRedefine(Names.TEXT_32_0033XX, FieldType.String, TEXT_32_0033_local, 32);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_2ND_ERROR_FIELD__0034EV, (EXPORT_2ND_ERROR_FIELD__0034EV) =>
           {
               EXPORT_2ND_ERROR_FIELD__0034EV.CreateNewGroup(Names.WORK_AREA_0034ET, (WORK_AREA_0034ET) =>
               {
                   WORK_AREA_0034ET.CreateNewField(Names.TEXT_32_0034AS, FieldType.String, 1);

                   IField TEXT_32_0034_local = WORK_AREA_0034ET.CreateNewField(Names.TEXT_32_0034, FieldType.String, 32);
                   WORK_AREA_0034ET.CreateNewFieldRedefine(Names.TEXT_32_0034XX, FieldType.String, TEXT_32_0034_local, 32);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_MULTIPLE_ERROR_I_0035EV, (EXPORT_MULTIPLE_ERROR_I_0035EV) =>
           {
               EXPORT_MULTIPLE_ERROR_I_0035EV.CreateNewGroup(Names.WORK_AREA_0035ET, (WORK_AREA_0035ET) =>
               {
                   WORK_AREA_0035ET.CreateNewField(Names.TEXT_1_0035AS, FieldType.String, 1);

                   IField TEXT_1_0035_local = WORK_AREA_0035ET.CreateNewField(Names.TEXT_1_0035, FieldType.String, 1);
                   WORK_AREA_0035ET.CreateNewFieldRedefine(Names.TEXT_1_0035XX, FieldType.String, TEXT_1_0035_local, 1);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_CORRECTED_0036EV, (EXPORT_CORRECTED_0036EV) =>
           {
               EXPORT_CORRECTED_0036EV.CreateNewGroup(Names.EMPLOYER_0036ET, (EMPLOYER_0036ET) =>
               {
                   EMPLOYER_0036ET.CreateNewField(Names.EIN_0036AS, FieldType.String, 1);

                   IField EIN_0036_local = EMPLOYER_0036ET.CreateNewField(Names.EIN_0036, FieldType.String, 9);
                   EMPLOYER_0036ET.CreateNewFieldRedefine(Names.EIN_0036XX, FieldType.String, EIN_0036_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_MULTI_IWO_ST_COD_0037EV, (EXPORT_MULTI_IWO_ST_COD_0037EV) =>
           {
               EXPORT_MULTI_IWO_ST_COD_0037EV.CreateNewGroup(Names.WORK_AREA_0037ET, (WORK_AREA_0037ET) =>
               {
                   WORK_AREA_0037ET.CreateNewField(Names.TEXT_2_0037AS, FieldType.String, 1);

                   IField TEXT_2_0037_local = WORK_AREA_0037ET.CreateNewField(Names.TEXT_2_0037, FieldType.String, 2);
                   WORK_AREA_0037ET.CreateNewFieldRedefine(Names.TEXT_2_0037XX, FieldType.String, TEXT_2_0037_local, 2);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0038EV, (EXPORT_0038EV) =>
           {
               EXPORT_0038EV.CreateNewGroup(Names.EXTERNAL_0038ET, (EXTERNAL_0038ET) =>
               {
                   EXTERNAL_0038ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0038AS, FieldType.String, 1);

                   IField NUMERIC_RETURN_CODE_0038_local = EXTERNAL_0038ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0038, FieldType.SignedNumeric, 2);
                   EXTERNAL_0038ET.CreateNewFieldRedefine(Names.NUMERIC_RETURN_CODE_0038XX, FieldType.String, NUMERIC_RETURN_CODE_0038_local, 2);
                   EXTERNAL_0038ET.CreateNewField(Names.TEXT_RETURN_CODE_0038AS, FieldType.String, 1);

                   IField TEXT_RETURN_CODE_0038_local = EXTERNAL_0038ET.CreateNewField(Names.TEXT_RETURN_CODE_0038, FieldType.String, 2);
                   EXTERNAL_0038ET.CreateNewFieldRedefine(Names.TEXT_RETURN_CODE_0038XX, FieldType.String, TEXT_RETURN_CODE_0038_local, 2);
                   EXTERNAL_0038ET.CreateNewField(Names.TEXT_LINE_80_0038AS, FieldType.String, 1);

                   IField TEXT_LINE_80_0038_local = EXTERNAL_0038ET.CreateNewField(Names.TEXT_LINE_80_0038, FieldType.String, 130);
                   EXTERNAL_0038ET.CreateNewFieldRedefine(Names.TEXT_LINE_80_0038XX, FieldType.String, TEXT_LINE_80_0038_local, 130);
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(IEF_RUNTIME_PARM1, args, 0);
            SetPassedParm(IEF_RUNTIME_PARM2, args, 1);
            SetPassedParm(GLOBDATA, args, 2);
            SetPassedParm(IMPORT_0001EV, args, 3);
            SetPassedParm(EXPORT_DOC_CODE_0002EV, args, 4);
            SetPassedParm(EXPORT_CONTROL_NUM_0003EV, args, 5);
            SetPassedParm(EXPORT_ST_FIPS_CODE_0004EV, args, 6);
            SetPassedParm(EXPORT_HEADER_EIN_0005EV, args, 7);
            SetPassedParm(EXPORT_HEADER_PRIMARY_E_0006EV, args, 8);
            SetPassedParm(EXPORT_HEADER_CREATE_DA_0007EV, args, 9);
            SetPassedParm(EXPORT_HEADER_CREATE_TI_0008EV, args, 10);
            SetPassedParm(EXPORT_ERR_FIELD_NAME_0009EV, args, 11);
            SetPassedParm(EXPORT_BATCH_0010EV, args, 12);
            SetPassedParm(EXPORT_RECORD_0011EV, args, 13);
            SetPassedParm(EXPORT_EMPLOYEE_SENT_0012EV, args, 14);
            SetPassedParm(EXPORT_STATE_SENT_0013EV, args, 15);
            SetPassedParm(EXPORT_DOC_ACTION_CODE_0014EV, args, 16);
            SetPassedParm(EXPORT_CASE_ID_0015EV, args, 17);
            SetPassedParm(EXPORT_0016EV, args, 18);
            SetPassedParm(EXPORT_EMPLOYEE_0017EV, args, 19);
            SetPassedParm(EXPORT_EMPLOYEE_SUFFIX_0018EV, args, 20);
            SetPassedParm(EXPORT_DOC_TRACKING_NUM_0019EV, args, 21);
            SetPassedParm(EXPORT_0020EV, args, 22);
            SetPassedParm(EXPORT_REC_DISP_STATS_C_0021EV, args, 23);
            SetPassedParm(EXPORT_DISPOSION_REASON_0022EV, args, 24);
            SetPassedParm(EXPORT_TERMINATION_DATE_0023EV, args, 25);
            SetPassedParm(EXPORT_NCP_LAST_0024EV, args, 26);
            SetPassedParm(EXPORT_FINALLY_PAYMENT_0025EV, args, 27);
            SetPassedParm(EXPORT_FINAL_PAYMENT_0026EV, args, 28);
            SetPassedParm(EXPORT_NEW_0027EV, args, 29);
            SetPassedParm(EXPORT_NEW_0028EV, args, 30);
            SetPassedParm(EXPORT_LUMP_SUM_0029EV, args, 31);
            SetPassedParm(EXPORT_LUMP_SUM_0030EV, args, 32);
            SetPassedParm(EXPORT_LUMP_SUM_TYPE_0031EV, args, 33);
            SetPassedParm(EXPORT_NCP_LAST_KNOWN_0032EV, args, 34);
            SetPassedParm(EXPORT_1ST_ERROR_FIELD__0033EV, args, 35);
            SetPassedParm(EXPORT_2ND_ERROR_FIELD__0034EV, args, 36);
            SetPassedParm(EXPORT_MULTIPLE_ERROR_I_0035EV, args, 37);
            SetPassedParm(EXPORT_CORRECTED_0036EV, args, 38);
            SetPassedParm(EXPORT_MULTI_IWO_ST_COD_0037EV, args, 39);
            SetPassedParm(EXPORT_0038EV, args, 40);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(IEF_RUNTIME_PARM1, args, 0);
            SetReturnParm(IEF_RUNTIME_PARM2, args, 1);
            SetReturnParm(GLOBDATA, args, 2);
            SetReturnParm(IMPORT_0001EV, args, 3);
            SetReturnParm(EXPORT_DOC_CODE_0002EV, args, 4);
            SetReturnParm(EXPORT_CONTROL_NUM_0003EV, args, 5);
            SetReturnParm(EXPORT_ST_FIPS_CODE_0004EV, args, 6);
            SetReturnParm(EXPORT_HEADER_EIN_0005EV, args, 7);
            SetReturnParm(EXPORT_HEADER_PRIMARY_E_0006EV, args, 8);
            SetReturnParm(EXPORT_HEADER_CREATE_DA_0007EV, args, 9);
            SetReturnParm(EXPORT_HEADER_CREATE_TI_0008EV, args, 10);
            SetReturnParm(EXPORT_ERR_FIELD_NAME_0009EV, args, 11);
            SetReturnParm(EXPORT_BATCH_0010EV, args, 12);
            SetReturnParm(EXPORT_RECORD_0011EV, args, 13);
            SetReturnParm(EXPORT_EMPLOYEE_SENT_0012EV, args, 14);
            SetReturnParm(EXPORT_STATE_SENT_0013EV, args, 15);
            SetReturnParm(EXPORT_DOC_ACTION_CODE_0014EV, args, 16);
            SetReturnParm(EXPORT_CASE_ID_0015EV, args, 17);
            SetReturnParm(EXPORT_0016EV, args, 18);
            SetReturnParm(EXPORT_EMPLOYEE_0017EV, args, 19);
            SetReturnParm(EXPORT_EMPLOYEE_SUFFIX_0018EV, args, 20);
            SetReturnParm(EXPORT_DOC_TRACKING_NUM_0019EV, args, 21);
            SetReturnParm(EXPORT_0020EV, args, 22);
            SetReturnParm(EXPORT_REC_DISP_STATS_C_0021EV, args, 23);
            SetReturnParm(EXPORT_DISPOSION_REASON_0022EV, args, 24);
            SetReturnParm(EXPORT_TERMINATION_DATE_0023EV, args, 25);
            SetReturnParm(EXPORT_NCP_LAST_0024EV, args, 26);
            SetReturnParm(EXPORT_FINALLY_PAYMENT_0025EV, args, 27);
            SetReturnParm(EXPORT_FINAL_PAYMENT_0026EV, args, 28);
            SetReturnParm(EXPORT_NEW_0027EV, args, 29);
            SetReturnParm(EXPORT_NEW_0028EV, args, 30);
            SetReturnParm(EXPORT_LUMP_SUM_0029EV, args, 31);
            SetReturnParm(EXPORT_LUMP_SUM_0030EV, args, 32);
            SetReturnParm(EXPORT_LUMP_SUM_TYPE_0031EV, args, 33);
            SetReturnParm(EXPORT_NCP_LAST_KNOWN_0032EV, args, 34);
            SetReturnParm(EXPORT_1ST_ERROR_FIELD__0033EV, args, 35);
            SetReturnParm(EXPORT_2ND_ERROR_FIELD__0034EV, args, 36);
            SetReturnParm(EXPORT_MULTIPLE_ERROR_I_0035EV, args, 37);
            SetReturnParm(EXPORT_CORRECTED_0036EV, args, 38);
            SetReturnParm(EXPORT_MULTI_IWO_ST_COD_0037EV, args, 39);
            SetReturnParm(EXPORT_0038EV, args, 40);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXLR07 : EABBase
    {

        #region Public Constructors
        public SWEXLR07()
            : base()
        {
            this.ProgramName.SetValue("SWEXLR07");

            WS = new SWEXLR07_ws();
            FD = new SWEXLR07_fd(WS);
            LS = new SWEXLR07_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXLR07_ws WS;

        //==== File Data Class ========================================
        private SWEXLR07_fd FD;

        //==== Linkage Section Data Class ========================================
        private SWEXLR07_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING IEF-RUNTIME-PARM1 , IEF-RUNTIME-PARM2 , GLOBDATA , IMPORT-0001EV , EXPORT-DOC-CODE-0002EV , EXPORT-CONTROL-NUM-0003EV , EXPORT-ST-FIPS-CODE-0004EV , EXPORT-HEADER-EIN-0005EV , EXPORT-HEADER-PRIMARY-E-0006EV , EXPORT-HEADER-CREATE-DA-0007EV , EXPORT-HEADER-CREATE-TI-0008EV , EXPORT-ERR-FIELD-NAME-0009EV , EXPORT-BATCH-0010EV , EXPORT-RECORD-0011EV , EXPORT-EMPLOYEE-SENT-0012EV , EXPORT-STATE-SENT-0013EV , EXPORT-DOC-ACTION-CODE-0014EV , EXPORT-CASE-ID-0015EV , EXPORT-0016EV , EXPORT-EMPLOYEE-0017EV , EXPORT-EMPLOYEE-SUFFIX-0018EV , EXPORT-DOC-TRACKING-NUM-0019EV , EXPORT-0020EV , EXPORT-REC-DISP-STATS-C-0021EV , EXPORT-DISPOSION-REASON-0022EV , EXPORT-TERMINATION-DATE-0023EV , EXPORT-NCP-LAST-0024EV , EXPORT-FINALLY-PAYMENT-0025EV , EXPORT-FINAL-PAYMENT-0026EV , EXPORT-NEW-0027EV , EXPORT-NEW-0028EV , EXPORT-LUMP-SUM-0029EV , EXPORT-LUMP-SUM-0030EV , EXPORT-LUMP-SUM-TYPE-0031EV , EXPORT-NCP-LAST-KNOWN-0032EV , EXPORT-1ST-ERROR-FIELD--0033EV , EXPORT-2ND-ERROR-FIELD--0034EV , EXPORT-MULTIPLE-ERROR-I-0035EV , EXPORT-CORRECTED-0036EV , EXPORT-MULTI-IWO-ST-COD-0037EV , EXPORT-0038EV.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_1832415680(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_1832415680
        /// </summary>
        private void M_MAIN_1832415680(string returnMethod = "")
        {
            M_PARA_1832415680_INIT("M_PARA_1832415680_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-1832415680-INIT THRU PARA-1832415680-INIT-EXIT
            M_PARA_1832415680("M_PARA_1832415680_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-1832415680 THRU PARA-1832415680-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_1832415680
        /// </summary>
        private void M_PARA_1832415680(string returnMethod = "")
        {
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            //COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            //COMMENT: ******************************************
            //COMMENT:  THIS  CODE SWCSZF72 IS A PART OF SWEXLR07*
            //COMMENT: ******************************************
            //COMMENT: IF A NEW STUB IS GENERATED CHANGE
            //COMMENT: ***********************************************************
            LS.TEXT_RETURN_CODE_0038.SetValue("00");                                                            //COBOL==> MOVE '00' TO TEXT-RETURN-CODE-0038.
                                                                                                                // EvaluateList !LS.ACTION_0001!                                                                    //COBOL==> EVALUATE ACTION-0001
            if ((LS.ACTION_0001.IsEqualTo("OPEN")))                                                             //COBOL==> WHEN 'OPEN'
            {
                M_0100_OPEN("M_0100_EXIT"); if (Control.ExitProgram) { return; }                                      //COBOL==> PERFORM 0100-OPEN THRU 0100-EXIT
            }                                                                                                //COBOL==> WHEN 'READ'
            else
            if ((LS.ACTION_0001.IsEqualTo("READ")))
            {
                M_0500_PROCESS_TRANS("M_0500_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM 0500-PROCESS-TRANS THRU 0500-EXIT
            }                                                                                                //COBOL==> WHEN 'CLOSE'
            else
            if ((LS.ACTION_0001.IsEqualTo("CLOSE")))
            {
                M_0200_CLOSE("M_0200_EXIT"); if (Control.ExitProgram) { return; }                                     //COBOL==> PERFORM 0200-CLOSE THRU 0200-EXIT
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                LS.TEXT_RETURN_CODE_0038.SetValue("AB");                                                            //COBOL==> MOVE 'AB' TO TEXT-RETURN-CODE-0038
            }                                                                                                   //COBOL==> END-EVALUATE
            M_9999_FINISHED(CheckGotoReturn(returnMethod)); return;                                             //COBOL==> GO TO 9999-FINISHED.
        }
        /// <summary>
        /// Method M_0100_OPEN
        /// </summary>
        private void M_0100_OPEN(string returnMethod = "")
        {
            FD.EMPLIN.OpenFile(FileAccessMode.Read);                                                            //COBOL==> OPEN INPUT EMPLIN.
            if (WS.EMPLIN_STAT.IsEqualTo(00))                                                                   //COBOL==> IF EMPLIN-STAT = 00
            {
                LS.NUMERIC_RETURN_CODE_0038.SetValue(WS.EMPLIN_STAT);                                               //COBOL==> MOVE EMPLIN-STAT TO NUMERIC-RETURN-CODE-0038
            }                                                                                                   //COBOL==> ELSE
            else
            {
                LS.TEXT_RETURN_CODE_0038.SetValue("OP");                                                            //COBOL==> MOVE 'OP' TO TEXT-RETURN-CODE-0038
                LS.TEXT_LINE_80_0038.SetValue("AN ERROR OCCURRED ON OPEN ");                                        //COBOL==> MOVE 'AN ERROR OCCURRED ON OPEN ' TO TEXT-LINE-80-0038
                LS.NUMERIC_RETURN_CODE_0038.SetValue(WS.EMPLIN_STAT);                                               //COBOL==> MOVE EMPLIN-STAT TO NUMERIC-RETURN-CODE-0038
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_0100_OPEN") { M_0100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0100_EXIT
        /// </summary>
        private void M_0100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_0100_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_0100_EXIT") { M_0500_PROCESS_TRANS(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0500_PROCESS_TRANS
        /// </summary>
        private void M_0500_PROCESS_TRANS(string returnMethod = "")
        {
            WS.WS_EMPLIN.SetValue(FD.EMPLIN.ReadLineInto());                                                    //COBOL==> READ EMPLIN INTO WS-EMPLIN.
            if (WS.EMPLIN_STAT.IsEqualTo(10))                                                                   //COBOL==> IF EMPLIN-STAT = 10
            {
                LS.TEXT_LINE_80_0038.SetValue("REACHED END OF EMPLIN EXTRACT FILE");                                //COBOL==> MOVE 'REACHED END OF EMPLIN EXTRACT FILE' TO TEXT-LINE-80-0038
                LS.TEXT_RETURN_CODE_0038.SetValue("EF");                                                            //COBOL==> MOVE 'EF' TO TEXT-RETURN-CODE-0038
                LS.NUMERIC_RETURN_CODE_0038.SetValue(WS.EMPLIN_STAT);                                               //COBOL==> MOVE EMPLIN-STAT TO NUMERIC-RETURN-CODE-0038
                M_0500_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 0500-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (!(WS.EMPLIN_STAT.IsEqualTo(00)))                                                                //COBOL==> IF EMPLIN-STAT NOT = 00
            {
                LS.TEXT_LINE_80_0038.SetValue("ERROR IN READING RESPONSE FILE");                                    //COBOL==> MOVE 'ERROR IN READING RESPONSE FILE' TO TEXT-LINE-80-0038
                LS.TEXT_RETURN_CODE_0038.SetValue("XX");                                                            //COBOL==> MOVE 'XX' TO TEXT-RETURN-CODE-0038
                LS.NUMERIC_RETURN_CODE_0038.SetValue(WS.EMPLIN_STAT);                                               //COBOL==> MOVE EMPLIN-STAT TO NUMERIC-RETURN-CODE-0038
                M_0500_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 0500-EXIT
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                // EvaluateList !WS.DOC_CODE_EMP!                                                                   //COBOL==> EVALUATE DOC-CODE-EMP
            if ((WS.DOC_CODE_EMP.IsEqualTo("FHA")))                                                             //COBOL==> WHEN 'FHA'
            {
                M_0510_PROCESS_HEADER("M_0510_EXIT"); if (Control.ExitProgram) { return; }                            //COBOL==> PERFORM 0510-PROCESS-HEADER THRU 0510-EXIT
            }                                                                                                //COBOL==> WHEN 'BHA'
            else
            if ((WS.DOC_CODE_EMP.IsEqualTo("BHA")))
            {
                M_0510_PROCESS_HEADER("M_0510_EXIT"); if (Control.ExitProgram) { return; }                            //COBOL==> PERFORM 0510-PROCESS-HEADER THRU 0510-EXIT
            }                                                                                                //COBOL==> WHEN 'FTA'
            else
            if ((WS.DOC_CODE_EMP.IsEqualTo("FTA")))
            {
                M_0520_PROCESS_TRAILER("M_0520_EXIT"); if (Control.ExitProgram) { return; }                           //COBOL==> PERFORM 0520-PROCESS-TRAILER THRU 0520-EXIT
            }                                                                                                //COBOL==> WHEN 'BTA'
            else
            if ((WS.DOC_CODE_EMP.IsEqualTo("BTA")))
            {
                M_0520_PROCESS_TRAILER("M_0520_EXIT"); if (Control.ExitProgram) { return; }                           //COBOL==> PERFORM 0520-PROCESS-TRAILER THRU 0520-EXIT
            }                                                                                                //COBOL==> WHEN 'ACK'
            else
            if ((WS.DOC_CODE_EMP.IsEqualTo("ACK")))
            {
                M_0530_PROCESS_DETAIL("M_0530_EXIT"); if (Control.ExitProgram) { return; }                            //COBOL==> PERFORM 0530-PROCESS-DETAIL THRU 0530-EXIT
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                LS.TEXT_RETURN_CODE_0038.SetValue("AB");                                                            //COBOL==> MOVE 'AB' TO TEXT-RETURN-CODE-0038
            }                                                                                                   //COBOL==> END-EVALUATE.
            if (returnMethod != "" && returnMethod != "M_0500_PROCESS_TRANS") { M_0500_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0500_EXIT
        /// </summary>
        private void M_0500_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_0500_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_0500_EXIT") { M_0510_PROCESS_HEADER(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0510_PROCESS_HEADER
        /// </summary>
        private void M_0510_PROCESS_HEADER(string returnMethod = "")
        {
            WS.WS_HEADING.SetValue(WS.WS_EMPLIN);                                                               //COBOL==> MOVE WS-EMPLIN TO WS-HEADING
            LS.TEXT_3_0002.SetValue(WS.DOC_CODE);                                                               //COBOL==> MOVE DOC-CODE TO TEXT-3-0002
            LS.TEXT_22_0003.SetValue(WS.CONTROL_NUM);                                                           //COBOL==> MOVE CONTROL-NUM TO TEXT-22-0003
            LS.TEXT_5_0004.SetValue(WS.ST_FIPS_CD);                                                             //COBOL==> MOVE ST-FIPS-CD TO TEXT-5-0004
            LS.TEXT_9_0005.SetValue(WS.EIN);                                                                    //COBOL==> MOVE EIN TO TEXT-9-0005
            LS.TEXT_9_0006.SetValue(WS.PRIMARY_EIN);                                                            //COBOL==> MOVE PRIMARY-EIN TO TEXT-9-0006
            LS.DATE_0007.SetValue(WS.CREATE_DATE);                                                              //COBOL==> MOVE CREATE-DATE TO DATE-0007
            LS.TIME_0008.SetValue(WS.CREATE_TIME);                                                              //COBOL==> MOVE CREATE-TIME TO TIME-0008
            LS.TEXT_18_0009.SetValue(WS.ERROR_FIELD);                                                           //COBOL==> MOVE ERROR-FIELD TO TEXT-18-0009
            WS.WS_RECORD_COUNT.Add(1);                                                                          //COBOL==> ADD 1 TO WS-RECORD-COUNT.
            if (returnMethod != "" && returnMethod != "M_0510_PROCESS_HEADER") { M_0510_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0510_EXIT
        /// </summary>
        private void M_0510_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_0510_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_0510_EXIT") { M_0520_PROCESS_TRAILER(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0520_PROCESS_TRAILER
        /// </summary>
        private void M_0520_PROCESS_TRAILER(string returnMethod = "")
        {
            WS.WS_TRAILER.SetValue(WS.WS_EMPLIN);                                                               //COBOL==> MOVE WS-EMPLIN TO WS-TRAILER
            LS.TEXT_3_0002.SetValue(WS.DOC_CODE_T);                                                             //COBOL==> MOVE DOC-CODE-T TO TEXT-3-0002
            LS.TEXT_22_0003.SetValue(WS.CONTROL_NUM_T);                                                         //COBOL==> MOVE CONTROL-NUM-T TO TEXT-22-0003
            LS.COUNT_0010.SetValue(WS.BATCH_COUNT);                                                             //COBOL==> MOVE BATCH-COUNT TO COUNT-0010
            LS.COUNT_0011.SetValue(WS.RECORD_COUNT);                                                            //COBOL==> MOVE RECORD-COUNT TO COUNT-0011
            LS.COUNT_0012.SetValue(WS.EMPLOYER_SENT_COUNT);                                                     //COBOL==> MOVE EMPLOYER-SENT-COUNT TO COUNT-0012
            LS.COUNT_0013.SetValue(WS.STATE_SENT_COUNT);                                                        //COBOL==> MOVE STATE-SENT-COUNT TO COUNT-0013
            LS.TEXT_18_0009.SetValue(WS.ERROR_FIELD_T);                                                         //COBOL==> MOVE ERROR-FIELD-T TO TEXT-18-0009
            WS.WS_RECORD_COUNT.Add(1);                                                                          //COBOL==> ADD 1 TO WS-RECORD-COUNT.
            if (returnMethod != "" && returnMethod != "M_0520_PROCESS_TRAILER") { M_0520_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0520_EXIT
        /// </summary>
        private void M_0520_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_0520_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_0520_EXIT") { M_0530_PROCESS_DETAIL(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0530_PROCESS_DETAIL
        /// </summary>
        private void M_0530_PROCESS_DETAIL(string returnMethod = "")
        {
            LS.TEXT_3_0002.SetValue(WS.DOC_CODE_EMP);                                                           //COBOL==> MOVE DOC-CODE-EMP TO TEXT-3-0002
            LS.TEXT_3_0014.SetValue(WS.ACTION_CODE);                                                            //COBOL==> MOVE ACTION-CODE TO TEXT-3-0014
            LS.TEXT_15_0015.SetValue(WS.CASE_NUM);                                                              //COBOL==> MOVE CASE-NUM TO TEXT-15-0015
            LS.EIN_0016.SetValue(WS.EIN_EMP);                                                                   //COBOL==> MOVE EIN-EMP TO EIN-0016
            LS.LAST_NAME_0017.SetValue(WS.EMPLOYEE_LAST_NAME);                                                  //COBOL==> MOVE EMPLOYEE-LAST-NAME TO LAST-NAME-0017
            LS.FIRST_NAME_0017.SetValue(WS.EMPLOYEE_FIRST_NAME);                                                //COBOL==> MOVE EMPLOYEE-FIRST-NAME TO FIRST-NAME-0017
            LS.MIDDLE_INITIAL_0017.SetValue(WS.EMPLOYEE_MIDDLE_NAME);                                           //COBOL==> MOVE EMPLOYEE-MIDDLE-NAME TO MIDDLE-INITIAL-0017
            LS.SSN_0017.SetValue(WS.EMPLOYEE_SSN);                                                              //COBOL==> MOVE EMPLOYEE-SSN TO SSN-0017
            LS.TEXT_4_0018.SetValue(WS.EMPLOYEE_SUFFIX);                                                        //COBOL==> MOVE EMPLOYEE-SUFFIX TO TEXT-4-0018
            LS.TEXT_30_0019.SetValue(WS.DOC_TRACK_NUM);                                                         //COBOL==> MOVE DOC-TRACK-NUM TO TEXT-30-0019
            LS.STANDARD_NUMBER_0020.SetValue(WS.ORDER_ID);                                                      //COBOL==> MOVE ORDER-ID TO STANDARD-NUMBER-0020
            LS.TEXT_2_0021.SetValue(WS.REC_DISPOST_STATUS_CD);                                                  //COBOL==> MOVE REC-DISPOST-STATUS-CD TO TEXT-2-0021
            LS.TEXT_3_0022.SetValue(WS.DISPOSITION_REASON_CD);                                                  //COBOL==> MOVE DISPOSITION-REASON-CD TO TEXT-3-0022
            LS.DATE_0023.SetValue(WS.TERMINATION_DATE);                                                         //COBOL==> MOVE TERMINATION-DATE TO DATE-0023
            LS.STREET_1_0024.SetValue(WS.NCP_LAST_ADDR_LINE1);                                                  //COBOL==> MOVE NCP-LAST-ADDR-LINE1 TO STREET-1-0024
            LS.STREET_2_0024.SetValue(WS.NCP_LAST_ADDR_LINE2);                                                  //COBOL==> MOVE NCP-LAST-ADDR-LINE2 TO STREET-2-0024
            LS.CITY_0024.SetValue(WS.NCP_LAST_ADDR_CITY);                                                       //COBOL==> MOVE NCP-LAST-ADDR-CITY TO CITY-0024
            LS.STATE_0024.SetValue(WS.NCP_LAST_ADDR_ST);                                                        //COBOL==> MOVE NCP-LAST-ADDR-ST TO STATE-0024
            LS.ZIP_CODE_0024.SetValue(WS.NCP_LAST_ADDR_ZIP);                                                    //COBOL==> MOVE NCP-LAST-ADDR-ZIP TO ZIP-CODE-0024
            LS.ZIP4_0024.SetValue(WS.NCP_LAST_ADDR_ZIP4);                                                       //COBOL==> MOVE NCP-LAST-ADDR-ZIP4 TO ZIP4-0024
            LS.DATE_0025.SetValue(WS.FINAL_PAYMENT_DT);                                                         //COBOL==> MOVE FINAL-PAYMENT-DT TO DATE-0025
            LS.AVERAGE_CURRENCY_0026.SetValue(WS.FINAL_PAYMENT_AMT);                                            //COBOL==> MOVE FINAL-PAYMENT-AMT TO AVERAGE-CURRENCY-0026
            LS.NAME_0027.SetValue(WS.NEW_EMPLOYER_NAME);                                                        //COBOL==> MOVE NEW-EMPLOYER-NAME TO NAME-0027
            LS.STREET1_0028.SetValue(WS.NEW_EMPLOYER_ADD_LINE1);                                                //COBOL==> MOVE NEW-EMPLOYER-ADD-LINE1 TO STREET1-0028
            LS.STREET2_0028.SetValue(WS.NEW_EMPLOYER_ADD_LINE2);                                                //COBOL==> MOVE NEW-EMPLOYER-ADD-LINE2 TO STREET2-0028
            LS.CITY_0028.SetValue(WS.NEW_EMPLOYER_ADD_CITY);                                                    //COBOL==> MOVE NEW-EMPLOYER-ADD-CITY TO CITY-0028
            LS.STATE_0028.SetValue(WS.NEW_EMPLOYER_ADD_STATE);                                                  //COBOL==> MOVE NEW-EMPLOYER-ADD-STATE TO STATE-0028
            LS.ZIP_CODE_0028.SetValue(WS.NEW_EMPLOYER_ADD_ZIP_CD);                                              //COBOL==> MOVE NEW-EMPLOYER-ADD-ZIP-CD TO ZIP-CODE-0028
            LS.ZIP4_0028.SetValue(WS.NEW_EMPLOYER_ADD_ZIP4);                                                    //COBOL==> MOVE NEW-EMPLOYER-ADD-ZIP4 TO ZIP4-0028
            LS.DATE_0029.SetValue(WS.PAYMENT_LUMP_SUM_DT);                                                      //COBOL==> MOVE PAYMENT-LUMP-SUM-DT TO DATE-0029
            LS.AVERAGE_CURRENCY_0030.SetValue(WS.PAYMENT_LUMP_SUM_AMT);                                         //COBOL==> MOVE PAYMENT-LUMP-SUM-AMT TO AVERAGE-CURRENCY-0030
            LS.TEXT_35_0031.SetValue(WS.PAYMENT_LUMP_SUM_TYPE);                                                 //COBOL==> MOVE PAYMENT-LUMP-SUM-TYPE TO TEXT-35-0031
            LS.OTHER_AREA_CODE_0032.SetValue(WS.NCP_LAST_AREA_CODE);                                            //COBOL==> MOVE NCP-LAST-AREA-CODE TO OTHER-AREA-CODE-0032
            LS.OTHER_NUMBER_0032.SetValue(WS.NCP_LAST_PHONE);                                                   //COBOL==> MOVE NCP-LAST-PHONE TO OTHER-NUMBER-0032
            LS.TEXT_32_0033.SetValue(WS.nbr_1ST_ERROR_FIELD_NAME);                                              //COBOL==> MOVE 1ST-ERROR-FIELD-NAME TO TEXT-32-0033
            LS.TEXT_32_0034.SetValue(WS.nbr_2ND_ERROR_FIELD_NAME);                                              //COBOL==> MOVE 2ND-ERROR-FIELD-NAME TO TEXT-32-0034
            LS.TEXT_1_0035.SetValue(WS.MULTIPLE_ERROR_IND);                                                     //COBOL==> MOVE MULTIPLE-ERROR-IND TO TEXT-1-0035
            LS.EIN_0036.SetValue(WS.CORRECT_EIN);                                                               //COBOL==> MOVE CORRECT-EIN TO EIN-0036
            LS.TEXT_2_0037.SetValue(WS.MULTI_IWO_ST_CD);                                                        //COBOL==> MOVE MULTI-IWO-ST-CD TO TEXT-2-0037
            WS.WS_RECORD_COUNT.Add(1);                                                                          //COBOL==> ADD 1 TO WS-RECORD-COUNT.
            if (returnMethod != "" && returnMethod != "M_0530_PROCESS_DETAIL") { M_0530_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0530_EXIT
        /// </summary>
        private void M_0530_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_0530_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_0530_EXIT") { M_0200_CLOSE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0200_CLOSE
        /// </summary>
        private void M_0200_CLOSE(string returnMethod = "")
        {
            FD.EMPLIN.CloseFile();                                                                              //COBOL==> CLOSE EMPLIN.
            if (!(WS.EMPLIN_STAT.IsEqualTo(00)))                                                                //COBOL==> IF EMPLIN-STAT NOT = 00
            {
                LS.TEXT_RETURN_CODE_0038.SetValue("CL");                                                            //COBOL==> MOVE 'CL' TO TEXT-RETURN-CODE-0038
                LS.TEXT_LINE_80_0038.SetValue("ERROR IN CLOSING FILE");                                             //COBOL==> MOVE 'ERROR IN CLOSING FILE' TO TEXT-LINE-80-0038
                LS.NUMERIC_RETURN_CODE_0038.SetValue(WS.EMPLIN_STAT);                                               //COBOL==> MOVE EMPLIN-STAT TO NUMERIC-RETURN-CODE-0038
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_0200_CLOSE") { M_0200_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0200_EXIT
        /// </summary>
        private void M_0200_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_0200_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_0200_EXIT") { M_9999_FINISHED(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_9999_FINISHED
        /// </summary>
        /// <remarks>
        ///COMMENT: *****************
        /// </remarks>
        private void M_9999_FINISHED(string returnMethod = "")
        {
            //COMMENT: *****************
            if (returnMethod == "M_9999_FINISHED") { return; }                                                  //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_9999_FINISHED") { M_PARA_1832415680_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_1832415680_EXIT
        /// </summary>
        private void M_PARA_1832415680_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_1832415680_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_1832415680_EXIT") { M_PARA_1832415680_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_1832415680_INIT
        /// </summary>
        private void M_PARA_1832415680_INIT(string returnMethod = "")
        {
            LS.EXPORT_DOC_CODE_0002EV.ResetToInitialValue();                                                    //COBOL==> INITIALIZE EXPORT-DOC-CODE-0002EV
            LS.EXPORT_CONTROL_NUM_0003EV.ResetToInitialValue();                                                 //COBOL==> INITIALIZE EXPORT-CONTROL-NUM-0003EV
            LS.EXPORT_ST_FIPS_CODE_0004EV.ResetToInitialValue();                                                //COBOL==> INITIALIZE EXPORT-ST-FIPS-CODE-0004EV
            LS.EXPORT_HEADER_EIN_0005EV.ResetToInitialValue();                                                  //COBOL==> INITIALIZE EXPORT-HEADER-EIN-0005EV
            LS.EXPORT_HEADER_PRIMARY_E_0006EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-HEADER-PRIMARY-E-0006EV
            LS.EXPORT_HEADER_CREATE_DA_0007EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-HEADER-CREATE-DA-0007EV
            LS.EXPORT_HEADER_CREATE_TI_0008EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-HEADER-CREATE-TI-0008EV
            LS.EXPORT_ERR_FIELD_NAME_0009EV.ResetToInitialValue();                                              //COBOL==> INITIALIZE EXPORT-ERR-FIELD-NAME-0009EV
            LS.EXPORT_BATCH_0010EV.ResetToInitialValue();                                                       //COBOL==> INITIALIZE EXPORT-BATCH-0010EV
            LS.EXPORT_RECORD_0011EV.ResetToInitialValue();                                                      //COBOL==> INITIALIZE EXPORT-RECORD-0011EV
            LS.EXPORT_EMPLOYEE_SENT_0012EV.ResetToInitialValue();                                               //COBOL==> INITIALIZE EXPORT-EMPLOYEE-SENT-0012EV
            LS.EXPORT_STATE_SENT_0013EV.ResetToInitialValue();                                                  //COBOL==> INITIALIZE EXPORT-STATE-SENT-0013EV
            LS.EXPORT_DOC_ACTION_CODE_0014EV.ResetToInitialValue();                                             //COBOL==> INITIALIZE EXPORT-DOC-ACTION-CODE-0014EV
            LS.EXPORT_CASE_ID_0015EV.ResetToInitialValue();                                                     //COBOL==> INITIALIZE EXPORT-CASE-ID-0015EV
            LS.EXPORT_0016EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0016EV
            LS.EXPORT_EMPLOYEE_0017EV.ResetToInitialValue();                                                    //COBOL==> INITIALIZE EXPORT-EMPLOYEE-0017EV
            LS.EXPORT_EMPLOYEE_SUFFIX_0018EV.ResetToInitialValue();                                             //COBOL==> INITIALIZE EXPORT-EMPLOYEE-SUFFIX-0018EV
            LS.EXPORT_DOC_TRACKING_NUM_0019EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-DOC-TRACKING-NUM-0019EV
            LS.EXPORT_0020EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0020EV
            LS.EXPORT_REC_DISP_STATS_C_0021EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-REC-DISP-STATS-C-0021EV
            LS.EXPORT_DISPOSION_REASON_0022EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-DISPOSION-REASON-0022EV
            LS.EXPORT_TERMINATION_DATE_0023EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-TERMINATION-DATE-0023EV
            LS.EXPORT_NCP_LAST_0024EV.ResetToInitialValue();                                                    //COBOL==> INITIALIZE EXPORT-NCP-LAST-0024EV
            LS.EXPORT_FINALLY_PAYMENT_0025EV.ResetToInitialValue();                                             //COBOL==> INITIALIZE EXPORT-FINALLY-PAYMENT-0025EV
            LS.EXPORT_FINAL_PAYMENT_0026EV.ResetToInitialValue();                                               //COBOL==> INITIALIZE EXPORT-FINAL-PAYMENT-0026EV
            LS.EXPORT_NEW_0027EV.ResetToInitialValue();                                                         //COBOL==> INITIALIZE EXPORT-NEW-0027EV
            LS.EXPORT_NEW_0028EV.ResetToInitialValue();                                                         //COBOL==> INITIALIZE EXPORT-NEW-0028EV
            LS.EXPORT_LUMP_SUM_0029EV.ResetToInitialValue();                                                    //COBOL==> INITIALIZE EXPORT-LUMP-SUM-0029EV
            LS.EXPORT_LUMP_SUM_0030EV.ResetToInitialValue();                                                    //COBOL==> INITIALIZE EXPORT-LUMP-SUM-0030EV
            LS.EXPORT_LUMP_SUM_TYPE_0031EV.ResetToInitialValue();                                               //COBOL==> INITIALIZE EXPORT-LUMP-SUM-TYPE-0031EV
            LS.EXPORT_NCP_LAST_KNOWN_0032EV.ResetToInitialValue();                                              //COBOL==> INITIALIZE EXPORT-NCP-LAST-KNOWN-0032EV
            LS.EXPORT_1ST_ERROR_FIELD__0033EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-1ST-ERROR-FIELD--0033EV
            LS.EXPORT_2ND_ERROR_FIELD__0034EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-2ND-ERROR-FIELD--0034EV
            LS.EXPORT_MULTIPLE_ERROR_I_0035EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-MULTIPLE-ERROR-I-0035EV
            LS.EXPORT_CORRECTED_0036EV.ResetToInitialValue();                                                   //COBOL==> INITIALIZE EXPORT-CORRECTED-0036EV
            LS.EXPORT_MULTI_IWO_ST_COD_0037EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-MULTI-IWO-ST-COD-0037EV
            LS.EXPORT_0038EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0038EV .
            if (returnMethod != "" && returnMethod != "M_PARA_1832415680_INIT") { M_PARA_1832415680_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_1832415680_INIT_EXIT
        /// </summary>
        private void M_PARA_1832415680_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_1832415680_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
