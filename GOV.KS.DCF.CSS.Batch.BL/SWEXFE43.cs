#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2022
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2022-03-02 04:47:33 PM
   **        *   FROM COBOL PGM   :  SWEXFE43
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                              COOL:GEN
               COPYRIGHT 1998, STERLING SOFTWARE, INC.
       NAME: EAB_CREATE_VENDOR_FILE           DATE: 1998/10/01
       TARGET OS:   MVS                       TIME: 11:28:22
       TARGET DBMS: DB2                       USER: SWSREXL
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
       HIGH PERFORMANCE VIEW PASSING SELECTED
       LAST-STATEMENT-NUM EXECUTION SELECTED
       ENFORCE DEFAULT VALUES WITH DBMS NOT SELECTED
       INIT UNSPECIFIED OPTIONAL FIELDS TO NULL NOT SELECTED
   **************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.IO.Common;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
using GOV.KS.DCF.CSS.Common.BL;
#endregion

namespace GOV.KS.DCF.CSS.Batch.BL
{
    #region File Section Class
    internal class SWEXFE43_fd : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string FileSection = "SWEXFE43_fd_FileSection";
            internal const string VENDOUT = "VENDOUT";
            internal const string VENDOR_00 = "VENDOR_00";
            internal const string VENDOR_01 = "VENDOR_01";
            internal const string VENDOR_02 = "VENDOR_02";
            internal const string VENDOR_03 = "VENDOR_03";
            internal const string VENDOR_04 = "VENDOR_04";
            internal const string VENDOR_05 = "VENDOR_05";
            internal const string VENDOR_06 = "VENDOR_06";
            internal const string VENDOR_07 = "VENDOR_07";
            internal const string VENDOR_08 = "VENDOR_08";
            internal const string VENDOR_09 = "VENDOR_09";
            internal const string VENDOR_10 = "VENDOR_10";
            internal const string VENDOR_11 = "VENDOR_11";
            internal const string VENDOR_99 = "VENDOR_99";
        }
        #endregion

        #region Direct-access element properties
        public IFileLink VENDOUT { get; set; }
        public IField VENDOR_00 { get { return GetElementByName<IField>(Names.VENDOR_00); } }
        public IField VENDOR_01 { get { return GetElementByName<IField>(Names.VENDOR_01); } }
        public IField VENDOR_02 { get { return GetElementByName<IField>(Names.VENDOR_02); } }
        public IField VENDOR_03 { get { return GetElementByName<IField>(Names.VENDOR_03); } }
        public IField VENDOR_04 { get { return GetElementByName<IField>(Names.VENDOR_04); } }
        public IField VENDOR_05 { get { return GetElementByName<IField>(Names.VENDOR_05); } }
        public IField VENDOR_06 { get { return GetElementByName<IField>(Names.VENDOR_06); } }
        public IField VENDOR_07 { get { return GetElementByName<IField>(Names.VENDOR_07); } }
        public IField VENDOR_08 { get { return GetElementByName<IField>(Names.VENDOR_08); } }
        public IField VENDOR_09 { get { return GetElementByName<IField>(Names.VENDOR_09); } }
        public IField VENDOR_10 { get { return GetElementByName<IField>(Names.VENDOR_10); } }
        public IField VENDOR_11 { get { return GetElementByName<IField>(Names.VENDOR_11); } }
        public IField VENDOR_99 { get { return GetElementByName<IField>(Names.VENDOR_99); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the FileSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.VENDOR_00, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_01, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_02, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_03, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_04, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_05, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_06, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_07, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_08, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_09, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_10, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_11, FieldType.String, 500);
            recordDef.CreateNewField(Names.VENDOR_99, FieldType.String, 500);

        }

        protected override string GetRecordName()
        {
            return Names.FileSection;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            IFileHandler FileHandler = InversionContainer.GetImplementingObject<IFileHandler>();

            VENDOUT = FileHandler.GetFile("UT_S_VENDOR");
            VENDOUT.AssociatedBuffer = VENDOR_00;
            VENDOUT.RecordLength = 500;
        }
        #endregion

        #region Constructors
        public SWEXFE43_fd()
            : base()
        {
            Initialize();

        }
        #endregion
    }
    #endregion File Section Class
    #region Working Storage Class
    internal class SWEXFE43_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXFE43_ws_WorkingStorage";
            internal const string WS_TYPE00 = "WS_TYPE00";
            internal const string WS00_PERSON_NUM = "WS00_PERSON_NUM";
            internal const string WS00_STATEMENT_NUM = "WS00_STATEMENT_NUM";
            internal const string WS00_RECORD_NUM = "WS00_RECORD_NUM";
            internal const string WS00_SEQUENCE_NUM = "WS00_SEQUENCE_NUM";
            internal const string WS00_RECORD_TYPE = "WS00_RECORD_TYPE";
            internal const string WS00_FILE_DATE = "WS00_FILE_DATE";
            internal const string WS00_FILE_TIME = "WS00_FILE_TIME";
            internal const string WS_TYPE01 = "WS_TYPE01";
            internal const string WS01_PERSON_NUM = "WS01_PERSON_NUM";
            internal const string WS01_STATEMENT_NUM = "WS01_STATEMENT_NUM";
            internal const string WS01_RECORD_NUM = "WS01_RECORD_NUM";
            internal const string WS01_SEQUENCE_NUM = "WS01_SEQUENCE_NUM";
            internal const string WS01_RECORD_TYPE = "WS01_RECORD_TYPE";
            internal const string WS01_STMT_DATE_LINE = "WS01_STMT_DATE_LINE";
            internal const string WS01_REPT_MONTH_LINE = "WS01_REPT_MONTH_LINE";
            internal const string WS01_FIRST_NAME = "WS01_FIRST_NAME";
            internal const string WS01_MIDDLE_INIT = "WS01_MIDDLE_INIT";
            internal const string WS01_LAST_NAME = "WS01_LAST_NAME";
            internal const string WS01_MAIL_TO_ADDR1 = "WS01_MAIL_TO_ADDR1";
            internal const string WS01_MAIL_TO_ADDR2 = "WS01_MAIL_TO_ADDR2";
            internal const string WS01_MAIL_TO_ADDR3 = "WS01_MAIL_TO_ADDR3";
            internal const string WS01_MAIL_TO_ADDR4 = "WS01_MAIL_TO_ADDR4";
            internal const string WS01_MAIL_TO_CITY = "WS01_MAIL_TO_CITY";
            internal const string WS01_MAIL_TO_STATE = "WS01_MAIL_TO_STATE";
            internal const string WS01_MAIL_TO_ZIP5 = "WS01_MAIL_TO_ZIP5";
            internal const string WS01_MAIL_TO_ZIP4 = "WS01_MAIL_TO_ZIP4";
            internal const string WS01_MAIL_TO_ZIP3 = "WS01_MAIL_TO_ZIP3";
            internal const string WS01_MAIL_TO_PROVINCE = "WS01_MAIL_TO_PROVINCE";
            internal const string WS01_MAIL_TO_POSTAL_CD = "WS01_MAIL_TO_POSTAL_CD";
            internal const string WS01_MAIL_TO_COUNTRY = "WS01_MAIL_TO_COUNTRY";
            internal const string WS_TYPE02 = "WS_TYPE02";
            internal const string WS02_PERSON_NUM = "WS02_PERSON_NUM";
            internal const string WS02_STATEMENT_NUM = "WS02_STATEMENT_NUM";
            internal const string WS02_RECORD_NUM = "WS02_RECORD_NUM";
            internal const string WS02_SEQUENCE_NUM = "WS02_SEQUENCE_NUM";
            internal const string WS02_RECORD_TYPE = "WS02_RECORD_TYPE";
            internal const string WS02_FIRST_NAME = "WS02_FIRST_NAME";
            internal const string WS02_MIDDLE_INIT = "WS02_MIDDLE_INIT";
            internal const string WS02_LAST_NAME = "WS02_LAST_NAME";
            internal const string WS02_RETURN_ADDR1 = "WS02_RETURN_ADDR1";
            internal const string WS02_RETURN_ADDR2 = "WS02_RETURN_ADDR2";
            internal const string WS02_RETURN_ADDR3 = "WS02_RETURN_ADDR3";
            internal const string WS02_RETURN_ADDR4 = "WS02_RETURN_ADDR4";
            internal const string WS02_RETURN_CITY = "WS02_RETURN_CITY";
            internal const string WS02_RETURN_STATE = "WS02_RETURN_STATE";
            internal const string WS02_RETURN_ZIP5 = "WS02_RETURN_ZIP5";
            internal const string WS02_RETURN_ZIP4 = "WS02_RETURN_ZIP4";
            internal const string WS02_RETURN_ZIP3 = "WS02_RETURN_ZIP3";
            internal const string WS02_PHONE_AREA_CODE = "WS02_PHONE_AREA_CODE";
            internal const string WS02_PHONE_NUM = "WS02_PHONE_NUM";
            internal const string WS_TYPE03 = "WS_TYPE03";
            internal const string WS03_PERSON_NUM = "WS03_PERSON_NUM";
            internal const string WS03_STATEMENT_NUM = "WS03_STATEMENT_NUM";
            internal const string WS03_RECORD_NUM = "WS03_RECORD_NUM";
            internal const string WS03_SEQUENCE_NUM = "WS03_SEQUENCE_NUM";
            internal const string WS03_RECORD_TYPE = "WS03_RECORD_TYPE";
            internal const string WS03_STMT_MESSAGE = "WS03_STMT_MESSAGE";
            internal const string WS_TYPE04 = "WS_TYPE04";
            internal const string WS04_PERSON_NUM = "WS04_PERSON_NUM";
            internal const string WS04_STATEMENT_NUM = "WS04_STATEMENT_NUM";
            internal const string WS04_RECORD_NUM = "WS04_RECORD_NUM";
            internal const string WS04_SEQUENCE_NUM = "WS04_SEQUENCE_NUM";
            internal const string WS04_RECORD_TYPE = "WS04_RECORD_TYPE";
            internal const string WS04_UNDISTRIBUTED_HDR = "WS04_UNDISTRIBUTED_HDR";
            internal const string WS04_UNDISTRIB_DATE = "WS04_UNDISTRIB_DATE";
            internal const string WS04_UNDISTRIB_AMT = "WS04_UNDISTRIB_AMT";
            internal const string WS_TYPE05 = "WS_TYPE05";
            internal const string WS05_PERSON_NUM = "WS05_PERSON_NUM";
            internal const string WS05_STATEMENT_NUM = "WS05_STATEMENT_NUM";
            internal const string WS05_RECORD_NUM = "WS05_RECORD_NUM";
            internal const string WS05_SEQUENCE_NUM = "WS05_SEQUENCE_NUM";
            internal const string WS05_RECORD_TYPE = "WS05_RECORD_TYPE";
            internal const string WS05_COURT_ORDER_DESC = "WS05_COURT_ORDER_DESC";
            internal const string WS_TYPE06 = "WS_TYPE06";
            internal const string WS06_PERSON_NUM = "WS06_PERSON_NUM";
            internal const string WS06_STATEMENT_NUM = "WS06_STATEMENT_NUM";
            internal const string WS06_RECORD_NUM = "WS06_RECORD_NUM";
            internal const string WS06_SEQUENCE_NUM = "WS06_SEQUENCE_NUM";
            internal const string WS06_RECORD_TYPE = "WS06_RECORD_TYPE";
            internal const string WS06_OBLIGATION_DESC = "WS06_OBLIGATION_DESC";
            internal const string WS_TYPE07 = "WS_TYPE07";
            internal const string WS07_PERSON_NUM = "WS07_PERSON_NUM";
            internal const string WS07_STATEMENT_NUM = "WS07_STATEMENT_NUM";
            internal const string WS07_RECORD_NUM = "WS07_RECORD_NUM";
            internal const string WS07_SEQUENCE_NUM = "WS07_SEQUENCE_NUM";
            internal const string WS07_RECORD_TYPE = "WS07_RECORD_TYPE";
            internal const string WS07_BALANCE_DATE = "WS07_BALANCE_DATE";
            internal const string WS07_BALANCE_DESC = "WS07_BALANCE_DESC";
            internal const string WS07_BALANCE_AMT = "WS07_BALANCE_AMT";
            internal const string WS_TYPE08 = "WS_TYPE08";
            internal const string WS08_PERSON_NUM = "WS08_PERSON_NUM";
            internal const string WS08_STATEMENT_NUM = "WS08_STATEMENT_NUM";
            internal const string WS08_RECORD_NUM = "WS08_RECORD_NUM";
            internal const string WS08_SEQUENCE_NUM = "WS08_SEQUENCE_NUM";
            internal const string WS08_RECORD_TYPE = "WS08_RECORD_TYPE";
            internal const string WS08_ACTIVITY_DATE = "WS08_ACTIVITY_DATE";
            internal const string WS08_ACTIVITY_DESC = "WS08_ACTIVITY_DESC";
            internal const string WS08_AMOUNT_DUE = "WS08_AMOUNT_DUE";
            internal const string WS08_AMOUNT_RECEIVED = "WS08_AMOUNT_RECEIVED";
            internal const string WS_TYPE09 = "WS_TYPE09";
            internal const string WS09_PERSON_NUM = "WS09_PERSON_NUM";
            internal const string WS09_STATEMENT_NUM = "WS09_STATEMENT_NUM";
            internal const string WS09_RECORD_NUM = "WS09_RECORD_NUM";
            internal const string WS09_SEQUENCE_NUM = "WS09_SEQUENCE_NUM";
            internal const string WS09_RECORD_TYPE = "WS09_RECORD_TYPE";
            internal const string WS09_BALANCE_DATE = "WS09_BALANCE_DATE";
            internal const string WS09_BALANCE_DESC = "WS09_BALANCE_DESC";
            internal const string WS09_BALANCE_AMT = "WS09_BALANCE_AMT";
            internal const string WS_TYPE10 = "WS_TYPE10";
            internal const string WS10_PERSON_NUM = "WS10_PERSON_NUM";
            internal const string WS10_STATEMENT_NUM = "WS10_STATEMENT_NUM";
            internal const string WS10_RECORD_NUM = "WS10_RECORD_NUM";
            internal const string WS10_SEQUENCE_NUM = "WS10_SEQUENCE_NUM";
            internal const string WS10_RECORD_TYPE = "WS10_RECORD_TYPE";
            internal const string WS10_RETURN_NAME = "WS10_RETURN_NAME";
            internal const string WS10_RETURN_ADDR1 = "WS10_RETURN_ADDR1";
            internal const string WS10_RETURN_ADDR2 = "WS10_RETURN_ADDR2";
            internal const string WS10_RETURN_ADDR3 = "WS10_RETURN_ADDR3";
            internal const string WS10_RETURN_ADDR4 = "WS10_RETURN_ADDR4";
            internal const string WS10_RETURN_CITY = "WS10_RETURN_CITY";
            internal const string WS10_RETURN_STATE = "WS10_RETURN_STATE";
            internal const string WS10_RETURN_ZIP5 = "WS10_RETURN_ZIP5";
            internal const string WS10_RETURN_ZIP4 = "WS10_RETURN_ZIP4";
            internal const string WS10_RETURN_ZIP3 = "WS10_RETURN_ZIP3";
            internal const string WS10_COUPON_MONTH_YEAR = "WS10_COUPON_MONTH_YEAR";
            internal const string WS10_COUPON_LINE2 = "WS10_COUPON_LINE2";
            internal const string WS10_PAST_DUE_DATE = "WS10_PAST_DUE_DATE";
            internal const string WS10_DUE_BY_DATE = "WS10_DUE_BY_DATE";
            internal const string WS10_AMOUNT_PAST_DUE = "WS10_AMOUNT_PAST_DUE";
            internal const string WS10_AMOUNT_DUE = "WS10_AMOUNT_DUE";
            internal const string WS_TYPE11 = "WS_TYPE11";
            internal const string WS11_PERSON_NUM = "WS11_PERSON_NUM";
            internal const string WS11_STATEMENT_NUM = "WS11_STATEMENT_NUM";
            internal const string WS11_RECORD_NUM = "WS11_RECORD_NUM";
            internal const string WS11_SEQUENCE_NUM = "WS11_SEQUENCE_NUM";
            internal const string WS11_RECORD_TYPE = "WS11_RECORD_TYPE";
            internal const string WS11_COUPON_MSG1 = "WS11_COUPON_MSG1";
            internal const string WS11_COUPON_MSG2 = "WS11_COUPON_MSG2";
            internal const string WS_TYPE99 = "WS_TYPE99";
            internal const string WS99_PERSON_NUM = "WS99_PERSON_NUM";
            internal const string WS99_RECORD_NUM = "WS99_RECORD_NUM";
            internal const string WS99_SEQUENCE_NUM = "WS99_SEQUENCE_NUM";
            internal const string WS99_RECORD_TYPE = "WS99_RECORD_TYPE";
            internal const string WS99_NUM_OF_STMTS = "WS99_NUM_OF_STMTS";
            internal const string WS99_NUM_OF_CPNS = "WS99_NUM_OF_CPNS";
            internal const string WS_GLOBAL = "WS_GLOBAL";
            internal const string WS_GLOBAL_NAME = "WS_GLOBAL_NAME";
        }
        #endregion

        #region Direct-access element properties
        public IGroup WS_TYPE00 { get { return GetElementByName<IGroup>(Names.WS_TYPE00); } }
        public IField WS00_PERSON_NUM { get { return GetElementByName<IField>(Names.WS00_PERSON_NUM); } }
        public IField WS00_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS00_STATEMENT_NUM); } }
        public IField WS00_RECORD_NUM { get { return GetElementByName<IField>(Names.WS00_RECORD_NUM); } }
        public IField WS00_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS00_SEQUENCE_NUM); } }
        public IField WS00_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS00_RECORD_TYPE); } }
        public IField WS00_FILE_DATE { get { return GetElementByName<IField>(Names.WS00_FILE_DATE); } }
        public IField WS00_FILE_TIME { get { return GetElementByName<IField>(Names.WS00_FILE_TIME); } }
        public IGroup WS_TYPE01 { get { return GetElementByName<IGroup>(Names.WS_TYPE01); } }
        public IField WS01_PERSON_NUM { get { return GetElementByName<IField>(Names.WS01_PERSON_NUM); } }
        public IField WS01_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS01_STATEMENT_NUM); } }
        public IField WS01_RECORD_NUM { get { return GetElementByName<IField>(Names.WS01_RECORD_NUM); } }
        public IField WS01_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS01_SEQUENCE_NUM); } }
        public IField WS01_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS01_RECORD_TYPE); } }
        public IField WS01_STMT_DATE_LINE { get { return GetElementByName<IField>(Names.WS01_STMT_DATE_LINE); } }
        public IField WS01_REPT_MONTH_LINE { get { return GetElementByName<IField>(Names.WS01_REPT_MONTH_LINE); } }
        public IField WS01_FIRST_NAME { get { return GetElementByName<IField>(Names.WS01_FIRST_NAME); } }
        public IField WS01_MIDDLE_INIT { get { return GetElementByName<IField>(Names.WS01_MIDDLE_INIT); } }
        public IField WS01_LAST_NAME { get { return GetElementByName<IField>(Names.WS01_LAST_NAME); } }
        public IField WS01_MAIL_TO_ADDR1 { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_ADDR1); } }
        public IField WS01_MAIL_TO_ADDR2 { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_ADDR2); } }
        public IField WS01_MAIL_TO_ADDR3 { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_ADDR3); } }
        public IField WS01_MAIL_TO_ADDR4 { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_ADDR4); } }
        public IField WS01_MAIL_TO_CITY { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_CITY); } }
        public IField WS01_MAIL_TO_STATE { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_STATE); } }
        public IField WS01_MAIL_TO_ZIP5 { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_ZIP5); } }
        public IField WS01_MAIL_TO_ZIP4 { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_ZIP4); } }
        public IField WS01_MAIL_TO_ZIP3 { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_ZIP3); } }
        public IField WS01_MAIL_TO_PROVINCE { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_PROVINCE); } }
        public IField WS01_MAIL_TO_POSTAL_CD { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_POSTAL_CD); } }
        public IField WS01_MAIL_TO_COUNTRY { get { return GetElementByName<IField>(Names.WS01_MAIL_TO_COUNTRY); } }
        public IGroup WS_TYPE02 { get { return GetElementByName<IGroup>(Names.WS_TYPE02); } }
        public IField WS02_PERSON_NUM { get { return GetElementByName<IField>(Names.WS02_PERSON_NUM); } }
        public IField WS02_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS02_STATEMENT_NUM); } }
        public IField WS02_RECORD_NUM { get { return GetElementByName<IField>(Names.WS02_RECORD_NUM); } }
        public IField WS02_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS02_SEQUENCE_NUM); } }
        public IField WS02_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS02_RECORD_TYPE); } }
        public IField WS02_FIRST_NAME { get { return GetElementByName<IField>(Names.WS02_FIRST_NAME); } }
        public IField WS02_MIDDLE_INIT { get { return GetElementByName<IField>(Names.WS02_MIDDLE_INIT); } }
        public IField WS02_LAST_NAME { get { return GetElementByName<IField>(Names.WS02_LAST_NAME); } }
        public IField WS02_RETURN_ADDR1 { get { return GetElementByName<IField>(Names.WS02_RETURN_ADDR1); } }
        public IField WS02_RETURN_ADDR2 { get { return GetElementByName<IField>(Names.WS02_RETURN_ADDR2); } }
        public IField WS02_RETURN_ADDR3 { get { return GetElementByName<IField>(Names.WS02_RETURN_ADDR3); } }
        public IField WS02_RETURN_ADDR4 { get { return GetElementByName<IField>(Names.WS02_RETURN_ADDR4); } }
        public IField WS02_RETURN_CITY { get { return GetElementByName<IField>(Names.WS02_RETURN_CITY); } }
        public IField WS02_RETURN_STATE { get { return GetElementByName<IField>(Names.WS02_RETURN_STATE); } }
        public IField WS02_RETURN_ZIP5 { get { return GetElementByName<IField>(Names.WS02_RETURN_ZIP5); } }
        public IField WS02_RETURN_ZIP4 { get { return GetElementByName<IField>(Names.WS02_RETURN_ZIP4); } }
        public IField WS02_RETURN_ZIP3 { get { return GetElementByName<IField>(Names.WS02_RETURN_ZIP3); } }
        public IField WS02_PHONE_AREA_CODE { get { return GetElementByName<IField>(Names.WS02_PHONE_AREA_CODE); } }
        public IField WS02_PHONE_NUM { get { return GetElementByName<IField>(Names.WS02_PHONE_NUM); } }
        public IGroup WS_TYPE03 { get { return GetElementByName<IGroup>(Names.WS_TYPE03); } }
        public IField WS03_PERSON_NUM { get { return GetElementByName<IField>(Names.WS03_PERSON_NUM); } }
        public IField WS03_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS03_STATEMENT_NUM); } }
        public IField WS03_RECORD_NUM { get { return GetElementByName<IField>(Names.WS03_RECORD_NUM); } }
        public IField WS03_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS03_SEQUENCE_NUM); } }
        public IField WS03_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS03_RECORD_TYPE); } }
        public IField WS03_STMT_MESSAGE { get { return GetElementByName<IField>(Names.WS03_STMT_MESSAGE); } }
        public IGroup WS_TYPE04 { get { return GetElementByName<IGroup>(Names.WS_TYPE04); } }
        public IField WS04_PERSON_NUM { get { return GetElementByName<IField>(Names.WS04_PERSON_NUM); } }
        public IField WS04_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS04_STATEMENT_NUM); } }
        public IField WS04_RECORD_NUM { get { return GetElementByName<IField>(Names.WS04_RECORD_NUM); } }
        public IField WS04_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS04_SEQUENCE_NUM); } }
        public IField WS04_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS04_RECORD_TYPE); } }
        public IField WS04_UNDISTRIBUTED_HDR { get { return GetElementByName<IField>(Names.WS04_UNDISTRIBUTED_HDR); } }
        public IField WS04_UNDISTRIB_DATE { get { return GetElementByName<IField>(Names.WS04_UNDISTRIB_DATE); } }
        public IField WS04_UNDISTRIB_AMT { get { return GetElementByName<IField>(Names.WS04_UNDISTRIB_AMT); } }
        public IGroup WS_TYPE05 { get { return GetElementByName<IGroup>(Names.WS_TYPE05); } }
        public IField WS05_PERSON_NUM { get { return GetElementByName<IField>(Names.WS05_PERSON_NUM); } }
        public IField WS05_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS05_STATEMENT_NUM); } }
        public IField WS05_RECORD_NUM { get { return GetElementByName<IField>(Names.WS05_RECORD_NUM); } }
        public IField WS05_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS05_SEQUENCE_NUM); } }
        public IField WS05_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS05_RECORD_TYPE); } }
        public IField WS05_COURT_ORDER_DESC { get { return GetElementByName<IField>(Names.WS05_COURT_ORDER_DESC); } }
        public IGroup WS_TYPE06 { get { return GetElementByName<IGroup>(Names.WS_TYPE06); } }
        public IField WS06_PERSON_NUM { get { return GetElementByName<IField>(Names.WS06_PERSON_NUM); } }
        public IField WS06_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS06_STATEMENT_NUM); } }
        public IField WS06_RECORD_NUM { get { return GetElementByName<IField>(Names.WS06_RECORD_NUM); } }
        public IField WS06_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS06_SEQUENCE_NUM); } }
        public IField WS06_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS06_RECORD_TYPE); } }
        public IField WS06_OBLIGATION_DESC { get { return GetElementByName<IField>(Names.WS06_OBLIGATION_DESC); } }
        public IGroup WS_TYPE07 { get { return GetElementByName<IGroup>(Names.WS_TYPE07); } }
        public IField WS07_PERSON_NUM { get { return GetElementByName<IField>(Names.WS07_PERSON_NUM); } }
        public IField WS07_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS07_STATEMENT_NUM); } }
        public IField WS07_RECORD_NUM { get { return GetElementByName<IField>(Names.WS07_RECORD_NUM); } }
        public IField WS07_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS07_SEQUENCE_NUM); } }
        public IField WS07_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS07_RECORD_TYPE); } }
        public IField WS07_BALANCE_DATE { get { return GetElementByName<IField>(Names.WS07_BALANCE_DATE); } }
        public IField WS07_BALANCE_DESC { get { return GetElementByName<IField>(Names.WS07_BALANCE_DESC); } }
        public IField WS07_BALANCE_AMT { get { return GetElementByName<IField>(Names.WS07_BALANCE_AMT); } }
        public IGroup WS_TYPE08 { get { return GetElementByName<IGroup>(Names.WS_TYPE08); } }
        public IField WS08_PERSON_NUM { get { return GetElementByName<IField>(Names.WS08_PERSON_NUM); } }
        public IField WS08_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS08_STATEMENT_NUM); } }
        public IField WS08_RECORD_NUM { get { return GetElementByName<IField>(Names.WS08_RECORD_NUM); } }
        public IField WS08_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS08_SEQUENCE_NUM); } }
        public IField WS08_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS08_RECORD_TYPE); } }
        public IField WS08_ACTIVITY_DATE { get { return GetElementByName<IField>(Names.WS08_ACTIVITY_DATE); } }
        public IField WS08_ACTIVITY_DESC { get { return GetElementByName<IField>(Names.WS08_ACTIVITY_DESC); } }
        public IField WS08_AMOUNT_DUE { get { return GetElementByName<IField>(Names.WS08_AMOUNT_DUE); } }
        public IField WS08_AMOUNT_RECEIVED { get { return GetElementByName<IField>(Names.WS08_AMOUNT_RECEIVED); } }
        public IGroup WS_TYPE09 { get { return GetElementByName<IGroup>(Names.WS_TYPE09); } }
        public IField WS09_PERSON_NUM { get { return GetElementByName<IField>(Names.WS09_PERSON_NUM); } }
        public IField WS09_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS09_STATEMENT_NUM); } }
        public IField WS09_RECORD_NUM { get { return GetElementByName<IField>(Names.WS09_RECORD_NUM); } }
        public IField WS09_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS09_SEQUENCE_NUM); } }
        public IField WS09_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS09_RECORD_TYPE); } }
        public IField WS09_BALANCE_DATE { get { return GetElementByName<IField>(Names.WS09_BALANCE_DATE); } }
        public IField WS09_BALANCE_DESC { get { return GetElementByName<IField>(Names.WS09_BALANCE_DESC); } }
        public IField WS09_BALANCE_AMT { get { return GetElementByName<IField>(Names.WS09_BALANCE_AMT); } }
        public IGroup WS_TYPE10 { get { return GetElementByName<IGroup>(Names.WS_TYPE10); } }
        public IField WS10_PERSON_NUM { get { return GetElementByName<IField>(Names.WS10_PERSON_NUM); } }
        public IField WS10_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS10_STATEMENT_NUM); } }
        public IField WS10_RECORD_NUM { get { return GetElementByName<IField>(Names.WS10_RECORD_NUM); } }
        public IField WS10_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS10_SEQUENCE_NUM); } }
        public IField WS10_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS10_RECORD_TYPE); } }
        public IField WS10_RETURN_NAME { get { return GetElementByName<IField>(Names.WS10_RETURN_NAME); } }
        public IField WS10_RETURN_ADDR1 { get { return GetElementByName<IField>(Names.WS10_RETURN_ADDR1); } }
        public IField WS10_RETURN_ADDR2 { get { return GetElementByName<IField>(Names.WS10_RETURN_ADDR2); } }
        public IField WS10_RETURN_ADDR3 { get { return GetElementByName<IField>(Names.WS10_RETURN_ADDR3); } }
        public IField WS10_RETURN_ADDR4 { get { return GetElementByName<IField>(Names.WS10_RETURN_ADDR4); } }
        public IField WS10_RETURN_CITY { get { return GetElementByName<IField>(Names.WS10_RETURN_CITY); } }
        public IField WS10_RETURN_STATE { get { return GetElementByName<IField>(Names.WS10_RETURN_STATE); } }
        public IField WS10_RETURN_ZIP5 { get { return GetElementByName<IField>(Names.WS10_RETURN_ZIP5); } }
        public IField WS10_RETURN_ZIP4 { get { return GetElementByName<IField>(Names.WS10_RETURN_ZIP4); } }
        public IField WS10_RETURN_ZIP3 { get { return GetElementByName<IField>(Names.WS10_RETURN_ZIP3); } }
        public IField WS10_COUPON_MONTH_YEAR { get { return GetElementByName<IField>(Names.WS10_COUPON_MONTH_YEAR); } }
        public IField WS10_COUPON_LINE2 { get { return GetElementByName<IField>(Names.WS10_COUPON_LINE2); } }
        public IField WS10_PAST_DUE_DATE { get { return GetElementByName<IField>(Names.WS10_PAST_DUE_DATE); } }
        public IField WS10_DUE_BY_DATE { get { return GetElementByName<IField>(Names.WS10_DUE_BY_DATE); } }
        public IField WS10_AMOUNT_PAST_DUE { get { return GetElementByName<IField>(Names.WS10_AMOUNT_PAST_DUE); } }
        public IField WS10_AMOUNT_DUE { get { return GetElementByName<IField>(Names.WS10_AMOUNT_DUE); } }
        public IGroup WS_TYPE11 { get { return GetElementByName<IGroup>(Names.WS_TYPE11); } }
        public IField WS11_PERSON_NUM { get { return GetElementByName<IField>(Names.WS11_PERSON_NUM); } }
        public IField WS11_STATEMENT_NUM { get { return GetElementByName<IField>(Names.WS11_STATEMENT_NUM); } }
        public IField WS11_RECORD_NUM { get { return GetElementByName<IField>(Names.WS11_RECORD_NUM); } }
        public IField WS11_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS11_SEQUENCE_NUM); } }
        public IField WS11_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS11_RECORD_TYPE); } }
        public IField WS11_COUPON_MSG1 { get { return GetElementByName<IField>(Names.WS11_COUPON_MSG1); } }
        public IField WS11_COUPON_MSG2 { get { return GetElementByName<IField>(Names.WS11_COUPON_MSG2); } }
        public IGroup WS_TYPE99 { get { return GetElementByName<IGroup>(Names.WS_TYPE99); } }
        public IField WS99_PERSON_NUM { get { return GetElementByName<IField>(Names.WS99_PERSON_NUM); } }
        public IField WS99_RECORD_NUM { get { return GetElementByName<IField>(Names.WS99_RECORD_NUM); } }
        public IField WS99_SEQUENCE_NUM { get { return GetElementByName<IField>(Names.WS99_SEQUENCE_NUM); } }
        public IField WS99_RECORD_TYPE { get { return GetElementByName<IField>(Names.WS99_RECORD_TYPE); } }
        public IField WS99_NUM_OF_STMTS { get { return GetElementByName<IField>(Names.WS99_NUM_OF_STMTS); } }
        public IField WS99_NUM_OF_CPNS { get { return GetElementByName<IField>(Names.WS99_NUM_OF_CPNS); } }
        public IField WS_GLOBAL { get { return GetElementByName<IField>(Names.WS_GLOBAL); } }
        public IField WS_GLOBAL_NAME { get { return GetElementByName<IField>(Names.WS_GLOBAL_NAME); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.WS_TYPE00, (WS_TYPE00) =>
           {
               WS_TYPE00.CreateNewField(Names.WS00_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE00.CreateNewField(Names.WS00_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE00.CreateNewField(Names.WS00_RECORD_NUM, FieldType.UnsignedNumeric, 11, 1);
               WS_TYPE00.CreateNewField(Names.WS00_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 1);
               WS_TYPE00.CreateNewField(Names.WS00_RECORD_TYPE, FieldType.String, 2, "00");
               WS_TYPE00.CreateNewField(Names.WS00_FILE_DATE, FieldType.String, 10, SPACES);
               WS_TYPE00.CreateNewField(Names.WS00_FILE_TIME, FieldType.String, 6, SPACES);
               WS_TYPE00.CreateNewFillerField(FieldType.String, 447, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE01, (WS_TYPE01) =>
           {
               WS_TYPE01.CreateNewField(Names.WS01_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE01.CreateNewField(Names.WS01_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE01.CreateNewField(Names.WS01_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE01.CreateNewField(Names.WS01_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE01.CreateNewField(Names.WS01_RECORD_TYPE, FieldType.String, 2, "01");
               WS_TYPE01.CreateNewField(Names.WS01_STMT_DATE_LINE, FieldType.String, 132, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_REPT_MONTH_LINE, FieldType.String, 132, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_FIRST_NAME, FieldType.String, 12, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MIDDLE_INIT, FieldType.String, 1, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_LAST_NAME, FieldType.String, 17, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_ADDR1, FieldType.String, 25, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_ADDR2, FieldType.String, 25, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_ADDR3, FieldType.String, 25, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_ADDR4, FieldType.String, 25, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_CITY, FieldType.String, 15, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_STATE, FieldType.String, 2, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_ZIP5, FieldType.String, 5, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_ZIP4, FieldType.String, 4, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_ZIP3, FieldType.String, 3, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_PROVINCE, FieldType.String, 5, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_POSTAL_CD, FieldType.String, 10, SPACES);
               WS_TYPE01.CreateNewField(Names.WS01_MAIL_TO_COUNTRY, FieldType.String, 2, SPACES);
               WS_TYPE01.CreateNewFillerField(FieldType.String, 23, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE02, (WS_TYPE02) =>
           {
               WS_TYPE02.CreateNewField(Names.WS02_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE02.CreateNewField(Names.WS02_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE02.CreateNewField(Names.WS02_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE02.CreateNewField(Names.WS02_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE02.CreateNewField(Names.WS02_RECORD_TYPE, FieldType.String, 2, "02");
               WS_TYPE02.CreateNewField(Names.WS02_FIRST_NAME, FieldType.String, 12, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_MIDDLE_INIT, FieldType.String, 1, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_LAST_NAME, FieldType.String, 17, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_RETURN_ADDR1, FieldType.String, 25, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_RETURN_ADDR2, FieldType.String, 25, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_RETURN_ADDR3, FieldType.String, 25, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_RETURN_ADDR4, FieldType.String, 25, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_RETURN_CITY, FieldType.String, 15, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_RETURN_STATE, FieldType.String, 2, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_RETURN_ZIP5, FieldType.String, 5, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_RETURN_ZIP4, FieldType.String, 4, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_RETURN_ZIP3, FieldType.String, 3, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_PHONE_AREA_CODE, FieldType.String, 3, SPACES);
               WS_TYPE02.CreateNewField(Names.WS02_PHONE_NUM, FieldType.String, 7, SPACES);
               WS_TYPE02.CreateNewFillerField(FieldType.String, 294, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE03, (WS_TYPE03) =>
           {
               WS_TYPE03.CreateNewField(Names.WS03_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE03.CreateNewField(Names.WS03_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE03.CreateNewField(Names.WS03_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE03.CreateNewField(Names.WS03_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE03.CreateNewField(Names.WS03_RECORD_TYPE, FieldType.String, 2, "03");
               WS_TYPE03.CreateNewField(Names.WS03_STMT_MESSAGE, FieldType.String, 240, SPACES);
               WS_TYPE03.CreateNewFillerField(FieldType.String, 223, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE04, (WS_TYPE04) =>
           {
               WS_TYPE04.CreateNewField(Names.WS04_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE04.CreateNewField(Names.WS04_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE04.CreateNewField(Names.WS04_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE04.CreateNewField(Names.WS04_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE04.CreateNewField(Names.WS04_RECORD_TYPE, FieldType.String, 2, "04");
               WS_TYPE04.CreateNewField(Names.WS04_UNDISTRIBUTED_HDR, FieldType.String, 132, SPACES);
               WS_TYPE04.CreateNewField(Names.WS04_UNDISTRIB_DATE, FieldType.String, 10, SPACES);
               WS_TYPE04.CreateNewField(Names.WS04_UNDISTRIB_AMT, FieldType.SignedNumeric, 11, ZERO, 2);
               WS_TYPE04.CreateNewFillerField(FieldType.String, 310, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE05, (WS_TYPE05) =>
           {
               WS_TYPE05.CreateNewField(Names.WS05_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE05.CreateNewField(Names.WS05_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE05.CreateNewField(Names.WS05_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE05.CreateNewField(Names.WS05_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE05.CreateNewField(Names.WS05_RECORD_TYPE, FieldType.String, 2, "05");
               WS_TYPE05.CreateNewField(Names.WS05_COURT_ORDER_DESC, FieldType.String, 132, SPACES);
               WS_TYPE05.CreateNewFillerField(FieldType.String, 331, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE06, (WS_TYPE06) =>
           {
               WS_TYPE06.CreateNewField(Names.WS06_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE06.CreateNewField(Names.WS06_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE06.CreateNewField(Names.WS06_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE06.CreateNewField(Names.WS06_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE06.CreateNewField(Names.WS06_RECORD_TYPE, FieldType.String, 2, "06");
               WS_TYPE06.CreateNewField(Names.WS06_OBLIGATION_DESC, FieldType.String, 132, SPACES);
               WS_TYPE06.CreateNewFillerField(FieldType.String, 331, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE07, (WS_TYPE07) =>
           {
               WS_TYPE07.CreateNewField(Names.WS07_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE07.CreateNewField(Names.WS07_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE07.CreateNewField(Names.WS07_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE07.CreateNewField(Names.WS07_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE07.CreateNewField(Names.WS07_RECORD_TYPE, FieldType.String, 2, "07");
               WS_TYPE07.CreateNewField(Names.WS07_BALANCE_DATE, FieldType.String, 10, SPACES);
               WS_TYPE07.CreateNewField(Names.WS07_BALANCE_DESC, FieldType.String, 40, SPACES);
               WS_TYPE07.CreateNewField(Names.WS07_BALANCE_AMT, FieldType.SignedNumeric, 11, ZERO, 2);
               WS_TYPE07.CreateNewFillerField(FieldType.String, 402, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE08, (WS_TYPE08) =>
           {
               WS_TYPE08.CreateNewField(Names.WS08_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE08.CreateNewField(Names.WS08_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE08.CreateNewField(Names.WS08_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE08.CreateNewField(Names.WS08_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE08.CreateNewField(Names.WS08_RECORD_TYPE, FieldType.String, 2, "08");
               WS_TYPE08.CreateNewField(Names.WS08_ACTIVITY_DATE, FieldType.String, 10, SPACES);
               WS_TYPE08.CreateNewField(Names.WS08_ACTIVITY_DESC, FieldType.String, 40, SPACES);
               WS_TYPE08.CreateNewField(Names.WS08_AMOUNT_DUE, FieldType.SignedNumeric, 9, ZERO, 2);
               WS_TYPE08.CreateNewField(Names.WS08_AMOUNT_RECEIVED, FieldType.SignedNumeric, 9, ZERO, 2);
               WS_TYPE08.CreateNewFillerField(FieldType.String, 395, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE09, (WS_TYPE09) =>
           {
               WS_TYPE09.CreateNewField(Names.WS09_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE09.CreateNewField(Names.WS09_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE09.CreateNewField(Names.WS09_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE09.CreateNewField(Names.WS09_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE09.CreateNewField(Names.WS09_RECORD_TYPE, FieldType.String, 2, "09");
               WS_TYPE09.CreateNewField(Names.WS09_BALANCE_DATE, FieldType.String, 10, SPACES);
               WS_TYPE09.CreateNewField(Names.WS09_BALANCE_DESC, FieldType.String, 40, SPACES);
               WS_TYPE09.CreateNewField(Names.WS09_BALANCE_AMT, FieldType.SignedNumeric, 11, ZERO, 2);
               WS_TYPE09.CreateNewFillerField(FieldType.String, 402, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE10, (WS_TYPE10) =>
           {
               WS_TYPE10.CreateNewField(Names.WS10_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE10.CreateNewField(Names.WS10_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE10.CreateNewField(Names.WS10_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE10.CreateNewField(Names.WS10_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE10.CreateNewField(Names.WS10_RECORD_TYPE, FieldType.String, 2, "10");
               WS_TYPE10.CreateNewField(Names.WS10_RETURN_NAME, FieldType.String, 30, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_RETURN_ADDR1, FieldType.String, 25, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_RETURN_ADDR2, FieldType.String, 25, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_RETURN_ADDR3, FieldType.String, 25, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_RETURN_ADDR4, FieldType.String, 25, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_RETURN_CITY, FieldType.String, 15, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_RETURN_STATE, FieldType.String, 2, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_RETURN_ZIP5, FieldType.String, 5, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_RETURN_ZIP4, FieldType.String, 4, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_RETURN_ZIP3, FieldType.String, 3, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_COUPON_MONTH_YEAR, FieldType.String, 20, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_COUPON_LINE2, FieldType.String, 30, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_PAST_DUE_DATE, FieldType.String, 10, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_DUE_BY_DATE, FieldType.String, 10, SPACES);
               WS_TYPE10.CreateNewField(Names.WS10_AMOUNT_PAST_DUE, FieldType.SignedNumeric, 11, ZERO, 2);
               WS_TYPE10.CreateNewField(Names.WS10_AMOUNT_DUE, FieldType.SignedNumeric, 9, ZERO, 2);
               WS_TYPE10.CreateNewFillerField(FieldType.String, 214, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE11, (WS_TYPE11) =>
           {
               WS_TYPE11.CreateNewField(Names.WS11_PERSON_NUM, FieldType.String, 10, "0000000000");
               WS_TYPE11.CreateNewField(Names.WS11_STATEMENT_NUM, FieldType.UnsignedNumeric, 3, 000);
               WS_TYPE11.CreateNewField(Names.WS11_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE11.CreateNewField(Names.WS11_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE11.CreateNewField(Names.WS11_RECORD_TYPE, FieldType.String, 2, "11");
               WS_TYPE11.CreateNewField(Names.WS11_COUPON_MSG1, FieldType.String, 120, SPACES);
               WS_TYPE11.CreateNewField(Names.WS11_COUPON_MSG2, FieldType.String, 120, SPACES);
               WS_TYPE11.CreateNewFillerField(FieldType.String, 223, SPACES);
           });

            recordDef.CreateNewGroup(Names.WS_TYPE99, (WS_TYPE99) =>
           {
               WS_TYPE99.CreateNewField(Names.WS99_PERSON_NUM, FieldType.String, 10, "9999999999");
               WS_TYPE99.CreateNewFillerField(FieldType.UnsignedNumeric, 3, 999);
               WS_TYPE99.CreateNewField(Names.WS99_RECORD_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE99.CreateNewField(Names.WS99_SEQUENCE_NUM, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE99.CreateNewField(Names.WS99_RECORD_TYPE, FieldType.String, 2, "99");
               WS_TYPE99.CreateNewField(Names.WS99_NUM_OF_STMTS, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE99.CreateNewField(Names.WS99_NUM_OF_CPNS, FieldType.UnsignedNumeric, 11, 0);
               WS_TYPE99.CreateNewFillerField(FieldType.String, 441, SPACES);
           });

            IField WS_GLOBAL_local = recordDef.CreateNewField(Names.WS_GLOBAL, FieldType.String, 240, SPACES);
            recordDef.CreateNewGroupRedefine("FILLER_d15", WS_GLOBAL_local, (FILLER_d15) =>
            {
                FILLER_d15.CreateNewField(Names.WS_GLOBAL_NAME, FieldType.String, 30);
                FILLER_d15.CreateNewFillerField(210, FillWith.Hashes);
            });

        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXFE43_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXFE43_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string GLOBDATA = "GLOBDATA";
            internal const string PSMGR_IEF_COMMAND = "PSMGR_IEF_COMMAND";
            internal const string PSMGR_IEF_COMMAND_1 = "PSMGR_IEF_COMMAND_1";
            internal const string PSMGR_IEF_COMMAND_2 = "PSMGR_IEF_COMMAND_2";
            internal const string PSMGR_IEF_TRANCODE = "PSMGR_IEF_TRANCODE";
            internal const string PSMGR_EXIT_STATE = "PSMGR_EXIT_STATE";
            internal const string PSMGR_EXIT_INFOMSG = "PSMGR_EXIT_INFOMSG";
            internal const string PSMGR_USER_ID = "PSMGR_USER_ID";
            internal const string PSMGR_TERMINAL_ID = "PSMGR_TERMINAL_ID";
            internal const string PSMGR_PRINTER_ID = "PSMGR_PRINTER_ID";
            internal const string PSMGR_CURRENT_DATE = "PSMGR_CURRENT_DATE";
            internal const string PSMGR_CURRENT_TIME = "PSMGR_CURRENT_TIME";
            internal const string PSMGR_RUNTIME_TYPE = "PSMGR_RUNTIME_TYPE";
            internal const string PSMGR_FUNCTION_DATA = "PSMGR_FUNCTION_DATA";
            internal const string PSMGR_FUNC_ERRMSG = "PSMGR_FUNC_ERRMSG";
            internal const string PSMGR_FUNC_NAME = "PSMGR_FUNC_NAME";
            internal const string PSMGR_FUNC_IN_DATE = "PSMGR_FUNC_IN_DATE";
            internal const string PSMGR_FUNC_IN_DDURA = "PSMGR_FUNC_IN_DDURA";
            internal const string DDURA_YEAR = "DDURA_YEAR";
            internal const string DDURA_Y_MISS = "DDURA_Y_MISS";
            internal const string DDURA_YYYY = "DDURA_YYYY";
            internal const string DDURA_MONTH = "DDURA_MONTH";
            internal const string DDURA_M_MISS = "DDURA_M_MISS";
            internal const string DDURA_MM = "DDURA_MM";
            internal const string DDURA_DAY = "DDURA_DAY";
            internal const string DDURA_D_MISS = "DDURA_D_MISS";
            internal const string DDURA_DD = "DDURA_DD";
            internal const string PSMGR_FUNC_OUT_DATE = "PSMGR_FUNC_OUT_DATE";
            internal const string PSMGR_FUNC_IN_TIME = "PSMGR_FUNC_IN_TIME";
            internal const string PSMGR_FUNC_IN_TDURA = "PSMGR_FUNC_IN_TDURA";
            internal const string TDURA_HOUR = "TDURA_HOUR";
            internal const string TDURA_H_MISS = "TDURA_H_MISS";
            internal const string TDURA_HH = "TDURA_HH";
            internal const string TDURA_MINUTE = "TDURA_MINUTE";
            internal const string TDURA_M_MISS = "TDURA_M_MISS";
            internal const string TDURA_MM = "TDURA_MM";
            internal const string TDURA_SECOND = "TDURA_SECOND";
            internal const string TDURA_S_MISS = "TDURA_S_MISS";
            internal const string TDURA_SS = "TDURA_SS";
            internal const string PSMGR_FUNC_OUT_TIME = "PSMGR_FUNC_OUT_TIME";
            internal const string PSMGR_IEF_NEXTTRAN = "PSMGR_IEF_NEXTTRAN";
            internal const string PSMGR_EXIT_MSGTYPE = "PSMGR_EXIT_MSGTYPE";
            internal const string PSMGR_IEF_DEBUG_FLAGS = "PSMGR_IEF_DEBUG_FLAGS";
            internal const string PSMGR_IEF_DEBUG = "PSMGR_IEF_DEBUG";
            internal const string PSMGR_DEBUG_ON = "PSMGR_DEBUG_ON";
            internal const string PSMGR_ENVIRONMENT_DATA = "PSMGR_ENVIRONMENT_DATA";
            internal const string PSMGR_PCB_CNT = "PSMGR_PCB_CNT";
            internal const string PSMGR_PCB_ENTRY = "PSMGR_PCB_ENTRY";
            internal const string PSMGR_PCB_ADR = "PSMGR_PCB_ADR";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string PSMGR_ERROR_DATA = "PSMGR_ERROR_DATA";
            internal const string ERROR_ACTION_NAME = "ERROR_ACTION_NAME";
            internal const string ERROR_ENCOUNTERED_SW = "ERROR_ENCOUNTERED_SW";
            internal const string VIEW_OVERFLOW_SW = "VIEW_OVERFLOW_SW";
            internal const string PSMGR_DASG_DATA = "PSMGR_DASG_DATA";
            internal const string ACTION_ID_X = "ACTION_ID_X";
            internal const string ACTION_ID = "ACTION_ID";
            internal const string ATTRIBUTE_ID_X = "ATTRIBUTE_ID_X";
            internal const string ATTRIBUTE_ID = "ATTRIBUTE_ID";
            internal const string STATUS_FLAG = "STATUS_FLAG";
            internal const string FATAL_ERROR_SF = "FATAL_ERROR_SF";
            internal const string PSTEP_USE_FAILURE = "PSTEP_USE_FAILURE";
            internal const string LAST_STATUS = "LAST_STATUS";
            internal const string DB_ERROR_FL_LS = "DB_ERROR_FL_LS";
            internal const string DUPLICATE_FOUND_FL_LS = "DUPLICATE_FOUND_FL_LS";
            internal const string INVALID_DATAA_FL_LS = "INVALID_DATAA_FL_LS";
            internal const string INVALID_DATAB_TYPE_FL_LS = "INVALID_DATAB_TYPE_FL_LS";
            internal const string INVALID_DATAB_PERM_FL_LS = "INVALID_DATAB_PERM_FL_LS";
            internal const string FATAL_ERROR_FL_LS = "FATAL_ERROR_FL_LS";
            internal const string NOT_FOUND_FL_LS = "NOT_FOUND_FL_LS";
            internal const string NOT_UNIQUE_FL_LS = "NOT_UNIQUE_FL_LS";
            internal const string IEF_FUNCTION_ERROR_FL_LS = "IEF_FUNCTION_ERROR_FL_LS";
            internal const string IEF_DURATION_ERROR_FL_LS = "IEF_DURATION_ERROR_FL_LS";
            internal const string USED_PSTEP_NOT_FOUND = "USED_PSTEP_NOT_FOUND";
            internal const string USED_PSTEP_ROUTING_ERR = "USED_PSTEP_ROUTING_ERR";
            internal const string USED_PSTEP_SND_FMT_ERR = "USED_PSTEP_SND_FMT_ERR";
            internal const string USED_PSTEP_ENCRYPT_ERR = "USED_PSTEP_ENCRYPT_ERR";
            internal const string USED_PSTEP_SND_BFR_ERR = "USED_PSTEP_SND_BFR_ERR";
            internal const string USED_PSTEP_RCV_BFR_ERR = "USED_PSTEP_RCV_BFR_ERR";
            internal const string USED_PSTEP_RCV_FMT_ERR = "USED_PSTEP_RCV_FMT_ERR";
            internal const string USED_PSTEP_TIRSECR_ERR = "USED_PSTEP_TIRSECR_ERR";
            internal const string USED_PSTEP_TOKEN_ERR = "USED_PSTEP_TOKEN_ERR";
            internal const string USED_PSTEP_SEND_MAX_SIZE = "USED_PSTEP_SEND_MAX_SIZE";
            internal const string USED_PSTEP_SECG_ERR = "USED_PSTEP_SECG_ERR";
            internal const string USED_PSTEP_ALLOC_ERR = "USED_PSTEP_ALLOC_ERR";
            internal const string USED_PSTEP_CONNECT_ERR = "USED_PSTEP_CONNECT_ERR";
            internal const string USED_PSTEP_XERR = "USED_PSTEP_XERR";
            internal const string USED_PSTEP_RCV_UA_ERR = "USED_PSTEP_RCV_UA_ERR";
            internal const string USED_PSTEP_RCV_ES_ERR = "USED_PSTEP_RCV_ES_ERR";
            internal const string USED_PSTEP_XFAL = "USED_PSTEP_XFAL";
            internal const string USED_PSTEP_SETOA_ERR = "USED_PSTEP_SETOA_ERR";
            internal const string USED_PSTEP_RCV_VIEW_ERR = "USED_PSTEP_RCV_VIEW_ERR";
            internal const string USED_PSTEP_DECRYPT_ERR = "USED_PSTEP_DECRYPT_ERR";
            internal const string SAVE_SQLCA = "SAVE_SQLCA";
            internal const string PSMGR_DEBUG_DATA = "PSMGR_DEBUG_DATA";
            internal const string PSMGR_TRACE_ADR = "PSMGR_TRACE_ADR";
            internal const string LAST_STATEMENT_X = "LAST_STATEMENT_X";
            internal const string LAST_STATEMENT_NUM = "LAST_STATEMENT_NUM";
            internal const string CUR_AB_ID = "CUR_AB_ID";
            internal const string CUR_AB_NAME = "CUR_AB_NAME";
            internal const string PSMGR_TIRDATE_SAVEAREA = "PSMGR_TIRDATE_SAVEAREA";
            internal const string PSMGR_TIRDATE_CMCB = "PSMGR_TIRDATE_CMCB";
            internal const string PSMGR_TIRDATE_DATE = "PSMGR_TIRDATE_DATE";
            internal const string PSMGR_TIRDATE_TIME = "PSMGR_TIRDATE_TIME";
            internal const string PSMGR_TIRDATE_INC = "PSMGR_TIRDATE_INC";
            internal const string PSMGR_TIRDATE_RC = "PSMGR_TIRDATE_RC";
            internal const string PSMGR_TIRDATE_OK = "PSMGR_TIRDATE_OK";
            internal const string PSMGR_TIRDATE_WARNING = "PSMGR_TIRDATE_WARNING";
            internal const string PSMGR_TIRDATE_ERROR = "PSMGR_TIRDATE_ERROR";
            internal const string PSMGR_TIRDATE_REQ = "PSMGR_TIRDATE_REQ";
            internal const string PSMGR_TIRDATE_DATEF = "PSMGR_TIRDATE_DATEF";
            internal const string PSMGR_TIRDATE_TIMEF = "PSMGR_TIRDATE_TIMEF";
            internal const string PSMGR_TIRDATE_RETMSG = "PSMGR_TIRDATE_RETMSG";
            internal const string PSMGR_TIRDATE_TSTAMP = "PSMGR_TIRDATE_TSTAMP";
            internal const string PSMGR_TIRDATE_DATE_Z = "PSMGR_TIRDATE_DATE_Z";
            internal const string PSMGR_TIRDATE_TIME_Z = "PSMGR_TIRDATE_TIME_Z";
            internal const string PSMGR_ROLLBACK_RQSTED = "PSMGR_ROLLBACK_RQSTED";
            internal const string ROLLBACK_RQSTED = "ROLLBACK_RQSTED";
            internal const string ABEND_RQSTED = "ABEND_RQSTED";
            internal const string TERMINATE_RQSTED = "TERMINATE_RQSTED";
            internal const string TIRTRCE_SAVE_AREA = "TIRTRCE_SAVE_AREA";
            internal const string TOP_INDX = "TOP_INDX";
            internal const string BOTTOM_INDX = "BOTTOM_INDX";
            internal const string END_INDX = "END_INDX";
            internal const string LAST_STMT = "LAST_STMT";
            internal const string TOP_OF_CALL = "TOP_OF_CALL";
            internal const string TRACE_BREAK_POINT = "TRACE_BREAK_POINT";
            internal const string TRACE_BREAK_POINT_STATUS = "TRACE_BREAK_POINT_STATUS";
            internal const string LAST_AB_NAME = "LAST_AB_NAME";
            internal const string COLOR = "COLOR";
            internal const string COLORT = "COLORT";
            internal const string HILITE = "HILITE";
            internal const string TRACE_ON_OFF = "TRACE_ON_OFF";
            internal const string CASCADE_DELETE_FLAGS = "CASCADE_DELETE_FLAGS";
            internal const string V1PRESENT = "V1PRESENT";
            internal const string V2PRESENT = "V2PRESENT";
            internal const string CASCADE1 = "CASCADE1";
            internal const string CASCADE2 = "CASCADE2";
            internal const string PROCESSQ_FLAG = "PROCESSQ_FLAG";
            internal const string PSMGR_ACTIVE_DIALECT = "PSMGR_ACTIVE_DIALECT";
            internal const string DIALECT_NAME = "DIALECT_NAME";
            internal const string MESSAGE_TABLE_NAME = "MESSAGE_TABLE_NAME";
            internal const string TRANSLATE_TABLE_NAME = "TRANSLATE_TABLE_NAME";
            internal const string PSMGR_FUNCTION_DATA_EXT = "PSMGR_FUNCTION_DATA_EXT";
            internal const string PSMGR_FUNC_IN_TIMESTAMP = "PSMGR_FUNC_IN_TIMESTAMP";
            internal const string PSMGR_FUNC_IN_TSDURA = "PSMGR_FUNC_IN_TSDURA";
            internal const string TSDURA_MICROSECOND = "TSDURA_MICROSECOND";
            internal const string TSDURA_M_MISS = "TSDURA_M_MISS";
            internal const string TSDURA_MS = "TSDURA_MS";
            internal const string PSMGR_FUNC_OUT_TIMESTAMP = "PSMGR_FUNC_OUT_TIMESTAMP";
            internal const string PSMGR_CICS_FAIL_SW = "PSMGR_CICS_FAIL_SW";
            internal const string INHIBIT_CICS_RECEIVE = "INHIBIT_CICS_RECEIVE";
            internal const string CLIENT_USERID = "CLIENT_USERID";
            internal const string CLIENT_PASSWORD = "CLIENT_PASSWORD";
            internal const string LOAD_MODULE_NAME = "LOAD_MODULE_NAME";
            internal const string INSTRUMENT_CODE = "INSTRUMENT_CODE";
            internal const string TX_RETRY_LIMIT = "TX_RETRY_LIMIT";
            internal const string TX_TIMEOUT = "TX_TIMEOUT";
            internal const string PSMGR_EXTRA_ERRINFO = "PSMGR_EXTRA_ERRINFO";
            internal const string ERRINFO_BUF_SIZE = "ERRINFO_BUF_SIZE";
            internal const string ERRINFO_MSG_SIZE = "ERRINFO_MSG_SIZE";
            internal const string ERRINFO_BUF_ADDR = "ERRINFO_BUF_ADDR";
            internal const string PSMGR_PSTEP_USE_PTRS = "PSMGR_PSTEP_USE_PTRS";
            internal const string PSTEP_FAIL_MSG_PTR = "PSTEP_FAIL_MSG_PTR";
            internal const string PSTEP_GURB_REST_PTR = "PSTEP_GURB_REST_PTR";
            internal const string PSTEP_LIPS_PTR = "PSTEP_LIPS_PTR";
            internal const string PSTEP_TBL_PTR = "PSTEP_TBL_PTR";
            internal const string PSTEP_DDF_PTR = "PSTEP_DDF_PTR";
            internal const string PSTEP_COMM_ID = "PSTEP_COMM_ID";
            internal const string PSTEP_APPL_LIST_PTR = "PSTEP_APPL_LIST_PTR";
            internal const string PSTEP_CURR_PST_PTR = "PSTEP_CURR_PST_PTR";
            internal const string PSMGR_PSTEP_USE_SYSFLDS = "PSMGR_PSTEP_USE_SYSFLDS";
            internal const string PSMGR_EIBERRCD = "PSMGR_EIBERRCD";
            internal const string PSMGR_EIBFN = "PSMGR_EIBFN";
            internal const string PSMGR_EIBRESP = "PSMGR_EIBRESP";
            internal const string PSMGR_EIBRESP2 = "PSMGR_EIBRESP2";
            internal const string IMPORT_0001EV = "IMPORT_0001EV";
            internal const string EAB_FILE_HANDLING_0001ET = "EAB_FILE_HANDLING_0001ET";
            internal const string ACTION_0001AS = "ACTION_0001AS";
            internal const string ACTION_0001 = "ACTION_0001";
            internal const string ACTION_0001XX = "ACTION_0001XX";
            internal const string IMPORT_0002EV = "IMPORT_0002EV";
            internal const string CSE_PERSON_0002ET = "CSE_PERSON_0002ET";
            internal const string NUMBER_0002AS = "NUMBER_0002AS";
            internal const string NUMBER_0002 = "NUMBER_0002";
            internal const string NUMBER_0002XX = "NUMBER_0002XX";
            internal const string IMPORT_STMT_NUMBER_0003EV = "IMPORT_STMT_NUMBER_0003EV";
            internal const string IEF_SUPPLIED_0003ET = "IEF_SUPPLIED_0003ET";
            internal const string COUNT_0003AS = "COUNT_0003AS";
            internal const string COUNT_0003 = "COUNT_0003";
            internal const string COUNT_0003XX = "COUNT_0003XX";
            internal const string IMPORT_RECORD_NUMBER_0004EV = "IMPORT_RECORD_NUMBER_0004EV";
            internal const string IEF_SUPPLIED_0004ET = "IEF_SUPPLIED_0004ET";
            internal const string COUNT_0004AS = "COUNT_0004AS";
            internal const string COUNT_0004 = "COUNT_0004";
            internal const string COUNT_0004XX = "COUNT_0004XX";
            internal const string IMPORT_RECORD_TYPE_0005EV = "IMPORT_RECORD_TYPE_0005EV";
            internal const string IEF_SUPPLIED_0005ET = "IEF_SUPPLIED_0005ET";
            internal const string ACTION_ENTRY_0005AS = "ACTION_ENTRY_0005AS";
            internal const string ACTION_ENTRY_0005 = "ACTION_ENTRY_0005";
            internal const string ACTION_ENTRY_0005XX = "ACTION_ENTRY_0005XX";
            internal const string IMPORT_0006EV = "IMPORT_0006EV";
            internal const string CSE_PERSONS_WORK_SET_0006ET = "CSE_PERSONS_WORK_SET_0006ET";
            internal const string FIRST_NAME_0006AS = "FIRST_NAME_0006AS";
            internal const string FIRST_NAME_0006 = "FIRST_NAME_0006";
            internal const string FIRST_NAME_0006XX = "FIRST_NAME_0006XX";
            internal const string MIDDLE_INITIAL_0006AS = "MIDDLE_INITIAL_0006AS";
            internal const string MIDDLE_INITIAL_0006 = "MIDDLE_INITIAL_0006";
            internal const string MIDDLE_INITIAL_0006XX = "MIDDLE_INITIAL_0006XX";
            internal const string LAST_NAME_0006AS = "LAST_NAME_0006AS";
            internal const string LAST_NAME_0006 = "LAST_NAME_0006";
            internal const string LAST_NAME_0006XX = "LAST_NAME_0006XX";
            internal const string IMPORT_CASE_WORKER_0007EV = "IMPORT_CASE_WORKER_0007EV";
            internal const string OFFICE_0007ET = "OFFICE_0007ET";
            internal const string MAIN_PHONE_AREA_CODE_0007AS = "MAIN_PHONE_AREA_CODE_0007AS";
            internal const string MAIN_PHONE_AREA_CODE_0007 = "MAIN_PHONE_AREA_CODE_0007";
            internal const string MAIN_PHONE_AREA_CODE_0007XX = "MAIN_PHONE_AREA_CODE_0007XX";
            internal const string NAME_0007AS = "NAME_0007AS";
            internal const string NAME_0007 = "NAME_0007";
            internal const string NAME_0007XX = "NAME_0007XX";
            internal const string MAIN_PHONE_NUMBER_0007AS = "MAIN_PHONE_NUMBER_0007AS";
            internal const string MAIN_PHONE_NUMBER_0007 = "MAIN_PHONE_NUMBER_0007";
            internal const string MAIN_PHONE_NUMBER_0007XX = "MAIN_PHONE_NUMBER_0007XX";
            internal const string IMPORT_0008EV = "IMPORT_0008EV";
            internal const string CSE_PERSON_ADDRESS_0008ET = "CSE_PERSON_ADDRESS_0008ET";
            internal const string LOCATION_TYPE_0008AS = "LOCATION_TYPE_0008AS";
            internal const string LOCATION_TYPE_0008 = "LOCATION_TYPE_0008";
            internal const string LOCATION_TYPE_0008XX = "LOCATION_TYPE_0008XX";
            internal const string STREET_1_0008AS = "STREET_1_0008AS";
            internal const string STREET_1_0008 = "STREET_1_0008";
            internal const string STREET_1_0008XX = "STREET_1_0008XX";
            internal const string STREET_2_0008AS = "STREET_2_0008AS";
            internal const string STREET_2_0008 = "STREET_2_0008";
            internal const string STREET_2_0008XX = "STREET_2_0008XX";
            internal const string CITY_0008AS = "CITY_0008AS";
            internal const string CITY_0008 = "CITY_0008";
            internal const string CITY_0008XX = "CITY_0008XX";
            internal const string STATE_0008AS = "STATE_0008AS";
            internal const string STATE_0008 = "STATE_0008";
            internal const string STATE_0008XX = "STATE_0008XX";
            internal const string ZIP_CODE_0008AS = "ZIP_CODE_0008AS";
            internal const string ZIP_CODE_0008 = "ZIP_CODE_0008";
            internal const string ZIP_CODE_0008XX = "ZIP_CODE_0008XX";
            internal const string ZIP4_0008AS = "ZIP4_0008AS";
            internal const string ZIP4_0008 = "ZIP4_0008";
            internal const string ZIP4_0008XX = "ZIP4_0008XX";
            internal const string ZIP3_0008AS = "ZIP3_0008AS";
            internal const string ZIP3_0008 = "ZIP3_0008";
            internal const string ZIP3_0008XX = "ZIP3_0008XX";
            internal const string STREET_3_0008AS = "STREET_3_0008AS";
            internal const string STREET_3_0008 = "STREET_3_0008";
            internal const string STREET_3_0008XX = "STREET_3_0008XX";
            internal const string STREET_4_0008AS = "STREET_4_0008AS";
            internal const string STREET_4_0008 = "STREET_4_0008";
            internal const string STREET_4_0008XX = "STREET_4_0008XX";
            internal const string PROVINCE_0008AS = "PROVINCE_0008AS";
            internal const string PROVINCE_0008 = "PROVINCE_0008";
            internal const string PROVINCE_0008XX = "PROVINCE_0008XX";
            internal const string POSTAL_CODE_0008AS = "POSTAL_CODE_0008AS";
            internal const string POSTAL_CODE_0008 = "POSTAL_CODE_0008";
            internal const string POSTAL_CODE_0008XX = "POSTAL_CODE_0008XX";
            internal const string COUNTRY_0008AS = "COUNTRY_0008AS";
            internal const string COUNTRY_0008 = "COUNTRY_0008";
            internal const string COUNTRY_0008XX = "COUNTRY_0008XX";
            internal const string IMPORT_VARIABLE_LINE1_0009EV = "IMPORT_VARIABLE_LINE1_0009EV";
            internal const string EAB_REPORT_SEND_0009ET = "EAB_REPORT_SEND_0009ET";
            internal const string RPT_DETAIL_0009AS = "RPT_DETAIL_0009AS";
            internal const string RPT_DETAIL_0009 = "RPT_DETAIL_0009";
            internal const string RPT_DETAIL_0009XX = "RPT_DETAIL_0009XX";
            internal const string IMPORT_VARIABLE_LINE2_0010EV = "IMPORT_VARIABLE_LINE2_0010EV";
            internal const string EAB_REPORT_SEND_0010ET = "EAB_REPORT_SEND_0010ET";
            internal const string RPT_DETAIL_0010AS = "RPT_DETAIL_0010AS";
            internal const string RPT_DETAIL_0010 = "RPT_DETAIL_0010";
            internal const string RPT_DETAIL_0010XX = "RPT_DETAIL_0010XX";
            internal const string IMPORT_0011EV = "IMPORT_0011EV";
            internal const string GLOBAL_STATEMENT_MESSAG_0011ET = "GLOBAL_STATEMENT_MESSAG_0011ET";
            internal const string TEXT_AREA_0011AS = "TEXT_AREA_0011AS";
            internal const string TEXT_AREA_0011 = "TEXT_AREA_0011";
            internal const string TEXT_AREA_0011DL = "TEXT_AREA_0011DL";
            internal const string TEXT_AREA_0011XL = "TEXT_AREA_0011XL";
            internal const string TEXT_AREA_0011DV = "TEXT_AREA_0011DV";
            internal const string TEXT_AREA_0011XV = "TEXT_AREA_0011XV";
            internal const string TEXT_AREA_0011XX = "TEXT_AREA_0011XX";
            internal const string IMPORT_AMOUNT_ONE_0012EV = "IMPORT_AMOUNT_ONE_0012EV";
            internal const string IEF_SUPPLIED_0012ET = "IEF_SUPPLIED_0012ET";
            internal const string AVERAGE_CURRENCY_0012AS = "AVERAGE_CURRENCY_0012AS";
            internal const string AVERAGE_CURRENCY_0012 = "AVERAGE_CURRENCY_0012";
            internal const string AVERAGE_CURRENCY_0012XX = "AVERAGE_CURRENCY_0012XX";
            internal const string IMPORT_AMOUNT_TWO_0013EV = "IMPORT_AMOUNT_TWO_0013EV";
            internal const string IEF_SUPPLIED_0013ET = "IEF_SUPPLIED_0013ET";
            internal const string AVERAGE_CURRENCY_0013AS = "AVERAGE_CURRENCY_0013AS";
            internal const string AVERAGE_CURRENCY_0013 = "AVERAGE_CURRENCY_0013";
            internal const string AVERAGE_CURRENCY_0013XX = "AVERAGE_CURRENCY_0013XX";
            internal const string IMPORT_DATE_ONE_0014EV = "IMPORT_DATE_ONE_0014EV";
            internal const string TEXT_WORK_AREA_0014ET = "TEXT_WORK_AREA_0014ET";
            internal const string TEXT_10_0014AS = "TEXT_10_0014AS";
            internal const string TEXT_10_0014 = "TEXT_10_0014";
            internal const string TEXT_10_0014XX = "TEXT_10_0014XX";
            internal const string IMPORT_DATE_TWO_0015EV = "IMPORT_DATE_TWO_0015EV";
            internal const string TEXT_WORK_AREA_0015ET = "TEXT_WORK_AREA_0015ET";
            internal const string TEXT_10_0015AS = "TEXT_10_0015AS";
            internal const string TEXT_10_0015 = "TEXT_10_0015";
            internal const string TEXT_10_0015XX = "TEXT_10_0015XX";
            internal const string IMPORT_SORT_SEQUENCE_NU_0016EV = "IMPORT_SORT_SEQUENCE_NU_0016EV";
            internal const string IEF_SUPPLIED_0016ET = "IEF_SUPPLIED_0016ET";
            internal const string COUNT_0016AS = "COUNT_0016AS";
            internal const string COUNT_0016 = "COUNT_0016";
            internal const string COUNT_0016XX = "COUNT_0016XX";
            internal const string EXPORT_0016EV = "EXPORT_0016EV";
            internal const string EAB_FILE_HANDLING_0012ET = "EAB_FILE_HANDLING_0012ET";
            internal const string STATUS_0016AS = "STATUS_0016AS";
            internal const string STATUS_0016 = "STATUS_0016";
            internal const string STATUS_0016XX = "STATUS_0016XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup GLOBDATA { get { return GetElementByName<IGroup>(Names.GLOBDATA); } }
        public IGroup PSMGR_IEF_COMMAND { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_COMMAND); } }
        public IField PSMGR_IEF_COMMAND_1 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_1); } }
        public IField PSMGR_IEF_COMMAND_2 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_2); } }
        public IField PSMGR_IEF_TRANCODE { get { return GetElementByName<IField>(Names.PSMGR_IEF_TRANCODE); } }
        public IField PSMGR_EXIT_STATE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_STATE); } }
        public IField PSMGR_EXIT_INFOMSG { get { return GetElementByName<IField>(Names.PSMGR_EXIT_INFOMSG); } }
        public IField PSMGR_USER_ID { get { return GetElementByName<IField>(Names.PSMGR_USER_ID); } }
        public IField PSMGR_TERMINAL_ID { get { return GetElementByName<IField>(Names.PSMGR_TERMINAL_ID); } }
        public IField PSMGR_PRINTER_ID { get { return GetElementByName<IField>(Names.PSMGR_PRINTER_ID); } }
        public IField PSMGR_CURRENT_DATE { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_DATE); } }
        public IField PSMGR_CURRENT_TIME { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_TIME); } }
        public IField PSMGR_RUNTIME_TYPE { get { return GetElementByName<IField>(Names.PSMGR_RUNTIME_TYPE); } }
        public IGroup PSMGR_FUNCTION_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA); } }
        public IField PSMGR_FUNC_ERRMSG { get { return GetElementByName<IField>(Names.PSMGR_FUNC_ERRMSG); } }
        public IField PSMGR_FUNC_NAME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_NAME); } }
        public IField PSMGR_FUNC_IN_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_DATE); } }
        public IGroup PSMGR_FUNC_IN_DDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_DDURA); } }
        public IGroup DDURA_YEAR { get { return GetElementByName<IGroup>(Names.DDURA_YEAR); } }
        public IField DDURA_Y_MISS { get { return GetElementByName<IField>(Names.DDURA_Y_MISS); } }
        public IField DDURA_YYYY { get { return GetElementByName<IField>(Names.DDURA_YYYY); } }
        public IGroup DDURA_MONTH { get { return GetElementByName<IGroup>(Names.DDURA_MONTH); } }
        public IField DDURA_M_MISS { get { return GetElementByName<IField>(Names.DDURA_M_MISS); } }
        public IField DDURA_MM { get { return GetElementByName<IField>(Names.DDURA_MM); } }
        public IGroup DDURA_DAY { get { return GetElementByName<IGroup>(Names.DDURA_DAY); } }
        public IField DDURA_D_MISS { get { return GetElementByName<IField>(Names.DDURA_D_MISS); } }
        public IField DDURA_DD { get { return GetElementByName<IField>(Names.DDURA_DD); } }
        public IField PSMGR_FUNC_OUT_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_DATE); } }
        public IField PSMGR_FUNC_IN_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIME); } }
        public IGroup PSMGR_FUNC_IN_TDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TDURA); } }
        public IGroup TDURA_HOUR { get { return GetElementByName<IGroup>(Names.TDURA_HOUR); } }
        public IField TDURA_H_MISS { get { return GetElementByName<IField>(Names.TDURA_H_MISS); } }
        public IField TDURA_HH { get { return GetElementByName<IField>(Names.TDURA_HH); } }
        public IGroup TDURA_MINUTE { get { return GetElementByName<IGroup>(Names.TDURA_MINUTE); } }
        public IField TDURA_M_MISS { get { return GetElementByName<IField>(Names.TDURA_M_MISS); } }
        public IField TDURA_MM { get { return GetElementByName<IField>(Names.TDURA_MM); } }
        public IGroup TDURA_SECOND { get { return GetElementByName<IGroup>(Names.TDURA_SECOND); } }
        public IField TDURA_S_MISS { get { return GetElementByName<IField>(Names.TDURA_S_MISS); } }
        public IField TDURA_SS { get { return GetElementByName<IField>(Names.TDURA_SS); } }
        public IField PSMGR_FUNC_OUT_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIME); } }
        public IField PSMGR_IEF_NEXTTRAN { get { return GetElementByName<IField>(Names.PSMGR_IEF_NEXTTRAN); } }
        public IField PSMGR_EXIT_MSGTYPE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_MSGTYPE); } }
        public IGroup PSMGR_IEF_DEBUG_FLAGS { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_DEBUG_FLAGS); } }
        public IField PSMGR_IEF_DEBUG { get { return GetElementByName<IField>(Names.PSMGR_IEF_DEBUG); } }
        public ICheckField PSMGR_DEBUG_ON { get { return GetElementByName<ICheckField>(Names.PSMGR_DEBUG_ON); } }
        public IGroup PSMGR_ENVIRONMENT_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ENVIRONMENT_DATA); } }
        public IField PSMGR_PCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_PCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_PCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_PCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_PCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_PCB_ADR); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup PSMGR_ERROR_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ERROR_DATA); } }
        public IField ERROR_ACTION_NAME { get { return GetElementByName<IField>(Names.ERROR_ACTION_NAME); } }
        public IField ERROR_ENCOUNTERED_SW { get { return GetElementByName<IField>(Names.ERROR_ENCOUNTERED_SW); } }
        public IField VIEW_OVERFLOW_SW { get { return GetElementByName<IField>(Names.VIEW_OVERFLOW_SW); } }
        public IGroup PSMGR_DASG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DASG_DATA); } }
        public IGroup ACTION_ID_X { get { return GetElementByName<IGroup>(Names.ACTION_ID_X); } }
        public IField ACTION_ID { get { return GetElementByName<IField>(Names.ACTION_ID); } }
        public IGroup ATTRIBUTE_ID_X { get { return GetElementByName<IGroup>(Names.ATTRIBUTE_ID_X); } }
        public IField ATTRIBUTE_ID { get { return GetElementByName<IField>(Names.ATTRIBUTE_ID); } }
        public IField STATUS_FLAG { get { return GetElementByName<IField>(Names.STATUS_FLAG); } }
        public ICheckField FATAL_ERROR_SF { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_SF); } }
        public ICheckField PSTEP_USE_FAILURE { get { return GetElementByName<ICheckField>(Names.PSTEP_USE_FAILURE); } }
        public IField LAST_STATUS { get { return GetElementByName<IField>(Names.LAST_STATUS); } }
        public ICheckField DB_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_ERROR_FL_LS); } }
        public ICheckField DUPLICATE_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.DUPLICATE_FOUND_FL_LS); } }
        public ICheckField INVALID_DATAA_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAA_FL_LS); } }
        public ICheckField INVALID_DATAB_TYPE_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_TYPE_FL_LS); } }
        public ICheckField INVALID_DATAB_PERM_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_PERM_FL_LS); } }
        public ICheckField FATAL_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_FL_LS); } }
        public ICheckField NOT_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_FOUND_FL_LS); } }
        public ICheckField NOT_UNIQUE_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_UNIQUE_FL_LS); } }
        public ICheckField IEF_FUNCTION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_FUNCTION_ERROR_FL_LS); } }
        public ICheckField IEF_DURATION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_DURATION_ERROR_FL_LS); } }
        public ICheckField USED_PSTEP_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_NOT_FOUND); } }
        public ICheckField USED_PSTEP_ROUTING_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ROUTING_ERR); } }
        public ICheckField USED_PSTEP_SND_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_FMT_ERR); } }
        public ICheckField USED_PSTEP_ENCRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ENCRYPT_ERR); } }
        public ICheckField USED_PSTEP_SND_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_FMT_ERR); } }
        public ICheckField USED_PSTEP_TIRSECR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TIRSECR_ERR); } }
        public ICheckField USED_PSTEP_TOKEN_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TOKEN_ERR); } }
        public ICheckField USED_PSTEP_SEND_MAX_SIZE { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SEND_MAX_SIZE); } }
        public ICheckField USED_PSTEP_SECG_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SECG_ERR); } }
        public ICheckField USED_PSTEP_ALLOC_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ALLOC_ERR); } }
        public ICheckField USED_PSTEP_CONNECT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_CONNECT_ERR); } }
        public ICheckField USED_PSTEP_XERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XERR); } }
        public ICheckField USED_PSTEP_RCV_UA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_UA_ERR); } }
        public ICheckField USED_PSTEP_RCV_ES_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_ES_ERR); } }
        public ICheckField USED_PSTEP_XFAL { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XFAL); } }
        public ICheckField USED_PSTEP_SETOA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SETOA_ERR); } }
        public ICheckField USED_PSTEP_RCV_VIEW_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_VIEW_ERR); } }
        public ICheckField USED_PSTEP_DECRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_DECRYPT_ERR); } }
        public IField SAVE_SQLCA { get { return GetElementByName<IField>(Names.SAVE_SQLCA); } }
        public IGroup PSMGR_DEBUG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DEBUG_DATA); } }
        public IField PSMGR_TRACE_ADR { get { return GetElementByName<IField>(Names.PSMGR_TRACE_ADR); } }
        public IGroup LAST_STATEMENT_X { get { return GetElementByName<IGroup>(Names.LAST_STATEMENT_X); } }
        public IField LAST_STATEMENT_NUM { get { return GetElementByName<IField>(Names.LAST_STATEMENT_NUM); } }
        public IField CUR_AB_ID { get { return GetElementByName<IField>(Names.CUR_AB_ID); } }
        public IField CUR_AB_NAME { get { return GetElementByName<IField>(Names.CUR_AB_NAME); } }
        public IField PSMGR_TIRDATE_SAVEAREA { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SAVEAREA); } }
        public IGroup PSMGR_TIRDATE_CMCB { get { return GetElementByName<IGroup>(Names.PSMGR_TIRDATE_CMCB); } }
        public IField PSMGR_TIRDATE_DATE { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE); } }
        public IField PSMGR_TIRDATE_TIME { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME); } }
        public IField PSMGR_TIRDATE_INC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_INC); } }
        public IField PSMGR_TIRDATE_RC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RC); } }
        public ICheckField PSMGR_TIRDATE_OK { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_OK); } }
        public ICheckField PSMGR_TIRDATE_WARNING { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_WARNING); } }
        public ICheckField PSMGR_TIRDATE_ERROR { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_ERROR); } }
        public IField PSMGR_TIRDATE_REQ { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_REQ); } }
        public IField PSMGR_TIRDATE_DATEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATEF); } }
        public IField PSMGR_TIRDATE_TIMEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIMEF); } }
        public IField PSMGR_TIRDATE_RETMSG { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RETMSG); } }
        public IField PSMGR_TIRDATE_TSTAMP { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TSTAMP); } }
        public IField PSMGR_TIRDATE_DATE_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE_Z); } }
        public IField PSMGR_TIRDATE_TIME_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME_Z); } }
        public IField PSMGR_ROLLBACK_RQSTED { get { return GetElementByName<IField>(Names.PSMGR_ROLLBACK_RQSTED); } }
        public ICheckField ROLLBACK_RQSTED { get { return GetElementByName<ICheckField>(Names.ROLLBACK_RQSTED); } }
        public ICheckField ABEND_RQSTED { get { return GetElementByName<ICheckField>(Names.ABEND_RQSTED); } }
        public ICheckField TERMINATE_RQSTED { get { return GetElementByName<ICheckField>(Names.TERMINATE_RQSTED); } }
        public IGroup TIRTRCE_SAVE_AREA { get { return GetElementByName<IGroup>(Names.TIRTRCE_SAVE_AREA); } }
        public IField TOP_INDX { get { return GetElementByName<IField>(Names.TOP_INDX); } }
        public IField BOTTOM_INDX { get { return GetElementByName<IField>(Names.BOTTOM_INDX); } }
        public IField END_INDX { get { return GetElementByName<IField>(Names.END_INDX); } }
        public IField LAST_STMT { get { return GetElementByName<IField>(Names.LAST_STMT); } }
        public IField TOP_OF_CALL { get { return GetElementByName<IField>(Names.TOP_OF_CALL); } }
        public IField TRACE_BREAK_POINT { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT); } }
        public IField TRACE_BREAK_POINT_STATUS { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT_STATUS); } }
        public IField LAST_AB_NAME { get { return GetElementByName<IField>(Names.LAST_AB_NAME); } }
        public IField COLOR { get { return GetElementByName<IField>(Names.COLOR); } }
        public IField COLORT { get { return GetElementByName<IField>(Names.COLORT); } }
        public IField HILITE { get { return GetElementByName<IField>(Names.HILITE); } }
        public IField TRACE_ON_OFF { get { return GetElementByName<IField>(Names.TRACE_ON_OFF); } }
        public IGroup CASCADE_DELETE_FLAGS { get { return GetElementByName<IGroup>(Names.CASCADE_DELETE_FLAGS); } }
        public IField V1PRESENT { get { return GetElementByName<IField>(Names.V1PRESENT); } }
        public IField V2PRESENT { get { return GetElementByName<IField>(Names.V2PRESENT); } }
        public IField CASCADE1 { get { return GetElementByName<IField>(Names.CASCADE1); } }
        public IField CASCADE2 { get { return GetElementByName<IField>(Names.CASCADE2); } }
        public IField PROCESSQ_FLAG { get { return GetElementByName<IField>(Names.PROCESSQ_FLAG); } }
        public IGroup PSMGR_ACTIVE_DIALECT { get { return GetElementByName<IGroup>(Names.PSMGR_ACTIVE_DIALECT); } }
        public IField DIALECT_NAME { get { return GetElementByName<IField>(Names.DIALECT_NAME); } }
        public IField MESSAGE_TABLE_NAME { get { return GetElementByName<IField>(Names.MESSAGE_TABLE_NAME); } }
        public IField TRANSLATE_TABLE_NAME { get { return GetElementByName<IField>(Names.TRANSLATE_TABLE_NAME); } }
        public IGroup PSMGR_FUNCTION_DATA_EXT { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA_EXT); } }
        public IField PSMGR_FUNC_IN_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIMESTAMP); } }
        public IGroup PSMGR_FUNC_IN_TSDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TSDURA); } }
        public IGroup TSDURA_MICROSECOND { get { return GetElementByName<IGroup>(Names.TSDURA_MICROSECOND); } }
        public IField TSDURA_M_MISS { get { return GetElementByName<IField>(Names.TSDURA_M_MISS); } }
        public IField TSDURA_MS { get { return GetElementByName<IField>(Names.TSDURA_MS); } }
        public IField PSMGR_FUNC_OUT_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIMESTAMP); } }
        public IField PSMGR_CICS_FAIL_SW { get { return GetElementByName<IField>(Names.PSMGR_CICS_FAIL_SW); } }
        public ICheckField INHIBIT_CICS_RECEIVE { get { return GetElementByName<ICheckField>(Names.INHIBIT_CICS_RECEIVE); } }
        public IField CLIENT_USERID { get { return GetElementByName<IField>(Names.CLIENT_USERID); } }
        public IField CLIENT_PASSWORD { get { return GetElementByName<IField>(Names.CLIENT_PASSWORD); } }
        public IField LOAD_MODULE_NAME { get { return GetElementByName<IField>(Names.LOAD_MODULE_NAME); } }
        public IField INSTRUMENT_CODE { get { return GetElementByName<IField>(Names.INSTRUMENT_CODE); } }
        public IField TX_RETRY_LIMIT { get { return GetElementByName<IField>(Names.TX_RETRY_LIMIT); } }
        public IField TX_TIMEOUT { get { return GetElementByName<IField>(Names.TX_TIMEOUT); } }
        public IGroup PSMGR_EXTRA_ERRINFO { get { return GetElementByName<IGroup>(Names.PSMGR_EXTRA_ERRINFO); } }
        public IField ERRINFO_BUF_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_BUF_SIZE); } }
        public IField ERRINFO_MSG_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_MSG_SIZE); } }
        public IField ERRINFO_BUF_ADDR { get { return GetElementByName<IField>(Names.ERRINFO_BUF_ADDR); } }
        public IGroup PSMGR_PSTEP_USE_PTRS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_PTRS); } }
        public IField PSTEP_FAIL_MSG_PTR { get { return GetElementByName<IField>(Names.PSTEP_FAIL_MSG_PTR); } }
        public IField PSTEP_GURB_REST_PTR { get { return GetElementByName<IField>(Names.PSTEP_GURB_REST_PTR); } }
        public IField PSTEP_LIPS_PTR { get { return GetElementByName<IField>(Names.PSTEP_LIPS_PTR); } }
        public IField PSTEP_TBL_PTR { get { return GetElementByName<IField>(Names.PSTEP_TBL_PTR); } }
        public IField PSTEP_DDF_PTR { get { return GetElementByName<IField>(Names.PSTEP_DDF_PTR); } }
        public IField PSTEP_COMM_ID { get { return GetElementByName<IField>(Names.PSTEP_COMM_ID); } }
        public IField PSTEP_APPL_LIST_PTR { get { return GetElementByName<IField>(Names.PSTEP_APPL_LIST_PTR); } }
        public IField PSTEP_CURR_PST_PTR { get { return GetElementByName<IField>(Names.PSTEP_CURR_PST_PTR); } }
        public IGroup PSMGR_PSTEP_USE_SYSFLDS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_SYSFLDS); } }
        public IField PSMGR_EIBERRCD { get { return GetElementByName<IField>(Names.PSMGR_EIBERRCD); } }
        public IField PSMGR_EIBFN { get { return GetElementByName<IField>(Names.PSMGR_EIBFN); } }
        public IField PSMGR_EIBRESP { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP); } }
        public IField PSMGR_EIBRESP2 { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP2); } }
        public IGroup IMPORT_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_0001EV); } }
        public IGroup EAB_FILE_HANDLING_0001ET { get { return GetElementByName<IGroup>(Names.EAB_FILE_HANDLING_0001ET); } }
        public IField ACTION_0001AS { get { return GetElementByName<IField>(Names.ACTION_0001AS); } }
        public IField ACTION_0001 { get { return GetElementByName<IField>(Names.ACTION_0001); } }
        public IField ACTION_0001XX { get { return GetElementByName<IField>(Names.ACTION_0001XX); } }
        public IGroup IMPORT_0002EV { get { return GetElementByName<IGroup>(Names.IMPORT_0002EV); } }
        public IGroup CSE_PERSON_0002ET { get { return GetElementByName<IGroup>(Names.CSE_PERSON_0002ET); } }
        public IField NUMBER_0002AS { get { return GetElementByName<IField>(Names.NUMBER_0002AS); } }
        public IField NUMBER_0002 { get { return GetElementByName<IField>(Names.NUMBER_0002); } }
        public IField NUMBER_0002XX { get { return GetElementByName<IField>(Names.NUMBER_0002XX); } }
        public IGroup IMPORT_STMT_NUMBER_0003EV { get { return GetElementByName<IGroup>(Names.IMPORT_STMT_NUMBER_0003EV); } }
        public IGroup IEF_SUPPLIED_0003ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0003ET); } }
        public IField COUNT_0003AS { get { return GetElementByName<IField>(Names.COUNT_0003AS); } }
        public IField COUNT_0003 { get { return GetElementByName<IField>(Names.COUNT_0003); } }
        public IField COUNT_0003XX { get { return GetElementByName<IField>(Names.COUNT_0003XX); } }
        public IGroup IMPORT_RECORD_NUMBER_0004EV { get { return GetElementByName<IGroup>(Names.IMPORT_RECORD_NUMBER_0004EV); } }
        public IGroup IEF_SUPPLIED_0004ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0004ET); } }
        public IField COUNT_0004AS { get { return GetElementByName<IField>(Names.COUNT_0004AS); } }
        public IField COUNT_0004 { get { return GetElementByName<IField>(Names.COUNT_0004); } }
        public IField COUNT_0004XX { get { return GetElementByName<IField>(Names.COUNT_0004XX); } }
        public IGroup IMPORT_RECORD_TYPE_0005EV { get { return GetElementByName<IGroup>(Names.IMPORT_RECORD_TYPE_0005EV); } }
        public IGroup IEF_SUPPLIED_0005ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0005ET); } }
        public IField ACTION_ENTRY_0005AS { get { return GetElementByName<IField>(Names.ACTION_ENTRY_0005AS); } }
        public IField ACTION_ENTRY_0005 { get { return GetElementByName<IField>(Names.ACTION_ENTRY_0005); } }
        public IField ACTION_ENTRY_0005XX { get { return GetElementByName<IField>(Names.ACTION_ENTRY_0005XX); } }
        public IGroup IMPORT_0006EV { get { return GetElementByName<IGroup>(Names.IMPORT_0006EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0006ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0006ET); } }
        public IField FIRST_NAME_0006AS { get { return GetElementByName<IField>(Names.FIRST_NAME_0006AS); } }
        public IField FIRST_NAME_0006 { get { return GetElementByName<IField>(Names.FIRST_NAME_0006); } }
        public IField FIRST_NAME_0006XX { get { return GetElementByName<IField>(Names.FIRST_NAME_0006XX); } }
        public IField MIDDLE_INITIAL_0006AS { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0006AS); } }
        public IField MIDDLE_INITIAL_0006 { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0006); } }
        public IField MIDDLE_INITIAL_0006XX { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0006XX); } }
        public IField LAST_NAME_0006AS { get { return GetElementByName<IField>(Names.LAST_NAME_0006AS); } }
        public IField LAST_NAME_0006 { get { return GetElementByName<IField>(Names.LAST_NAME_0006); } }
        public IField LAST_NAME_0006XX { get { return GetElementByName<IField>(Names.LAST_NAME_0006XX); } }
        public IGroup IMPORT_CASE_WORKER_0007EV { get { return GetElementByName<IGroup>(Names.IMPORT_CASE_WORKER_0007EV); } }
        public IGroup OFFICE_0007ET { get { return GetElementByName<IGroup>(Names.OFFICE_0007ET); } }
        public IField MAIN_PHONE_AREA_CODE_0007AS { get { return GetElementByName<IField>(Names.MAIN_PHONE_AREA_CODE_0007AS); } }
        public IField MAIN_PHONE_AREA_CODE_0007 { get { return GetElementByName<IField>(Names.MAIN_PHONE_AREA_CODE_0007); } }
        public IField MAIN_PHONE_AREA_CODE_0007XX { get { return GetElementByName<IField>(Names.MAIN_PHONE_AREA_CODE_0007XX); } }
        public IField NAME_0007AS { get { return GetElementByName<IField>(Names.NAME_0007AS); } }
        public IField NAME_0007 { get { return GetElementByName<IField>(Names.NAME_0007); } }
        public IField NAME_0007XX { get { return GetElementByName<IField>(Names.NAME_0007XX); } }
        public IField MAIN_PHONE_NUMBER_0007AS { get { return GetElementByName<IField>(Names.MAIN_PHONE_NUMBER_0007AS); } }
        public IField MAIN_PHONE_NUMBER_0007 { get { return GetElementByName<IField>(Names.MAIN_PHONE_NUMBER_0007); } }
        public IField MAIN_PHONE_NUMBER_0007XX { get { return GetElementByName<IField>(Names.MAIN_PHONE_NUMBER_0007XX); } }
        public IGroup IMPORT_0008EV { get { return GetElementByName<IGroup>(Names.IMPORT_0008EV); } }
        public IGroup CSE_PERSON_ADDRESS_0008ET { get { return GetElementByName<IGroup>(Names.CSE_PERSON_ADDRESS_0008ET); } }
        public IField LOCATION_TYPE_0008AS { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0008AS); } }
        public IField LOCATION_TYPE_0008 { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0008); } }
        public IField LOCATION_TYPE_0008XX { get { return GetElementByName<IField>(Names.LOCATION_TYPE_0008XX); } }
        public IField STREET_1_0008AS { get { return GetElementByName<IField>(Names.STREET_1_0008AS); } }
        public IField STREET_1_0008 { get { return GetElementByName<IField>(Names.STREET_1_0008); } }
        public IField STREET_1_0008XX { get { return GetElementByName<IField>(Names.STREET_1_0008XX); } }
        public IField STREET_2_0008AS { get { return GetElementByName<IField>(Names.STREET_2_0008AS); } }
        public IField STREET_2_0008 { get { return GetElementByName<IField>(Names.STREET_2_0008); } }
        public IField STREET_2_0008XX { get { return GetElementByName<IField>(Names.STREET_2_0008XX); } }
        public IField CITY_0008AS { get { return GetElementByName<IField>(Names.CITY_0008AS); } }
        public IField CITY_0008 { get { return GetElementByName<IField>(Names.CITY_0008); } }
        public IField CITY_0008XX { get { return GetElementByName<IField>(Names.CITY_0008XX); } }
        public IField STATE_0008AS { get { return GetElementByName<IField>(Names.STATE_0008AS); } }
        public IField STATE_0008 { get { return GetElementByName<IField>(Names.STATE_0008); } }
        public IField STATE_0008XX { get { return GetElementByName<IField>(Names.STATE_0008XX); } }
        public IField ZIP_CODE_0008AS { get { return GetElementByName<IField>(Names.ZIP_CODE_0008AS); } }
        public IField ZIP_CODE_0008 { get { return GetElementByName<IField>(Names.ZIP_CODE_0008); } }
        public IField ZIP_CODE_0008XX { get { return GetElementByName<IField>(Names.ZIP_CODE_0008XX); } }
        public IField ZIP4_0008AS { get { return GetElementByName<IField>(Names.ZIP4_0008AS); } }
        public IField ZIP4_0008 { get { return GetElementByName<IField>(Names.ZIP4_0008); } }
        public IField ZIP4_0008XX { get { return GetElementByName<IField>(Names.ZIP4_0008XX); } }
        public IField ZIP3_0008AS { get { return GetElementByName<IField>(Names.ZIP3_0008AS); } }
        public IField ZIP3_0008 { get { return GetElementByName<IField>(Names.ZIP3_0008); } }
        public IField ZIP3_0008XX { get { return GetElementByName<IField>(Names.ZIP3_0008XX); } }
        public IField STREET_3_0008AS { get { return GetElementByName<IField>(Names.STREET_3_0008AS); } }
        public IField STREET_3_0008 { get { return GetElementByName<IField>(Names.STREET_3_0008); } }
        public IField STREET_3_0008XX { get { return GetElementByName<IField>(Names.STREET_3_0008XX); } }
        public IField STREET_4_0008AS { get { return GetElementByName<IField>(Names.STREET_4_0008AS); } }
        public IField STREET_4_0008 { get { return GetElementByName<IField>(Names.STREET_4_0008); } }
        public IField STREET_4_0008XX { get { return GetElementByName<IField>(Names.STREET_4_0008XX); } }
        public IField PROVINCE_0008AS { get { return GetElementByName<IField>(Names.PROVINCE_0008AS); } }
        public IField PROVINCE_0008 { get { return GetElementByName<IField>(Names.PROVINCE_0008); } }
        public IField PROVINCE_0008XX { get { return GetElementByName<IField>(Names.PROVINCE_0008XX); } }
        public IField POSTAL_CODE_0008AS { get { return GetElementByName<IField>(Names.POSTAL_CODE_0008AS); } }
        public IField POSTAL_CODE_0008 { get { return GetElementByName<IField>(Names.POSTAL_CODE_0008); } }
        public IField POSTAL_CODE_0008XX { get { return GetElementByName<IField>(Names.POSTAL_CODE_0008XX); } }
        public IField COUNTRY_0008AS { get { return GetElementByName<IField>(Names.COUNTRY_0008AS); } }
        public IField COUNTRY_0008 { get { return GetElementByName<IField>(Names.COUNTRY_0008); } }
        public IField COUNTRY_0008XX { get { return GetElementByName<IField>(Names.COUNTRY_0008XX); } }
        public IGroup IMPORT_VARIABLE_LINE1_0009EV { get { return GetElementByName<IGroup>(Names.IMPORT_VARIABLE_LINE1_0009EV); } }
        public IGroup EAB_REPORT_SEND_0009ET { get { return GetElementByName<IGroup>(Names.EAB_REPORT_SEND_0009ET); } }
        public IField RPT_DETAIL_0009AS { get { return GetElementByName<IField>(Names.RPT_DETAIL_0009AS); } }
        public IField RPT_DETAIL_0009 { get { return GetElementByName<IField>(Names.RPT_DETAIL_0009); } }
        public IField RPT_DETAIL_0009XX { get { return GetElementByName<IField>(Names.RPT_DETAIL_0009XX); } }
        public IGroup IMPORT_VARIABLE_LINE2_0010EV { get { return GetElementByName<IGroup>(Names.IMPORT_VARIABLE_LINE2_0010EV); } }
        public IGroup EAB_REPORT_SEND_0010ET { get { return GetElementByName<IGroup>(Names.EAB_REPORT_SEND_0010ET); } }
        public IField RPT_DETAIL_0010AS { get { return GetElementByName<IField>(Names.RPT_DETAIL_0010AS); } }
        public IField RPT_DETAIL_0010 { get { return GetElementByName<IField>(Names.RPT_DETAIL_0010); } }
        public IField RPT_DETAIL_0010XX { get { return GetElementByName<IField>(Names.RPT_DETAIL_0010XX); } }
        public IGroup IMPORT_0011EV { get { return GetElementByName<IGroup>(Names.IMPORT_0011EV); } }
        public IGroup GLOBAL_STATEMENT_MESSAG_0011ET { get { return GetElementByName<IGroup>(Names.GLOBAL_STATEMENT_MESSAG_0011ET); } }
        public IField TEXT_AREA_0011AS { get { return GetElementByName<IField>(Names.TEXT_AREA_0011AS); } }
        public IGroup TEXT_AREA_0011 { get { return GetElementByName<IGroup>(Names.TEXT_AREA_0011); } }
        public IField TEXT_AREA_0011DL { get { return GetElementByName<IField>(Names.TEXT_AREA_0011DL); } }
        public IField TEXT_AREA_0011XL { get { return GetElementByName<IField>(Names.TEXT_AREA_0011XL); } }
        public IField TEXT_AREA_0011DV { get { return GetElementByName<IField>(Names.TEXT_AREA_0011DV); } }
        public IField TEXT_AREA_0011XV { get { return GetElementByName<IField>(Names.TEXT_AREA_0011XV); } }
        public IField TEXT_AREA_0011XX { get { return GetElementByName<IField>(Names.TEXT_AREA_0011XX); } }
        public IGroup IMPORT_AMOUNT_ONE_0012EV { get { return GetElementByName<IGroup>(Names.IMPORT_AMOUNT_ONE_0012EV); } }
        public IGroup IEF_SUPPLIED_0012ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0012ET); } }
        public IField AVERAGE_CURRENCY_0012AS { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0012AS); } }
        public IField AVERAGE_CURRENCY_0012 { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0012); } }
        public IField AVERAGE_CURRENCY_0012XX { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0012XX); } }
        public IGroup IMPORT_AMOUNT_TWO_0013EV { get { return GetElementByName<IGroup>(Names.IMPORT_AMOUNT_TWO_0013EV); } }
        public IGroup IEF_SUPPLIED_0013ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0013ET); } }
        public IField AVERAGE_CURRENCY_0013AS { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0013AS); } }
        public IField AVERAGE_CURRENCY_0013 { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0013); } }
        public IField AVERAGE_CURRENCY_0013XX { get { return GetElementByName<IField>(Names.AVERAGE_CURRENCY_0013XX); } }
        public IGroup IMPORT_DATE_ONE_0014EV { get { return GetElementByName<IGroup>(Names.IMPORT_DATE_ONE_0014EV); } }
        public IGroup TEXT_WORK_AREA_0014ET { get { return GetElementByName<IGroup>(Names.TEXT_WORK_AREA_0014ET); } }
        public IField TEXT_10_0014AS { get { return GetElementByName<IField>(Names.TEXT_10_0014AS); } }
        public IField TEXT_10_0014 { get { return GetElementByName<IField>(Names.TEXT_10_0014); } }
        public IField TEXT_10_0014XX { get { return GetElementByName<IField>(Names.TEXT_10_0014XX); } }
        public IGroup IMPORT_DATE_TWO_0015EV { get { return GetElementByName<IGroup>(Names.IMPORT_DATE_TWO_0015EV); } }
        public IGroup TEXT_WORK_AREA_0015ET { get { return GetElementByName<IGroup>(Names.TEXT_WORK_AREA_0015ET); } }
        public IField TEXT_10_0015AS { get { return GetElementByName<IField>(Names.TEXT_10_0015AS); } }
        public IField TEXT_10_0015 { get { return GetElementByName<IField>(Names.TEXT_10_0015); } }
        public IField TEXT_10_0015XX { get { return GetElementByName<IField>(Names.TEXT_10_0015XX); } }
        public IGroup IMPORT_SORT_SEQUENCE_NU_0016EV { get { return GetElementByName<IGroup>(Names.IMPORT_SORT_SEQUENCE_NU_0016EV); } }
        public IGroup IEF_SUPPLIED_0016ET { get { return GetElementByName<IGroup>(Names.IEF_SUPPLIED_0016ET); } }
        public IField COUNT_0016AS { get { return GetElementByName<IField>(Names.COUNT_0016AS); } }
        public IField COUNT_0016 { get { return GetElementByName<IField>(Names.COUNT_0016); } }
        public IField COUNT_0016XX { get { return GetElementByName<IField>(Names.COUNT_0016XX); } }
        public IGroup EXPORT_0016EV { get { return GetElementByName<IGroup>(Names.EXPORT_0016EV); } }
        public IGroup EAB_FILE_HANDLING_0012ET { get { return GetElementByName<IGroup>(Names.EAB_FILE_HANDLING_0012ET); } }
        public IField STATUS_0016AS { get { return GetElementByName<IField>(Names.STATUS_0016AS); } }
        public IField STATUS_0016 { get { return GetElementByName<IField>(Names.STATUS_0016); } }
        public IField STATUS_0016XX { get { return GetElementByName<IField>(Names.STATUS_0016XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.GLOBDATA, (GLOBDATA) =>
           {
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_COMMAND, (PSMGR_IEF_COMMAND) =>
               {
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_1, FieldType.String, 8);
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_2, FieldType.String, 72);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_TRANCODE, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_STATE, FieldType.PackedDecimal, 11);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_INFOMSG, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_USER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_TERMINAL_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_PRINTER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_DATE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_TIME, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_RUNTIME_TYPE, FieldType.String, 4);
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA, (PSMGR_FUNCTION_DATA) =>
               {
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_ERRMSG, FieldType.String, 4);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_NAME, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_DDURA, (PSMGR_FUNC_IN_DDURA) =>
                   {
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_YEAR, (DDURA_YEAR) =>
                       {
                           DDURA_YEAR.CreateNewField(Names.DDURA_Y_MISS, FieldType.String, 1);
                           DDURA_YEAR.CreateNewField(Names.DDURA_YYYY, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_MONTH, (DDURA_MONTH) =>
                       {
                           DDURA_MONTH.CreateNewField(Names.DDURA_M_MISS, FieldType.String, 1);
                           DDURA_MONTH.CreateNewField(Names.DDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_DAY, (DDURA_DAY) =>
                       {
                           DDURA_DAY.CreateNewField(Names.DDURA_D_MISS, FieldType.String, 1);
                           DDURA_DAY.CreateNewField(Names.DDURA_DD, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_TIME, FieldType.String, 6);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_TDURA, (PSMGR_FUNC_IN_TDURA) =>
                   {
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_HOUR, (TDURA_HOUR) =>
                       {
                           TDURA_HOUR.CreateNewField(Names.TDURA_H_MISS, FieldType.String, 1);
                           TDURA_HOUR.CreateNewField(Names.TDURA_HH, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_MINUTE, (TDURA_MINUTE) =>
                       {
                           TDURA_MINUTE.CreateNewField(Names.TDURA_M_MISS, FieldType.String, 1);
                           TDURA_MINUTE.CreateNewField(Names.TDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_SECOND, (TDURA_SECOND) =>
                       {
                           TDURA_SECOND.CreateNewField(Names.TDURA_S_MISS, FieldType.String, 1);
                           TDURA_SECOND.CreateNewField(Names.TDURA_SS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_TIME, FieldType.String, 6);
               });
               GLOBDATA.CreateNewFillerField(2, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_NEXTTRAN, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_MSGTYPE, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(11, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_DEBUG_FLAGS, (PSMGR_IEF_DEBUG_FLAGS) =>
               {
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewField(Names.PSMGR_IEF_DEBUG, FieldType.String, 1)
                       .NewCheckField(Names.PSMGR_DEBUG_ON, "Y")
                       ;
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewFillerField(15, FillWith.Hashes);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ENVIRONMENT_DATA, (PSMGR_ENVIRONMENT_DATA) =>
               {
                   PSMGR_ENVIRONMENT_DATA.CreateNewField(Names.PSMGR_PCB_CNT, FieldType.CompInt, 9);
                   PSMGR_ENVIRONMENT_DATA.CreateNewGroupArray(Names.PSMGR_PCB_ENTRY, 255, (PSMGR_PCB_ENTRY) =>
                   {
                       PSMGR_PCB_ENTRY.CreateNewField(Names.PSMGR_PCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
               {
                   PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
                   PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
                   {
                       PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ERROR_DATA, (PSMGR_ERROR_DATA) =>
               {
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ACTION_NAME, FieldType.String, 32);
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ENCOUNTERED_SW, FieldType.String, 1);
                   PSMGR_ERROR_DATA.CreateNewField(Names.VIEW_OVERFLOW_SW, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DASG_DATA, (PSMGR_DASG_DATA) =>
               {
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ACTION_ID_X, (ACTION_ID_X) =>
                   {
                       ACTION_ID_X.CreateNewField(Names.ACTION_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ATTRIBUTE_ID_X, (ATTRIBUTE_ID_X) =>
                   {
                       ATTRIBUTE_ID_X.CreateNewField(Names.ATTRIBUTE_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewField(Names.STATUS_FLAG, FieldType.String, 2)
                       .NewCheckField(Names.FATAL_ERROR_SF, "FE")
                       .NewCheckField(Names.PSTEP_USE_FAILURE, "PU")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.LAST_STATUS, FieldType.String, 2)
                       .NewCheckField(Names.DB_ERROR_FL_LS, "DB")
                       .NewCheckField(Names.DUPLICATE_FOUND_FL_LS, "DF")
                       .NewCheckField(Names.INVALID_DATAA_FL_LS, "IA")
                       .NewCheckField(Names.INVALID_DATAB_TYPE_FL_LS, "BT")
                       .NewCheckField(Names.INVALID_DATAB_PERM_FL_LS, "BP")
                       .NewCheckField(Names.FATAL_ERROR_FL_LS, "FE")
                       .NewCheckField(Names.NOT_FOUND_FL_LS, "NF")
                       .NewCheckField(Names.NOT_UNIQUE_FL_LS, "NU")
                       .NewCheckField(Names.IEF_FUNCTION_ERROR_FL_LS, "IE")
                       .NewCheckField(Names.IEF_DURATION_ERROR_FL_LS, "DE")
                       .NewCheckField(Names.USED_PSTEP_NOT_FOUND, "PO")
                       .NewCheckField(Names.USED_PSTEP_ROUTING_ERR, "PX")
                       .NewCheckField(Names.USED_PSTEP_SND_FMT_ERR, "PF")
                       .NewCheckField(Names.USED_PSTEP_ENCRYPT_ERR, "PN")
                       .NewCheckField(Names.USED_PSTEP_SND_BFR_ERR, "PS")
                       .NewCheckField(Names.USED_PSTEP_RCV_BFR_ERR, "PR")
                       .NewCheckField(Names.USED_PSTEP_RCV_FMT_ERR, "PU")
                       .NewCheckField(Names.USED_PSTEP_TIRSECR_ERR, "PE")
                       .NewCheckField(Names.USED_PSTEP_TOKEN_ERR, "PT")
                       .NewCheckField(Names.USED_PSTEP_SEND_MAX_SIZE, "PM")
                       .NewCheckField(Names.USED_PSTEP_SECG_ERR, "PB")
                       .NewCheckField(Names.USED_PSTEP_ALLOC_ERR, "PA")
                       .NewCheckField(Names.USED_PSTEP_CONNECT_ERR, "PC")
                       .NewCheckField(Names.USED_PSTEP_XERR, "PD")
                       .NewCheckField(Names.USED_PSTEP_RCV_UA_ERR, "PH")
                       .NewCheckField(Names.USED_PSTEP_RCV_ES_ERR, "PI")
                       .NewCheckField(Names.USED_PSTEP_XFAL, "PJ")
                       .NewCheckField(Names.USED_PSTEP_SETOA_ERR, "PK")
                       .NewCheckField(Names.USED_PSTEP_RCV_VIEW_ERR, "PL")
                       .NewCheckField(Names.USED_PSTEP_DECRYPT_ERR, "PP")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.SAVE_SQLCA, FieldType.String, 255);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DEBUG_DATA, (PSMGR_DEBUG_DATA) =>
               {
                   PSMGR_DEBUG_DATA.CreateNewField(Names.PSMGR_TRACE_ADR, FieldType.CompInt, 9);
                   PSMGR_DEBUG_DATA.CreateNewGroup(Names.LAST_STATEMENT_X, (LAST_STATEMENT_X) =>
                   {
                       LAST_STATEMENT_X.CreateNewField(Names.LAST_STATEMENT_NUM, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_ID, FieldType.String, 10);
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_NAME, FieldType.String, 32);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_TIRDATE_SAVEAREA, FieldType.String, 12);
               GLOBDATA.CreateNewGroup(Names.PSMGR_TIRDATE_CMCB, (PSMGR_TIRDATE_CMCB) =>
               {
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATE, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIME, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(8, FillWith.Hashes);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_INC, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RC, FieldType.CompShort, 4)
                       .NewCheckField(Names.PSMGR_TIRDATE_OK, +0)
                       .NewCheckField(Names.PSMGR_TIRDATE_WARNING, +4)
                       .NewCheckField(Names.PSMGR_TIRDATE_ERROR, +8)
                       ;
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_REQ, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIMEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RETMSG, FieldType.String, 60);

                   IField PSMGR_TIRDATE_TSTAMP_local = PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TSTAMP, FieldType.String, 20);
                   PSMGR_TIRDATE_CMCB.CreateNewGroupRedefine("FILLER_d21", PSMGR_TIRDATE_TSTAMP_local, (FILLER_d21) =>
                   {
                       FILLER_d21.CreateNewField(Names.PSMGR_TIRDATE_DATE_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d21.CreateNewField(Names.PSMGR_TIRDATE_TIME_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d21.CreateNewFillerField(4, FillWith.Hashes);
                   });
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(96, FillWith.Hashes);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_ROLLBACK_RQSTED, FieldType.String, 1)
                   .NewCheckField(Names.ROLLBACK_RQSTED, "R")
                   .NewCheckField(Names.ABEND_RQSTED, "A")
                   .NewCheckField(Names.TERMINATE_RQSTED, "T")
                   ;
               GLOBDATA.CreateNewGroup(Names.TIRTRCE_SAVE_AREA, (TIRTRCE_SAVE_AREA) =>
               {
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.BOTTOM_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.END_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_STMT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_OF_CALL, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT_STATUS, FieldType.String, 3);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_AB_NAME, FieldType.String, 32);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLOR, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLORT, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.HILITE, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_ON_OFF, FieldType.String, 3);
               });
               GLOBDATA.CreateNewGroup(Names.CASCADE_DELETE_FLAGS, (CASCADE_DELETE_FLAGS) =>
               {
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V1PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V2PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE1, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE2, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.PROCESSQ_FLAG, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ACTIVE_DIALECT, (PSMGR_ACTIVE_DIALECT) =>
               {
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.DIALECT_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.MESSAGE_TABLE_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.TRANSLATE_TABLE_NAME, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA_EXT, (PSMGR_FUNCTION_DATA_EXT) =>
               {
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_IN_TIMESTAMP, FieldType.String, 20);
                   PSMGR_FUNCTION_DATA_EXT.CreateNewGroup(Names.PSMGR_FUNC_IN_TSDURA, (PSMGR_FUNC_IN_TSDURA) =>
                   {
                       PSMGR_FUNC_IN_TSDURA.CreateNewGroup(Names.TSDURA_MICROSECOND, (TSDURA_MICROSECOND) =>
                       {
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_M_MISS, FieldType.String, 1);
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_MS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_OUT_TIMESTAMP, FieldType.String, 20);
               });
               GLOBDATA.CreateNewFillerField(8, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_CICS_FAIL_SW, FieldType.String, 1)
                   .NewCheckField(Names.INHIBIT_CICS_RECEIVE, "I")
                   ;
               GLOBDATA.CreateNewField(Names.CLIENT_USERID, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.CLIENT_PASSWORD, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.LOAD_MODULE_NAME, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.INSTRUMENT_CODE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_RETRY_LIMIT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_TIMEOUT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewGroup(Names.PSMGR_EXTRA_ERRINFO, (PSMGR_EXTRA_ERRINFO) =>
               {
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_MSG_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_ADDR, FieldType.String, 16);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_PTRS, (PSMGR_PSTEP_USE_PTRS) =>
               {
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_FAIL_MSG_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_GURB_REST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_LIPS_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_TBL_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_DDF_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_COMM_ID, FieldType.String, 8);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_APPL_LIST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_CURR_PST_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_SYSFLDS, (PSMGR_PSTEP_USE_SYSFLDS) =>
               {
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBERRCD, FieldType.String, 4);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBFN, FieldType.String, 2);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP, FieldType.String, 8);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP2, FieldType.String, 8);
               });
               GLOBDATA.CreateNewFillerField(199, FillWith.Hashes);
           });

            recordDef.CreateNewGroup(Names.IMPORT_0001EV, (IMPORT_0001EV) =>
           {
               IMPORT_0001EV.CreateNewGroup(Names.EAB_FILE_HANDLING_0001ET, (EAB_FILE_HANDLING_0001ET) =>
               {
                   EAB_FILE_HANDLING_0001ET.CreateNewField(Names.ACTION_0001AS, FieldType.String, 1);

                   IField ACTION_0001_local = EAB_FILE_HANDLING_0001ET.CreateNewField(Names.ACTION_0001, FieldType.String, 8);
                   EAB_FILE_HANDLING_0001ET.CreateNewFieldRedefine(Names.ACTION_0001XX, FieldType.String, ACTION_0001_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0002EV, (IMPORT_0002EV) =>
           {
               IMPORT_0002EV.CreateNewGroup(Names.CSE_PERSON_0002ET, (CSE_PERSON_0002ET) =>
               {
                   CSE_PERSON_0002ET.CreateNewField(Names.NUMBER_0002AS, FieldType.String, 1);

                   IField NUMBER_0002_local = CSE_PERSON_0002ET.CreateNewField(Names.NUMBER_0002, FieldType.String, 10);
                   CSE_PERSON_0002ET.CreateNewFieldRedefine(Names.NUMBER_0002XX, FieldType.String, NUMBER_0002_local, 10);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_STMT_NUMBER_0003EV, (IMPORT_STMT_NUMBER_0003EV) =>
           {
               IMPORT_STMT_NUMBER_0003EV.CreateNewGroup(Names.IEF_SUPPLIED_0003ET, (IEF_SUPPLIED_0003ET) =>
               {
                   IEF_SUPPLIED_0003ET.CreateNewField(Names.COUNT_0003AS, FieldType.String, 1);

                   IField COUNT_0003_local = IEF_SUPPLIED_0003ET.CreateNewField(Names.COUNT_0003, FieldType.SignedNumeric, 9);
                   IEF_SUPPLIED_0003ET.CreateNewFieldRedefine(Names.COUNT_0003XX, FieldType.String, COUNT_0003_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_RECORD_NUMBER_0004EV, (IMPORT_RECORD_NUMBER_0004EV) =>
           {
               IMPORT_RECORD_NUMBER_0004EV.CreateNewGroup(Names.IEF_SUPPLIED_0004ET, (IEF_SUPPLIED_0004ET) =>
               {
                   IEF_SUPPLIED_0004ET.CreateNewField(Names.COUNT_0004AS, FieldType.String, 1);

                   IField COUNT_0004_local = IEF_SUPPLIED_0004ET.CreateNewField(Names.COUNT_0004, FieldType.SignedNumeric, 9);
                   IEF_SUPPLIED_0004ET.CreateNewFieldRedefine(Names.COUNT_0004XX, FieldType.String, COUNT_0004_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_RECORD_TYPE_0005EV, (IMPORT_RECORD_TYPE_0005EV) =>
           {
               IMPORT_RECORD_TYPE_0005EV.CreateNewGroup(Names.IEF_SUPPLIED_0005ET, (IEF_SUPPLIED_0005ET) =>
               {
                   IEF_SUPPLIED_0005ET.CreateNewField(Names.ACTION_ENTRY_0005AS, FieldType.String, 1);

                   IField ACTION_ENTRY_0005_local = IEF_SUPPLIED_0005ET.CreateNewField(Names.ACTION_ENTRY_0005, FieldType.String, 2);
                   IEF_SUPPLIED_0005ET.CreateNewFieldRedefine(Names.ACTION_ENTRY_0005XX, FieldType.String, ACTION_ENTRY_0005_local, 2);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0006EV, (IMPORT_0006EV) =>
           {
               IMPORT_0006EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0006ET, (CSE_PERSONS_WORK_SET_0006ET) =>
               {
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.FIRST_NAME_0006AS, FieldType.String, 1);

                   IField FIRST_NAME_0006_local = CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.FIRST_NAME_0006, FieldType.String, 12);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewFieldRedefine(Names.FIRST_NAME_0006XX, FieldType.String, FIRST_NAME_0006_local, 12);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.MIDDLE_INITIAL_0006AS, FieldType.String, 1);

                   IField MIDDLE_INITIAL_0006_local = CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.MIDDLE_INITIAL_0006, FieldType.String, 1);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewFieldRedefine(Names.MIDDLE_INITIAL_0006XX, FieldType.String, MIDDLE_INITIAL_0006_local, 1);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.LAST_NAME_0006AS, FieldType.String, 1);

                   IField LAST_NAME_0006_local = CSE_PERSONS_WORK_SET_0006ET.CreateNewField(Names.LAST_NAME_0006, FieldType.String, 17);
                   CSE_PERSONS_WORK_SET_0006ET.CreateNewFieldRedefine(Names.LAST_NAME_0006XX, FieldType.String, LAST_NAME_0006_local, 17);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_CASE_WORKER_0007EV, (IMPORT_CASE_WORKER_0007EV) =>
           {
               IMPORT_CASE_WORKER_0007EV.CreateNewGroup(Names.OFFICE_0007ET, (OFFICE_0007ET) =>
               {
                   OFFICE_0007ET.CreateNewField(Names.MAIN_PHONE_AREA_CODE_0007AS, FieldType.String, 1);

                   IField MAIN_PHONE_AREA_CODE_0007_local = OFFICE_0007ET.CreateNewField(Names.MAIN_PHONE_AREA_CODE_0007, FieldType.SignedNumeric, 3);
                   OFFICE_0007ET.CreateNewFieldRedefine(Names.MAIN_PHONE_AREA_CODE_0007XX, FieldType.String, MAIN_PHONE_AREA_CODE_0007_local, 3);
                   OFFICE_0007ET.CreateNewField(Names.NAME_0007AS, FieldType.String, 1);

                   IField NAME_0007_local = OFFICE_0007ET.CreateNewField(Names.NAME_0007, FieldType.String, 30);
                   OFFICE_0007ET.CreateNewFieldRedefine(Names.NAME_0007XX, FieldType.String, NAME_0007_local, 30);
                   OFFICE_0007ET.CreateNewField(Names.MAIN_PHONE_NUMBER_0007AS, FieldType.String, 1);

                   IField MAIN_PHONE_NUMBER_0007_local = OFFICE_0007ET.CreateNewField(Names.MAIN_PHONE_NUMBER_0007, FieldType.SignedNumeric, 7);
                   OFFICE_0007ET.CreateNewFieldRedefine(Names.MAIN_PHONE_NUMBER_0007XX, FieldType.String, MAIN_PHONE_NUMBER_0007_local, 7);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0008EV, (IMPORT_0008EV) =>
           {
               IMPORT_0008EV.CreateNewGroup(Names.CSE_PERSON_ADDRESS_0008ET, (CSE_PERSON_ADDRESS_0008ET) =>
               {
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.LOCATION_TYPE_0008AS, FieldType.String, 1);

                   IField LOCATION_TYPE_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.LOCATION_TYPE_0008, FieldType.String, 1);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.LOCATION_TYPE_0008XX, FieldType.String, LOCATION_TYPE_0008_local, 1);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.STREET_1_0008AS, FieldType.String, 1);

                   IField STREET_1_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.STREET_1_0008, FieldType.String, 25);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.STREET_1_0008XX, FieldType.String, STREET_1_0008_local, 25);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.STREET_2_0008AS, FieldType.String, 1);

                   IField STREET_2_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.STREET_2_0008, FieldType.String, 25);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.STREET_2_0008XX, FieldType.String, STREET_2_0008_local, 25);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.CITY_0008AS, FieldType.String, 1);

                   IField CITY_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.CITY_0008, FieldType.String, 15);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.CITY_0008XX, FieldType.String, CITY_0008_local, 15);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.STATE_0008AS, FieldType.String, 1);

                   IField STATE_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.STATE_0008, FieldType.String, 2);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.STATE_0008XX, FieldType.String, STATE_0008_local, 2);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.ZIP_CODE_0008AS, FieldType.String, 1);

                   IField ZIP_CODE_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.ZIP_CODE_0008, FieldType.String, 5);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.ZIP_CODE_0008XX, FieldType.String, ZIP_CODE_0008_local, 5);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.ZIP4_0008AS, FieldType.String, 1);

                   IField ZIP4_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.ZIP4_0008, FieldType.String, 4);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.ZIP4_0008XX, FieldType.String, ZIP4_0008_local, 4);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.ZIP3_0008AS, FieldType.String, 1);

                   IField ZIP3_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.ZIP3_0008, FieldType.String, 3);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.ZIP3_0008XX, FieldType.String, ZIP3_0008_local, 3);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.STREET_3_0008AS, FieldType.String, 1);

                   IField STREET_3_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.STREET_3_0008, FieldType.String, 25);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.STREET_3_0008XX, FieldType.String, STREET_3_0008_local, 25);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.STREET_4_0008AS, FieldType.String, 1);

                   IField STREET_4_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.STREET_4_0008, FieldType.String, 25);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.STREET_4_0008XX, FieldType.String, STREET_4_0008_local, 25);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.PROVINCE_0008AS, FieldType.String, 1);

                   IField PROVINCE_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.PROVINCE_0008, FieldType.String, 5);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.PROVINCE_0008XX, FieldType.String, PROVINCE_0008_local, 5);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.POSTAL_CODE_0008AS, FieldType.String, 1);

                   IField POSTAL_CODE_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.POSTAL_CODE_0008, FieldType.String, 10);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.POSTAL_CODE_0008XX, FieldType.String, POSTAL_CODE_0008_local, 10);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.COUNTRY_0008AS, FieldType.String, 1);

                   IField COUNTRY_0008_local = CSE_PERSON_ADDRESS_0008ET.CreateNewField(Names.COUNTRY_0008, FieldType.String, 2);
                   CSE_PERSON_ADDRESS_0008ET.CreateNewFieldRedefine(Names.COUNTRY_0008XX, FieldType.String, COUNTRY_0008_local, 2);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_VARIABLE_LINE1_0009EV, (IMPORT_VARIABLE_LINE1_0009EV) =>
           {
               IMPORT_VARIABLE_LINE1_0009EV.CreateNewGroup(Names.EAB_REPORT_SEND_0009ET, (EAB_REPORT_SEND_0009ET) =>
               {
                   EAB_REPORT_SEND_0009ET.CreateNewField(Names.RPT_DETAIL_0009AS, FieldType.String, 1);

                   IField RPT_DETAIL_0009_local = EAB_REPORT_SEND_0009ET.CreateNewField(Names.RPT_DETAIL_0009, FieldType.String, 132);
                   EAB_REPORT_SEND_0009ET.CreateNewFieldRedefine(Names.RPT_DETAIL_0009XX, FieldType.String, RPT_DETAIL_0009_local, 132);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_VARIABLE_LINE2_0010EV, (IMPORT_VARIABLE_LINE2_0010EV) =>
           {
               IMPORT_VARIABLE_LINE2_0010EV.CreateNewGroup(Names.EAB_REPORT_SEND_0010ET, (EAB_REPORT_SEND_0010ET) =>
               {
                   EAB_REPORT_SEND_0010ET.CreateNewField(Names.RPT_DETAIL_0010AS, FieldType.String, 1);

                   IField RPT_DETAIL_0010_local = EAB_REPORT_SEND_0010ET.CreateNewField(Names.RPT_DETAIL_0010, FieldType.String, 132);
                   EAB_REPORT_SEND_0010ET.CreateNewFieldRedefine(Names.RPT_DETAIL_0010XX, FieldType.String, RPT_DETAIL_0010_local, 132);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0011EV, (IMPORT_0011EV) =>
           {
               IMPORT_0011EV.CreateNewGroup(Names.GLOBAL_STATEMENT_MESSAG_0011ET, (GLOBAL_STATEMENT_MESSAG_0011ET) =>
               {
                   GLOBAL_STATEMENT_MESSAG_0011ET.CreateNewField(Names.TEXT_AREA_0011AS, FieldType.String, 1);
                   IGroup TEXT_AREA_0011_local = (IGroup)GLOBAL_STATEMENT_MESSAG_0011ET.CreateNewGroup(Names.TEXT_AREA_0011, (TEXT_AREA_0011) =>
                   {

                       IField TEXT_AREA_0011DL_local = TEXT_AREA_0011.CreateNewField(Names.TEXT_AREA_0011DL, FieldType.CompShort, 4);
                       TEXT_AREA_0011.CreateNewFieldRedefine(Names.TEXT_AREA_0011XL, FieldType.String, TEXT_AREA_0011DL_local, 2);

                       IField TEXT_AREA_0011DV_local = TEXT_AREA_0011.CreateNewField(Names.TEXT_AREA_0011DV, FieldType.String, 240);
                       TEXT_AREA_0011.CreateNewFieldRedefine(Names.TEXT_AREA_0011XV, FieldType.String, TEXT_AREA_0011DV_local, 240);
                   });
                   GLOBAL_STATEMENT_MESSAG_0011ET.CreateNewFieldRedefine(Names.TEXT_AREA_0011XX, FieldType.String, TEXT_AREA_0011_local, 242);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_AMOUNT_ONE_0012EV, (IMPORT_AMOUNT_ONE_0012EV) =>
           {
               IMPORT_AMOUNT_ONE_0012EV.CreateNewGroup(Names.IEF_SUPPLIED_0012ET, (IEF_SUPPLIED_0012ET) =>
               {
                   IEF_SUPPLIED_0012ET.CreateNewField(Names.AVERAGE_CURRENCY_0012AS, FieldType.String, 1);

                   IField AVERAGE_CURRENCY_0012_local = IEF_SUPPLIED_0012ET.CreateNewField(Names.AVERAGE_CURRENCY_0012, FieldType.SignedNumeric, 11, null, 2);
                   IEF_SUPPLIED_0012ET.CreateNewFieldRedefine(Names.AVERAGE_CURRENCY_0012XX, FieldType.String, AVERAGE_CURRENCY_0012_local, 11);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_AMOUNT_TWO_0013EV, (IMPORT_AMOUNT_TWO_0013EV) =>
           {
               IMPORT_AMOUNT_TWO_0013EV.CreateNewGroup(Names.IEF_SUPPLIED_0013ET, (IEF_SUPPLIED_0013ET) =>
               {
                   IEF_SUPPLIED_0013ET.CreateNewField(Names.AVERAGE_CURRENCY_0013AS, FieldType.String, 1);

                   IField AVERAGE_CURRENCY_0013_local = IEF_SUPPLIED_0013ET.CreateNewField(Names.AVERAGE_CURRENCY_0013, FieldType.SignedNumeric, 11, null, 2);
                   IEF_SUPPLIED_0013ET.CreateNewFieldRedefine(Names.AVERAGE_CURRENCY_0013XX, FieldType.String, AVERAGE_CURRENCY_0013_local, 11);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_DATE_ONE_0014EV, (IMPORT_DATE_ONE_0014EV) =>
           {
               IMPORT_DATE_ONE_0014EV.CreateNewGroup(Names.TEXT_WORK_AREA_0014ET, (TEXT_WORK_AREA_0014ET) =>
               {
                   TEXT_WORK_AREA_0014ET.CreateNewField(Names.TEXT_10_0014AS, FieldType.String, 1);

                   IField TEXT_10_0014_local = TEXT_WORK_AREA_0014ET.CreateNewField(Names.TEXT_10_0014, FieldType.String, 10);
                   TEXT_WORK_AREA_0014ET.CreateNewFieldRedefine(Names.TEXT_10_0014XX, FieldType.String, TEXT_10_0014_local, 10);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_DATE_TWO_0015EV, (IMPORT_DATE_TWO_0015EV) =>
           {
               IMPORT_DATE_TWO_0015EV.CreateNewGroup(Names.TEXT_WORK_AREA_0015ET, (TEXT_WORK_AREA_0015ET) =>
               {
                   TEXT_WORK_AREA_0015ET.CreateNewField(Names.TEXT_10_0015AS, FieldType.String, 1);

                   IField TEXT_10_0015_local = TEXT_WORK_AREA_0015ET.CreateNewField(Names.TEXT_10_0015, FieldType.String, 10);
                   TEXT_WORK_AREA_0015ET.CreateNewFieldRedefine(Names.TEXT_10_0015XX, FieldType.String, TEXT_10_0015_local, 10);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_SORT_SEQUENCE_NU_0016EV, (IMPORT_SORT_SEQUENCE_NU_0016EV) =>
           {
               IMPORT_SORT_SEQUENCE_NU_0016EV.CreateNewGroup(Names.IEF_SUPPLIED_0016ET, (IEF_SUPPLIED_0016ET) =>
               {
                   IEF_SUPPLIED_0016ET.CreateNewField(Names.COUNT_0016AS, FieldType.String, 1);

                   IField COUNT_0016_local = IEF_SUPPLIED_0016ET.CreateNewField(Names.COUNT_0016, FieldType.SignedNumeric, 9);
                   IEF_SUPPLIED_0016ET.CreateNewFieldRedefine(Names.COUNT_0016XX, FieldType.String, COUNT_0016_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0016EV, (EXPORT_0016EV) =>
           {
               EXPORT_0016EV.CreateNewGroup(Names.EAB_FILE_HANDLING_0012ET, (EAB_FILE_HANDLING_0012ET) =>
               {
                   EAB_FILE_HANDLING_0012ET.CreateNewField(Names.STATUS_0016AS, FieldType.String, 1);

                   IField STATUS_0016_local = EAB_FILE_HANDLING_0012ET.CreateNewField(Names.STATUS_0016, FieldType.String, 8);
                   EAB_FILE_HANDLING_0012ET.CreateNewFieldRedefine(Names.STATUS_0016XX, FieldType.String, STATUS_0016_local, 8);
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(IEF_RUNTIME_PARM1, args, 0);
            SetPassedParm(IEF_RUNTIME_PARM2, args, 1);
            SetPassedParm(GLOBDATA, args, 2);
            SetPassedParm(IMPORT_0001EV, args, 3);
            SetPassedParm(IMPORT_0002EV, args, 4);
            SetPassedParm(IMPORT_STMT_NUMBER_0003EV, args, 5);
            SetPassedParm(IMPORT_RECORD_NUMBER_0004EV, args, 6);
            SetPassedParm(IMPORT_RECORD_TYPE_0005EV, args, 7);
            SetPassedParm(IMPORT_0006EV, args, 8);
            SetPassedParm(IMPORT_CASE_WORKER_0007EV, args, 9);
            SetPassedParm(IMPORT_0008EV, args, 10);
            SetPassedParm(IMPORT_VARIABLE_LINE1_0009EV, args, 11);
            SetPassedParm(IMPORT_VARIABLE_LINE2_0010EV, args, 12);
            SetPassedParm(IMPORT_0011EV, args, 13);
            SetPassedParm(IMPORT_AMOUNT_ONE_0012EV, args, 14);
            SetPassedParm(IMPORT_AMOUNT_TWO_0013EV, args, 15);
            SetPassedParm(IMPORT_DATE_ONE_0014EV, args, 16);
            SetPassedParm(IMPORT_DATE_TWO_0015EV, args, 17);
            SetPassedParm(IMPORT_SORT_SEQUENCE_NU_0016EV, args, 18);
            SetPassedParm(EXPORT_0016EV, args, 19);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(IEF_RUNTIME_PARM1, args, 0);
            SetReturnParm(IEF_RUNTIME_PARM2, args, 1);
            SetReturnParm(GLOBDATA, args, 2);
            SetReturnParm(IMPORT_0001EV, args, 3);
            SetReturnParm(IMPORT_0002EV, args, 4);
            SetReturnParm(IMPORT_STMT_NUMBER_0003EV, args, 5);
            SetReturnParm(IMPORT_RECORD_NUMBER_0004EV, args, 6);
            SetReturnParm(IMPORT_RECORD_TYPE_0005EV, args, 7);
            SetReturnParm(IMPORT_0006EV, args, 8);
            SetReturnParm(IMPORT_CASE_WORKER_0007EV, args, 9);
            SetReturnParm(IMPORT_0008EV, args, 10);
            SetReturnParm(IMPORT_VARIABLE_LINE1_0009EV, args, 11);
            SetReturnParm(IMPORT_VARIABLE_LINE2_0010EV, args, 12);
            SetReturnParm(IMPORT_0011EV, args, 13);
            SetReturnParm(IMPORT_AMOUNT_ONE_0012EV, args, 14);
            SetReturnParm(IMPORT_AMOUNT_TWO_0013EV, args, 15);
            SetReturnParm(IMPORT_DATE_ONE_0014EV, args, 16);
            SetReturnParm(IMPORT_DATE_TWO_0015EV, args, 17);
            SetReturnParm(IMPORT_SORT_SEQUENCE_NU_0016EV, args, 18);
            SetReturnParm(EXPORT_0016EV, args, 19);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXFE43 : EABBase
    {

        #region Public Constructors
        public SWEXFE43()
            : base()
        {
            this.ProgramName.SetValue("SWEXFE43");

            WS = new SWEXFE43_ws();
            FD = new SWEXFE43_fd();
            LS = new SWEXFE43_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXFE43_ws WS;

        //==== File Data Class ========================================
        private SWEXFE43_fd FD;

        //==== Linkage Section Data Class ========================================
        private SWEXFE43_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING IEF-RUNTIME-PARM1 , IEF-RUNTIME-PARM2 , GLOBDATA , IMPORT-0001EV IMPORT-0002EV IMPORT-STMT-NUMBER-0003EV IMPORT-RECORD-NUMBER-0004EV IMPORT-RECORD-TYPE-0005EV IMPORT-0006EV IMPORT-CASE-WORKER-0007EV IMPORT-0008EV IMPORT-VARIABLE-LINE1-0009EV IMPORT-VARIABLE-LINE2-0010EV IMPORT-0011EV IMPORT-AMOUNT-ONE-0012EV IMPORT-AMOUNT-TWO-0013EV IMPORT-DATE-ONE-0014EV IMPORT-DATE-TWO-0015EV , IMPORT-SORT-SEQUENCE-NU-0016EV , EXPORT-0016EV.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_2023493336(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_2023493336
        /// </summary>
        private void M_MAIN_2023493336(string returnMethod = "")
        {
            M_PARA_2023493336_INIT("M_PARA_2023493336_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-2023493336-INIT THRU PARA-2023493336-INIT-EXIT
            M_PARA_2023493336("M_PARA_2023493336_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-2023493336 THRU PARA-2023493336-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_2023493336
        /// </summary>
        private void M_PARA_2023493336(string returnMethod = "")
        {
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            //COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            // EvaluateList !LS.ACTION_0001!                                                                    //COBOL==> EVALUATE ACTION-0001
            if ((LS.ACTION_0001.IsEqualTo("OPEN")))                                                             //COBOL==> WHEN 'OPEN'
            {
                M_PARA_OPEN("M_PARA_OPEN_EXIT"); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM PARA-OPEN THRU PARA-OPEN-EXIT
            }                                                                                                //COBOL==> WHEN 'WRITE'
            else
            if ((LS.ACTION_0001.IsEqualTo("WRITE")))
            {
                M_PARA_MAIN("M_PARA_MAIN_EXIT"); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM PARA-MAIN THRU PARA-MAIN-EXIT
            }                                                                                                //COBOL==> WHEN 'CLOSE'
            else
            if ((LS.ACTION_0001.IsEqualTo("CLOSE")))
            {
                M_PARA_CLOSE("M_PARA_CLOSE_EXIT"); if (Control.ExitProgram) { return; }                               //COBOL==> PERFORM PARA-CLOSE THRU PARA-CLOSE-EXIT
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                LS.STATUS_0016.SetValue("ABEND");                                                                   //COBOL==> MOVE 'ABEND' TO STATUS-0016 .
            }
            if (returnMethod != "" && returnMethod != "M_PARA_2023493336") { M_PARA_2023493336_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_2023493336_EXIT
        /// </summary>
        private void M_PARA_2023493336_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_2023493336_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_2023493336_EXIT") { M_PARA_MAIN(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_MAIN
        /// </summary>
        private void M_PARA_MAIN(string returnMethod = "")
        {
            // EvaluateList !LS.ACTION_ENTRY_0005!                                                              //COBOL==> EVALUATE ACTION-ENTRY-0005
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("00")))                                                         //COBOL==> WHEN '00'
            {
                M_PARA_TYPE00("M_PARA_TYPE00_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE00 THRU PARA-TYPE00-EXIT
            }                                                                                                //COBOL==> WHEN '01'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("01")))
            {
                M_PARA_TYPE01("M_PARA_TYPE01_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE01 THRU PARA-TYPE01-EXIT
            }                                                                                                //COBOL==> WHEN '02'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("02")))
            {
                M_PARA_TYPE02("M_PARA_TYPE02_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE02 THRU PARA-TYPE02-EXIT
            }                                                                                                //COBOL==> WHEN '03'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("03")))
            {
                M_PARA_TYPE03("M_PARA_TYPE03_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE03 THRU PARA-TYPE03-EXIT
            }                                                                                                //COBOL==> WHEN '04'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("04")))
            {
                M_PARA_TYPE04("M_PARA_TYPE04_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE04 THRU PARA-TYPE04-EXIT
            }                                                                                                //COBOL==> WHEN '05'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("05")))
            {
                M_PARA_TYPE05("M_PARA_TYPE05_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE05 THRU PARA-TYPE05-EXIT
            }                                                                                                //COBOL==> WHEN '06'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("06")))
            {
                M_PARA_TYPE06("M_PARA_TYPE06_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE06 THRU PARA-TYPE06-EXIT
            }                                                                                                //COBOL==> WHEN '07'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("07")))
            {
                M_PARA_TYPE07("M_PARA_TYPE07_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE07 THRU PARA-TYPE07-EXIT
            }                                                                                                //COBOL==> WHEN '08'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("08")))
            {
                M_PARA_TYPE08("M_PARA_TYPE08_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE08 THRU PARA-TYPE08-EXIT
            }                                                                                                //COBOL==> WHEN '09'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("09")))
            {
                M_PARA_TYPE09("M_PARA_TYPE09_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE09 THRU PARA-TYPE09-EXIT
            }                                                                                                //COBOL==> WHEN '10'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("10")))
            {
                M_PARA_TYPE10("M_PARA_TYPE10_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE10 THRU PARA-TYPE10-EXIT
            }                                                                                                //COBOL==> WHEN '11'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("11")))
            {
                M_PARA_TYPE11("M_PARA_TYPE11_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE11 THRU PARA-TYPE11-EXIT
            }                                                                                                //COBOL==> WHEN '99'
            else
            if ((LS.ACTION_ENTRY_0005.IsEqualTo("99")))
            {
                M_PARA_TYPE99("M_PARA_TYPE99_EXIT"); if (Control.ExitProgram) { return; }                             //COBOL==> PERFORM PARA-TYPE99 THRU PARA-TYPE99-EXIT
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                LS.STATUS_0016.SetValue("ABEND");                                                                   //COBOL==> MOVE 'ABEND' TO STATUS-0016 .
            }
            if (returnMethod != "" && returnMethod != "M_PARA_MAIN") { M_PARA_MAIN_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_MAIN_EXIT
        /// </summary>
        private void M_PARA_MAIN_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_MAIN_EXIT") { return; }                                                 //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_MAIN_EXIT") { M_PARA_TYPE00(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE00
        /// </summary>
        private void M_PARA_TYPE00(string returnMethod = "")
        {
            WS.WS00_FILE_DATE.SetValue(LS.TEXT_10_0014);                                                        //COBOL==> MOVE TEXT-10-0014 TO WS00-FILE-DATE
            WS.WS00_FILE_TIME.SetValue(LS.TEXT_10_0015);                                                        //COBOL==> MOVE TEXT-10-0015 TO WS00-FILE-TIME
            FD.VENDOUT.WriteLine(WS.WS_TYPE00.AsBytes);                                                         //COBOL==> WRITE VENDOR-00 FROM WS-TYPE00
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE00") { M_PARA_TYPE00_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE00_EXIT
        /// </summary>
        private void M_PARA_TYPE00_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE00_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE00_EXIT") { M_PARA_TYPE01(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE01
        /// </summary>
        private void M_PARA_TYPE01(string returnMethod = "")
        {
            WS.WS01_PERSON_NUM.SetValue(LS.NUMBER_0002);                                                        //COBOL==> MOVE NUMBER-0002 TO WS01-PERSON-NUM
            WS.WS01_STATEMENT_NUM.SetValue(LS.COUNT_0003);                                                      //COBOL==> MOVE COUNT-0003 TO WS01-STATEMENT-NUM
            WS.WS01_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS01-RECORD-NUM
            WS.WS01_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS01-SEQUENCE-NUM
            WS.WS01_STMT_DATE_LINE.SetValue(LS.RPT_DETAIL_0009);                                                //COBOL==> MOVE RPT-DETAIL-0009 TO WS01-STMT-DATE-LINE
            WS.WS01_REPT_MONTH_LINE.SetValue(LS.RPT_DETAIL_0010);                                               //COBOL==> MOVE RPT-DETAIL-0010 TO WS01-REPT-MONTH-LINE
            WS.WS01_FIRST_NAME.SetValue(LS.FIRST_NAME_0006);                                                    //COBOL==> MOVE FIRST-NAME-0006 TO WS01-FIRST-NAME
            WS.WS01_MIDDLE_INIT.SetValue(LS.MIDDLE_INITIAL_0006);                                               //COBOL==> MOVE MIDDLE-INITIAL-0006 TO WS01-MIDDLE-INIT
            WS.WS01_LAST_NAME.SetValue(LS.LAST_NAME_0006);                                                      //COBOL==> MOVE LAST-NAME-0006 TO WS01-LAST-NAME
            WS.WS01_MAIL_TO_ADDR1.SetValue(LS.STREET_1_0008);                                                   //COBOL==> MOVE STREET-1-0008 TO WS01-MAIL-TO-ADDR1
            WS.WS01_MAIL_TO_ADDR2.SetValue(LS.STREET_2_0008);                                                   //COBOL==> MOVE STREET-2-0008 TO WS01-MAIL-TO-ADDR2
            WS.WS01_MAIL_TO_ADDR3.SetValue(LS.STREET_3_0008);                                                   //COBOL==> MOVE STREET-3-0008 TO WS01-MAIL-TO-ADDR3
            WS.WS01_MAIL_TO_ADDR4.SetValue(LS.STREET_4_0008);                                                   //COBOL==> MOVE STREET-4-0008 TO WS01-MAIL-TO-ADDR4
            WS.WS01_MAIL_TO_CITY.SetValue(LS.CITY_0008);                                                        //COBOL==> MOVE CITY-0008 TO WS01-MAIL-TO-CITY
            WS.WS01_MAIL_TO_STATE.SetValue(LS.STATE_0008);                                                      //COBOL==> MOVE STATE-0008 TO WS01-MAIL-TO-STATE
            WS.WS01_MAIL_TO_ZIP5.SetValue(LS.ZIP_CODE_0008);                                                    //COBOL==> MOVE ZIP-CODE-0008 TO WS01-MAIL-TO-ZIP5
            WS.WS01_MAIL_TO_ZIP4.SetValue(LS.ZIP4_0008);                                                        //COBOL==> MOVE ZIP4-0008 TO WS01-MAIL-TO-ZIP4
            WS.WS01_MAIL_TO_ZIP3.SetValue(LS.ZIP3_0008);                                                        //COBOL==> MOVE ZIP3-0008 TO WS01-MAIL-TO-ZIP3
            WS.WS01_MAIL_TO_PROVINCE.SetValue(LS.PROVINCE_0008);                                                //COBOL==> MOVE PROVINCE-0008 TO WS01-MAIL-TO-PROVINCE
            WS.WS01_MAIL_TO_POSTAL_CD.SetValue(LS.POSTAL_CODE_0008);                                            //COBOL==> MOVE POSTAL-CODE-0008 TO WS01-MAIL-TO-POSTAL-CD
            WS.WS01_MAIL_TO_COUNTRY.SetValue(LS.COUNTRY_0008);                                                  //COBOL==> MOVE COUNTRY-0008 TO WS01-MAIL-TO-COUNTRY
            FD.VENDOUT.WriteLine(WS.WS_TYPE01.AsBytes);                                                         //COBOL==> WRITE VENDOR-01 FROM WS-TYPE01
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE01") { M_PARA_TYPE01_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE01_EXIT
        /// </summary>
        private void M_PARA_TYPE01_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE01_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE01_EXIT") { M_PARA_TYPE02(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE02
        /// </summary>
        private void M_PARA_TYPE02(string returnMethod = "")
        {
            WS.WS02_PERSON_NUM.SetValue(LS.NUMBER_0002);                                                        //COBOL==> MOVE NUMBER-0002 TO WS02-PERSON-NUM
            WS.WS02_STATEMENT_NUM.SetValue(LS.COUNT_0003);                                                      //COBOL==> MOVE COUNT-0003 TO WS02-STATEMENT-NUM
            WS.WS02_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS02-RECORD-NUM
            WS.WS02_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS02-SEQUENCE-NUM
            WS.WS02_PHONE_AREA_CODE.SetValue(LS.MAIN_PHONE_AREA_CODE_0007);                                     //COBOL==> MOVE MAIN-PHONE-AREA-CODE-0007 TO WS02-PHONE-AREA-CODE
            WS.WS02_FIRST_NAME.SetValue(LS.FIRST_NAME_0006);                                                    //COBOL==> MOVE FIRST-NAME-0006 TO WS02-FIRST-NAME
            WS.WS02_MIDDLE_INIT.SetValue(LS.MIDDLE_INITIAL_0006);                                               //COBOL==> MOVE MIDDLE-INITIAL-0006 TO WS02-MIDDLE-INIT
            WS.WS02_LAST_NAME.SetValue(LS.LAST_NAME_0006);                                                      //COBOL==> MOVE LAST-NAME-0006 TO WS02-LAST-NAME
            WS.WS02_RETURN_ADDR1.SetValue(LS.STREET_1_0008);                                                    //COBOL==> MOVE STREET-1-0008 TO WS02-RETURN-ADDR1
            WS.WS02_RETURN_ADDR2.SetValue(LS.STREET_2_0008);                                                    //COBOL==> MOVE STREET-2-0008 TO WS02-RETURN-ADDR2
            WS.WS02_RETURN_ADDR3.SetValue(LS.STREET_3_0008);                                                    //COBOL==> MOVE STREET-3-0008 TO WS02-RETURN-ADDR3
            WS.WS02_RETURN_ADDR4.SetValue(LS.STREET_4_0008);                                                    //COBOL==> MOVE STREET-4-0008 TO WS02-RETURN-ADDR4
            WS.WS02_RETURN_CITY.SetValue(LS.CITY_0008);                                                         //COBOL==> MOVE CITY-0008 TO WS02-RETURN-CITY
            WS.WS02_RETURN_STATE.SetValue(LS.STATE_0008);                                                       //COBOL==> MOVE STATE-0008 TO WS02-RETURN-STATE
            WS.WS02_RETURN_ZIP5.SetValue(LS.ZIP_CODE_0008);                                                     //COBOL==> MOVE ZIP-CODE-0008 TO WS02-RETURN-ZIP5
            WS.WS02_RETURN_ZIP4.SetValue(LS.ZIP4_0008);                                                         //COBOL==> MOVE ZIP4-0008 TO WS02-RETURN-ZIP4
            WS.WS02_RETURN_ZIP3.SetValue(LS.ZIP3_0008);                                                         //COBOL==> MOVE ZIP3-0008 TO WS02-RETURN-ZIP3
            WS.WS02_PHONE_NUM.SetValue(LS.MAIN_PHONE_NUMBER_0007);                                              //COBOL==> MOVE MAIN-PHONE-NUMBER-0007 TO WS02-PHONE-NUM
            FD.VENDOUT.WriteLine(WS.WS_TYPE02.AsBytes);                                                         //COBOL==> WRITE VENDOR-02 FROM WS-TYPE02
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE02") { M_PARA_TYPE02_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE02_EXIT
        /// </summary>
        private void M_PARA_TYPE02_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE02_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE02_EXIT") { M_PARA_TYPE03(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE03
        /// </summary>
        private void M_PARA_TYPE03(string returnMethod = "")
        {
            WS.WS03_PERSON_NUM.SetValue(LS.NUMBER_0002);                                                        //COBOL==> MOVE NUMBER-0002 TO WS03-PERSON-NUM
            WS.WS03_STATEMENT_NUM.SetValue(LS.COUNT_0003);                                                      //COBOL==> MOVE COUNT-0003 TO WS03-STATEMENT-NUM
            WS.WS03_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS03-RECORD-NUM
            WS.WS03_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS03-SEQUENCE-NUM
            WS.WS03_STMT_MESSAGE.SetValue(LS.TEXT_AREA_0011DV);                                                 //COBOL==> MOVE TEXT-AREA-0011DV TO WS03-STMT-MESSAGE
            FD.VENDOUT.WriteLine(WS.WS_TYPE03.AsBytes);                                                         //COBOL==> WRITE VENDOR-03 FROM WS-TYPE03
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE03") { M_PARA_TYPE03_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE03_EXIT
        /// </summary>
        private void M_PARA_TYPE03_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE03_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE03_EXIT") { M_PARA_TYPE04(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE04
        /// </summary>
        private void M_PARA_TYPE04(string returnMethod = "")
        {
            WS.WS04_PERSON_NUM.SetValue(LS.NUMBER_0002);                                                        //COBOL==> MOVE NUMBER-0002 TO WS04-PERSON-NUM
            WS.WS04_STATEMENT_NUM.SetValue(LS.COUNT_0003);                                                      //COBOL==> MOVE COUNT-0003 TO WS04-STATEMENT-NUM
            WS.WS04_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS04-RECORD-NUM
            WS.WS04_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS04-SEQUENCE-NUM
            WS.WS04_UNDISTRIBUTED_HDR.SetValue(LS.RPT_DETAIL_0009);                                             //COBOL==> MOVE RPT-DETAIL-0009 TO WS04-UNDISTRIBUTED-HDR
            WS.WS04_UNDISTRIB_DATE.SetValue(LS.TEXT_10_0014);                                                   //COBOL==> MOVE TEXT-10-0014 TO WS04-UNDISTRIB-DATE
            WS.WS04_UNDISTRIB_AMT.SetValue(LS.AVERAGE_CURRENCY_0012);                                           //COBOL==> MOVE AVERAGE-CURRENCY-0012 TO WS04-UNDISTRIB-AMT
            FD.VENDOUT.WriteLine(WS.WS_TYPE04.AsBytes);                                                         //COBOL==> WRITE VENDOR-04 FROM WS-TYPE04
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE04") { M_PARA_TYPE04_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE04_EXIT
        /// </summary>
        private void M_PARA_TYPE04_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE04_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE04_EXIT") { M_PARA_TYPE05(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE05
        /// </summary>
        private void M_PARA_TYPE05(string returnMethod = "")
        {
            WS.WS05_PERSON_NUM.SetValue(LS.NUMBER_0002);                                                        //COBOL==> MOVE NUMBER-0002 TO WS05-PERSON-NUM
            WS.WS05_STATEMENT_NUM.SetValue(LS.COUNT_0003);                                                      //COBOL==> MOVE COUNT-0003 TO WS05-STATEMENT-NUM
            WS.WS05_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS05-RECORD-NUM
            WS.WS05_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS05-SEQUENCE-NUM
            WS.WS05_COURT_ORDER_DESC.SetValue(LS.RPT_DETAIL_0009);                                              //COBOL==> MOVE RPT-DETAIL-0009 TO WS05-COURT-ORDER-DESC
            FD.VENDOUT.WriteLine(WS.WS_TYPE05.AsBytes);                                                         //COBOL==> WRITE VENDOR-05 FROM WS-TYPE05
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE05") { M_PARA_TYPE05_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE05_EXIT
        /// </summary>
        private void M_PARA_TYPE05_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE05_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE05_EXIT") { M_PARA_TYPE06(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE06
        /// </summary>
        private void M_PARA_TYPE06(string returnMethod = "")
        {
            WS.WS06_PERSON_NUM.SetValue(LS.NUMBER_0002);                                                        //COBOL==> MOVE NUMBER-0002 TO WS06-PERSON-NUM
            WS.WS06_STATEMENT_NUM.SetValue(LS.COUNT_0003);                                                      //COBOL==> MOVE COUNT-0003 TO WS06-STATEMENT-NUM
            WS.WS06_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS06-RECORD-NUM
            WS.WS06_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS06-SEQUENCE-NUM
            WS.WS06_OBLIGATION_DESC.SetValue(LS.RPT_DETAIL_0010);                                               //COBOL==> MOVE RPT-DETAIL-0010 TO WS06-OBLIGATION-DESC
            FD.VENDOUT.WriteLine(WS.WS_TYPE06.AsBytes);                                                         //COBOL==> WRITE VENDOR-06 FROM WS-TYPE06
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE06") { M_PARA_TYPE06_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE06_EXIT
        /// </summary>
        private void M_PARA_TYPE06_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE06_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE06_EXIT") { M_PARA_TYPE07(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE07
        /// </summary>
        private void M_PARA_TYPE07(string returnMethod = "")
        {
            WS.WS07_PERSON_NUM.SetValue(LS.NUMBER_0002);                                                        //COBOL==> MOVE NUMBER-0002 TO WS07-PERSON-NUM
            WS.WS07_STATEMENT_NUM.SetValue(LS.COUNT_0003);                                                      //COBOL==> MOVE COUNT-0003 TO WS07-STATEMENT-NUM
            WS.WS07_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS07-RECORD-NUM
            WS.WS07_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS07-SEQUENCE-NUM
            WS.WS07_BALANCE_DATE.SetValue(LS.TEXT_10_0014);                                                     //COBOL==> MOVE TEXT-10-0014 TO WS07-BALANCE-DATE
            WS.WS07_BALANCE_DESC.SetValue(LS.RPT_DETAIL_0009);                                                  //COBOL==> MOVE RPT-DETAIL-0009 TO WS07-BALANCE-DESC
            WS.WS07_BALANCE_AMT.SetValue(LS.AVERAGE_CURRENCY_0012);                                             //COBOL==> MOVE AVERAGE-CURRENCY-0012 TO WS07-BALANCE-AMT
            FD.VENDOUT.WriteLine(WS.WS_TYPE07.AsBytes);                                                         //COBOL==> WRITE VENDOR-07 FROM WS-TYPE07
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE07") { M_PARA_TYPE07_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE07_EXIT
        /// </summary>
        private void M_PARA_TYPE07_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE07_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE07_EXIT") { M_PARA_TYPE08(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE08
        /// </summary>
        private void M_PARA_TYPE08(string returnMethod = "")
        {
            WS.WS08_PERSON_NUM.SetValue(LS.NUMBER_0002);                                                        //COBOL==> MOVE NUMBER-0002 TO WS08-PERSON-NUM
            WS.WS08_STATEMENT_NUM.SetValue(LS.COUNT_0003);                                                      //COBOL==> MOVE COUNT-0003 TO WS08-STATEMENT-NUM
            WS.WS08_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS08-RECORD-NUM
            WS.WS08_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS08-SEQUENCE-NUM
            WS.WS08_ACTIVITY_DATE.SetValue(LS.TEXT_10_0014);                                                    //COBOL==> MOVE TEXT-10-0014 TO WS08-ACTIVITY-DATE
            WS.WS08_ACTIVITY_DESC.SetValue(LS.RPT_DETAIL_0009);                                                 //COBOL==> MOVE RPT-DETAIL-0009 TO WS08-ACTIVITY-DESC
            WS.WS08_AMOUNT_DUE.SetValue(LS.AVERAGE_CURRENCY_0012);                                              //COBOL==> MOVE AVERAGE-CURRENCY-0012 TO WS08-AMOUNT-DUE
            WS.WS08_AMOUNT_RECEIVED.SetValue(LS.AVERAGE_CURRENCY_0013);                                         //COBOL==> MOVE AVERAGE-CURRENCY-0013 TO WS08-AMOUNT-RECEIVED
            FD.VENDOUT.WriteLine(WS.WS_TYPE08.AsBytes);                                                         //COBOL==> WRITE VENDOR-08 FROM WS-TYPE08
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE08") { M_PARA_TYPE08_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE08_EXIT
        /// </summary>
        private void M_PARA_TYPE08_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE08_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE08_EXIT") { M_PARA_TYPE09(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE09
        /// </summary>
        private void M_PARA_TYPE09(string returnMethod = "")
        {
            WS.WS09_PERSON_NUM.SetValue(LS.NUMBER_0002);                                                        //COBOL==> MOVE NUMBER-0002 TO WS09-PERSON-NUM
            WS.WS09_STATEMENT_NUM.SetValue(LS.COUNT_0003);                                                      //COBOL==> MOVE COUNT-0003 TO WS09-STATEMENT-NUM
            WS.WS09_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS09-RECORD-NUM
            WS.WS09_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS09-SEQUENCE-NUM
            WS.WS09_BALANCE_DATE.SetValue(LS.TEXT_10_0014);                                                     //COBOL==> MOVE TEXT-10-0014 TO WS09-BALANCE-DATE
            WS.WS09_BALANCE_DESC.SetValue(LS.RPT_DETAIL_0009);                                                  //COBOL==> MOVE RPT-DETAIL-0009 TO WS09-BALANCE-DESC
            WS.WS09_BALANCE_AMT.SetValue(LS.AVERAGE_CURRENCY_0012);                                             //COBOL==> MOVE AVERAGE-CURRENCY-0012 TO WS09-BALANCE-AMT
            FD.VENDOUT.WriteLine(WS.WS_TYPE09.AsBytes);                                                         //COBOL==> WRITE VENDOR-09 FROM WS-TYPE09
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE09") { M_PARA_TYPE09_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE09_EXIT
        /// </summary>
        private void M_PARA_TYPE09_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE09_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE09_EXIT") { M_PARA_TYPE10(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE10
        /// </summary>
        private void M_PARA_TYPE10(string returnMethod = "")
        {
            WS.WS10_PERSON_NUM.SetValue(LS.NUMBER_0002);                                                        //COBOL==> MOVE NUMBER-0002 TO WS10-PERSON-NUM
            WS.WS10_STATEMENT_NUM.SetValue(LS.COUNT_0003);                                                      //COBOL==> MOVE COUNT-0003 TO WS10-STATEMENT-NUM
            WS.WS10_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS10-RECORD-NUM
            WS.WS10_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS10-SEQUENCE-NUM
            WS.WS_GLOBAL.SetValue(LS.TEXT_AREA_0011DV);                                                         //COBOL==> MOVE TEXT-AREA-0011DV TO WS-GLOBAL
            WS.WS10_RETURN_NAME.SetValue(WS.WS_GLOBAL_NAME);                                                    //COBOL==> MOVE WS-GLOBAL-NAME TO WS10-RETURN-NAME
            WS.WS10_RETURN_ADDR1.SetValue(LS.STREET_1_0008);                                                    //COBOL==> MOVE STREET-1-0008 TO WS10-RETURN-ADDR1
            WS.WS10_RETURN_ADDR2.SetValue(LS.STREET_2_0008);                                                    //COBOL==> MOVE STREET-2-0008 TO WS10-RETURN-ADDR2
            WS.WS10_RETURN_ADDR3.SetValue(LS.STREET_3_0008);                                                    //COBOL==> MOVE STREET-3-0008 TO WS10-RETURN-ADDR3
            WS.WS10_RETURN_ADDR4.SetValue(LS.STREET_4_0008);                                                    //COBOL==> MOVE STREET-4-0008 TO WS10-RETURN-ADDR4
            WS.WS10_RETURN_CITY.SetValue(LS.CITY_0008);                                                         //COBOL==> MOVE CITY-0008 TO WS10-RETURN-CITY
            WS.WS10_RETURN_STATE.SetValue(LS.STATE_0008);                                                       //COBOL==> MOVE STATE-0008 TO WS10-RETURN-STATE
            WS.WS10_RETURN_ZIP5.SetValue(LS.ZIP_CODE_0008);                                                     //COBOL==> MOVE ZIP-CODE-0008 TO WS10-RETURN-ZIP5
            WS.WS10_RETURN_ZIP4.SetValue(LS.ZIP4_0008);                                                         //COBOL==> MOVE ZIP4-0008 TO WS10-RETURN-ZIP4
            WS.WS10_RETURN_ZIP3.SetValue(LS.ZIP3_0008);                                                         //COBOL==> MOVE ZIP3-0008 TO WS10-RETURN-ZIP3
            WS.WS10_PAST_DUE_DATE.SetValue(LS.TEXT_10_0014);                                                    //COBOL==> MOVE TEXT-10-0014 TO WS10-PAST-DUE-DATE
            WS.WS10_DUE_BY_DATE.SetValue(LS.TEXT_10_0015);                                                      //COBOL==> MOVE TEXT-10-0015 TO WS10-DUE-BY-DATE
            WS.WS10_AMOUNT_PAST_DUE.SetValue(LS.AVERAGE_CURRENCY_0012);                                         //COBOL==> MOVE AVERAGE-CURRENCY-0012 TO WS10-AMOUNT-PAST-DUE
            WS.WS10_AMOUNT_DUE.SetValue(LS.AVERAGE_CURRENCY_0013);                                              //COBOL==> MOVE AVERAGE-CURRENCY-0013 TO WS10-AMOUNT-DUE
            WS.WS10_COUPON_MONTH_YEAR.SetValue(LS.RPT_DETAIL_0009);                                             //COBOL==> MOVE RPT-DETAIL-0009 TO WS10-COUPON-MONTH-YEAR
            WS.WS10_COUPON_LINE2.SetValue(LS.RPT_DETAIL_0010);                                                  //COBOL==> MOVE RPT-DETAIL-0010 TO WS10-COUPON-LINE2
            FD.VENDOUT.WriteLine(WS.WS_TYPE10.AsBytes);                                                         //COBOL==> WRITE VENDOR-10 FROM WS-TYPE10
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE10") { M_PARA_TYPE10_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE10_EXIT
        /// </summary>
        private void M_PARA_TYPE10_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE10_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE10_EXIT") { M_PARA_TYPE11(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE11
        /// </summary>
        private void M_PARA_TYPE11(string returnMethod = "")
        {
            WS.WS11_PERSON_NUM.SetValue(LS.NUMBER_0002);                                                        //COBOL==> MOVE NUMBER-0002 TO WS11-PERSON-NUM
            WS.WS11_STATEMENT_NUM.SetValue(LS.COUNT_0003);                                                      //COBOL==> MOVE COUNT-0003 TO WS11-STATEMENT-NUM
            WS.WS11_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS11-RECORD-NUM
            WS.WS11_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS11-SEQUENCE-NUM
            WS.WS11_COUPON_MSG1.SetValue(LS.RPT_DETAIL_0009);                                                   //COBOL==> MOVE RPT-DETAIL-0009 TO WS11-COUPON-MSG1
            WS.WS11_COUPON_MSG2.SetValue(LS.RPT_DETAIL_0010);                                                   //COBOL==> MOVE RPT-DETAIL-0010 TO WS11-COUPON-MSG2
            FD.VENDOUT.WriteLine(WS.WS_TYPE11.AsBytes);                                                         //COBOL==> WRITE VENDOR-11 FROM WS-TYPE11
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE11") { M_PARA_TYPE11_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE11_EXIT
        /// </summary>
        private void M_PARA_TYPE11_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE11_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE11_EXIT") { M_PARA_TYPE99(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE99
        /// </summary>
        private void M_PARA_TYPE99(string returnMethod = "")
        {
            WS.WS99_RECORD_NUM.SetValue(LS.COUNT_0004);                                                         //COBOL==> MOVE COUNT-0004 TO WS99-RECORD-NUM
            WS.WS99_SEQUENCE_NUM.SetValue(LS.COUNT_0016);                                                       //COBOL==> MOVE COUNT-0016 TO WS99-SEQUENCE-NUM
            WS.WS99_NUM_OF_STMTS.SetValue(LS.AVERAGE_CURRENCY_0012);                                            //COBOL==> MOVE AVERAGE-CURRENCY-0012 TO WS99-NUM-OF-STMTS
            WS.WS99_NUM_OF_CPNS.SetValue(LS.AVERAGE_CURRENCY_0013);                                             //COBOL==> MOVE AVERAGE-CURRENCY-0013 TO WS99-NUM-OF-CPNS
            FD.VENDOUT.WriteLine(WS.WS_TYPE99.AsBytes);                                                         //COBOL==> WRITE VENDOR-99 FROM WS-TYPE99
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016 .
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE99") { M_PARA_TYPE99_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_TYPE99_EXIT
        /// </summary>
        private void M_PARA_TYPE99_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_TYPE99_EXIT") { return; }                                               //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_TYPE99_EXIT") { M_PARA_OPEN(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_OPEN
        /// </summary>
        private void M_PARA_OPEN(string returnMethod = "")
        {
            FD.VENDOUT.OpenFile(FileAccessMode.Write);                                                          //COBOL==> OPEN OUTPUT VENDOUT.
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016.
            if (returnMethod != "" && returnMethod != "M_PARA_OPEN") { M_PARA_OPEN_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_OPEN_EXIT
        /// </summary>
        private void M_PARA_OPEN_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_OPEN_EXIT") { return; }                                                 //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_OPEN_EXIT") { M_PARA_CLOSE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_CLOSE
        /// </summary>
        private void M_PARA_CLOSE(string returnMethod = "")
        {
            FD.VENDOUT.CloseFile();                                                                             //COBOL==> CLOSE VENDOUT.
            LS.STATUS_0016.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0016.
            if (returnMethod != "" && returnMethod != "M_PARA_CLOSE") { M_PARA_CLOSE_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_CLOSE_EXIT
        /// </summary>
        private void M_PARA_CLOSE_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_CLOSE_EXIT") { return; }                                                //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_CLOSE_EXIT") { M_PARA_2023493336_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_2023493336_INIT
        /// </summary>
        private void M_PARA_2023493336_INIT(string returnMethod = "")
        {
            LS.EXPORT_0016EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0016EV .
            if (returnMethod != "" && returnMethod != "M_PARA_2023493336_INIT") { M_PARA_2023493336_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_2023493336_INIT_EXIT
        /// </summary>
        private void M_PARA_2023493336_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_2023493336_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
