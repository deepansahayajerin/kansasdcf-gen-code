#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2022
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2022-03-02 04:42:50 PM
   **        *   FROM COBOL PGM   :  SWEXEE05
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   **************************************************************
                       SOURCE CODE GENERATED BY
                        ADVANTAGE(TM) GEN 6.5
       COPYRIGHT 2005 COMPUTER ASSOCIATES INTERNATIONAL, INC.
       NAME: OE_EAB_RECEIVE_FPLS_RESPONSE     DATE: 2005/12/19
       TARGET OS:   MVS                       TIME: 08:12:24
       TARGET DBMS: DB2                       USER: SWDPDJD
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
       HIGH PERFORMANCE VIEW PASSING SELECTED
       LAST-STATEMENT-NUM EXECUTION SELECTED
       ENFORCE DEFAULT VALUES WITH DBMS SELECTED
       INIT UNSPECIFIED OPTIONAL FIELDS TO NULL NOT SELECTED
   **************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.IO.Common;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
using GOV.KS.DCF.CSS.Common.BL;
using MDSY.Framework.IO.Common;
#endregion

namespace GOV.KS.DCF.CSS.Batch.BL
{
    #region File Section Class
    internal class SWEXEE05_fd : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string FileSection = "SWEXEE05_fd_FileSection";
            internal const string EXTFILE = "EXTFILE";
            internal const string EXTFILE_RECORD = "EXTFILE_RECORD";
        }
        #endregion

        #region Direct-access element properties
        public IFileLink EXTFILE { get; set; }
        public IField EXTFILE_RECORD { get { return GetElementByName<IField>(Names.EXTFILE_RECORD); } }


        internal SWEXEE05_ws WS;
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the FileSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.EXTFILE_RECORD, FieldType.String, 800);

        }

        protected override string GetRecordName()
        {
            return Names.FileSection;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            IFileHandler FileHandler = InversionContainer.GetImplementingObject<IFileHandler>();

            EXTFILE = FileHandler.GetFile("EXTFILE");
            EXTFILE.StatusField = WS.EXTFILE_STAT;
            EXTFILE.AssociatedBuffer = EXTFILE_RECORD;
        }
        #endregion

        #region Constructors
        public SWEXEE05_fd(SWEXEE05_ws ws)
            : base()
        {
            this.WS = ws;
            Initialize();

        }
        #endregion
    }
    #endregion File Section Class
    #region Working Storage Class
    internal class SWEXEE05_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXEE05_ws_WorkingStorage";
            internal const string EXTFILE_STAT = "EXTFILE_STAT";
            internal const string WS_DATE_AREA = "WS_DATE_AREA";
            internal const string WS_TEST_DATE = "WS_TEST_DATE";
            internal const string WS_DATE_RETURN_CODE = "WS_DATE_RETURN_CODE";
            internal const string WS_TEST_DATE_CC = "WS_TEST_DATE_CC";
            internal const string WS_TEST_DATE_YY = "WS_TEST_DATE_YY";
            internal const string WS_TEST_DATE_MM = "WS_TEST_DATE_MM";
            internal const string WS_TEST_DATE_DD = "WS_TEST_DATE_DD";
            internal const string WS_TEST_DATE_QQ = "WS_TEST_DATE_QQ";
            internal const string WS_MISC = "WS_MISC";
            internal const string WS_ENTRY = "WS_ENTRY";
            internal const string WS_RECORD_COUNT = "WS_RECORD_COUNT";
            internal const string WS_RETURNED_ADDRESS = "WS_RETURNED_ADDRESS";
            internal const string WS_RET_ADDR1 = "WS_RET_ADDR1";
            internal const string WS_RET_ST1 = "WS_RET_ST1";
            internal const string WS_RET_ST2 = "WS_RET_ST2";
            internal const string WS_RET_ST3 = "WS_RET_ST3";
            internal const string WS_RET_ST4 = "WS_RET_ST4";
            internal const string WS_RET_ADDR2 = "WS_RET_ADDR2";
            internal const string WS_BREAKAGE_RET_ADD = "WS_BREAKAGE_RET_ADD";
            internal const string WS_BREAKAGE_RET1 = "WS_BREAKAGE_RET1";
            internal const string WS_BREAKAGE_EMPLR = "WS_BREAKAGE_EMPLR";
            internal const string WS_BREAKAGE_ST1 = "WS_BREAKAGE_ST1";
            internal const string WS_BREAKAGE_ST2 = "WS_BREAKAGE_ST2";
            internal const string WS_BREAKAGE_ST3 = "WS_BREAKAGE_ST3";
            internal const string WS_BREAKAGE_RET2 = "WS_BREAKAGE_RET2";
            internal const string WS_FPLS_RECORD = "WS_FPLS_RECORD";
            internal const string NDNH_RESPONSE = "NDNH_RESPONSE";
            internal const string SPACES_1_0002 = "SPACES_1_0002";
            internal const string STATE_ABBREVIATION = "STATE_ABBREVIATION";
            internal const string SPACES_2_0002 = "SPACES_2_0002";
            internal const string AGENCY_CODE = "AGENCY_CODE";
            internal const string AGENCY_CODE1 = "AGENCY_CODE1";
            internal const string AGENCY_CODE2 = "AGENCY_CODE2";
            internal const string NAME_SENT_IND = "NAME_SENT_IND";
            internal const string AP_FIRST_NAME = "AP_FIRST_NAME";
            internal const string AP_MIDDLE_NAME = "AP_MIDDLE_NAME";
            internal const string AP_FIRST_LAST_NAME = "AP_FIRST_LAST_NAME";
            internal const string AP_SECOND_FIRST_NAME = "AP_SECOND_FIRST_NAME";
            internal const string AP_SECOND_MIDDLE_NAME = "AP_SECOND_MIDDLE_NAME";
            internal const string AP_SECOND_LAST_NAME = "AP_SECOND_LAST_NAME";
            internal const string AP_THIRD_FIRST_NAME = "AP_THIRD_FIRST_NAME";
            internal const string AP_THIRD_MIDDLE_NAME = "AP_THIRD_MIDDLE_NAME";
            internal const string AP_THIRD_LAST_NAME = "AP_THIRD_LAST_NAME";
            internal const string AP_NAME_INDIACTOR = "AP_NAME_INDIACTOR";
            internal const string AP_NAME_RETURNED = "AP_NAME_RETURNED";
            internal const string SSN_SUBMITTED = "SSN_SUBMITTED";
            internal const string FPLS_REQUEST_IDENTIFIER = "FPLS_REQUEST_IDENTIFIER";
            internal const string AP_CSE_PERSON_NUMBER = "AP_CSE_PERSON_NUMBER";
            internal const string USERS_FIELD = "USERS_FIELD";
            internal const string LOCAL_CODE = "LOCAL_CODE";
            internal const string COUNTY_FIPS_CODE = "COUNTY_FIPS_CODE";
            internal const string SPACES_6_0003 = "SPACES_6_0003";
            internal const string TYPE_OF_CASE = "TYPE_OF_CASE";
            internal const string ADDR_DATE_FORMAT_IND = "ADDR_DATE_FORMAT_IND";
            internal const string DATE_OF_ADDRESS = "DATE_OF_ADDRESS";
            internal const string RESPONSE_CODE = "RESPONSE_CODE";
            internal const string CORRECTED_ADD_MULTI_SSN = "CORRECTED_ADD_MULTI_SSN";
            internal const string SPACES_4_0003 = "SPACES_4_0003";
            internal const string EMPLOYER_NAME = "EMPLOYER_NAME";
            internal const string ADDRESS_FORMAT_IND = "ADDRESS_FORMAT_IND";
            internal const string RETURNED_ADDRESS = "RETURNED_ADDRESS";
            internal const string SPACES_7_0003 = "SPACES_7_0003";
            internal const string AGENCY_SPECIFIC_INFO_0003 = "AGENCY_SPECIFIC_INFO_0003";
            internal const string DOD_AGENCY_A01 = "DOD_AGENCY_A01";
            internal const string DOD_STATUS = "DOD_STATUS";
            internal const string DOD_SERVICE_CODE = "DOD_SERVICE_CODE";
            internal const string DOD_PAY_GRADE_CODE = "DOD_PAY_GRADE_CODE";
            internal const string DOD_ANNUAL_SALARY = "DOD_ANNUAL_SALARY";
            internal const string DOD_DATE_OF_BIRTH = "DOD_DATE_OF_BIRTH";
            internal const string DOD_SUBMITTING_OFFICE = "DOD_SUBMITTING_OFFICE";
            internal const string APO_FPO_INDICATOR = "APO_FPO_INDICATOR";
            internal const string FBI_AGENCY_A02 = "FBI_AGENCY_A02";
            internal const string FBI_ADDRESS_IND_TYPE = "FBI_ADDRESS_IND_TYPE";
            internal const string FBI_ANNUAL_SALARY = "FBI_ANNUAL_SALARY";
            internal const string FBI_HEALTH_INS_BENEFIT_IND = "FBI_HEALTH_INS_BENEFIT_IND";
            internal const string FBI_EMPLOYMENT_STATUS = "FBI_EMPLOYMENT_STATUS";
            internal const string FBI_EMPLOYMENT_IND = "FBI_EMPLOYMENT_IND";
            internal const string FBI_DATE_OF_DEATH_OR_SEPRATION = "FBI_DATE_OF_DEATH_OR_SEPRATION";
            internal const string FBI_DATE_OF_DEATH = "FBI_DATE_OF_DEATH";
            internal const string FBI_DATE_OF_HIRE = "FBI_DATE_OF_HIRE";
            internal const string NSA_AGENCY_A03 = "NSA_AGENCY_A03";
            internal const string NSA_ADDRESS_IND_TYPE = "NSA_ADDRESS_IND_TYPE";
            internal const string NSA_ANNUAL_SALARY = "NSA_ANNUAL_SALARY";
            internal const string NSA_HEALTH_INS_BENEFIT_IND = "NSA_HEALTH_INS_BENEFIT_IND";
            internal const string NSA_EMPLOYMENT_STATUS = "NSA_EMPLOYMENT_STATUS";
            internal const string NSA_EMPLOYMENT_IND = "NSA_EMPLOYMENT_IND";
            internal const string NSA_TERMINATION_DATE = "NSA_TERMINATION_DATE";
            internal const string NSA_DATE_OF_DEATH = "NSA_DATE_OF_DEATH";
            internal const string NSA_DATE_OF_HIRE = "NSA_DATE_OF_HIRE";
            internal const string NSA_FEIN = "NSA_FEIN";
            internal const string FED_AGENCY_B01 = "FED_AGENCY_B01";
            internal const string FED_ADDRESS_IND_TYPE = "FED_ADDRESS_IND_TYPE";
            internal const string FED_ANNUAL_SALARY = "FED_ANNUAL_SALARY";
            internal const string FED_HEALTH_INS_BENEFIT_IND = "FED_HEALTH_INS_BENEFIT_IND";
            internal const string FED_EMPLOYMENT_STATUS = "FED_EMPLOYMENT_STATUS";
            internal const string FED_EMPLOYMENT_IND = "FED_EMPLOYMENT_IND";
            internal const string FED_DATE_OF_DEATH_OR_SEPRATION = "FED_DATE_OF_DEATH_OR_SEPRATION";
            internal const string FED_DATE_OF_DEATH = "FED_DATE_OF_DEATH";
            internal const string FED_DATE_OF_HIRE = "FED_DATE_OF_HIRE";
            internal const string FED_REPORTING_FED_AGENCY = "FED_REPORTING_FED_AGENCY";
            internal const string FED_FEIN = "FED_FEIN";
            internal const string IRS_AGENCY_C01 = "IRS_AGENCY_C01";
            internal const string IRS_NAME_CONTROL = "IRS_NAME_CONTROL";
            internal const string CP_SSN = "CP_SSN";
            internal const string IRS_TAX_YEAR = "IRS_TAX_YEAR";
            internal const string IRS_SECOND_NAME_RETND_IND = "IRS_SECOND_NAME_RETND_IND";
            internal const string IRS_SECOND_NAME = "IRS_SECOND_NAME";
            internal const string SPACES_8 = "SPACES_8";
            internal const string SSA_AGENCY_E01 = "SSA_AGENCY_E01";
            internal const string SSA_FEDERAL_OR_MILITARY = "SSA_FEDERAL_OR_MILITARY";
            internal const string SSA_CORP_DIVISION = "SSA_CORP_DIVISION";
            internal const string SPACES_10 = "SPACES_10";
            internal const string SSA_AGENCY_E03 = "SSA_AGENCY_E03";
            internal const string MBR_BENEFIT_AMOUNT = "MBR_BENEFIT_AMOUNT";
            internal const string MBR_DATE_OF_DEATH = "MBR_DATE_OF_DEATH";
            internal const string SPACES_11 = "SPACES_11";
            internal const string VA_AGENCY_F01 = "VA_AGENCY_F01";
            internal const string VA_BENEFIT_CODE = "VA_BENEFIT_CODE";
            internal const string VA_DATE_OF_DEATH = "VA_DATE_OF_DEATH";
            internal const string VA_AMT_OF_AWARD_EFFECTIVE = "VA_AMT_OF_AWARD_EFFECTIVE";
            internal const string VA_AMOUNT_OF_AWARD = "VA_AMOUNT_OF_AWARD";
            internal const string VA_SUSPENSE_CODE = "VA_SUSPENSE_CODE";
            internal const string VA_INCARCERATION_CODE = "VA_INCARCERATION_CODE";
            internal const string VA_RETIREMENT_PAY_CODE = "VA_RETIREMENT_PAY_CODE";
            internal const string VA_ACTIVE_RESERVE = "VA_ACTIVE_RESERVE";
            internal const string SPACES_12 = "SPACES_12";
            internal const string UNEI_AGENCY_H97 = "UNEI_AGENCY_H97";
            internal const string UNEI_REPORTING_STATE = "UNEI_REPORTING_STATE";
            internal const string UNEI_BENEFIT_AMOUNT = "UNEI_BENEFIT_AMOUNT";
            internal const string SPACES_013 = "SPACES_013";
            internal const string UNEI_SSN_MATCH_IND = "UNEI_SSN_MATCH_IND";
            internal const string UNEI_REPORTING_QUARTER = "UNEI_REPORTING_QUARTER";
            internal const string SPACES_13 = "SPACES_13";
            internal const string QRWG_AGENCY_H98 = "QRWG_AGENCY_H98";
            internal const string QRWG_REPORTING_STATE = "QRWG_REPORTING_STATE";
            internal const string QRWG_ADDRESS_IND_TYPE = "QRWG_ADDRESS_IND_TYPE";
            internal const string QRWG_BENEFIT_AMOUNT = "QRWG_BENEFIT_AMOUNT";
            internal const string QRWG_FEIN = "QRWG_FEIN";
            internal const string SPACES_014 = "SPACES_014";
            internal const string QRWG_SSN_MATCH_IND = "QRWG_SSN_MATCH_IND";
            internal const string QRWG_REPORTING_QUARTER = "QRWG_REPORTING_QUARTER";
            internal const string QRWG_REPORTING_FED_AGENCY = "QRWG_REPORTING_FED_AGENCY";
            internal const string SPACES_14 = "SPACES_14";
            internal const string NEWHIRE_AGENCY_H99 = "NEWHIRE_AGENCY_H99";
            internal const string NEWHIRE_REPORTING_STATE = "NEWHIRE_REPORTING_STATE";
            internal const string NEWHIRE_ADDRESS_IND_TYPE = "NEWHIRE_ADDRESS_IND_TYPE";
            internal const string NEWHIRE_DATE_OF_BIRTH = "NEWHIRE_DATE_OF_BIRTH";
            internal const string NEWHIRE_DATE_OF_HIRE = "NEWHIRE_DATE_OF_HIRE";
            internal const string NEWHIRE_FEIN = "NEWHIRE_FEIN";
            internal const string NEWHIRE_SSN_MATCH_IND = "NEWHIRE_SSN_MATCH_IND";
            internal const string NEWHIRE_REPORTING_FED_AGENCY = "NEWHIRE_REPORTING_FED_AGENCY";
            internal const string NEWHIRE_DOD_STATUS = "NEWHIRE_DOD_STATUS";
            internal const string SPACES_15 = "SPACES_15";
            internal const string SESA_AGENCY_BXX = "SESA_AGENCY_BXX";
            internal const string SESA_RESPONDING_STATE = "SESA_RESPONDING_STATE";
            internal const string SESA_WAGE_CLAIM_IND = "SESA_WAGE_CLAIM_IND";
            internal const string SESA_WAGE_AMOUNT = "SESA_WAGE_AMOUNT";
            internal const string SPACES_7 = "SPACES_7";
            internal const string NPRC_AGENCY_C01 = "NPRC_AGENCY_C01";
            internal const string NPRC_EMPD_OR_SEPD = "NPRC_EMPD_OR_SEPD";
            internal const string SPACES_9 = "SPACES_9";
        }
        #endregion

        #region Direct-access element properties
        public IField EXTFILE_STAT { get { return GetExternalElementByName<IField>(Names.EXTFILE_STAT); } }
        public IField WS_DATE_AREA { get { return GetElementByName<IField>(Names.WS_DATE_AREA); } }
        public IField WS_TEST_DATE { get { return GetElementByName<IField>(Names.WS_TEST_DATE); } }
        public IField WS_DATE_RETURN_CODE { get { return GetElementByName<IField>(Names.WS_DATE_RETURN_CODE); } }
        public IField WS_TEST_DATE_CC { get { return GetElementByName<IField>(Names.WS_TEST_DATE_CC); } }
        public IField WS_TEST_DATE_YY { get { return GetElementByName<IField>(Names.WS_TEST_DATE_YY); } }
        public IField WS_TEST_DATE_MM { get { return GetElementByName<IField>(Names.WS_TEST_DATE_MM); } }
        public IField WS_TEST_DATE_DD { get { return GetElementByName<IField>(Names.WS_TEST_DATE_DD); } }
        public IField WS_TEST_DATE_QQ { get { return GetElementByName<IField>(Names.WS_TEST_DATE_QQ); } }
        public IGroup WS_MISC { get { return GetElementByName<IGroup>(Names.WS_MISC); } }
        public IField WS_ENTRY { get { return GetElementByName<IField>(Names.WS_ENTRY); } }
        public IField WS_RECORD_COUNT { get { return GetElementByName<IField>(Names.WS_RECORD_COUNT); } }
        public IGroup WS_RETURNED_ADDRESS { get { return GetElementByName<IGroup>(Names.WS_RETURNED_ADDRESS); } }
        public IGroup WS_RET_ADDR1 { get { return GetElementByName<IGroup>(Names.WS_RET_ADDR1); } }
        public IField WS_RET_ST1 { get { return GetElementByName<IField>(Names.WS_RET_ST1); } }
        public IField WS_RET_ST2 { get { return GetElementByName<IField>(Names.WS_RET_ST2); } }
        public IField WS_RET_ST3 { get { return GetElementByName<IField>(Names.WS_RET_ST3); } }
        public IField WS_RET_ST4 { get { return GetElementByName<IField>(Names.WS_RET_ST4); } }
        public IField WS_RET_ADDR2 { get { return GetElementByName<IField>(Names.WS_RET_ADDR2); } }
        public IGroup WS_BREAKAGE_RET_ADD { get { return GetElementByName<IGroup>(Names.WS_BREAKAGE_RET_ADD); } }
        public IGroup WS_BREAKAGE_RET1 { get { return GetElementByName<IGroup>(Names.WS_BREAKAGE_RET1); } }
        public IField WS_BREAKAGE_EMPLR { get { return GetElementByName<IField>(Names.WS_BREAKAGE_EMPLR); } }
        public IField WS_BREAKAGE_ST1 { get { return GetElementByName<IField>(Names.WS_BREAKAGE_ST1); } }
        public IField WS_BREAKAGE_ST2 { get { return GetElementByName<IField>(Names.WS_BREAKAGE_ST2); } }
        public IField WS_BREAKAGE_ST3 { get { return GetElementByName<IField>(Names.WS_BREAKAGE_ST3); } }
        public IField WS_BREAKAGE_RET2 { get { return GetElementByName<IField>(Names.WS_BREAKAGE_RET2); } }
        public IGroup WS_FPLS_RECORD { get { return GetElementByName<IGroup>(Names.WS_FPLS_RECORD); } }
        public IField NDNH_RESPONSE { get { return GetElementByName<IField>(Names.NDNH_RESPONSE); } }
        public IField SPACES_1_0002 { get { return GetElementByName<IField>(Names.SPACES_1_0002); } }
        public IField STATE_ABBREVIATION { get { return GetElementByName<IField>(Names.STATE_ABBREVIATION); } }
        public IField SPACES_2_0002 { get { return GetElementByName<IField>(Names.SPACES_2_0002); } }
        public IGroup AGENCY_CODE { get { return GetElementByName<IGroup>(Names.AGENCY_CODE); } }
        public IField AGENCY_CODE1 { get { return GetElementByName<IField>(Names.AGENCY_CODE1); } }
        public IField AGENCY_CODE2 { get { return GetElementByName<IField>(Names.AGENCY_CODE2); } }
        public IField NAME_SENT_IND { get { return GetElementByName<IField>(Names.NAME_SENT_IND); } }
        public IField AP_FIRST_NAME { get { return GetElementByName<IField>(Names.AP_FIRST_NAME); } }
        public IField AP_MIDDLE_NAME { get { return GetElementByName<IField>(Names.AP_MIDDLE_NAME); } }
        public IField AP_FIRST_LAST_NAME { get { return GetElementByName<IField>(Names.AP_FIRST_LAST_NAME); } }
        public IField AP_SECOND_FIRST_NAME { get { return GetElementByName<IField>(Names.AP_SECOND_FIRST_NAME); } }
        public IField AP_SECOND_MIDDLE_NAME { get { return GetElementByName<IField>(Names.AP_SECOND_MIDDLE_NAME); } }
        public IField AP_SECOND_LAST_NAME { get { return GetElementByName<IField>(Names.AP_SECOND_LAST_NAME); } }
        public IField AP_THIRD_FIRST_NAME { get { return GetElementByName<IField>(Names.AP_THIRD_FIRST_NAME); } }
        public IField AP_THIRD_MIDDLE_NAME { get { return GetElementByName<IField>(Names.AP_THIRD_MIDDLE_NAME); } }
        public IField AP_THIRD_LAST_NAME { get { return GetElementByName<IField>(Names.AP_THIRD_LAST_NAME); } }
        public IField AP_NAME_INDIACTOR { get { return GetElementByName<IField>(Names.AP_NAME_INDIACTOR); } }
        public IField AP_NAME_RETURNED { get { return GetElementByName<IField>(Names.AP_NAME_RETURNED); } }
        public IField SSN_SUBMITTED { get { return GetElementByName<IField>(Names.SSN_SUBMITTED); } }
        public IField FPLS_REQUEST_IDENTIFIER { get { return GetElementByName<IField>(Names.FPLS_REQUEST_IDENTIFIER); } }
        public IField AP_CSE_PERSON_NUMBER { get { return GetElementByName<IField>(Names.AP_CSE_PERSON_NUMBER); } }
        public IField USERS_FIELD { get { return GetElementByName<IField>(Names.USERS_FIELD); } }
        public IField LOCAL_CODE { get { return GetElementByName<IField>(Names.LOCAL_CODE); } }
        public IField COUNTY_FIPS_CODE { get { return GetElementByName<IField>(Names.COUNTY_FIPS_CODE); } }
        public IField SPACES_6_0003 { get { return GetElementByName<IField>(Names.SPACES_6_0003); } }
        public IField TYPE_OF_CASE { get { return GetElementByName<IField>(Names.TYPE_OF_CASE); } }
        public IField ADDR_DATE_FORMAT_IND { get { return GetElementByName<IField>(Names.ADDR_DATE_FORMAT_IND); } }
        public IField DATE_OF_ADDRESS { get { return GetElementByName<IField>(Names.DATE_OF_ADDRESS); } }
        public IField RESPONSE_CODE { get { return GetElementByName<IField>(Names.RESPONSE_CODE); } }
        public IField CORRECTED_ADD_MULTI_SSN { get { return GetElementByName<IField>(Names.CORRECTED_ADD_MULTI_SSN); } }
        public IField SPACES_4_0003 { get { return GetElementByName<IField>(Names.SPACES_4_0003); } }
        public IField EMPLOYER_NAME { get { return GetElementByName<IField>(Names.EMPLOYER_NAME); } }
        public IField ADDRESS_FORMAT_IND { get { return GetElementByName<IField>(Names.ADDRESS_FORMAT_IND); } }
        public IField RETURNED_ADDRESS { get { return GetElementByName<IField>(Names.RETURNED_ADDRESS); } }
        public IField SPACES_7_0003 { get { return GetElementByName<IField>(Names.SPACES_7_0003); } }
        public IField AGENCY_SPECIFIC_INFO_0003 { get { return GetElementByName<IField>(Names.AGENCY_SPECIFIC_INFO_0003); } }
        public IGroup DOD_AGENCY_A01 { get { return GetElementByName<IGroup>(Names.DOD_AGENCY_A01); } }
        public IField DOD_STATUS { get { return GetElementByName<IField>(Names.DOD_STATUS); } }
        public IField DOD_SERVICE_CODE { get { return GetElementByName<IField>(Names.DOD_SERVICE_CODE); } }
        public IField DOD_PAY_GRADE_CODE { get { return GetElementByName<IField>(Names.DOD_PAY_GRADE_CODE); } }
        public IField DOD_ANNUAL_SALARY { get { return GetElementByName<IField>(Names.DOD_ANNUAL_SALARY); } }
        public IField DOD_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.DOD_DATE_OF_BIRTH); } }
        public IField DOD_SUBMITTING_OFFICE { get { return GetElementByName<IField>(Names.DOD_SUBMITTING_OFFICE); } }
        public IField APO_FPO_INDICATOR { get { return GetElementByName<IField>(Names.APO_FPO_INDICATOR); } }
        public IGroup FBI_AGENCY_A02 { get { return GetElementByName<IGroup>(Names.FBI_AGENCY_A02); } }
        public IField FBI_ADDRESS_IND_TYPE { get { return GetElementByName<IField>(Names.FBI_ADDRESS_IND_TYPE); } }
        public IField FBI_ANNUAL_SALARY { get { return GetElementByName<IField>(Names.FBI_ANNUAL_SALARY); } }
        public IField FBI_HEALTH_INS_BENEFIT_IND { get { return GetElementByName<IField>(Names.FBI_HEALTH_INS_BENEFIT_IND); } }
        public IField FBI_EMPLOYMENT_STATUS { get { return GetElementByName<IField>(Names.FBI_EMPLOYMENT_STATUS); } }
        public IField FBI_EMPLOYMENT_IND { get { return GetElementByName<IField>(Names.FBI_EMPLOYMENT_IND); } }
        public IField FBI_DATE_OF_DEATH_OR_SEPRATION { get { return GetElementByName<IField>(Names.FBI_DATE_OF_DEATH_OR_SEPRATION); } }
        public IField FBI_DATE_OF_DEATH { get { return GetElementByName<IField>(Names.FBI_DATE_OF_DEATH); } }
        public IField FBI_DATE_OF_HIRE { get { return GetElementByName<IField>(Names.FBI_DATE_OF_HIRE); } }
        public IGroup NSA_AGENCY_A03 { get { return GetElementByName<IGroup>(Names.NSA_AGENCY_A03); } }
        public IField NSA_ADDRESS_IND_TYPE { get { return GetElementByName<IField>(Names.NSA_ADDRESS_IND_TYPE); } }
        public IField NSA_ANNUAL_SALARY { get { return GetElementByName<IField>(Names.NSA_ANNUAL_SALARY); } }
        public IField NSA_HEALTH_INS_BENEFIT_IND { get { return GetElementByName<IField>(Names.NSA_HEALTH_INS_BENEFIT_IND); } }
        public IField NSA_EMPLOYMENT_STATUS { get { return GetElementByName<IField>(Names.NSA_EMPLOYMENT_STATUS); } }
        public IField NSA_EMPLOYMENT_IND { get { return GetElementByName<IField>(Names.NSA_EMPLOYMENT_IND); } }
        public IField NSA_TERMINATION_DATE { get { return GetElementByName<IField>(Names.NSA_TERMINATION_DATE); } }
        public IField NSA_DATE_OF_DEATH { get { return GetElementByName<IField>(Names.NSA_DATE_OF_DEATH); } }
        public IField NSA_DATE_OF_HIRE { get { return GetElementByName<IField>(Names.NSA_DATE_OF_HIRE); } }
        public IField NSA_FEIN { get { return GetElementByName<IField>(Names.NSA_FEIN); } }
        public IGroup FED_AGENCY_B01 { get { return GetElementByName<IGroup>(Names.FED_AGENCY_B01); } }
        public IField FED_ADDRESS_IND_TYPE { get { return GetElementByName<IField>(Names.FED_ADDRESS_IND_TYPE); } }
        public IField FED_ANNUAL_SALARY { get { return GetElementByName<IField>(Names.FED_ANNUAL_SALARY); } }
        public IField FED_HEALTH_INS_BENEFIT_IND { get { return GetElementByName<IField>(Names.FED_HEALTH_INS_BENEFIT_IND); } }
        public IField FED_EMPLOYMENT_STATUS { get { return GetElementByName<IField>(Names.FED_EMPLOYMENT_STATUS); } }
        public IField FED_EMPLOYMENT_IND { get { return GetElementByName<IField>(Names.FED_EMPLOYMENT_IND); } }
        public IField FED_DATE_OF_DEATH_OR_SEPRATION { get { return GetElementByName<IField>(Names.FED_DATE_OF_DEATH_OR_SEPRATION); } }
        public IField FED_DATE_OF_DEATH { get { return GetElementByName<IField>(Names.FED_DATE_OF_DEATH); } }
        public IField FED_DATE_OF_HIRE { get { return GetElementByName<IField>(Names.FED_DATE_OF_HIRE); } }
        public IField FED_REPORTING_FED_AGENCY { get { return GetElementByName<IField>(Names.FED_REPORTING_FED_AGENCY); } }
        public IField FED_FEIN { get { return GetElementByName<IField>(Names.FED_FEIN); } }
        public IGroup IRS_AGENCY_C01 { get { return GetElementByName<IGroup>(Names.IRS_AGENCY_C01); } }
        public IField IRS_NAME_CONTROL { get { return GetElementByName<IField>(Names.IRS_NAME_CONTROL); } }
        public IField CP_SSN { get { return GetElementByName<IField>(Names.CP_SSN); } }
        public IField IRS_TAX_YEAR { get { return GetElementByName<IField>(Names.IRS_TAX_YEAR); } }
        public IField IRS_SECOND_NAME_RETND_IND { get { return GetElementByName<IField>(Names.IRS_SECOND_NAME_RETND_IND); } }
        public IField IRS_SECOND_NAME { get { return GetElementByName<IField>(Names.IRS_SECOND_NAME); } }
        public IField SPACES_8 { get { return GetElementByName<IField>(Names.SPACES_8); } }
        public IGroup SSA_AGENCY_E01 { get { return GetElementByName<IGroup>(Names.SSA_AGENCY_E01); } }
        public IField SSA_FEDERAL_OR_MILITARY { get { return GetElementByName<IField>(Names.SSA_FEDERAL_OR_MILITARY); } }
        public IField SSA_CORP_DIVISION { get { return GetElementByName<IField>(Names.SSA_CORP_DIVISION); } }
        public IField SPACES_10 { get { return GetElementByName<IField>(Names.SPACES_10); } }
        public IGroup SSA_AGENCY_E03 { get { return GetElementByName<IGroup>(Names.SSA_AGENCY_E03); } }
        public IField MBR_BENEFIT_AMOUNT { get { return GetElementByName<IField>(Names.MBR_BENEFIT_AMOUNT); } }
        public IField MBR_DATE_OF_DEATH { get { return GetElementByName<IField>(Names.MBR_DATE_OF_DEATH); } }
        public IField SPACES_11 { get { return GetElementByName<IField>(Names.SPACES_11); } }
        public IGroup VA_AGENCY_F01 { get { return GetElementByName<IGroup>(Names.VA_AGENCY_F01); } }
        public IField VA_BENEFIT_CODE { get { return GetElementByName<IField>(Names.VA_BENEFIT_CODE); } }
        public IField VA_DATE_OF_DEATH { get { return GetElementByName<IField>(Names.VA_DATE_OF_DEATH); } }
        public IField VA_AMT_OF_AWARD_EFFECTIVE { get { return GetElementByName<IField>(Names.VA_AMT_OF_AWARD_EFFECTIVE); } }
        public IField VA_AMOUNT_OF_AWARD { get { return GetElementByName<IField>(Names.VA_AMOUNT_OF_AWARD); } }
        public IField VA_SUSPENSE_CODE { get { return GetElementByName<IField>(Names.VA_SUSPENSE_CODE); } }
        public IField VA_INCARCERATION_CODE { get { return GetElementByName<IField>(Names.VA_INCARCERATION_CODE); } }
        public IField VA_RETIREMENT_PAY_CODE { get { return GetElementByName<IField>(Names.VA_RETIREMENT_PAY_CODE); } }
        public IField VA_ACTIVE_RESERVE { get { return GetElementByName<IField>(Names.VA_ACTIVE_RESERVE); } }
        public IField SPACES_12 { get { return GetElementByName<IField>(Names.SPACES_12); } }
        public IGroup UNEI_AGENCY_H97 { get { return GetElementByName<IGroup>(Names.UNEI_AGENCY_H97); } }
        public IField UNEI_REPORTING_STATE { get { return GetElementByName<IField>(Names.UNEI_REPORTING_STATE); } }
        public IField UNEI_BENEFIT_AMOUNT { get { return GetElementByName<IField>(Names.UNEI_BENEFIT_AMOUNT); } }
        public IField SPACES_013 { get { return GetElementByName<IField>(Names.SPACES_013); } }
        public IField UNEI_SSN_MATCH_IND { get { return GetElementByName<IField>(Names.UNEI_SSN_MATCH_IND); } }
        public IField UNEI_REPORTING_QUARTER { get { return GetElementByName<IField>(Names.UNEI_REPORTING_QUARTER); } }
        public IField SPACES_13 { get { return GetElementByName<IField>(Names.SPACES_13); } }
        public IGroup QRWG_AGENCY_H98 { get { return GetElementByName<IGroup>(Names.QRWG_AGENCY_H98); } }
        public IField QRWG_REPORTING_STATE { get { return GetElementByName<IField>(Names.QRWG_REPORTING_STATE); } }
        public IField QRWG_ADDRESS_IND_TYPE { get { return GetElementByName<IField>(Names.QRWG_ADDRESS_IND_TYPE); } }
        public IField QRWG_BENEFIT_AMOUNT { get { return GetElementByName<IField>(Names.QRWG_BENEFIT_AMOUNT); } }
        public IField QRWG_FEIN { get { return GetElementByName<IField>(Names.QRWG_FEIN); } }
        public IField SPACES_014 { get { return GetElementByName<IField>(Names.SPACES_014); } }
        public IField QRWG_SSN_MATCH_IND { get { return GetElementByName<IField>(Names.QRWG_SSN_MATCH_IND); } }
        public IField QRWG_REPORTING_QUARTER { get { return GetElementByName<IField>(Names.QRWG_REPORTING_QUARTER); } }
        public IField QRWG_REPORTING_FED_AGENCY { get { return GetElementByName<IField>(Names.QRWG_REPORTING_FED_AGENCY); } }
        public IField SPACES_14 { get { return GetElementByName<IField>(Names.SPACES_14); } }
        public IGroup NEWHIRE_AGENCY_H99 { get { return GetElementByName<IGroup>(Names.NEWHIRE_AGENCY_H99); } }
        public IField NEWHIRE_REPORTING_STATE { get { return GetElementByName<IField>(Names.NEWHIRE_REPORTING_STATE); } }
        public IField NEWHIRE_ADDRESS_IND_TYPE { get { return GetElementByName<IField>(Names.NEWHIRE_ADDRESS_IND_TYPE); } }
        public IField NEWHIRE_DATE_OF_BIRTH { get { return GetElementByName<IField>(Names.NEWHIRE_DATE_OF_BIRTH); } }
        public IField NEWHIRE_DATE_OF_HIRE { get { return GetElementByName<IField>(Names.NEWHIRE_DATE_OF_HIRE); } }
        public IField NEWHIRE_FEIN { get { return GetElementByName<IField>(Names.NEWHIRE_FEIN); } }
        public IField NEWHIRE_SSN_MATCH_IND { get { return GetElementByName<IField>(Names.NEWHIRE_SSN_MATCH_IND); } }
        public IField NEWHIRE_REPORTING_FED_AGENCY { get { return GetElementByName<IField>(Names.NEWHIRE_REPORTING_FED_AGENCY); } }
        public IField NEWHIRE_DOD_STATUS { get { return GetElementByName<IField>(Names.NEWHIRE_DOD_STATUS); } }
        public IField SPACES_15 { get { return GetElementByName<IField>(Names.SPACES_15); } }
        public IGroup SESA_AGENCY_BXX { get { return GetElementByName<IGroup>(Names.SESA_AGENCY_BXX); } }
        public IField SESA_RESPONDING_STATE { get { return GetElementByName<IField>(Names.SESA_RESPONDING_STATE); } }
        public IField SESA_WAGE_CLAIM_IND { get { return GetElementByName<IField>(Names.SESA_WAGE_CLAIM_IND); } }
        public IField SESA_WAGE_AMOUNT { get { return GetElementByName<IField>(Names.SESA_WAGE_AMOUNT); } }
        public IField SPACES_7 { get { return GetElementByName<IField>(Names.SPACES_7); } }
        public IGroup NPRC_AGENCY_C01 { get { return GetElementByName<IGroup>(Names.NPRC_AGENCY_C01); } }
        public IField NPRC_EMPD_OR_SEPD { get { return GetElementByName<IField>(Names.NPRC_EMPD_OR_SEPD); } }
        public IField SPACES_9 { get { return GetElementByName<IField>(Names.SPACES_9); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            WsExternals.Instance.CreateNewField(Names.EXTFILE_STAT, FieldType.UnsignedNumeric, 2);

            IField WS_DATE_AREA_local = recordDef.CreateNewField(Names.WS_DATE_AREA, FieldType.String, 57, SPACES);
            recordDef.CreateNewGroupRedefine("FILLER", WS_DATE_AREA_local, (FILLER) =>
            {
                FILLER.CreateNewField(Names.WS_TEST_DATE, FieldType.UnsignedNumeric, 8);
                FILLER.CreateNewFillerField(8, FillWith.Hashes);
                FILLER.CreateNewField(Names.WS_DATE_RETURN_CODE, FieldType.String, 2);
            });
            recordDef.CreateNewGroupRedefine("FILLER_d3", WS_DATE_AREA_local, (FILLER_d3) =>
            {
                FILLER_d3.CreateNewField(Names.WS_TEST_DATE_CC, FieldType.UnsignedNumeric, 2);
                FILLER_d3.CreateNewField(Names.WS_TEST_DATE_YY, FieldType.UnsignedNumeric, 2);
                FILLER_d3.CreateNewField(Names.WS_TEST_DATE_MM, FieldType.UnsignedNumeric, 2);
                FILLER_d3.CreateNewField(Names.WS_TEST_DATE_DD, FieldType.UnsignedNumeric, 2);
            });
            recordDef.CreateNewGroupRedefine("FILLER_d4", WS_DATE_AREA_local, (FILLER_d4) =>
            {
                FILLER_d4.CreateNewFillerField(2, FillWith.Hashes);
                FILLER_d4.CreateNewFillerField(2, FillWith.Hashes);
                FILLER_d4.CreateNewField(Names.WS_TEST_DATE_QQ, FieldType.UnsignedNumeric, 2);
                FILLER_d4.CreateNewFillerField(2, FillWith.Hashes);
            });

            recordDef.CreateNewGroup(Names.WS_MISC, (WS_MISC) =>
           {
               WS_MISC.CreateNewField(Names.WS_ENTRY, FieldType.String, 40, "SWEEXEE05 WORKING STORAGE STARTS HERE");
               WS_MISC.CreateNewField(Names.WS_RECORD_COUNT, FieldType.UnsignedNumeric, 7, ZEROES);
           });

            recordDef.CreateNewGroup(Names.WS_RETURNED_ADDRESS, (WS_RETURNED_ADDRESS) =>
           {
               WS_RETURNED_ADDRESS.CreateNewGroup(Names.WS_RET_ADDR1, (WS_RET_ADDR1) =>
               {
                   WS_RET_ADDR1.CreateNewField(Names.WS_RET_ST1, FieldType.String, 40);
                   WS_RET_ADDR1.CreateNewField(Names.WS_RET_ST2, FieldType.String, 40);
                   WS_RET_ADDR1.CreateNewField(Names.WS_RET_ST3, FieldType.String, 40);
                   WS_RET_ADDR1.CreateNewField(Names.WS_RET_ST4, FieldType.String, 40);
               });
               WS_RETURNED_ADDRESS.CreateNewField(Names.WS_RET_ADDR2, FieldType.String, 74);
           });

            recordDef.CreateNewGroup(Names.WS_BREAKAGE_RET_ADD, (WS_BREAKAGE_RET_ADD) =>
           {
               WS_BREAKAGE_RET_ADD.CreateNewGroup(Names.WS_BREAKAGE_RET1, (WS_BREAKAGE_RET1) =>
               {
                   WS_BREAKAGE_RET1.CreateNewField(Names.WS_BREAKAGE_EMPLR, FieldType.String, 45);
                   WS_BREAKAGE_RET1.CreateNewField(Names.WS_BREAKAGE_ST1, FieldType.String, 40);
                   WS_BREAKAGE_RET1.CreateNewField(Names.WS_BREAKAGE_ST2, FieldType.String, 40);
                   WS_BREAKAGE_RET1.CreateNewField(Names.WS_BREAKAGE_ST3, FieldType.String, 40);
               });
               WS_BREAKAGE_RET_ADD.CreateNewField(Names.WS_BREAKAGE_RET2, FieldType.String, 69);
           });

            recordDef.CreateNewGroup(Names.WS_FPLS_RECORD, (WS_FPLS_RECORD) =>
           {
               WS_FPLS_RECORD.CreateNewField(Names.NDNH_RESPONSE, FieldType.String, 2);
               WS_FPLS_RECORD.CreateNewField(Names.SPACES_1_0002, FieldType.String, 16);
               WS_FPLS_RECORD.CreateNewField(Names.STATE_ABBREVIATION, FieldType.String, 2);
               WS_FPLS_RECORD.CreateNewField(Names.SPACES_2_0002, FieldType.String, 40);
               WS_FPLS_RECORD.CreateNewGroup(Names.AGENCY_CODE, (AGENCY_CODE) =>
               {
                   AGENCY_CODE.CreateNewField(Names.AGENCY_CODE1, FieldType.String, 1);
                   AGENCY_CODE.CreateNewField(Names.AGENCY_CODE2, FieldType.String, 2);
               });
               WS_FPLS_RECORD.CreateNewField(Names.NAME_SENT_IND, FieldType.String, 1);
               WS_FPLS_RECORD.CreateNewField(Names.AP_FIRST_NAME, FieldType.String, 16);
               WS_FPLS_RECORD.CreateNewField(Names.AP_MIDDLE_NAME, FieldType.String, 16);
               WS_FPLS_RECORD.CreateNewField(Names.AP_FIRST_LAST_NAME, FieldType.String, 30);
               WS_FPLS_RECORD.CreateNewField(Names.AP_SECOND_FIRST_NAME, FieldType.String, 16);
               WS_FPLS_RECORD.CreateNewField(Names.AP_SECOND_MIDDLE_NAME, FieldType.String, 16);
               WS_FPLS_RECORD.CreateNewField(Names.AP_SECOND_LAST_NAME, FieldType.String, 30);
               WS_FPLS_RECORD.CreateNewField(Names.AP_THIRD_FIRST_NAME, FieldType.String, 16);
               WS_FPLS_RECORD.CreateNewField(Names.AP_THIRD_MIDDLE_NAME, FieldType.String, 16);
               WS_FPLS_RECORD.CreateNewField(Names.AP_THIRD_LAST_NAME, FieldType.String, 30);
               WS_FPLS_RECORD.CreateNewField(Names.AP_NAME_INDIACTOR, FieldType.String, 1);
               WS_FPLS_RECORD.CreateNewField(Names.AP_NAME_RETURNED, FieldType.String, 62);
               WS_FPLS_RECORD.CreateNewField(Names.SSN_SUBMITTED, FieldType.String, 9);
               WS_FPLS_RECORD.CreateNewField(Names.FPLS_REQUEST_IDENTIFIER, FieldType.UnsignedNumeric, 5);
               WS_FPLS_RECORD.CreateNewField(Names.AP_CSE_PERSON_NUMBER, FieldType.String, 10);
               WS_FPLS_RECORD.CreateNewField(Names.USERS_FIELD, FieldType.String, 15);
               WS_FPLS_RECORD.CreateNewField(Names.LOCAL_CODE, FieldType.String, 3);
               WS_FPLS_RECORD.CreateNewField(Names.COUNTY_FIPS_CODE, FieldType.String, 3);
               WS_FPLS_RECORD.CreateNewField(Names.SPACES_6_0003, FieldType.String, 5);
               WS_FPLS_RECORD.CreateNewField(Names.TYPE_OF_CASE, FieldType.String, 2);
               WS_FPLS_RECORD.CreateNewField(Names.ADDR_DATE_FORMAT_IND, FieldType.String, 1);
               WS_FPLS_RECORD.CreateNewField(Names.DATE_OF_ADDRESS, FieldType.String, 8);
               WS_FPLS_RECORD.CreateNewField(Names.RESPONSE_CODE, FieldType.String, 2);
               WS_FPLS_RECORD.CreateNewField(Names.CORRECTED_ADD_MULTI_SSN, FieldType.String, 9);
               WS_FPLS_RECORD.CreateNewField(Names.SPACES_4_0003, FieldType.String, 1);
               WS_FPLS_RECORD.CreateNewField(Names.EMPLOYER_NAME, FieldType.String, 45);
               WS_FPLS_RECORD.CreateNewField(Names.ADDRESS_FORMAT_IND, FieldType.String, 1);
               WS_FPLS_RECORD.CreateNewField(Names.RETURNED_ADDRESS, FieldType.String, 234);
               WS_FPLS_RECORD.CreateNewField(Names.SPACES_7_0003, FieldType.String, 34);

               IField AGENCY_SPECIFIC_INFO_0003_local = WS_FPLS_RECORD.CreateNewField(Names.AGENCY_SPECIFIC_INFO_0003, FieldType.String, 100);
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.DOD_AGENCY_A01, AGENCY_SPECIFIC_INFO_0003_local, (DOD_AGENCY_A01) =>
               {
                   DOD_AGENCY_A01.CreateNewField(Names.DOD_STATUS, FieldType.String, 1);
                   DOD_AGENCY_A01.CreateNewField(Names.DOD_SERVICE_CODE, FieldType.String, 4);
                   DOD_AGENCY_A01.CreateNewField(Names.DOD_PAY_GRADE_CODE, FieldType.String, 4);
                   DOD_AGENCY_A01.CreateNewField(Names.DOD_ANNUAL_SALARY, FieldType.UnsignedNumeric, 6);
                   DOD_AGENCY_A01.CreateNewField(Names.DOD_DATE_OF_BIRTH, FieldType.String, 8);
                   DOD_AGENCY_A01.CreateNewField(Names.DOD_SUBMITTING_OFFICE, FieldType.String, 4);
                   DOD_AGENCY_A01.CreateNewField(Names.APO_FPO_INDICATOR, FieldType.String, 1);
                   DOD_AGENCY_A01.CreateNewFillerField(72, FillWith.Hashes);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.FBI_AGENCY_A02, AGENCY_SPECIFIC_INFO_0003_local, (FBI_AGENCY_A02) =>
               {
                   FBI_AGENCY_A02.CreateNewField(Names.FBI_ADDRESS_IND_TYPE, FieldType.String, 1);
                   FBI_AGENCY_A02.CreateNewField(Names.FBI_ANNUAL_SALARY, FieldType.UnsignedNumeric, 7);
                   FBI_AGENCY_A02.CreateNewField(Names.FBI_HEALTH_INS_BENEFIT_IND, FieldType.String, 1);
                   FBI_AGENCY_A02.CreateNewField(Names.FBI_EMPLOYMENT_STATUS, FieldType.String, 1);
                   FBI_AGENCY_A02.CreateNewField(Names.FBI_EMPLOYMENT_IND, FieldType.String, 1);
                   FBI_AGENCY_A02.CreateNewField(Names.FBI_DATE_OF_DEATH_OR_SEPRATION, FieldType.String, 8);
                   FBI_AGENCY_A02.CreateNewField(Names.FBI_DATE_OF_DEATH, FieldType.String, 8);
                   FBI_AGENCY_A02.CreateNewField(Names.FBI_DATE_OF_HIRE, FieldType.String, 8);
                   FBI_AGENCY_A02.CreateNewFillerField(65, FillWith.Hashes);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.NSA_AGENCY_A03, AGENCY_SPECIFIC_INFO_0003_local, (NSA_AGENCY_A03) =>
               {
                   NSA_AGENCY_A03.CreateNewField(Names.NSA_ADDRESS_IND_TYPE, FieldType.String, 1);
                   NSA_AGENCY_A03.CreateNewField(Names.NSA_ANNUAL_SALARY, FieldType.UnsignedNumeric, 7);
                   NSA_AGENCY_A03.CreateNewField(Names.NSA_HEALTH_INS_BENEFIT_IND, FieldType.String, 1);
                   NSA_AGENCY_A03.CreateNewField(Names.NSA_EMPLOYMENT_STATUS, FieldType.String, 1);
                   NSA_AGENCY_A03.CreateNewField(Names.NSA_EMPLOYMENT_IND, FieldType.String, 1);
                   NSA_AGENCY_A03.CreateNewField(Names.NSA_TERMINATION_DATE, FieldType.String, 8);
                   NSA_AGENCY_A03.CreateNewField(Names.NSA_DATE_OF_DEATH, FieldType.String, 8);
                   NSA_AGENCY_A03.CreateNewField(Names.NSA_DATE_OF_HIRE, FieldType.String, 8);
                   NSA_AGENCY_A03.CreateNewField(Names.NSA_FEIN, FieldType.String, 9);
                   NSA_AGENCY_A03.CreateNewFillerField(56, FillWith.Hashes);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.FED_AGENCY_B01, AGENCY_SPECIFIC_INFO_0003_local, (FED_AGENCY_B01) =>
               {
                   FED_AGENCY_B01.CreateNewField(Names.FED_ADDRESS_IND_TYPE, FieldType.String, 1);
                   FED_AGENCY_B01.CreateNewField(Names.FED_ANNUAL_SALARY, FieldType.UnsignedNumeric, 7);
                   FED_AGENCY_B01.CreateNewField(Names.FED_HEALTH_INS_BENEFIT_IND, FieldType.String, 1);
                   FED_AGENCY_B01.CreateNewField(Names.FED_EMPLOYMENT_STATUS, FieldType.String, 1);
                   FED_AGENCY_B01.CreateNewField(Names.FED_EMPLOYMENT_IND, FieldType.String, 1);
                   FED_AGENCY_B01.CreateNewField(Names.FED_DATE_OF_DEATH_OR_SEPRATION, FieldType.String, 8);
                   FED_AGENCY_B01.CreateNewField(Names.FED_DATE_OF_DEATH, FieldType.String, 8);
                   FED_AGENCY_B01.CreateNewField(Names.FED_DATE_OF_HIRE, FieldType.String, 8);
                   FED_AGENCY_B01.CreateNewField(Names.FED_REPORTING_FED_AGENCY, FieldType.String, 9);
                   FED_AGENCY_B01.CreateNewField(Names.FED_FEIN, FieldType.String, 9);
                   FED_AGENCY_B01.CreateNewFillerField(47, FillWith.Hashes);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.IRS_AGENCY_C01, AGENCY_SPECIFIC_INFO_0003_local, (IRS_AGENCY_C01) =>
               {
                   IRS_AGENCY_C01.CreateNewField(Names.IRS_NAME_CONTROL, FieldType.String, 6);
                   IRS_AGENCY_C01.CreateNewField(Names.CP_SSN, FieldType.String, 9);
                   IRS_AGENCY_C01.CreateNewField(Names.IRS_TAX_YEAR, FieldType.String, 4);
                   IRS_AGENCY_C01.CreateNewField(Names.IRS_SECOND_NAME_RETND_IND, FieldType.String, 1);
                   IRS_AGENCY_C01.CreateNewField(Names.IRS_SECOND_NAME, FieldType.String, 62);
                   IRS_AGENCY_C01.CreateNewField(Names.SPACES_8, FieldType.String, 18);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.SSA_AGENCY_E01, AGENCY_SPECIFIC_INFO_0003_local, (SSA_AGENCY_E01) =>
               {
                   SSA_AGENCY_E01.CreateNewField(Names.SSA_FEDERAL_OR_MILITARY, FieldType.String, 1);
                   SSA_AGENCY_E01.CreateNewField(Names.SSA_CORP_DIVISION, FieldType.String, 4);
                   SSA_AGENCY_E01.CreateNewField(Names.SPACES_10, FieldType.String, 95);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.SSA_AGENCY_E03, AGENCY_SPECIFIC_INFO_0003_local, (SSA_AGENCY_E03) =>
               {
                   SSA_AGENCY_E03.CreateNewField(Names.MBR_BENEFIT_AMOUNT, FieldType.UnsignedNumeric, 6);
                   SSA_AGENCY_E03.CreateNewField(Names.MBR_DATE_OF_DEATH, FieldType.String, 8);
                   SSA_AGENCY_E03.CreateNewField(Names.SPACES_11, FieldType.String, 86);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.VA_AGENCY_F01, AGENCY_SPECIFIC_INFO_0003_local, (VA_AGENCY_F01) =>
               {
                   VA_AGENCY_F01.CreateNewField(Names.VA_BENEFIT_CODE, FieldType.String, 1);
                   VA_AGENCY_F01.CreateNewField(Names.VA_DATE_OF_DEATH, FieldType.String, 8);
                   VA_AGENCY_F01.CreateNewField(Names.VA_AMT_OF_AWARD_EFFECTIVE, FieldType.String, 8);
                   VA_AGENCY_F01.CreateNewField(Names.VA_AMOUNT_OF_AWARD, FieldType.UnsignedNumeric, 6);
                   VA_AGENCY_F01.CreateNewField(Names.VA_SUSPENSE_CODE, FieldType.String, 1);
                   VA_AGENCY_F01.CreateNewField(Names.VA_INCARCERATION_CODE, FieldType.String, 1);
                   VA_AGENCY_F01.CreateNewField(Names.VA_RETIREMENT_PAY_CODE, FieldType.String, 1);
                   VA_AGENCY_F01.CreateNewField(Names.VA_ACTIVE_RESERVE, FieldType.String, 1);
                   VA_AGENCY_F01.CreateNewField(Names.SPACES_12, FieldType.String, 73);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.UNEI_AGENCY_H97, AGENCY_SPECIFIC_INFO_0003_local, (UNEI_AGENCY_H97) =>
               {
                   UNEI_AGENCY_H97.CreateNewField(Names.UNEI_REPORTING_STATE, FieldType.String, 2);
                   UNEI_AGENCY_H97.CreateNewField(Names.UNEI_BENEFIT_AMOUNT, FieldType.SignedNumeric, 11, null, 2);
                   UNEI_AGENCY_H97.CreateNewField(Names.SPACES_013, FieldType.String, 11);
                   UNEI_AGENCY_H97.CreateNewField(Names.UNEI_SSN_MATCH_IND, FieldType.String, 1);
                   UNEI_AGENCY_H97.CreateNewField(Names.UNEI_REPORTING_QUARTER, FieldType.String, 5);
                   UNEI_AGENCY_H97.CreateNewField(Names.SPACES_13, FieldType.String, 70);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.QRWG_AGENCY_H98, AGENCY_SPECIFIC_INFO_0003_local, (QRWG_AGENCY_H98) =>
               {
                   QRWG_AGENCY_H98.CreateNewField(Names.QRWG_REPORTING_STATE, FieldType.String, 2);
                   QRWG_AGENCY_H98.CreateNewField(Names.QRWG_ADDRESS_IND_TYPE, FieldType.String, 1);
                   QRWG_AGENCY_H98.CreateNewField(Names.QRWG_BENEFIT_AMOUNT, FieldType.SignedNumeric, 11, null, 2);
                   QRWG_AGENCY_H98.CreateNewField(Names.QRWG_FEIN, FieldType.String, 9);
                   QRWG_AGENCY_H98.CreateNewField(Names.SPACES_014, FieldType.String, 1);
                   QRWG_AGENCY_H98.CreateNewField(Names.QRWG_SSN_MATCH_IND, FieldType.String, 1);
                   QRWG_AGENCY_H98.CreateNewField(Names.QRWG_REPORTING_QUARTER, FieldType.String, 5);
                   QRWG_AGENCY_H98.CreateNewField(Names.QRWG_REPORTING_FED_AGENCY, FieldType.String, 9);
                   QRWG_AGENCY_H98.CreateNewField(Names.SPACES_14, FieldType.String, 61);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.NEWHIRE_AGENCY_H99, AGENCY_SPECIFIC_INFO_0003_local, (NEWHIRE_AGENCY_H99) =>
               {
                   NEWHIRE_AGENCY_H99.CreateNewField(Names.NEWHIRE_REPORTING_STATE, FieldType.String, 2);
                   NEWHIRE_AGENCY_H99.CreateNewField(Names.NEWHIRE_ADDRESS_IND_TYPE, FieldType.String, 1);
                   NEWHIRE_AGENCY_H99.CreateNewField(Names.NEWHIRE_DATE_OF_BIRTH, FieldType.String, 8);
                   NEWHIRE_AGENCY_H99.CreateNewField(Names.NEWHIRE_DATE_OF_HIRE, FieldType.String, 8);
                   NEWHIRE_AGENCY_H99.CreateNewField(Names.NEWHIRE_FEIN, FieldType.String, 9);
                   NEWHIRE_AGENCY_H99.CreateNewField(Names.NEWHIRE_SSN_MATCH_IND, FieldType.String, 1);
                   NEWHIRE_AGENCY_H99.CreateNewField(Names.NEWHIRE_REPORTING_FED_AGENCY, FieldType.String, 9);
                   NEWHIRE_AGENCY_H99.CreateNewField(Names.NEWHIRE_DOD_STATUS, FieldType.String, 1);
                   NEWHIRE_AGENCY_H99.CreateNewField(Names.SPACES_15, FieldType.String, 61);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.SESA_AGENCY_BXX, AGENCY_SPECIFIC_INFO_0003_local, (SESA_AGENCY_BXX) =>
               {
                   SESA_AGENCY_BXX.CreateNewField(Names.SESA_RESPONDING_STATE, FieldType.String, 2);
                   SESA_AGENCY_BXX.CreateNewField(Names.SESA_WAGE_CLAIM_IND, FieldType.String, 1);
                   SESA_AGENCY_BXX.CreateNewField(Names.SESA_WAGE_AMOUNT, FieldType.UnsignedNumeric, 6);
                   SESA_AGENCY_BXX.CreateNewField(Names.SPACES_7, FieldType.String, 91);
               });
               WS_FPLS_RECORD.CreateNewGroupRedefine(Names.NPRC_AGENCY_C01, AGENCY_SPECIFIC_INFO_0003_local, (NPRC_AGENCY_C01) =>
               {
                   NPRC_AGENCY_C01.CreateNewField(Names.NPRC_EMPD_OR_SEPD, FieldType.String, 1);
                   NPRC_AGENCY_C01.CreateNewField(Names.SPACES_9, FieldType.String, 24);
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXEE05_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXEE05_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string GLOBDATA = "GLOBDATA";
            internal const string PSMGR_IEF_COMMAND = "PSMGR_IEF_COMMAND";
            internal const string PSMGR_IEF_COMMAND_1 = "PSMGR_IEF_COMMAND_1";
            internal const string PSMGR_IEF_COMMAND_2 = "PSMGR_IEF_COMMAND_2";
            internal const string PSMGR_IEF_TRANCODE = "PSMGR_IEF_TRANCODE";
            internal const string PSMGR_EXIT_STATE = "PSMGR_EXIT_STATE";
            internal const string PSMGR_EXIT_INFOMSG = "PSMGR_EXIT_INFOMSG";
            internal const string PSMGR_USER_ID = "PSMGR_USER_ID";
            internal const string PSMGR_TERMINAL_ID = "PSMGR_TERMINAL_ID";
            internal const string PSMGR_PRINTER_ID = "PSMGR_PRINTER_ID";
            internal const string PSMGR_CURRENT_DATE = "PSMGR_CURRENT_DATE";
            internal const string PSMGR_CURRENT_TIME = "PSMGR_CURRENT_TIME";
            internal const string PSMGR_RUNTIME_TYPE = "PSMGR_RUNTIME_TYPE";
            internal const string PSMGR_FUNCTION_DATA = "PSMGR_FUNCTION_DATA";
            internal const string PSMGR_FUNC_ERRMSG = "PSMGR_FUNC_ERRMSG";
            internal const string PSMGR_FUNC_NAME = "PSMGR_FUNC_NAME";
            internal const string PSMGR_FUNC_IN_DATE = "PSMGR_FUNC_IN_DATE";
            internal const string PSMGR_FUNC_IN_DDURA = "PSMGR_FUNC_IN_DDURA";
            internal const string DDURA_YEAR = "DDURA_YEAR";
            internal const string DDURA_Y_MISS = "DDURA_Y_MISS";
            internal const string DDURA_YYYY = "DDURA_YYYY";
            internal const string DDURA_MONTH = "DDURA_MONTH";
            internal const string DDURA_M_MISS = "DDURA_M_MISS";
            internal const string DDURA_MM = "DDURA_MM";
            internal const string DDURA_DAY = "DDURA_DAY";
            internal const string DDURA_D_MISS = "DDURA_D_MISS";
            internal const string DDURA_DD = "DDURA_DD";
            internal const string PSMGR_FUNC_OUT_DATE = "PSMGR_FUNC_OUT_DATE";
            internal const string PSMGR_FUNC_IN_TIME = "PSMGR_FUNC_IN_TIME";
            internal const string PSMGR_FUNC_IN_TDURA = "PSMGR_FUNC_IN_TDURA";
            internal const string TDURA_HOUR = "TDURA_HOUR";
            internal const string TDURA_H_MISS = "TDURA_H_MISS";
            internal const string TDURA_HH = "TDURA_HH";
            internal const string TDURA_MINUTE = "TDURA_MINUTE";
            internal const string TDURA_M_MISS = "TDURA_M_MISS";
            internal const string TDURA_MM = "TDURA_MM";
            internal const string TDURA_SECOND = "TDURA_SECOND";
            internal const string TDURA_S_MISS = "TDURA_S_MISS";
            internal const string TDURA_SS = "TDURA_SS";
            internal const string PSMGR_FUNC_OUT_TIME = "PSMGR_FUNC_OUT_TIME";
            internal const string PSMGR_IEF_NEXTTRAN = "PSMGR_IEF_NEXTTRAN";
            internal const string PSMGR_EXIT_MSGTYPE = "PSMGR_EXIT_MSGTYPE";
            internal const string PSMGR_IEF_DEBUG_FLAGS = "PSMGR_IEF_DEBUG_FLAGS";
            internal const string PSMGR_IEF_DEBUG = "PSMGR_IEF_DEBUG";
            internal const string PSMGR_DEBUG_ON = "PSMGR_DEBUG_ON";
            internal const string PSMGR_ENVIRONMENT_DATA = "PSMGR_ENVIRONMENT_DATA";
            internal const string PSMGR_PCB_CNT = "PSMGR_PCB_CNT";
            internal const string PSMGR_PCB_ENTRY = "PSMGR_PCB_ENTRY";
            internal const string PSMGR_PCB_ADR = "PSMGR_PCB_ADR";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string PSMGR_ERROR_DATA = "PSMGR_ERROR_DATA";
            internal const string ERROR_ACTION_NAME = "ERROR_ACTION_NAME";
            internal const string ERROR_ENCOUNTERED_SW = "ERROR_ENCOUNTERED_SW";
            internal const string VIEW_OVERFLOW_SW = "VIEW_OVERFLOW_SW";
            internal const string PSMGR_DASG_DATA = "PSMGR_DASG_DATA";
            internal const string ACTION_ID_X = "ACTION_ID_X";
            internal const string ACTION_ID = "ACTION_ID";
            internal const string ATTRIBUTE_ID_X = "ATTRIBUTE_ID_X";
            internal const string ATTRIBUTE_ID = "ATTRIBUTE_ID";
            internal const string STATUS_FLAG = "STATUS_FLAG";
            internal const string WHEN_SUCCESSFUL_SF = "WHEN_SUCCESSFUL_SF";
            internal const string FATAL_ERROR_SF = "FATAL_ERROR_SF";
            internal const string DB_ERROR_SF = "DB_ERROR_SF";
            internal const string ABORT_SHOW_DBMS_MSG_SF = "ABORT_SHOW_DBMS_MSG_SF";
            internal const string ABORT_SHOW_USER_MSG_SF = "ABORT_SHOW_USER_MSG_SF";
            internal const string RETRY_TRAN_REQUESTED_SF = "RETRY_TRAN_REQUESTED_SF";
            internal const string PSTEP_USE_FAILURE = "PSTEP_USE_FAILURE";
            internal const string ASYNC_WHEN_AVAILABLE_SF = "ASYNC_WHEN_AVAILABLE_SF";
            internal const string ASYNC_WHEN_ACCEPTED_SF = "ASYNC_WHEN_ACCEPTED_SF";
            internal const string ASYNC_WHEN_NOT_ACCEPTED_SF = "ASYNC_WHEN_NOT_ACCEPTED_SF";
            internal const string ASYNC_WHEN_INVALID_ID_SF = "ASYNC_WHEN_INVALID_ID_SF";
            internal const string ASYNC_WHEN_PENDING_SF = "ASYNC_WHEN_PENDING_SF";
            internal const string ASYNC_WHEN_SERVER_ERROR_SF = "ASYNC_WHEN_SERVER_ERROR_SF";
            internal const string ASYNC_WHEN_COMM_ERROR_SF = "ASYNC_WHEN_COMM_ERROR_SF";
            internal const string LAST_STATUS = "LAST_STATUS";
            internal const string DB_ERROR_FL_LS = "DB_ERROR_FL_LS";
            internal const string DB_DEADLOCK_TIMOUT_FL_LS = "DB_DEADLOCK_TIMOUT_FL_LS";
            internal const string DUPLICATE_FOUND_FL_LS = "DUPLICATE_FOUND_FL_LS";
            internal const string INVALID_DATAA_FL_LS = "INVALID_DATAA_FL_LS";
            internal const string INVALID_DATAB_TYPE_FL_LS = "INVALID_DATAB_TYPE_FL_LS";
            internal const string INVALID_DATAB_PERM_FL_LS = "INVALID_DATAB_PERM_FL_LS";
            internal const string FATAL_ERROR_FL_LS = "FATAL_ERROR_FL_LS";
            internal const string NOT_FOUND_FL_LS = "NOT_FOUND_FL_LS";
            internal const string NOT_UNIQUE_FL_LS = "NOT_UNIQUE_FL_LS";
            internal const string IEF_FUNCTION_ERROR_FL_LS = "IEF_FUNCTION_ERROR_FL_LS";
            internal const string IEF_DURATION_ERROR_FL_LS = "IEF_DURATION_ERROR_FL_LS";
            internal const string USED_PSTEP_NOT_FOUND = "USED_PSTEP_NOT_FOUND";
            internal const string USED_PSTEP_ROUTING_ERR = "USED_PSTEP_ROUTING_ERR";
            internal const string USED_PSTEP_SND_FMT_ERR = "USED_PSTEP_SND_FMT_ERR";
            internal const string USED_PSTEP_ENCRYPT_ERR = "USED_PSTEP_ENCRYPT_ERR";
            internal const string USED_PSTEP_SND_BFR_ERR = "USED_PSTEP_SND_BFR_ERR";
            internal const string USED_PSTEP_RCV_BFR_ERR = "USED_PSTEP_RCV_BFR_ERR";
            internal const string USED_PSTEP_RCV_FMT_ERR = "USED_PSTEP_RCV_FMT_ERR";
            internal const string USED_PSTEP_TIRSECR_ERR = "USED_PSTEP_TIRSECR_ERR";
            internal const string USED_PSTEP_TOKEN_ERR = "USED_PSTEP_TOKEN_ERR";
            internal const string USED_PSTEP_SEND_MAX_SIZE = "USED_PSTEP_SEND_MAX_SIZE";
            internal const string USED_PSTEP_SECG_ERR = "USED_PSTEP_SECG_ERR";
            internal const string USED_PSTEP_ALLOC_ERR = "USED_PSTEP_ALLOC_ERR";
            internal const string USED_PSTEP_CONNECT_ERR = "USED_PSTEP_CONNECT_ERR";
            internal const string USED_PSTEP_XERR = "USED_PSTEP_XERR";
            internal const string USED_PSTEP_RCV_UA_ERR = "USED_PSTEP_RCV_UA_ERR";
            internal const string USED_PSTEP_RCV_ES_ERR = "USED_PSTEP_RCV_ES_ERR";
            internal const string USED_PSTEP_XFAL = "USED_PSTEP_XFAL";
            internal const string USED_PSTEP_SETOA_ERR = "USED_PSTEP_SETOA_ERR";
            internal const string USED_PSTEP_RCV_VIEW_ERR = "USED_PSTEP_RCV_VIEW_ERR";
            internal const string USED_PSTEP_DECRYPT_ERR = "USED_PSTEP_DECRYPT_ERR";
            internal const string SAVE_SQLCA = "SAVE_SQLCA";
            internal const string PSMGR_DEBUG_DATA = "PSMGR_DEBUG_DATA";
            internal const string PSMGR_TRACE_ADR = "PSMGR_TRACE_ADR";
            internal const string LAST_STATEMENT_X = "LAST_STATEMENT_X";
            internal const string LAST_STATEMENT_NUM = "LAST_STATEMENT_NUM";
            internal const string CUR_AB_ID = "CUR_AB_ID";
            internal const string CUR_AB_NAME = "CUR_AB_NAME";
            internal const string PSMGR_TIRDATE_SAVEAREA = "PSMGR_TIRDATE_SAVEAREA";
            internal const string PSMGR_TIRDATE_CMCB = "PSMGR_TIRDATE_CMCB";
            internal const string PSMGR_TIRDATE_DATE = "PSMGR_TIRDATE_DATE";
            internal const string PSMGR_TIRDATE_TIME = "PSMGR_TIRDATE_TIME";
            internal const string PSMGR_TIRDATE_INC = "PSMGR_TIRDATE_INC";
            internal const string PSMGR_TIRDATE_RC = "PSMGR_TIRDATE_RC";
            internal const string PSMGR_TIRDATE_OK = "PSMGR_TIRDATE_OK";
            internal const string PSMGR_TIRDATE_WARNING = "PSMGR_TIRDATE_WARNING";
            internal const string PSMGR_TIRDATE_ERROR = "PSMGR_TIRDATE_ERROR";
            internal const string PSMGR_TIRDATE_REQ = "PSMGR_TIRDATE_REQ";
            internal const string PSMGR_TIRDATE_DATEF = "PSMGR_TIRDATE_DATEF";
            internal const string PSMGR_TIRDATE_TIMEF = "PSMGR_TIRDATE_TIMEF";
            internal const string PSMGR_TIRDATE_RETMSG = "PSMGR_TIRDATE_RETMSG";
            internal const string PSMGR_TIRDATE_TSTAMP = "PSMGR_TIRDATE_TSTAMP";
            internal const string PSMGR_TIRDATE_DATE_Z = "PSMGR_TIRDATE_DATE_Z";
            internal const string PSMGR_TIRDATE_TIME_Z = "PSMGR_TIRDATE_TIME_Z";
            internal const string PSMGR_TIRDATE_SKIP_VAL = "PSMGR_TIRDATE_SKIP_VAL";
            internal const string PSMGR_ROLLBACK_RQSTED = "PSMGR_ROLLBACK_RQSTED";
            internal const string ROLLBACK_RQSTED = "ROLLBACK_RQSTED";
            internal const string ABEND_RQSTED = "ABEND_RQSTED";
            internal const string TERMINATE_RQSTED = "TERMINATE_RQSTED";
            internal const string TIRTRCE_SAVE_AREA = "TIRTRCE_SAVE_AREA";
            internal const string TOP_INDX = "TOP_INDX";
            internal const string BOTTOM_INDX = "BOTTOM_INDX";
            internal const string END_INDX = "END_INDX";
            internal const string LAST_STMT = "LAST_STMT";
            internal const string TOP_OF_CALL = "TOP_OF_CALL";
            internal const string TRACE_BREAK_POINT = "TRACE_BREAK_POINT";
            internal const string TRACE_BREAK_POINT_STATUS = "TRACE_BREAK_POINT_STATUS";
            internal const string LAST_AB_NAME = "LAST_AB_NAME";
            internal const string COLOR = "COLOR";
            internal const string COLORT = "COLORT";
            internal const string HILITE = "HILITE";
            internal const string TRACE_ON_OFF = "TRACE_ON_OFF";
            internal const string CASCADE_DELETE_FLAGS = "CASCADE_DELETE_FLAGS";
            internal const string V1PRESENT = "V1PRESENT";
            internal const string V2PRESENT = "V2PRESENT";
            internal const string CASCADE1 = "CASCADE1";
            internal const string CASCADE2 = "CASCADE2";
            internal const string PROCESSQ_FLAG = "PROCESSQ_FLAG";
            internal const string PSMGR_ACTIVE_DIALECT = "PSMGR_ACTIVE_DIALECT";
            internal const string DIALECT_NAME = "DIALECT_NAME";
            internal const string MESSAGE_TABLE_NAME = "MESSAGE_TABLE_NAME";
            internal const string TRANSLATE_TABLE_NAME = "TRANSLATE_TABLE_NAME";
            internal const string PSMGR_FUNCTION_DATA_EXT = "PSMGR_FUNCTION_DATA_EXT";
            internal const string PSMGR_FUNC_IN_TIMESTAMP = "PSMGR_FUNC_IN_TIMESTAMP";
            internal const string PSMGR_FUNC_IN_TSDURA = "PSMGR_FUNC_IN_TSDURA";
            internal const string TSDURA_MICROSECOND = "TSDURA_MICROSECOND";
            internal const string TSDURA_M_MISS = "TSDURA_M_MISS";
            internal const string TSDURA_MS = "TSDURA_MS";
            internal const string PSMGR_FUNC_OUT_TIMESTAMP = "PSMGR_FUNC_OUT_TIMESTAMP";
            internal const string PSMGR_CICS_FAIL_SW = "PSMGR_CICS_FAIL_SW";
            internal const string INHIBIT_CICS_RECEIVE = "INHIBIT_CICS_RECEIVE";
            internal const string CLIENT_USERID = "CLIENT_USERID";
            internal const string CLIENT_PASSWORD = "CLIENT_PASSWORD";
            internal const string LOAD_MODULE_NAME = "LOAD_MODULE_NAME";
            internal const string INSTRUMENT_CODE = "INSTRUMENT_CODE";
            internal const string TX_RETRY_LIMIT = "TX_RETRY_LIMIT";
            internal const string TX_TIMEOUT = "TX_TIMEOUT";
            internal const string PSMGR_EXTRA_ERRINFO = "PSMGR_EXTRA_ERRINFO";
            internal const string ERRINFO_BUF_SIZE = "ERRINFO_BUF_SIZE";
            internal const string ERRINFO_MSG_SIZE = "ERRINFO_MSG_SIZE";
            internal const string ERRINFO_BUF_ADDR = "ERRINFO_BUF_ADDR";
            internal const string TX_RETRY_COUNT = "TX_RETRY_COUNT";
            internal const string TX_USER_RETRY_ALLOWED = "TX_USER_RETRY_ALLOWED";
            internal const string PSMGR_PSTEP_USE_PTRS = "PSMGR_PSTEP_USE_PTRS";
            internal const string PSTEP_FAIL_MSG_PTR = "PSTEP_FAIL_MSG_PTR";
            internal const string PSTEP_GURB_REST_PTR = "PSTEP_GURB_REST_PTR";
            internal const string PSTEP_LIPS_PTR = "PSTEP_LIPS_PTR";
            internal const string PSTEP_TBL_PTR = "PSTEP_TBL_PTR";
            internal const string PSTEP_DDF_PTR = "PSTEP_DDF_PTR";
            internal const string PSTEP_COMM_ID = "PSTEP_COMM_ID";
            internal const string PSTEP_APPL_LIST_PTR = "PSTEP_APPL_LIST_PTR";
            internal const string PSTEP_CURR_PST_PTR = "PSTEP_CURR_PST_PTR";
            internal const string PSMGR_PSTEP_USE_SYSFLDS = "PSMGR_PSTEP_USE_SYSFLDS";
            internal const string PSMGR_EIBERRCD = "PSMGR_EIBERRCD";
            internal const string PSMGR_EIBFN = "PSMGR_EIBFN";
            internal const string PSMGR_EIBRESP = "PSMGR_EIBRESP";
            internal const string PSMGR_EIBRESP2 = "PSMGR_EIBRESP2";
            internal const string PSMGR_ASYNC_DATA = "PSMGR_ASYNC_DATA";
            internal const string ASYNC_MODE = "ASYNC_MODE";
            internal const string FLOW_TYPE_SYNC = "FLOW_TYPE_SYNC";
            internal const string FLOW_TYPE_ASYNC = "FLOW_TYPE_ASYNC";
            internal const string FLOW_TYPE_NO_RESPONSE = "FLOW_TYPE_NO_RESPONSE";
            internal const string ASYNC_FLOW_STATUS_TABLE_PTR = "ASYNC_FLOW_STATUS_TABLE_PTR";
            internal const string ASYNC_SERVER_LOC_TABLE_PTR = "ASYNC_SERVER_LOC_TABLE_PTR";
            internal const string IMPORT_0001EV = "IMPORT_0001EV";
            internal const string EXTERNAL_0001ET = "EXTERNAL_0001ET";
            internal const string FILE_INSTRUCTION_0001AS = "FILE_INSTRUCTION_0001AS";
            internal const string FILE_INSTRUCTION_0001 = "FILE_INSTRUCTION_0001";
            internal const string FILE_INSTRUCTION_0001XX = "FILE_INSTRUCTION_0001XX";
            internal const string EXPORT_0002EV = "EXPORT_0002EV";
            internal const string EXTERNAL_FPLS_RESPONSE_0002ET = "EXTERNAL_FPLS_RESPONSE_0002ET";
            internal const string NDNH_RESPONSE_0002AS = "NDNH_RESPONSE_0002AS";
            internal const string NDNH_RESPONSE_0002 = "NDNH_RESPONSE_0002";
            internal const string NDNH_RESPONSE_0002XX = "NDNH_RESPONSE_0002XX";
            internal const string STATE_ABBREVIATION_0002AS = "STATE_ABBREVIATION_0002AS";
            internal const string STATE_ABBREVIATION_0002 = "STATE_ABBREVIATION_0002";
            internal const string STATE_ABBREVIATION_0002XX = "STATE_ABBREVIATION_0002XX";
            internal const string AGENCY_CODE_0002AS = "AGENCY_CODE_0002AS";
            internal const string AGENCY_CODE_0002 = "AGENCY_CODE_0002";
            internal const string AGENCY_CODE_0002XX = "AGENCY_CODE_0002XX";
            internal const string NAME_SENT_IND_0002AS = "NAME_SENT_IND_0002AS";
            internal const string NAME_SENT_IND_0002 = "NAME_SENT_IND_0002";
            internal const string NAME_SENT_IND_0002XX = "NAME_SENT_IND_0002XX";
            internal const string AP_FIRST_NAME_0002AS = "AP_FIRST_NAME_0002AS";
            internal const string AP_FIRST_NAME_0002 = "AP_FIRST_NAME_0002";
            internal const string AP_FIRST_NAME_0002XX = "AP_FIRST_NAME_0002XX";
            internal const string AP_MIDDLE_NAME_0002AS = "AP_MIDDLE_NAME_0002AS";
            internal const string AP_MIDDLE_NAME_0002 = "AP_MIDDLE_NAME_0002";
            internal const string AP_MIDDLE_NAME_0002XX = "AP_MIDDLE_NAME_0002XX";
            internal const string AP_FIRST_LAST_NAME_0002AS = "AP_FIRST_LAST_NAME_0002AS";
            internal const string AP_FIRST_LAST_NAME_0002 = "AP_FIRST_LAST_NAME_0002";
            internal const string AP_FIRST_LAST_NAME_0002XX = "AP_FIRST_LAST_NAME_0002XX";
            internal const string AP_SECOND_LAST_NAME_0002AS = "AP_SECOND_LAST_NAME_0002AS";
            internal const string AP_SECOND_LAST_NAME_0002 = "AP_SECOND_LAST_NAME_0002";
            internal const string AP_SECOND_LAST_NAME_0002XX = "AP_SECOND_LAST_NAME_0002XX";
            internal const string AP_THIRD_LAST_NAME_0002AS = "AP_THIRD_LAST_NAME_0002AS";
            internal const string AP_THIRD_LAST_NAME_0002 = "AP_THIRD_LAST_NAME_0002";
            internal const string AP_THIRD_LAST_NAME_0002XX = "AP_THIRD_LAST_NAME_0002XX";
            internal const string AP_NAME_RETURNED_0002AS = "AP_NAME_RETURNED_0002AS";
            internal const string AP_NAME_RETURNED_0002 = "AP_NAME_RETURNED_0002";
            internal const string AP_NAME_RETURNED_0002XX = "AP_NAME_RETURNED_0002XX";
            internal const string SSN_SUBMITTED_0002AS = "SSN_SUBMITTED_0002AS";
            internal const string SSN_SUBMITTED_0002 = "SSN_SUBMITTED_0002";
            internal const string SSN_SUBMITTED_0002XX = "SSN_SUBMITTED_0002XX";
            internal const string AP_CSE_PERSON_NUMBER_0002AS = "AP_CSE_PERSON_NUMBER_0002AS";
            internal const string AP_CSE_PERSON_NUMBER_0002 = "AP_CSE_PERSON_NUMBER_0002";
            internal const string AP_CSE_PERSON_NUMBER_0002XX = "AP_CSE_PERSON_NUMBER_0002XX";
            internal const string FPLS_REQUEST_IDENTIFIER_0003AS = "FPLS_REQUEST_IDENTIFIER_0003AS";
            internal const string FPLS_REQUEST_IDENTIFIER_0003 = "FPLS_REQUEST_IDENTIFIER_0003";
            internal const string FPLS_REQUEST_IDENTIFIER_0003XX = "FPLS_REQUEST_IDENTIFIER_0003XX";
            internal const string USERS_FIELD_0003AS = "USERS_FIELD_0003AS";
            internal const string USERS_FIELD_0003 = "USERS_FIELD_0003";
            internal const string USERS_FIELD_0003XX = "USERS_FIELD_0003XX";
            internal const string LOCAL_CODE_0003AS = "LOCAL_CODE_0003AS";
            internal const string LOCAL_CODE_0003 = "LOCAL_CODE_0003";
            internal const string LOCAL_CODE_0003XX = "LOCAL_CODE_0003XX";
            internal const string TYPE_OF_CASE_0003AS = "TYPE_OF_CASE_0003AS";
            internal const string TYPE_OF_CASE_0003 = "TYPE_OF_CASE_0003";
            internal const string TYPE_OF_CASE_0003XX = "TYPE_OF_CASE_0003XX";
            internal const string ADDR_DATE_FORMAT_IND_0003AS = "ADDR_DATE_FORMAT_IND_0003AS";
            internal const string ADDR_DATE_FORMAT_IND_0003 = "ADDR_DATE_FORMAT_IND_0003";
            internal const string ADDR_DATE_FORMAT_IND_0003XX = "ADDR_DATE_FORMAT_IND_0003XX";
            internal const string DATE_OF_ADDRESS_0003AS = "DATE_OF_ADDRESS_0003AS";
            internal const string DATE_OF_ADDRESS_0003 = "DATE_OF_ADDRESS_0003";
            internal const string DATE_OF_ADDRESS_0003XX = "DATE_OF_ADDRESS_0003XX";
            internal const string RESPONSE_CODE_0003AS = "RESPONSE_CODE_0003AS";
            internal const string RESPONSE_CODE_0003 = "RESPONSE_CODE_0003";
            internal const string RESPONSE_CODE_0003XX = "RESPONSE_CODE_0003XX";
            internal const string ADDRESS_FORMAT_IND_0003AS = "ADDRESS_FORMAT_IND_0003AS";
            internal const string ADDRESS_FORMAT_IND_0003 = "ADDRESS_FORMAT_IND_0003";
            internal const string ADDRESS_FORMAT_IND_0003XX = "ADDRESS_FORMAT_IND_0003XX";
            internal const string RETURNED_ADDRESS_0003AS = "RETURNED_ADDRESS_0003AS";
            internal const string RETURNED_ADDRESS_0003 = "RETURNED_ADDRESS_0003";
            internal const string RETURNED_ADDRESS_0003XX = "RETURNED_ADDRESS_0003XX";
            internal const string DOD_STATUS_0003AS = "DOD_STATUS_0003AS";
            internal const string DOD_STATUS_0003 = "DOD_STATUS_0003";
            internal const string DOD_STATUS_0003XX = "DOD_STATUS_0003XX";
            internal const string DOD_SERVICE_CODE_0003AS = "DOD_SERVICE_CODE_0003AS";
            internal const string DOD_SERVICE_CODE_0003 = "DOD_SERVICE_CODE_0003";
            internal const string DOD_SERVICE_CODE_0003XX = "DOD_SERVICE_CODE_0003XX";
            internal const string DOD_PAY_GRADE_CODE_0003AS = "DOD_PAY_GRADE_CODE_0003AS";
            internal const string DOD_PAY_GRADE_CODE_0003 = "DOD_PAY_GRADE_CODE_0003";
            internal const string DOD_PAY_GRADE_CODE_0003XX = "DOD_PAY_GRADE_CODE_0003XX";
            internal const string DOD_ANNUAL_SALARY_0003AS = "DOD_ANNUAL_SALARY_0003AS";
            internal const string DOD_ANNUAL_SALARY_0003 = "DOD_ANNUAL_SALARY_0003";
            internal const string DOD_ANNUAL_SALARY_0003XX = "DOD_ANNUAL_SALARY_0003XX";
            internal const string DOD_DATE_OF_BIRTH_0003AS = "DOD_DATE_OF_BIRTH_0003AS";
            internal const string DOD_DATE_OF_BIRTH_0003 = "DOD_DATE_OF_BIRTH_0003";
            internal const string DOD_DATE_OF_BIRTH_0003XX = "DOD_DATE_OF_BIRTH_0003XX";
            internal const string SUBMITTING_OFFICE_0003AS = "SUBMITTING_OFFICE_0003AS";
            internal const string SUBMITTING_OFFICE_0003 = "SUBMITTING_OFFICE_0003";
            internal const string SUBMITTING_OFFICE_0003XX = "SUBMITTING_OFFICE_0003XX";
            internal const string SESA_RESPONDING_STATE_0003AS = "SESA_RESPONDING_STATE_0003AS";
            internal const string SESA_RESPONDING_STATE_0003 = "SESA_RESPONDING_STATE_0003";
            internal const string SESA_RESPONDING_STATE_0003XX = "SESA_RESPONDING_STATE_0003XX";
            internal const string SESA_WAGE_CLAIM_IND_0003AS = "SESA_WAGE_CLAIM_IND_0003AS";
            internal const string SESA_WAGE_CLAIM_IND_0003 = "SESA_WAGE_CLAIM_IND_0003";
            internal const string SESA_WAGE_CLAIM_IND_0003XX = "SESA_WAGE_CLAIM_IND_0003XX";
            internal const string SESA_WAGE_AMOUNT_0003AS = "SESA_WAGE_AMOUNT_0003AS";
            internal const string SESA_WAGE_AMOUNT_0003 = "SESA_WAGE_AMOUNT_0003";
            internal const string SESA_WAGE_AMOUNT_0003XX = "SESA_WAGE_AMOUNT_0003XX";
            internal const string IRS_NAME_CONTROL_0003AS = "IRS_NAME_CONTROL_0003AS";
            internal const string IRS_NAME_CONTROL_0003 = "IRS_NAME_CONTROL_0003";
            internal const string IRS_NAME_CONTROL_0003XX = "IRS_NAME_CONTROL_0003XX";
            internal const string CP_SSN_0003AS = "CP_SSN_0003AS";
            internal const string CP_SSN_0003 = "CP_SSN_0003";
            internal const string CP_SSN_0003XX = "CP_SSN_0003XX";
            internal const string IRS_TAX_YEAR_0003AS = "IRS_TAX_YEAR_0003AS";
            internal const string IRS_TAX_YEAR_0003 = "IRS_TAX_YEAR_0003";
            internal const string IRS_TAX_YEAR_0003XX = "IRS_TAX_YEAR_0003XX";
            internal const string NPRC_EMPD_OR_SEPD_0003AS = "NPRC_EMPD_OR_SEPD_0003AS";
            internal const string NPRC_EMPD_OR_SEPD_0003 = "NPRC_EMPD_OR_SEPD_0003";
            internal const string NPRC_EMPD_OR_SEPD_0003XX = "NPRC_EMPD_OR_SEPD_0003XX";
            internal const string SSA_FEDERAL_OR_MILITARY_0004AS = "SSA_FEDERAL_OR_MILITARY_0004AS";
            internal const string SSA_FEDERAL_OR_MILITARY_0004 = "SSA_FEDERAL_OR_MILITARY_0004";
            internal const string SSA_FEDERAL_OR_MILITARY_0004XX = "SSA_FEDERAL_OR_MILITARY_0004XX";
            internal const string SSA_CORP_DIVISION_0004AS = "SSA_CORP_DIVISION_0004AS";
            internal const string SSA_CORP_DIVISION_0004 = "SSA_CORP_DIVISION_0004";
            internal const string SSA_CORP_DIVISION_0004XX = "SSA_CORP_DIVISION_0004XX";
            internal const string MBR_BENEFIT_AMOUNT_0004AS = "MBR_BENEFIT_AMOUNT_0004AS";
            internal const string MBR_BENEFIT_AMOUNT_0004 = "MBR_BENEFIT_AMOUNT_0004";
            internal const string MBR_BENEFIT_AMOUNT_0004XX = "MBR_BENEFIT_AMOUNT_0004XX";
            internal const string MBR_DATE_OF_DEATH_0004AS = "MBR_DATE_OF_DEATH_0004AS";
            internal const string MBR_DATE_OF_DEATH_0004 = "MBR_DATE_OF_DEATH_0004";
            internal const string MBR_DATE_OF_DEATH_0004XX = "MBR_DATE_OF_DEATH_0004XX";
            internal const string VA_BENEFIT_CODE_0004AS = "VA_BENEFIT_CODE_0004AS";
            internal const string VA_BENEFIT_CODE_0004 = "VA_BENEFIT_CODE_0004";
            internal const string VA_BENEFIT_CODE_0004XX = "VA_BENEFIT_CODE_0004XX";
            internal const string VA_DATE_OF_DEATH_0004AS = "VA_DATE_OF_DEATH_0004AS";
            internal const string VA_DATE_OF_DEATH_0004 = "VA_DATE_OF_DEATH_0004";
            internal const string VA_DATE_OF_DEATH_0004XX = "VA_DATE_OF_DEATH_0004XX";
            internal const string VA_AMT_OF_AWARD_EFFECTI_0005AS = "VA_AMT_OF_AWARD_EFFECTI_0005AS";
            internal const string VA_AMT_OF_AWARD_EFFECTIVE_0005 = "VA_AMT_OF_AWARD_EFFECTIVE_0005";
            internal const string VA_AMT_OF_AWARD_EFFECTI_0005XX = "VA_AMT_OF_AWARD_EFFECTI_0005XX";
            internal const string VA_AMOUNT_OF_AWARD_0005AS = "VA_AMOUNT_OF_AWARD_0005AS";
            internal const string VA_AMOUNT_OF_AWARD_0005 = "VA_AMOUNT_OF_AWARD_0005";
            internal const string VA_AMOUNT_OF_AWARD_0005XX = "VA_AMOUNT_OF_AWARD_0005XX";
            internal const string VA_SUSPENSE_CODE_0005AS = "VA_SUSPENSE_CODE_0005AS";
            internal const string VA_SUSPENSE_CODE_0005 = "VA_SUSPENSE_CODE_0005";
            internal const string VA_SUSPENSE_CODE_0005XX = "VA_SUSPENSE_CODE_0005XX";
            internal const string VA_INCARCERATION_CODE_0005AS = "VA_INCARCERATION_CODE_0005AS";
            internal const string VA_INCARCERATION_CODE_0005 = "VA_INCARCERATION_CODE_0005";
            internal const string VA_INCARCERATION_CODE_0005XX = "VA_INCARCERATION_CODE_0005XX";
            internal const string VA_RETIREMENT_PAY_CODE_0005AS = "VA_RETIREMENT_PAY_CODE_0005AS";
            internal const string VA_RETIREMENT_PAY_CODE_0005 = "VA_RETIREMENT_PAY_CODE_0005";
            internal const string VA_RETIREMENT_PAY_CODE_0005XX = "VA_RETIREMENT_PAY_CODE_0005XX";
            internal const string DOD_DATE_OF_DEATH_OR_SE_0006AS = "DOD_DATE_OF_DEATH_OR_SE_0006AS";
            internal const string DOD_DATE_OF_DEATH_OR_SEPA_0006 = "DOD_DATE_OF_DEATH_OR_SEPA_0006";
            internal const string DOD_DATE_OF_DEATH_OR_SE_0006XX = "DOD_DATE_OF_DEATH_OR_SE_0006XX";
            internal const string DOD_ELIGIBILITY_CODE_0006AS = "DOD_ELIGIBILITY_CODE_0006AS";
            internal const string DOD_ELIGIBILITY_CODE_0006 = "DOD_ELIGIBILITY_CODE_0006";
            internal const string DOD_ELIGIBILITY_CODE_0006XX = "DOD_ELIGIBILITY_CODE_0006XX";
            internal const string ADDRESS_IND_TYPE_0006AS = "ADDRESS_IND_TYPE_0006AS";
            internal const string ADDRESS_IND_TYPE_0006 = "ADDRESS_IND_TYPE_0006";
            internal const string ADDRESS_IND_TYPE_0006XX = "ADDRESS_IND_TYPE_0006XX";
            internal const string HEALTH_INS_BENEFIT_INDI_0007AS = "HEALTH_INS_BENEFIT_INDI_0007AS";
            internal const string HEALTH_INS_BENEFIT_INDICA_0007 = "HEALTH_INS_BENEFIT_INDICA_0007";
            internal const string HEALTH_INS_BENEFIT_INDI_0007XX = "HEALTH_INS_BENEFIT_INDI_0007XX";
            internal const string EMPLOYMENT_STATUS_0007AS = "EMPLOYMENT_STATUS_0007AS";
            internal const string EMPLOYMENT_STATUS_0007 = "EMPLOYMENT_STATUS_0007";
            internal const string EMPLOYMENT_STATUS_0007XX = "EMPLOYMENT_STATUS_0007XX";
            internal const string EMPLOYMENT_IND_0007AS = "EMPLOYMENT_IND_0007AS";
            internal const string EMPLOYMENT_IND_0007 = "EMPLOYMENT_IND_0007";
            internal const string EMPLOYMENT_IND_0007XX = "EMPLOYMENT_IND_0007XX";
            internal const string DATE_OF_HIRE_0007AS = "DATE_OF_HIRE_0007AS";
            internal const string DATE_OF_HIRE_0007 = "DATE_OF_HIRE_0007";
            internal const string DATE_OF_HIRE_0007XX = "DATE_OF_HIRE_0007XX";
            internal const string REPORTING_FED_AGENCY_0007AS = "REPORTING_FED_AGENCY_0007AS";
            internal const string REPORTING_FED_AGENCY_0007 = "REPORTING_FED_AGENCY_0007";
            internal const string REPORTING_FED_AGENCY_0007XX = "REPORTING_FED_AGENCY_0007XX";
            internal const string FEIN_0007AS = "FEIN_0007AS";
            internal const string FEIN_0007 = "FEIN_0007";
            internal const string FEIN_0007XX = "FEIN_0007XX";
            internal const string CORRECTED_ADDITION_MULT_0008AS = "CORRECTED_ADDITION_MULT_0008AS";
            internal const string CORRECTED_ADDITION_MULTIP_0008 = "CORRECTED_ADDITION_MULTIP_0008";
            internal const string CORRECTED_ADDITION_MULT_0008XX = "CORRECTED_ADDITION_MULT_0008XX";
            internal const string SSN_MATCH_IND_0008AS = "SSN_MATCH_IND_0008AS";
            internal const string SSN_MATCH_IND_0008 = "SSN_MATCH_IND_0008";
            internal const string SSN_MATCH_IND_0008XX = "SSN_MATCH_IND_0008XX";
            internal const string REPORTING_QUARTER_0008AS = "REPORTING_QUARTER_0008AS";
            internal const string REPORTING_QUARTER_0008 = "REPORTING_QUARTER_0008";
            internal const string REPORTING_QUARTER_0008XX = "REPORTING_QUARTER_0008XX";
            internal const string STATION_NUMBER_0008AS = "STATION_NUMBER_0008AS";
            internal const string STATION_NUMBER_0008 = "STATION_NUMBER_0008";
            internal const string STATION_NUMBER_0008XX = "STATION_NUMBER_0008XX";
            internal const string NSA_DATE_OF_DEATH_0008AS = "NSA_DATE_OF_DEATH_0008AS";
            internal const string NSA_DATE_OF_DEATH_0008 = "NSA_DATE_OF_DEATH_0008";
            internal const string NSA_DATE_OF_DEATH_0008XX = "NSA_DATE_OF_DEATH_0008XX";
            internal const string EXPORT_0009EV = "EXPORT_0009EV";
            internal const string EXTERNAL_0009ET = "EXTERNAL_0009ET";
            internal const string FILE_INSTRUCTION_0009AS = "FILE_INSTRUCTION_0009AS";
            internal const string FILE_INSTRUCTION_0009 = "FILE_INSTRUCTION_0009";
            internal const string FILE_INSTRUCTION_0009XX = "FILE_INSTRUCTION_0009XX";
            internal const string NUMERIC_RETURN_CODE_0009AS = "NUMERIC_RETURN_CODE_0009AS";
            internal const string NUMERIC_RETURN_CODE_0009 = "NUMERIC_RETURN_CODE_0009";
            internal const string NUMERIC_RETURN_CODE_0009XX = "NUMERIC_RETURN_CODE_0009XX";
            internal const string TEXT_RETURN_CODE_0009AS = "TEXT_RETURN_CODE_0009AS";
            internal const string TEXT_RETURN_CODE_0009 = "TEXT_RETURN_CODE_0009";
            internal const string TEXT_RETURN_CODE_0009XX = "TEXT_RETURN_CODE_0009XX";
            internal const string TEXT_LINE_80_0009AS = "TEXT_LINE_80_0009AS";
            internal const string TEXT_LINE_80_0009 = "TEXT_LINE_80_0009";
            internal const string TEXT_LINE_80_0009XX = "TEXT_LINE_80_0009XX";
            internal const string EXPORT_DATE_OF_DEATH_IN_0010EV = "EXPORT_DATE_OF_DEATH_IN_0010EV";
            internal const string TEXT_WORK_AREA_0010ET = "TEXT_WORK_AREA_0010ET";
            internal const string TEXT_1_0010AS = "TEXT_1_0010AS";
            internal const string TEXT_1_0010 = "TEXT_1_0010";
            internal const string TEXT_1_0010XX = "TEXT_1_0010XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup GLOBDATA { get { return GetElementByName<IGroup>(Names.GLOBDATA); } }
        public IGroup PSMGR_IEF_COMMAND { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_COMMAND); } }
        public IField PSMGR_IEF_COMMAND_1 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_1); } }
        public IField PSMGR_IEF_COMMAND_2 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_2); } }
        public IField PSMGR_IEF_TRANCODE { get { return GetElementByName<IField>(Names.PSMGR_IEF_TRANCODE); } }
        public IField PSMGR_EXIT_STATE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_STATE); } }
        public IField PSMGR_EXIT_INFOMSG { get { return GetElementByName<IField>(Names.PSMGR_EXIT_INFOMSG); } }
        public IField PSMGR_USER_ID { get { return GetElementByName<IField>(Names.PSMGR_USER_ID); } }
        public IField PSMGR_TERMINAL_ID { get { return GetElementByName<IField>(Names.PSMGR_TERMINAL_ID); } }
        public IField PSMGR_PRINTER_ID { get { return GetElementByName<IField>(Names.PSMGR_PRINTER_ID); } }
        public IField PSMGR_CURRENT_DATE { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_DATE); } }
        public IField PSMGR_CURRENT_TIME { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_TIME); } }
        public IField PSMGR_RUNTIME_TYPE { get { return GetElementByName<IField>(Names.PSMGR_RUNTIME_TYPE); } }
        public IGroup PSMGR_FUNCTION_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA); } }
        public IField PSMGR_FUNC_ERRMSG { get { return GetElementByName<IField>(Names.PSMGR_FUNC_ERRMSG); } }
        public IField PSMGR_FUNC_NAME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_NAME); } }
        public IField PSMGR_FUNC_IN_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_DATE); } }
        public IGroup PSMGR_FUNC_IN_DDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_DDURA); } }
        public IGroup DDURA_YEAR { get { return GetElementByName<IGroup>(Names.DDURA_YEAR); } }
        public IField DDURA_Y_MISS { get { return GetElementByName<IField>(Names.DDURA_Y_MISS); } }
        public IField DDURA_YYYY { get { return GetElementByName<IField>(Names.DDURA_YYYY); } }
        public IGroup DDURA_MONTH { get { return GetElementByName<IGroup>(Names.DDURA_MONTH); } }
        public IField DDURA_M_MISS { get { return GetElementByName<IField>(Names.DDURA_M_MISS); } }
        public IField DDURA_MM { get { return GetElementByName<IField>(Names.DDURA_MM); } }
        public IGroup DDURA_DAY { get { return GetElementByName<IGroup>(Names.DDURA_DAY); } }
        public IField DDURA_D_MISS { get { return GetElementByName<IField>(Names.DDURA_D_MISS); } }
        public IField DDURA_DD { get { return GetElementByName<IField>(Names.DDURA_DD); } }
        public IField PSMGR_FUNC_OUT_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_DATE); } }
        public IField PSMGR_FUNC_IN_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIME); } }
        public IGroup PSMGR_FUNC_IN_TDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TDURA); } }
        public IGroup TDURA_HOUR { get { return GetElementByName<IGroup>(Names.TDURA_HOUR); } }
        public IField TDURA_H_MISS { get { return GetElementByName<IField>(Names.TDURA_H_MISS); } }
        public IField TDURA_HH { get { return GetElementByName<IField>(Names.TDURA_HH); } }
        public IGroup TDURA_MINUTE { get { return GetElementByName<IGroup>(Names.TDURA_MINUTE); } }
        public IField TDURA_M_MISS { get { return GetElementByName<IField>(Names.TDURA_M_MISS); } }
        public IField TDURA_MM { get { return GetElementByName<IField>(Names.TDURA_MM); } }
        public IGroup TDURA_SECOND { get { return GetElementByName<IGroup>(Names.TDURA_SECOND); } }
        public IField TDURA_S_MISS { get { return GetElementByName<IField>(Names.TDURA_S_MISS); } }
        public IField TDURA_SS { get { return GetElementByName<IField>(Names.TDURA_SS); } }
        public IField PSMGR_FUNC_OUT_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIME); } }
        public IField PSMGR_IEF_NEXTTRAN { get { return GetElementByName<IField>(Names.PSMGR_IEF_NEXTTRAN); } }
        public IField PSMGR_EXIT_MSGTYPE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_MSGTYPE); } }
        public IGroup PSMGR_IEF_DEBUG_FLAGS { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_DEBUG_FLAGS); } }
        public IField PSMGR_IEF_DEBUG { get { return GetElementByName<IField>(Names.PSMGR_IEF_DEBUG); } }
        public ICheckField PSMGR_DEBUG_ON { get { return GetElementByName<ICheckField>(Names.PSMGR_DEBUG_ON); } }
        public IGroup PSMGR_ENVIRONMENT_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ENVIRONMENT_DATA); } }
        public IField PSMGR_PCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_PCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_PCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_PCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_PCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_PCB_ADR); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup PSMGR_ERROR_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ERROR_DATA); } }
        public IField ERROR_ACTION_NAME { get { return GetElementByName<IField>(Names.ERROR_ACTION_NAME); } }
        public IField ERROR_ENCOUNTERED_SW { get { return GetElementByName<IField>(Names.ERROR_ENCOUNTERED_SW); } }
        public IField VIEW_OVERFLOW_SW { get { return GetElementByName<IField>(Names.VIEW_OVERFLOW_SW); } }
        public IGroup PSMGR_DASG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DASG_DATA); } }
        public IGroup ACTION_ID_X { get { return GetElementByName<IGroup>(Names.ACTION_ID_X); } }
        public IField ACTION_ID { get { return GetElementByName<IField>(Names.ACTION_ID); } }
        public IGroup ATTRIBUTE_ID_X { get { return GetElementByName<IGroup>(Names.ATTRIBUTE_ID_X); } }
        public IField ATTRIBUTE_ID { get { return GetElementByName<IField>(Names.ATTRIBUTE_ID); } }
        public IField STATUS_FLAG { get { return GetElementByName<IField>(Names.STATUS_FLAG); } }
        public ICheckField WHEN_SUCCESSFUL_SF { get { return GetElementByName<ICheckField>(Names.WHEN_SUCCESSFUL_SF); } }
        public ICheckField FATAL_ERROR_SF { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_SF); } }
        public ICheckField DB_ERROR_SF { get { return GetElementByName<ICheckField>(Names.DB_ERROR_SF); } }
        public ICheckField ABORT_SHOW_DBMS_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_DBMS_MSG_SF); } }
        public ICheckField ABORT_SHOW_USER_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_USER_MSG_SF); } }
        public ICheckField RETRY_TRAN_REQUESTED_SF { get { return GetElementByName<ICheckField>(Names.RETRY_TRAN_REQUESTED_SF); } }
        public ICheckField PSTEP_USE_FAILURE { get { return GetElementByName<ICheckField>(Names.PSTEP_USE_FAILURE); } }
        public ICheckField ASYNC_WHEN_AVAILABLE_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_AVAILABLE_SF); } }
        public ICheckField ASYNC_WHEN_ACCEPTED_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_ACCEPTED_SF); } }
        public ICheckField ASYNC_WHEN_NOT_ACCEPTED_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_NOT_ACCEPTED_SF); } }
        public ICheckField ASYNC_WHEN_INVALID_ID_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_INVALID_ID_SF); } }
        public ICheckField ASYNC_WHEN_PENDING_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_PENDING_SF); } }
        public ICheckField ASYNC_WHEN_SERVER_ERROR_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_SERVER_ERROR_SF); } }
        public ICheckField ASYNC_WHEN_COMM_ERROR_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_COMM_ERROR_SF); } }
        public IField LAST_STATUS { get { return GetElementByName<IField>(Names.LAST_STATUS); } }
        public ICheckField DB_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_ERROR_FL_LS); } }
        public ICheckField DB_DEADLOCK_TIMOUT_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_DEADLOCK_TIMOUT_FL_LS); } }
        public ICheckField DUPLICATE_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.DUPLICATE_FOUND_FL_LS); } }
        public ICheckField INVALID_DATAA_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAA_FL_LS); } }
        public ICheckField INVALID_DATAB_TYPE_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_TYPE_FL_LS); } }
        public ICheckField INVALID_DATAB_PERM_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_PERM_FL_LS); } }
        public ICheckField FATAL_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_FL_LS); } }
        public ICheckField NOT_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_FOUND_FL_LS); } }
        public ICheckField NOT_UNIQUE_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_UNIQUE_FL_LS); } }
        public ICheckField IEF_FUNCTION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_FUNCTION_ERROR_FL_LS); } }
        public ICheckField IEF_DURATION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_DURATION_ERROR_FL_LS); } }
        public ICheckField USED_PSTEP_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_NOT_FOUND); } }
        public ICheckField USED_PSTEP_ROUTING_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ROUTING_ERR); } }
        public ICheckField USED_PSTEP_SND_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_FMT_ERR); } }
        public ICheckField USED_PSTEP_ENCRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ENCRYPT_ERR); } }
        public ICheckField USED_PSTEP_SND_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_FMT_ERR); } }
        public ICheckField USED_PSTEP_TIRSECR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TIRSECR_ERR); } }
        public ICheckField USED_PSTEP_TOKEN_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TOKEN_ERR); } }
        public ICheckField USED_PSTEP_SEND_MAX_SIZE { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SEND_MAX_SIZE); } }
        public ICheckField USED_PSTEP_SECG_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SECG_ERR); } }
        public ICheckField USED_PSTEP_ALLOC_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ALLOC_ERR); } }
        public ICheckField USED_PSTEP_CONNECT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_CONNECT_ERR); } }
        public ICheckField USED_PSTEP_XERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XERR); } }
        public ICheckField USED_PSTEP_RCV_UA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_UA_ERR); } }
        public ICheckField USED_PSTEP_RCV_ES_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_ES_ERR); } }
        public ICheckField USED_PSTEP_XFAL { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XFAL); } }
        public ICheckField USED_PSTEP_SETOA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SETOA_ERR); } }
        public ICheckField USED_PSTEP_RCV_VIEW_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_VIEW_ERR); } }
        public ICheckField USED_PSTEP_DECRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_DECRYPT_ERR); } }
        public IField SAVE_SQLCA { get { return GetElementByName<IField>(Names.SAVE_SQLCA); } }
        public IGroup PSMGR_DEBUG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DEBUG_DATA); } }
        public IField PSMGR_TRACE_ADR { get { return GetElementByName<IField>(Names.PSMGR_TRACE_ADR); } }
        public IGroup LAST_STATEMENT_X { get { return GetElementByName<IGroup>(Names.LAST_STATEMENT_X); } }
        public IField LAST_STATEMENT_NUM { get { return GetElementByName<IField>(Names.LAST_STATEMENT_NUM); } }
        public IField CUR_AB_ID { get { return GetElementByName<IField>(Names.CUR_AB_ID); } }
        public IField CUR_AB_NAME { get { return GetElementByName<IField>(Names.CUR_AB_NAME); } }
        public IField PSMGR_TIRDATE_SAVEAREA { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SAVEAREA); } }
        public IGroup PSMGR_TIRDATE_CMCB { get { return GetElementByName<IGroup>(Names.PSMGR_TIRDATE_CMCB); } }
        public IField PSMGR_TIRDATE_DATE { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE); } }
        public IField PSMGR_TIRDATE_TIME { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME); } }
        public IField PSMGR_TIRDATE_INC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_INC); } }
        public IField PSMGR_TIRDATE_RC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RC); } }
        public ICheckField PSMGR_TIRDATE_OK { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_OK); } }
        public ICheckField PSMGR_TIRDATE_WARNING { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_WARNING); } }
        public ICheckField PSMGR_TIRDATE_ERROR { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_ERROR); } }
        public IField PSMGR_TIRDATE_REQ { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_REQ); } }
        public IField PSMGR_TIRDATE_DATEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATEF); } }
        public IField PSMGR_TIRDATE_TIMEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIMEF); } }
        public IField PSMGR_TIRDATE_RETMSG { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RETMSG); } }
        public IField PSMGR_TIRDATE_TSTAMP { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TSTAMP); } }
        public IField PSMGR_TIRDATE_DATE_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE_Z); } }
        public IField PSMGR_TIRDATE_TIME_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME_Z); } }
        public IField PSMGR_TIRDATE_SKIP_VAL { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SKIP_VAL); } }
        public IField PSMGR_ROLLBACK_RQSTED { get { return GetElementByName<IField>(Names.PSMGR_ROLLBACK_RQSTED); } }
        public ICheckField ROLLBACK_RQSTED { get { return GetElementByName<ICheckField>(Names.ROLLBACK_RQSTED); } }
        public ICheckField ABEND_RQSTED { get { return GetElementByName<ICheckField>(Names.ABEND_RQSTED); } }
        public ICheckField TERMINATE_RQSTED { get { return GetElementByName<ICheckField>(Names.TERMINATE_RQSTED); } }
        public IGroup TIRTRCE_SAVE_AREA { get { return GetElementByName<IGroup>(Names.TIRTRCE_SAVE_AREA); } }
        public IField TOP_INDX { get { return GetElementByName<IField>(Names.TOP_INDX); } }
        public IField BOTTOM_INDX { get { return GetElementByName<IField>(Names.BOTTOM_INDX); } }
        public IField END_INDX { get { return GetElementByName<IField>(Names.END_INDX); } }
        public IField LAST_STMT { get { return GetElementByName<IField>(Names.LAST_STMT); } }
        public IField TOP_OF_CALL { get { return GetElementByName<IField>(Names.TOP_OF_CALL); } }
        public IField TRACE_BREAK_POINT { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT); } }
        public IField TRACE_BREAK_POINT_STATUS { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT_STATUS); } }
        public IField LAST_AB_NAME { get { return GetElementByName<IField>(Names.LAST_AB_NAME); } }
        public IField COLOR { get { return GetElementByName<IField>(Names.COLOR); } }
        public IField COLORT { get { return GetElementByName<IField>(Names.COLORT); } }
        public IField HILITE { get { return GetElementByName<IField>(Names.HILITE); } }
        public IField TRACE_ON_OFF { get { return GetElementByName<IField>(Names.TRACE_ON_OFF); } }
        public IGroup CASCADE_DELETE_FLAGS { get { return GetElementByName<IGroup>(Names.CASCADE_DELETE_FLAGS); } }
        public IField V1PRESENT { get { return GetElementByName<IField>(Names.V1PRESENT); } }
        public IField V2PRESENT { get { return GetElementByName<IField>(Names.V2PRESENT); } }
        public IField CASCADE1 { get { return GetElementByName<IField>(Names.CASCADE1); } }
        public IField CASCADE2 { get { return GetElementByName<IField>(Names.CASCADE2); } }
        public IField PROCESSQ_FLAG { get { return GetElementByName<IField>(Names.PROCESSQ_FLAG); } }
        public IGroup PSMGR_ACTIVE_DIALECT { get { return GetElementByName<IGroup>(Names.PSMGR_ACTIVE_DIALECT); } }
        public IField DIALECT_NAME { get { return GetElementByName<IField>(Names.DIALECT_NAME); } }
        public IField MESSAGE_TABLE_NAME { get { return GetElementByName<IField>(Names.MESSAGE_TABLE_NAME); } }
        public IField TRANSLATE_TABLE_NAME { get { return GetElementByName<IField>(Names.TRANSLATE_TABLE_NAME); } }
        public IGroup PSMGR_FUNCTION_DATA_EXT { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA_EXT); } }
        public IField PSMGR_FUNC_IN_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIMESTAMP); } }
        public IGroup PSMGR_FUNC_IN_TSDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TSDURA); } }
        public IGroup TSDURA_MICROSECOND { get { return GetElementByName<IGroup>(Names.TSDURA_MICROSECOND); } }
        public IField TSDURA_M_MISS { get { return GetElementByName<IField>(Names.TSDURA_M_MISS); } }
        public IField TSDURA_MS { get { return GetElementByName<IField>(Names.TSDURA_MS); } }
        public IField PSMGR_FUNC_OUT_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIMESTAMP); } }
        public IField PSMGR_CICS_FAIL_SW { get { return GetElementByName<IField>(Names.PSMGR_CICS_FAIL_SW); } }
        public ICheckField INHIBIT_CICS_RECEIVE { get { return GetElementByName<ICheckField>(Names.INHIBIT_CICS_RECEIVE); } }
        public IField CLIENT_USERID { get { return GetElementByName<IField>(Names.CLIENT_USERID); } }
        public IField CLIENT_PASSWORD { get { return GetElementByName<IField>(Names.CLIENT_PASSWORD); } }
        public IField LOAD_MODULE_NAME { get { return GetElementByName<IField>(Names.LOAD_MODULE_NAME); } }
        public IField INSTRUMENT_CODE { get { return GetElementByName<IField>(Names.INSTRUMENT_CODE); } }
        public IField TX_RETRY_LIMIT { get { return GetElementByName<IField>(Names.TX_RETRY_LIMIT); } }
        public IField TX_TIMEOUT { get { return GetElementByName<IField>(Names.TX_TIMEOUT); } }
        public IGroup PSMGR_EXTRA_ERRINFO { get { return GetElementByName<IGroup>(Names.PSMGR_EXTRA_ERRINFO); } }
        public IField ERRINFO_BUF_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_BUF_SIZE); } }
        public IField ERRINFO_MSG_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_MSG_SIZE); } }
        public IField ERRINFO_BUF_ADDR { get { return GetElementByName<IField>(Names.ERRINFO_BUF_ADDR); } }
        public IField TX_RETRY_COUNT { get { return GetElementByName<IField>(Names.TX_RETRY_COUNT); } }
        public IField TX_USER_RETRY_ALLOWED { get { return GetElementByName<IField>(Names.TX_USER_RETRY_ALLOWED); } }
        public IGroup PSMGR_PSTEP_USE_PTRS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_PTRS); } }
        public IField PSTEP_FAIL_MSG_PTR { get { return GetElementByName<IField>(Names.PSTEP_FAIL_MSG_PTR); } }
        public IField PSTEP_GURB_REST_PTR { get { return GetElementByName<IField>(Names.PSTEP_GURB_REST_PTR); } }
        public IField PSTEP_LIPS_PTR { get { return GetElementByName<IField>(Names.PSTEP_LIPS_PTR); } }
        public IField PSTEP_TBL_PTR { get { return GetElementByName<IField>(Names.PSTEP_TBL_PTR); } }
        public IField PSTEP_DDF_PTR { get { return GetElementByName<IField>(Names.PSTEP_DDF_PTR); } }
        public IField PSTEP_COMM_ID { get { return GetElementByName<IField>(Names.PSTEP_COMM_ID); } }
        public IField PSTEP_APPL_LIST_PTR { get { return GetElementByName<IField>(Names.PSTEP_APPL_LIST_PTR); } }
        public IField PSTEP_CURR_PST_PTR { get { return GetElementByName<IField>(Names.PSTEP_CURR_PST_PTR); } }
        public IGroup PSMGR_PSTEP_USE_SYSFLDS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_SYSFLDS); } }
        public IField PSMGR_EIBERRCD { get { return GetElementByName<IField>(Names.PSMGR_EIBERRCD); } }
        public IField PSMGR_EIBFN { get { return GetElementByName<IField>(Names.PSMGR_EIBFN); } }
        public IField PSMGR_EIBRESP { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP); } }
        public IField PSMGR_EIBRESP2 { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP2); } }
        public IGroup PSMGR_ASYNC_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ASYNC_DATA); } }
        public IField ASYNC_MODE { get { return GetElementByName<IField>(Names.ASYNC_MODE); } }
        public ICheckField FLOW_TYPE_SYNC { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_SYNC); } }
        public ICheckField FLOW_TYPE_ASYNC { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_ASYNC); } }
        public ICheckField FLOW_TYPE_NO_RESPONSE { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_NO_RESPONSE); } }
        public IField ASYNC_FLOW_STATUS_TABLE_PTR { get { return GetElementByName<IField>(Names.ASYNC_FLOW_STATUS_TABLE_PTR); } }
        public IField ASYNC_SERVER_LOC_TABLE_PTR { get { return GetElementByName<IField>(Names.ASYNC_SERVER_LOC_TABLE_PTR); } }
        public IGroup IMPORT_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_0001EV); } }
        public IGroup EXTERNAL_0001ET { get { return GetElementByName<IGroup>(Names.EXTERNAL_0001ET); } }
        public IField FILE_INSTRUCTION_0001AS { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0001AS); } }
        public IField FILE_INSTRUCTION_0001 { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0001); } }
        public IField FILE_INSTRUCTION_0001XX { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0001XX); } }
        public IGroup EXPORT_0002EV { get { return GetElementByName<IGroup>(Names.EXPORT_0002EV); } }
        public IGroup EXTERNAL_FPLS_RESPONSE_0002ET { get { return GetElementByName<IGroup>(Names.EXTERNAL_FPLS_RESPONSE_0002ET); } }
        public IField NDNH_RESPONSE_0002AS { get { return GetElementByName<IField>(Names.NDNH_RESPONSE_0002AS); } }
        public IField NDNH_RESPONSE_0002 { get { return GetElementByName<IField>(Names.NDNH_RESPONSE_0002); } }
        public IField NDNH_RESPONSE_0002XX { get { return GetElementByName<IField>(Names.NDNH_RESPONSE_0002XX); } }
        public IField STATE_ABBREVIATION_0002AS { get { return GetElementByName<IField>(Names.STATE_ABBREVIATION_0002AS); } }
        public IField STATE_ABBREVIATION_0002 { get { return GetElementByName<IField>(Names.STATE_ABBREVIATION_0002); } }
        public IField STATE_ABBREVIATION_0002XX { get { return GetElementByName<IField>(Names.STATE_ABBREVIATION_0002XX); } }
        public IField AGENCY_CODE_0002AS { get { return GetElementByName<IField>(Names.AGENCY_CODE_0002AS); } }
        public IField AGENCY_CODE_0002 { get { return GetElementByName<IField>(Names.AGENCY_CODE_0002); } }
        public IField AGENCY_CODE_0002XX { get { return GetElementByName<IField>(Names.AGENCY_CODE_0002XX); } }
        public IField NAME_SENT_IND_0002AS { get { return GetElementByName<IField>(Names.NAME_SENT_IND_0002AS); } }
        public IField NAME_SENT_IND_0002 { get { return GetElementByName<IField>(Names.NAME_SENT_IND_0002); } }
        public IField NAME_SENT_IND_0002XX { get { return GetElementByName<IField>(Names.NAME_SENT_IND_0002XX); } }
        public IField AP_FIRST_NAME_0002AS { get { return GetElementByName<IField>(Names.AP_FIRST_NAME_0002AS); } }
        public IField AP_FIRST_NAME_0002 { get { return GetElementByName<IField>(Names.AP_FIRST_NAME_0002); } }
        public IField AP_FIRST_NAME_0002XX { get { return GetElementByName<IField>(Names.AP_FIRST_NAME_0002XX); } }
        public IField AP_MIDDLE_NAME_0002AS { get { return GetElementByName<IField>(Names.AP_MIDDLE_NAME_0002AS); } }
        public IField AP_MIDDLE_NAME_0002 { get { return GetElementByName<IField>(Names.AP_MIDDLE_NAME_0002); } }
        public IField AP_MIDDLE_NAME_0002XX { get { return GetElementByName<IField>(Names.AP_MIDDLE_NAME_0002XX); } }
        public IField AP_FIRST_LAST_NAME_0002AS { get { return GetElementByName<IField>(Names.AP_FIRST_LAST_NAME_0002AS); } }
        public IField AP_FIRST_LAST_NAME_0002 { get { return GetElementByName<IField>(Names.AP_FIRST_LAST_NAME_0002); } }
        public IField AP_FIRST_LAST_NAME_0002XX { get { return GetElementByName<IField>(Names.AP_FIRST_LAST_NAME_0002XX); } }
        public IField AP_SECOND_LAST_NAME_0002AS { get { return GetElementByName<IField>(Names.AP_SECOND_LAST_NAME_0002AS); } }
        public IField AP_SECOND_LAST_NAME_0002 { get { return GetElementByName<IField>(Names.AP_SECOND_LAST_NAME_0002); } }
        public IField AP_SECOND_LAST_NAME_0002XX { get { return GetElementByName<IField>(Names.AP_SECOND_LAST_NAME_0002XX); } }
        public IField AP_THIRD_LAST_NAME_0002AS { get { return GetElementByName<IField>(Names.AP_THIRD_LAST_NAME_0002AS); } }
        public IField AP_THIRD_LAST_NAME_0002 { get { return GetElementByName<IField>(Names.AP_THIRD_LAST_NAME_0002); } }
        public IField AP_THIRD_LAST_NAME_0002XX { get { return GetElementByName<IField>(Names.AP_THIRD_LAST_NAME_0002XX); } }
        public IField AP_NAME_RETURNED_0002AS { get { return GetElementByName<IField>(Names.AP_NAME_RETURNED_0002AS); } }
        public IField AP_NAME_RETURNED_0002 { get { return GetElementByName<IField>(Names.AP_NAME_RETURNED_0002); } }
        public IField AP_NAME_RETURNED_0002XX { get { return GetElementByName<IField>(Names.AP_NAME_RETURNED_0002XX); } }
        public IField SSN_SUBMITTED_0002AS { get { return GetElementByName<IField>(Names.SSN_SUBMITTED_0002AS); } }
        public IField SSN_SUBMITTED_0002 { get { return GetElementByName<IField>(Names.SSN_SUBMITTED_0002); } }
        public IField SSN_SUBMITTED_0002XX { get { return GetElementByName<IField>(Names.SSN_SUBMITTED_0002XX); } }
        public IField AP_CSE_PERSON_NUMBER_0002AS { get { return GetElementByName<IField>(Names.AP_CSE_PERSON_NUMBER_0002AS); } }
        public IField AP_CSE_PERSON_NUMBER_0002 { get { return GetElementByName<IField>(Names.AP_CSE_PERSON_NUMBER_0002); } }
        public IField AP_CSE_PERSON_NUMBER_0002XX { get { return GetElementByName<IField>(Names.AP_CSE_PERSON_NUMBER_0002XX); } }
        public IField FPLS_REQUEST_IDENTIFIER_0003AS { get { return GetElementByName<IField>(Names.FPLS_REQUEST_IDENTIFIER_0003AS); } }
        public IField FPLS_REQUEST_IDENTIFIER_0003 { get { return GetElementByName<IField>(Names.FPLS_REQUEST_IDENTIFIER_0003); } }
        public IField FPLS_REQUEST_IDENTIFIER_0003XX { get { return GetElementByName<IField>(Names.FPLS_REQUEST_IDENTIFIER_0003XX); } }
        public IField USERS_FIELD_0003AS { get { return GetElementByName<IField>(Names.USERS_FIELD_0003AS); } }
        public IField USERS_FIELD_0003 { get { return GetElementByName<IField>(Names.USERS_FIELD_0003); } }
        public IField USERS_FIELD_0003XX { get { return GetElementByName<IField>(Names.USERS_FIELD_0003XX); } }
        public IField LOCAL_CODE_0003AS { get { return GetElementByName<IField>(Names.LOCAL_CODE_0003AS); } }
        public IField LOCAL_CODE_0003 { get { return GetElementByName<IField>(Names.LOCAL_CODE_0003); } }
        public IField LOCAL_CODE_0003XX { get { return GetElementByName<IField>(Names.LOCAL_CODE_0003XX); } }
        public IField TYPE_OF_CASE_0003AS { get { return GetElementByName<IField>(Names.TYPE_OF_CASE_0003AS); } }
        public IField TYPE_OF_CASE_0003 { get { return GetElementByName<IField>(Names.TYPE_OF_CASE_0003); } }
        public IField TYPE_OF_CASE_0003XX { get { return GetElementByName<IField>(Names.TYPE_OF_CASE_0003XX); } }
        public IField ADDR_DATE_FORMAT_IND_0003AS { get { return GetElementByName<IField>(Names.ADDR_DATE_FORMAT_IND_0003AS); } }
        public IField ADDR_DATE_FORMAT_IND_0003 { get { return GetElementByName<IField>(Names.ADDR_DATE_FORMAT_IND_0003); } }
        public IField ADDR_DATE_FORMAT_IND_0003XX { get { return GetElementByName<IField>(Names.ADDR_DATE_FORMAT_IND_0003XX); } }
        public IField DATE_OF_ADDRESS_0003AS { get { return GetElementByName<IField>(Names.DATE_OF_ADDRESS_0003AS); } }
        public IField DATE_OF_ADDRESS_0003 { get { return GetElementByName<IField>(Names.DATE_OF_ADDRESS_0003); } }
        public IField DATE_OF_ADDRESS_0003XX { get { return GetElementByName<IField>(Names.DATE_OF_ADDRESS_0003XX); } }
        public IField RESPONSE_CODE_0003AS { get { return GetElementByName<IField>(Names.RESPONSE_CODE_0003AS); } }
        public IField RESPONSE_CODE_0003 { get { return GetElementByName<IField>(Names.RESPONSE_CODE_0003); } }
        public IField RESPONSE_CODE_0003XX { get { return GetElementByName<IField>(Names.RESPONSE_CODE_0003XX); } }
        public IField ADDRESS_FORMAT_IND_0003AS { get { return GetElementByName<IField>(Names.ADDRESS_FORMAT_IND_0003AS); } }
        public IField ADDRESS_FORMAT_IND_0003 { get { return GetElementByName<IField>(Names.ADDRESS_FORMAT_IND_0003); } }
        public IField ADDRESS_FORMAT_IND_0003XX { get { return GetElementByName<IField>(Names.ADDRESS_FORMAT_IND_0003XX); } }
        public IField RETURNED_ADDRESS_0003AS { get { return GetElementByName<IField>(Names.RETURNED_ADDRESS_0003AS); } }
        public IField RETURNED_ADDRESS_0003 { get { return GetElementByName<IField>(Names.RETURNED_ADDRESS_0003); } }
        public IField RETURNED_ADDRESS_0003XX { get { return GetElementByName<IField>(Names.RETURNED_ADDRESS_0003XX); } }
        public IField DOD_STATUS_0003AS { get { return GetElementByName<IField>(Names.DOD_STATUS_0003AS); } }
        public IField DOD_STATUS_0003 { get { return GetElementByName<IField>(Names.DOD_STATUS_0003); } }
        public IField DOD_STATUS_0003XX { get { return GetElementByName<IField>(Names.DOD_STATUS_0003XX); } }
        public IField DOD_SERVICE_CODE_0003AS { get { return GetElementByName<IField>(Names.DOD_SERVICE_CODE_0003AS); } }
        public IField DOD_SERVICE_CODE_0003 { get { return GetElementByName<IField>(Names.DOD_SERVICE_CODE_0003); } }
        public IField DOD_SERVICE_CODE_0003XX { get { return GetElementByName<IField>(Names.DOD_SERVICE_CODE_0003XX); } }
        public IField DOD_PAY_GRADE_CODE_0003AS { get { return GetElementByName<IField>(Names.DOD_PAY_GRADE_CODE_0003AS); } }
        public IField DOD_PAY_GRADE_CODE_0003 { get { return GetElementByName<IField>(Names.DOD_PAY_GRADE_CODE_0003); } }
        public IField DOD_PAY_GRADE_CODE_0003XX { get { return GetElementByName<IField>(Names.DOD_PAY_GRADE_CODE_0003XX); } }
        public IField DOD_ANNUAL_SALARY_0003AS { get { return GetElementByName<IField>(Names.DOD_ANNUAL_SALARY_0003AS); } }
        public IField DOD_ANNUAL_SALARY_0003 { get { return GetElementByName<IField>(Names.DOD_ANNUAL_SALARY_0003); } }
        public IField DOD_ANNUAL_SALARY_0003XX { get { return GetElementByName<IField>(Names.DOD_ANNUAL_SALARY_0003XX); } }
        public IField DOD_DATE_OF_BIRTH_0003AS { get { return GetElementByName<IField>(Names.DOD_DATE_OF_BIRTH_0003AS); } }
        public IField DOD_DATE_OF_BIRTH_0003 { get { return GetElementByName<IField>(Names.DOD_DATE_OF_BIRTH_0003); } }
        public IField DOD_DATE_OF_BIRTH_0003XX { get { return GetElementByName<IField>(Names.DOD_DATE_OF_BIRTH_0003XX); } }
        public IField SUBMITTING_OFFICE_0003AS { get { return GetElementByName<IField>(Names.SUBMITTING_OFFICE_0003AS); } }
        public IField SUBMITTING_OFFICE_0003 { get { return GetElementByName<IField>(Names.SUBMITTING_OFFICE_0003); } }
        public IField SUBMITTING_OFFICE_0003XX { get { return GetElementByName<IField>(Names.SUBMITTING_OFFICE_0003XX); } }
        public IField SESA_RESPONDING_STATE_0003AS { get { return GetElementByName<IField>(Names.SESA_RESPONDING_STATE_0003AS); } }
        public IField SESA_RESPONDING_STATE_0003 { get { return GetElementByName<IField>(Names.SESA_RESPONDING_STATE_0003); } }
        public IField SESA_RESPONDING_STATE_0003XX { get { return GetElementByName<IField>(Names.SESA_RESPONDING_STATE_0003XX); } }
        public IField SESA_WAGE_CLAIM_IND_0003AS { get { return GetElementByName<IField>(Names.SESA_WAGE_CLAIM_IND_0003AS); } }
        public IField SESA_WAGE_CLAIM_IND_0003 { get { return GetElementByName<IField>(Names.SESA_WAGE_CLAIM_IND_0003); } }
        public IField SESA_WAGE_CLAIM_IND_0003XX { get { return GetElementByName<IField>(Names.SESA_WAGE_CLAIM_IND_0003XX); } }
        public IField SESA_WAGE_AMOUNT_0003AS { get { return GetElementByName<IField>(Names.SESA_WAGE_AMOUNT_0003AS); } }
        public IField SESA_WAGE_AMOUNT_0003 { get { return GetElementByName<IField>(Names.SESA_WAGE_AMOUNT_0003); } }
        public IField SESA_WAGE_AMOUNT_0003XX { get { return GetElementByName<IField>(Names.SESA_WAGE_AMOUNT_0003XX); } }
        public IField IRS_NAME_CONTROL_0003AS { get { return GetElementByName<IField>(Names.IRS_NAME_CONTROL_0003AS); } }
        public IField IRS_NAME_CONTROL_0003 { get { return GetElementByName<IField>(Names.IRS_NAME_CONTROL_0003); } }
        public IField IRS_NAME_CONTROL_0003XX { get { return GetElementByName<IField>(Names.IRS_NAME_CONTROL_0003XX); } }
        public IField CP_SSN_0003AS { get { return GetElementByName<IField>(Names.CP_SSN_0003AS); } }
        public IField CP_SSN_0003 { get { return GetElementByName<IField>(Names.CP_SSN_0003); } }
        public IField CP_SSN_0003XX { get { return GetElementByName<IField>(Names.CP_SSN_0003XX); } }
        public IField IRS_TAX_YEAR_0003AS { get { return GetElementByName<IField>(Names.IRS_TAX_YEAR_0003AS); } }
        public IField IRS_TAX_YEAR_0003 { get { return GetElementByName<IField>(Names.IRS_TAX_YEAR_0003); } }
        public IField IRS_TAX_YEAR_0003XX { get { return GetElementByName<IField>(Names.IRS_TAX_YEAR_0003XX); } }
        public IField NPRC_EMPD_OR_SEPD_0003AS { get { return GetElementByName<IField>(Names.NPRC_EMPD_OR_SEPD_0003AS); } }
        public IField NPRC_EMPD_OR_SEPD_0003 { get { return GetElementByName<IField>(Names.NPRC_EMPD_OR_SEPD_0003); } }
        public IField NPRC_EMPD_OR_SEPD_0003XX { get { return GetElementByName<IField>(Names.NPRC_EMPD_OR_SEPD_0003XX); } }
        public IField SSA_FEDERAL_OR_MILITARY_0004AS { get { return GetElementByName<IField>(Names.SSA_FEDERAL_OR_MILITARY_0004AS); } }
        public IField SSA_FEDERAL_OR_MILITARY_0004 { get { return GetElementByName<IField>(Names.SSA_FEDERAL_OR_MILITARY_0004); } }
        public IField SSA_FEDERAL_OR_MILITARY_0004XX { get { return GetElementByName<IField>(Names.SSA_FEDERAL_OR_MILITARY_0004XX); } }
        public IField SSA_CORP_DIVISION_0004AS { get { return GetElementByName<IField>(Names.SSA_CORP_DIVISION_0004AS); } }
        public IField SSA_CORP_DIVISION_0004 { get { return GetElementByName<IField>(Names.SSA_CORP_DIVISION_0004); } }
        public IField SSA_CORP_DIVISION_0004XX { get { return GetElementByName<IField>(Names.SSA_CORP_DIVISION_0004XX); } }
        public IField MBR_BENEFIT_AMOUNT_0004AS { get { return GetElementByName<IField>(Names.MBR_BENEFIT_AMOUNT_0004AS); } }
        public IField MBR_BENEFIT_AMOUNT_0004 { get { return GetElementByName<IField>(Names.MBR_BENEFIT_AMOUNT_0004); } }
        public IField MBR_BENEFIT_AMOUNT_0004XX { get { return GetElementByName<IField>(Names.MBR_BENEFIT_AMOUNT_0004XX); } }
        public IField MBR_DATE_OF_DEATH_0004AS { get { return GetElementByName<IField>(Names.MBR_DATE_OF_DEATH_0004AS); } }
        public IField MBR_DATE_OF_DEATH_0004 { get { return GetElementByName<IField>(Names.MBR_DATE_OF_DEATH_0004); } }
        public IField MBR_DATE_OF_DEATH_0004XX { get { return GetElementByName<IField>(Names.MBR_DATE_OF_DEATH_0004XX); } }
        public IField VA_BENEFIT_CODE_0004AS { get { return GetElementByName<IField>(Names.VA_BENEFIT_CODE_0004AS); } }
        public IField VA_BENEFIT_CODE_0004 { get { return GetElementByName<IField>(Names.VA_BENEFIT_CODE_0004); } }
        public IField VA_BENEFIT_CODE_0004XX { get { return GetElementByName<IField>(Names.VA_BENEFIT_CODE_0004XX); } }
        public IField VA_DATE_OF_DEATH_0004AS { get { return GetElementByName<IField>(Names.VA_DATE_OF_DEATH_0004AS); } }
        public IField VA_DATE_OF_DEATH_0004 { get { return GetElementByName<IField>(Names.VA_DATE_OF_DEATH_0004); } }
        public IField VA_DATE_OF_DEATH_0004XX { get { return GetElementByName<IField>(Names.VA_DATE_OF_DEATH_0004XX); } }
        public IField VA_AMT_OF_AWARD_EFFECTI_0005AS { get { return GetElementByName<IField>(Names.VA_AMT_OF_AWARD_EFFECTI_0005AS); } }
        public IField VA_AMT_OF_AWARD_EFFECTIVE_0005 { get { return GetElementByName<IField>(Names.VA_AMT_OF_AWARD_EFFECTIVE_0005); } }
        public IField VA_AMT_OF_AWARD_EFFECTI_0005XX { get { return GetElementByName<IField>(Names.VA_AMT_OF_AWARD_EFFECTI_0005XX); } }
        public IField VA_AMOUNT_OF_AWARD_0005AS { get { return GetElementByName<IField>(Names.VA_AMOUNT_OF_AWARD_0005AS); } }
        public IField VA_AMOUNT_OF_AWARD_0005 { get { return GetElementByName<IField>(Names.VA_AMOUNT_OF_AWARD_0005); } }
        public IField VA_AMOUNT_OF_AWARD_0005XX { get { return GetElementByName<IField>(Names.VA_AMOUNT_OF_AWARD_0005XX); } }
        public IField VA_SUSPENSE_CODE_0005AS { get { return GetElementByName<IField>(Names.VA_SUSPENSE_CODE_0005AS); } }
        public IField VA_SUSPENSE_CODE_0005 { get { return GetElementByName<IField>(Names.VA_SUSPENSE_CODE_0005); } }
        public IField VA_SUSPENSE_CODE_0005XX { get { return GetElementByName<IField>(Names.VA_SUSPENSE_CODE_0005XX); } }
        public IField VA_INCARCERATION_CODE_0005AS { get { return GetElementByName<IField>(Names.VA_INCARCERATION_CODE_0005AS); } }
        public IField VA_INCARCERATION_CODE_0005 { get { return GetElementByName<IField>(Names.VA_INCARCERATION_CODE_0005); } }
        public IField VA_INCARCERATION_CODE_0005XX { get { return GetElementByName<IField>(Names.VA_INCARCERATION_CODE_0005XX); } }
        public IField VA_RETIREMENT_PAY_CODE_0005AS { get { return GetElementByName<IField>(Names.VA_RETIREMENT_PAY_CODE_0005AS); } }
        public IField VA_RETIREMENT_PAY_CODE_0005 { get { return GetElementByName<IField>(Names.VA_RETIREMENT_PAY_CODE_0005); } }
        public IField VA_RETIREMENT_PAY_CODE_0005XX { get { return GetElementByName<IField>(Names.VA_RETIREMENT_PAY_CODE_0005XX); } }
        public IField DOD_DATE_OF_DEATH_OR_SE_0006AS { get { return GetElementByName<IField>(Names.DOD_DATE_OF_DEATH_OR_SE_0006AS); } }
        public IField DOD_DATE_OF_DEATH_OR_SEPA_0006 { get { return GetElementByName<IField>(Names.DOD_DATE_OF_DEATH_OR_SEPA_0006); } }
        public IField DOD_DATE_OF_DEATH_OR_SE_0006XX { get { return GetElementByName<IField>(Names.DOD_DATE_OF_DEATH_OR_SE_0006XX); } }
        public IField DOD_ELIGIBILITY_CODE_0006AS { get { return GetElementByName<IField>(Names.DOD_ELIGIBILITY_CODE_0006AS); } }
        public IField DOD_ELIGIBILITY_CODE_0006 { get { return GetElementByName<IField>(Names.DOD_ELIGIBILITY_CODE_0006); } }
        public IField DOD_ELIGIBILITY_CODE_0006XX { get { return GetElementByName<IField>(Names.DOD_ELIGIBILITY_CODE_0006XX); } }
        public IField ADDRESS_IND_TYPE_0006AS { get { return GetElementByName<IField>(Names.ADDRESS_IND_TYPE_0006AS); } }
        public IField ADDRESS_IND_TYPE_0006 { get { return GetElementByName<IField>(Names.ADDRESS_IND_TYPE_0006); } }
        public IField ADDRESS_IND_TYPE_0006XX { get { return GetElementByName<IField>(Names.ADDRESS_IND_TYPE_0006XX); } }
        public IField HEALTH_INS_BENEFIT_INDI_0007AS { get { return GetElementByName<IField>(Names.HEALTH_INS_BENEFIT_INDI_0007AS); } }
        public IField HEALTH_INS_BENEFIT_INDICA_0007 { get { return GetElementByName<IField>(Names.HEALTH_INS_BENEFIT_INDICA_0007); } }
        public IField HEALTH_INS_BENEFIT_INDI_0007XX { get { return GetElementByName<IField>(Names.HEALTH_INS_BENEFIT_INDI_0007XX); } }
        public IField EMPLOYMENT_STATUS_0007AS { get { return GetElementByName<IField>(Names.EMPLOYMENT_STATUS_0007AS); } }
        public IField EMPLOYMENT_STATUS_0007 { get { return GetElementByName<IField>(Names.EMPLOYMENT_STATUS_0007); } }
        public IField EMPLOYMENT_STATUS_0007XX { get { return GetElementByName<IField>(Names.EMPLOYMENT_STATUS_0007XX); } }
        public IField EMPLOYMENT_IND_0007AS { get { return GetElementByName<IField>(Names.EMPLOYMENT_IND_0007AS); } }
        public IField EMPLOYMENT_IND_0007 { get { return GetElementByName<IField>(Names.EMPLOYMENT_IND_0007); } }
        public IField EMPLOYMENT_IND_0007XX { get { return GetElementByName<IField>(Names.EMPLOYMENT_IND_0007XX); } }
        public IField DATE_OF_HIRE_0007AS { get { return GetElementByName<IField>(Names.DATE_OF_HIRE_0007AS); } }
        public IField DATE_OF_HIRE_0007 { get { return GetElementByName<IField>(Names.DATE_OF_HIRE_0007); } }
        public IField DATE_OF_HIRE_0007XX { get { return GetElementByName<IField>(Names.DATE_OF_HIRE_0007XX); } }
        public IField REPORTING_FED_AGENCY_0007AS { get { return GetElementByName<IField>(Names.REPORTING_FED_AGENCY_0007AS); } }
        public IField REPORTING_FED_AGENCY_0007 { get { return GetElementByName<IField>(Names.REPORTING_FED_AGENCY_0007); } }
        public IField REPORTING_FED_AGENCY_0007XX { get { return GetElementByName<IField>(Names.REPORTING_FED_AGENCY_0007XX); } }
        public IField FEIN_0007AS { get { return GetElementByName<IField>(Names.FEIN_0007AS); } }
        public IField FEIN_0007 { get { return GetElementByName<IField>(Names.FEIN_0007); } }
        public IField FEIN_0007XX { get { return GetElementByName<IField>(Names.FEIN_0007XX); } }
        public IField CORRECTED_ADDITION_MULT_0008AS { get { return GetElementByName<IField>(Names.CORRECTED_ADDITION_MULT_0008AS); } }
        public IField CORRECTED_ADDITION_MULTIP_0008 { get { return GetElementByName<IField>(Names.CORRECTED_ADDITION_MULTIP_0008); } }
        public IField CORRECTED_ADDITION_MULT_0008XX { get { return GetElementByName<IField>(Names.CORRECTED_ADDITION_MULT_0008XX); } }
        public IField SSN_MATCH_IND_0008AS { get { return GetElementByName<IField>(Names.SSN_MATCH_IND_0008AS); } }
        public IField SSN_MATCH_IND_0008 { get { return GetElementByName<IField>(Names.SSN_MATCH_IND_0008); } }
        public IField SSN_MATCH_IND_0008XX { get { return GetElementByName<IField>(Names.SSN_MATCH_IND_0008XX); } }
        public IField REPORTING_QUARTER_0008AS { get { return GetElementByName<IField>(Names.REPORTING_QUARTER_0008AS); } }
        public IField REPORTING_QUARTER_0008 { get { return GetElementByName<IField>(Names.REPORTING_QUARTER_0008); } }
        public IField REPORTING_QUARTER_0008XX { get { return GetElementByName<IField>(Names.REPORTING_QUARTER_0008XX); } }
        public IField STATION_NUMBER_0008AS { get { return GetElementByName<IField>(Names.STATION_NUMBER_0008AS); } }
        public IField STATION_NUMBER_0008 { get { return GetElementByName<IField>(Names.STATION_NUMBER_0008); } }
        public IField STATION_NUMBER_0008XX { get { return GetElementByName<IField>(Names.STATION_NUMBER_0008XX); } }
        public IField NSA_DATE_OF_DEATH_0008AS { get { return GetElementByName<IField>(Names.NSA_DATE_OF_DEATH_0008AS); } }
        public IField NSA_DATE_OF_DEATH_0008 { get { return GetElementByName<IField>(Names.NSA_DATE_OF_DEATH_0008); } }
        public IField NSA_DATE_OF_DEATH_0008XX { get { return GetElementByName<IField>(Names.NSA_DATE_OF_DEATH_0008XX); } }
        public IGroup EXPORT_0009EV { get { return GetElementByName<IGroup>(Names.EXPORT_0009EV); } }
        public IGroup EXTERNAL_0009ET { get { return GetElementByName<IGroup>(Names.EXTERNAL_0009ET); } }
        public IField FILE_INSTRUCTION_0009AS { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0009AS); } }
        public IField FILE_INSTRUCTION_0009 { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0009); } }
        public IField FILE_INSTRUCTION_0009XX { get { return GetElementByName<IField>(Names.FILE_INSTRUCTION_0009XX); } }
        public IField NUMERIC_RETURN_CODE_0009AS { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0009AS); } }
        public IField NUMERIC_RETURN_CODE_0009 { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0009); } }
        public IField NUMERIC_RETURN_CODE_0009XX { get { return GetElementByName<IField>(Names.NUMERIC_RETURN_CODE_0009XX); } }
        public IField TEXT_RETURN_CODE_0009AS { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0009AS); } }
        public IField TEXT_RETURN_CODE_0009 { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0009); } }
        public IField TEXT_RETURN_CODE_0009XX { get { return GetElementByName<IField>(Names.TEXT_RETURN_CODE_0009XX); } }
        public IField TEXT_LINE_80_0009AS { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0009AS); } }
        public IField TEXT_LINE_80_0009 { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0009); } }
        public IField TEXT_LINE_80_0009XX { get { return GetElementByName<IField>(Names.TEXT_LINE_80_0009XX); } }
        public IGroup EXPORT_DATE_OF_DEATH_IN_0010EV { get { return GetElementByName<IGroup>(Names.EXPORT_DATE_OF_DEATH_IN_0010EV); } }
        public IGroup TEXT_WORK_AREA_0010ET { get { return GetElementByName<IGroup>(Names.TEXT_WORK_AREA_0010ET); } }
        public IField TEXT_1_0010AS { get { return GetElementByName<IField>(Names.TEXT_1_0010AS); } }
        public IField TEXT_1_0010 { get { return GetElementByName<IField>(Names.TEXT_1_0010); } }
        public IField TEXT_1_0010XX { get { return GetElementByName<IField>(Names.TEXT_1_0010XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.GLOBDATA, (GLOBDATA) =>
           {
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_COMMAND, (PSMGR_IEF_COMMAND) =>
               {
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_1, FieldType.String, 8);
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_2, FieldType.String, 72);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_TRANCODE, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_STATE, FieldType.PackedDecimal, 11);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_INFOMSG, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_USER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_TERMINAL_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_PRINTER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_DATE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_TIME, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_RUNTIME_TYPE, FieldType.String, 4);
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA, (PSMGR_FUNCTION_DATA) =>
               {
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_ERRMSG, FieldType.String, 4);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_NAME, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_DDURA, (PSMGR_FUNC_IN_DDURA) =>
                   {
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_YEAR, (DDURA_YEAR) =>
                       {
                           DDURA_YEAR.CreateNewField(Names.DDURA_Y_MISS, FieldType.String, 1);
                           DDURA_YEAR.CreateNewField(Names.DDURA_YYYY, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_MONTH, (DDURA_MONTH) =>
                       {
                           DDURA_MONTH.CreateNewField(Names.DDURA_M_MISS, FieldType.String, 1);
                           DDURA_MONTH.CreateNewField(Names.DDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_DAY, (DDURA_DAY) =>
                       {
                           DDURA_DAY.CreateNewField(Names.DDURA_D_MISS, FieldType.String, 1);
                           DDURA_DAY.CreateNewField(Names.DDURA_DD, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_TIME, FieldType.String, 6);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_TDURA, (PSMGR_FUNC_IN_TDURA) =>
                   {
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_HOUR, (TDURA_HOUR) =>
                       {
                           TDURA_HOUR.CreateNewField(Names.TDURA_H_MISS, FieldType.String, 1);
                           TDURA_HOUR.CreateNewField(Names.TDURA_HH, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_MINUTE, (TDURA_MINUTE) =>
                       {
                           TDURA_MINUTE.CreateNewField(Names.TDURA_M_MISS, FieldType.String, 1);
                           TDURA_MINUTE.CreateNewField(Names.TDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_SECOND, (TDURA_SECOND) =>
                       {
                           TDURA_SECOND.CreateNewField(Names.TDURA_S_MISS, FieldType.String, 1);
                           TDURA_SECOND.CreateNewField(Names.TDURA_SS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_TIME, FieldType.String, 6);
               });
               GLOBDATA.CreateNewFillerField(2, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_NEXTTRAN, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_MSGTYPE, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(11, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_DEBUG_FLAGS, (PSMGR_IEF_DEBUG_FLAGS) =>
               {
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewField(Names.PSMGR_IEF_DEBUG, FieldType.String, 1)
                       .NewCheckField(Names.PSMGR_DEBUG_ON, "Y")
                       ;
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewFillerField(15, FillWith.Hashes);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ENVIRONMENT_DATA, (PSMGR_ENVIRONMENT_DATA) =>
               {
                   PSMGR_ENVIRONMENT_DATA.CreateNewField(Names.PSMGR_PCB_CNT, FieldType.CompInt, 9);
                   PSMGR_ENVIRONMENT_DATA.CreateNewGroupArray(Names.PSMGR_PCB_ENTRY, 255, (PSMGR_PCB_ENTRY) =>
                   {
                       PSMGR_PCB_ENTRY.CreateNewField(Names.PSMGR_PCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
               {
                   PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
                   PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
                   {
                       PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ERROR_DATA, (PSMGR_ERROR_DATA) =>
               {
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ACTION_NAME, FieldType.String, 32);
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ENCOUNTERED_SW, FieldType.String, 1);
                   PSMGR_ERROR_DATA.CreateNewField(Names.VIEW_OVERFLOW_SW, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DASG_DATA, (PSMGR_DASG_DATA) =>
               {
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ACTION_ID_X, (ACTION_ID_X) =>
                   {
                       ACTION_ID_X.CreateNewField(Names.ACTION_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ATTRIBUTE_ID_X, (ATTRIBUTE_ID_X) =>
                   {
                       ATTRIBUTE_ID_X.CreateNewField(Names.ATTRIBUTE_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewField(Names.STATUS_FLAG, FieldType.String, 2)
                       .NewCheckField(Names.WHEN_SUCCESSFUL_SF, SPACES)
                       .NewCheckField(Names.FATAL_ERROR_SF, "FE")
                       .NewCheckField(Names.DB_ERROR_SF, "DB")
                       .NewCheckField(Names.ABORT_SHOW_DBMS_MSG_SF, "AB")
                       .NewCheckField(Names.ABORT_SHOW_USER_MSG_SF, "AM")
                       .NewCheckField(Names.RETRY_TRAN_REQUESTED_SF, "RT")
                       .NewCheckField(Names.PSTEP_USE_FAILURE, "PU")
                       .NewCheckField(Names.ASYNC_WHEN_AVAILABLE_SF, SPACES)
                       .NewCheckField(Names.ASYNC_WHEN_ACCEPTED_SF, SPACES)
                       .NewCheckField(Names.ASYNC_WHEN_NOT_ACCEPTED_SF, "NA")
                       .NewCheckField(Names.ASYNC_WHEN_INVALID_ID_SF, "II")
                       .NewCheckField(Names.ASYNC_WHEN_PENDING_SF, "PE")
                       .NewCheckField(Names.ASYNC_WHEN_SERVER_ERROR_SF, "SS")
                       .NewCheckField(Names.ASYNC_WHEN_COMM_ERROR_SF, "CE")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.LAST_STATUS, FieldType.String, 2)
                       .NewCheckField(Names.DB_ERROR_FL_LS, "DB")
                       .NewCheckField(Names.DB_DEADLOCK_TIMOUT_FL_LS, "DT")
                       .NewCheckField(Names.DUPLICATE_FOUND_FL_LS, "DF")
                       .NewCheckField(Names.INVALID_DATAA_FL_LS, "IA")
                       .NewCheckField(Names.INVALID_DATAB_TYPE_FL_LS, "BT")
                       .NewCheckField(Names.INVALID_DATAB_PERM_FL_LS, "BP")
                       .NewCheckField(Names.FATAL_ERROR_FL_LS, "FE")
                       .NewCheckField(Names.NOT_FOUND_FL_LS, "NF")
                       .NewCheckField(Names.NOT_UNIQUE_FL_LS, "NU")
                       .NewCheckField(Names.IEF_FUNCTION_ERROR_FL_LS, "IE")
                       .NewCheckField(Names.IEF_DURATION_ERROR_FL_LS, "DE")
                       .NewCheckField(Names.USED_PSTEP_NOT_FOUND, "PO")
                       .NewCheckField(Names.USED_PSTEP_ROUTING_ERR, "PX")
                       .NewCheckField(Names.USED_PSTEP_SND_FMT_ERR, "PF")
                       .NewCheckField(Names.USED_PSTEP_ENCRYPT_ERR, "PN")
                       .NewCheckField(Names.USED_PSTEP_SND_BFR_ERR, "PS")
                       .NewCheckField(Names.USED_PSTEP_RCV_BFR_ERR, "PR")
                       .NewCheckField(Names.USED_PSTEP_RCV_FMT_ERR, "PU")
                       .NewCheckField(Names.USED_PSTEP_TIRSECR_ERR, "PE")
                       .NewCheckField(Names.USED_PSTEP_TOKEN_ERR, "PT")
                       .NewCheckField(Names.USED_PSTEP_SEND_MAX_SIZE, "PM")
                       .NewCheckField(Names.USED_PSTEP_SECG_ERR, "PB")
                       .NewCheckField(Names.USED_PSTEP_ALLOC_ERR, "PA")
                       .NewCheckField(Names.USED_PSTEP_CONNECT_ERR, "PC")
                       .NewCheckField(Names.USED_PSTEP_XERR, "PD")
                       .NewCheckField(Names.USED_PSTEP_RCV_UA_ERR, "PH")
                       .NewCheckField(Names.USED_PSTEP_RCV_ES_ERR, "PI")
                       .NewCheckField(Names.USED_PSTEP_XFAL, "PJ")
                       .NewCheckField(Names.USED_PSTEP_SETOA_ERR, "PK")
                       .NewCheckField(Names.USED_PSTEP_RCV_VIEW_ERR, "PL")
                       .NewCheckField(Names.USED_PSTEP_DECRYPT_ERR, "PP")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.SAVE_SQLCA, FieldType.String, 255);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DEBUG_DATA, (PSMGR_DEBUG_DATA) =>
               {
                   PSMGR_DEBUG_DATA.CreateNewField(Names.PSMGR_TRACE_ADR, FieldType.CompInt, 9);
                   PSMGR_DEBUG_DATA.CreateNewGroup(Names.LAST_STATEMENT_X, (LAST_STATEMENT_X) =>
                   {
                       LAST_STATEMENT_X.CreateNewField(Names.LAST_STATEMENT_NUM, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_ID, FieldType.String, 10);
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_NAME, FieldType.String, 32);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_TIRDATE_SAVEAREA, FieldType.String, 12);
               GLOBDATA.CreateNewGroup(Names.PSMGR_TIRDATE_CMCB, (PSMGR_TIRDATE_CMCB) =>
               {
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATE, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIME, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(8, FillWith.Hashes);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_INC, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RC, FieldType.CompShort, 4)
                       .NewCheckField(Names.PSMGR_TIRDATE_OK, +0)
                       .NewCheckField(Names.PSMGR_TIRDATE_WARNING, +4)
                       .NewCheckField(Names.PSMGR_TIRDATE_ERROR, +8)
                       ;
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_REQ, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIMEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RETMSG, FieldType.String, 60);

                   IField PSMGR_TIRDATE_TSTAMP_local = PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TSTAMP, FieldType.String, 20);
                   PSMGR_TIRDATE_CMCB.CreateNewGroupRedefine("FILLER_d16", PSMGR_TIRDATE_TSTAMP_local, (FILLER_d16) =>
                   {
                       FILLER_d16.CreateNewField(Names.PSMGR_TIRDATE_DATE_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d16.CreateNewField(Names.PSMGR_TIRDATE_TIME_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d16.CreateNewFillerField(4, FillWith.Hashes);
                   });
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_SKIP_VAL, FieldType.String, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(95, FillWith.Hashes);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_ROLLBACK_RQSTED, FieldType.String, 1)
                   .NewCheckField(Names.ROLLBACK_RQSTED, "R")
                   .NewCheckField(Names.ABEND_RQSTED, "A")
                   .NewCheckField(Names.TERMINATE_RQSTED, "T")
                   ;
               GLOBDATA.CreateNewGroup(Names.TIRTRCE_SAVE_AREA, (TIRTRCE_SAVE_AREA) =>
               {
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.BOTTOM_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.END_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_STMT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_OF_CALL, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT_STATUS, FieldType.String, 3);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_AB_NAME, FieldType.String, 32);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLOR, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLORT, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.HILITE, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_ON_OFF, FieldType.String, 3);
               });
               GLOBDATA.CreateNewGroup(Names.CASCADE_DELETE_FLAGS, (CASCADE_DELETE_FLAGS) =>
               {
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V1PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V2PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE1, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE2, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.PROCESSQ_FLAG, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ACTIVE_DIALECT, (PSMGR_ACTIVE_DIALECT) =>
               {
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.DIALECT_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.MESSAGE_TABLE_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.TRANSLATE_TABLE_NAME, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA_EXT, (PSMGR_FUNCTION_DATA_EXT) =>
               {
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_IN_TIMESTAMP, FieldType.String, 20);
                   PSMGR_FUNCTION_DATA_EXT.CreateNewGroup(Names.PSMGR_FUNC_IN_TSDURA, (PSMGR_FUNC_IN_TSDURA) =>
                   {
                       PSMGR_FUNC_IN_TSDURA.CreateNewGroup(Names.TSDURA_MICROSECOND, (TSDURA_MICROSECOND) =>
                       {
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_M_MISS, FieldType.String, 1);
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_MS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_OUT_TIMESTAMP, FieldType.String, 20);
               });
               GLOBDATA.CreateNewFillerField(8, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_CICS_FAIL_SW, FieldType.String, 1)
                   .NewCheckField(Names.INHIBIT_CICS_RECEIVE, "I")
                   ;
               GLOBDATA.CreateNewField(Names.CLIENT_USERID, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.CLIENT_PASSWORD, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.LOAD_MODULE_NAME, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.INSTRUMENT_CODE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_RETRY_LIMIT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_TIMEOUT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewGroup(Names.PSMGR_EXTRA_ERRINFO, (PSMGR_EXTRA_ERRINFO) =>
               {
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_MSG_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_ADDR, FieldType.String, 8);
               });
               GLOBDATA.CreateNewField(Names.TX_RETRY_COUNT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_USER_RETRY_ALLOWED, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(3, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_PTRS, (PSMGR_PSTEP_USE_PTRS) =>
               {
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_FAIL_MSG_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_GURB_REST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_LIPS_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_TBL_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_DDF_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_COMM_ID, FieldType.String, 8);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_APPL_LIST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_CURR_PST_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_SYSFLDS, (PSMGR_PSTEP_USE_SYSFLDS) =>
               {
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBERRCD, FieldType.String, 4);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBFN, FieldType.String, 2);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP, FieldType.String, 8);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP2, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ASYNC_DATA, (PSMGR_ASYNC_DATA) =>
               {
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_MODE, FieldType.String, 1)
                       .NewCheckField(Names.FLOW_TYPE_SYNC, SPACE)
                       .NewCheckField(Names.FLOW_TYPE_ASYNC, "A")
                       .NewCheckField(Names.FLOW_TYPE_NO_RESPONSE, "N")
                       ;
                   PSMGR_ASYNC_DATA.CreateNewFillerField(1, FillWith.Hashes);
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_FLOW_STATUS_TABLE_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_SERVER_LOC_TABLE_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewFillerField(189, FillWith.Hashes);
           });

            recordDef.CreateNewGroup(Names.IMPORT_0001EV, (IMPORT_0001EV) =>
           {
               IMPORT_0001EV.CreateNewGroup(Names.EXTERNAL_0001ET, (EXTERNAL_0001ET) =>
               {
                   EXTERNAL_0001ET.CreateNewField(Names.FILE_INSTRUCTION_0001AS, FieldType.String, 1);

                   IField FILE_INSTRUCTION_0001_local = EXTERNAL_0001ET.CreateNewField(Names.FILE_INSTRUCTION_0001, FieldType.String, 10);
                   EXTERNAL_0001ET.CreateNewFieldRedefine(Names.FILE_INSTRUCTION_0001XX, FieldType.String, FILE_INSTRUCTION_0001_local, 10);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0002EV, (EXPORT_0002EV) =>
           {
               EXPORT_0002EV.CreateNewGroup(Names.EXTERNAL_FPLS_RESPONSE_0002ET, (EXTERNAL_FPLS_RESPONSE_0002ET) =>
               {
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.NDNH_RESPONSE_0002AS, FieldType.String, 1);

                   IField NDNH_RESPONSE_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.NDNH_RESPONSE_0002, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.NDNH_RESPONSE_0002XX, FieldType.String, NDNH_RESPONSE_0002_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.STATE_ABBREVIATION_0002AS, FieldType.String, 1);

                   IField STATE_ABBREVIATION_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.STATE_ABBREVIATION_0002, FieldType.String, 2);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.STATE_ABBREVIATION_0002XX, FieldType.String, STATE_ABBREVIATION_0002_local, 2);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AGENCY_CODE_0002AS, FieldType.String, 1);

                   IField AGENCY_CODE_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AGENCY_CODE_0002, FieldType.String, 3);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.AGENCY_CODE_0002XX, FieldType.String, AGENCY_CODE_0002_local, 3);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.NAME_SENT_IND_0002AS, FieldType.String, 1);

                   IField NAME_SENT_IND_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.NAME_SENT_IND_0002, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.NAME_SENT_IND_0002XX, FieldType.String, NAME_SENT_IND_0002_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_FIRST_NAME_0002AS, FieldType.String, 1);

                   IField AP_FIRST_NAME_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_FIRST_NAME_0002, FieldType.String, 16);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.AP_FIRST_NAME_0002XX, FieldType.String, AP_FIRST_NAME_0002_local, 16);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_MIDDLE_NAME_0002AS, FieldType.String, 1);

                   IField AP_MIDDLE_NAME_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_MIDDLE_NAME_0002, FieldType.String, 16);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.AP_MIDDLE_NAME_0002XX, FieldType.String, AP_MIDDLE_NAME_0002_local, 16);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_FIRST_LAST_NAME_0002AS, FieldType.String, 1);

                   IField AP_FIRST_LAST_NAME_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_FIRST_LAST_NAME_0002, FieldType.String, 20);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.AP_FIRST_LAST_NAME_0002XX, FieldType.String, AP_FIRST_LAST_NAME_0002_local, 20);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_SECOND_LAST_NAME_0002AS, FieldType.String, 1);

                   IField AP_SECOND_LAST_NAME_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_SECOND_LAST_NAME_0002, FieldType.String, 20);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.AP_SECOND_LAST_NAME_0002XX, FieldType.String, AP_SECOND_LAST_NAME_0002_local, 20);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_THIRD_LAST_NAME_0002AS, FieldType.String, 1);

                   IField AP_THIRD_LAST_NAME_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_THIRD_LAST_NAME_0002, FieldType.String, 20);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.AP_THIRD_LAST_NAME_0002XX, FieldType.String, AP_THIRD_LAST_NAME_0002_local, 20);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_NAME_RETURNED_0002AS, FieldType.String, 1);

                   IField AP_NAME_RETURNED_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_NAME_RETURNED_0002, FieldType.String, 62);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.AP_NAME_RETURNED_0002XX, FieldType.String, AP_NAME_RETURNED_0002_local, 62);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SSN_SUBMITTED_0002AS, FieldType.String, 1);

                   IField SSN_SUBMITTED_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SSN_SUBMITTED_0002, FieldType.String, 9);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.SSN_SUBMITTED_0002XX, FieldType.String, SSN_SUBMITTED_0002_local, 9);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_CSE_PERSON_NUMBER_0002AS, FieldType.String, 1);

                   IField AP_CSE_PERSON_NUMBER_0002_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.AP_CSE_PERSON_NUMBER_0002, FieldType.String, 10);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.AP_CSE_PERSON_NUMBER_0002XX, FieldType.String, AP_CSE_PERSON_NUMBER_0002_local, 10);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.FPLS_REQUEST_IDENTIFIER_0003AS, FieldType.String, 1);

                   IField FPLS_REQUEST_IDENTIFIER_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.FPLS_REQUEST_IDENTIFIER_0003, FieldType.SignedNumeric, 5);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.FPLS_REQUEST_IDENTIFIER_0003XX, FieldType.String, FPLS_REQUEST_IDENTIFIER_0003_local, 5);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.USERS_FIELD_0003AS, FieldType.String, 1);

                   IField USERS_FIELD_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.USERS_FIELD_0003, FieldType.String, 7);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.USERS_FIELD_0003XX, FieldType.String, USERS_FIELD_0003_local, 7);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.LOCAL_CODE_0003AS, FieldType.String, 1);

                   IField LOCAL_CODE_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.LOCAL_CODE_0003, FieldType.String, 3);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.LOCAL_CODE_0003XX, FieldType.String, LOCAL_CODE_0003_local, 3);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.TYPE_OF_CASE_0003AS, FieldType.String, 1);

                   IField TYPE_OF_CASE_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.TYPE_OF_CASE_0003, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.TYPE_OF_CASE_0003XX, FieldType.String, TYPE_OF_CASE_0003_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.ADDR_DATE_FORMAT_IND_0003AS, FieldType.String, 1);

                   IField ADDR_DATE_FORMAT_IND_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.ADDR_DATE_FORMAT_IND_0003, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.ADDR_DATE_FORMAT_IND_0003XX, FieldType.String, ADDR_DATE_FORMAT_IND_0003_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DATE_OF_ADDRESS_0003AS, FieldType.String, 1);

                   IField DATE_OF_ADDRESS_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DATE_OF_ADDRESS_0003, FieldType.SignedNumeric, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.DATE_OF_ADDRESS_0003XX, FieldType.String, DATE_OF_ADDRESS_0003_local, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.RESPONSE_CODE_0003AS, FieldType.String, 1);

                   IField RESPONSE_CODE_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.RESPONSE_CODE_0003, FieldType.String, 2);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.RESPONSE_CODE_0003XX, FieldType.String, RESPONSE_CODE_0003_local, 2);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.ADDRESS_FORMAT_IND_0003AS, FieldType.String, 1);

                   IField ADDRESS_FORMAT_IND_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.ADDRESS_FORMAT_IND_0003, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.ADDRESS_FORMAT_IND_0003XX, FieldType.String, ADDRESS_FORMAT_IND_0003_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.RETURNED_ADDRESS_0003AS, FieldType.String, 1);

                   IField RETURNED_ADDRESS_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.RETURNED_ADDRESS_0003, FieldType.String, 234);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.RETURNED_ADDRESS_0003XX, FieldType.String, RETURNED_ADDRESS_0003_local, 234);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_STATUS_0003AS, FieldType.String, 1);

                   IField DOD_STATUS_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_STATUS_0003, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.DOD_STATUS_0003XX, FieldType.String, DOD_STATUS_0003_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_SERVICE_CODE_0003AS, FieldType.String, 1);

                   IField DOD_SERVICE_CODE_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_SERVICE_CODE_0003, FieldType.String, 4);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.DOD_SERVICE_CODE_0003XX, FieldType.String, DOD_SERVICE_CODE_0003_local, 4);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_PAY_GRADE_CODE_0003AS, FieldType.String, 1);

                   IField DOD_PAY_GRADE_CODE_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_PAY_GRADE_CODE_0003, FieldType.String, 4);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.DOD_PAY_GRADE_CODE_0003XX, FieldType.String, DOD_PAY_GRADE_CODE_0003_local, 4);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_ANNUAL_SALARY_0003AS, FieldType.String, 1);

                   IField DOD_ANNUAL_SALARY_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_ANNUAL_SALARY_0003, FieldType.SignedNumeric, 6);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.DOD_ANNUAL_SALARY_0003XX, FieldType.String, DOD_ANNUAL_SALARY_0003_local, 6);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_DATE_OF_BIRTH_0003AS, FieldType.String, 1);

                   IField DOD_DATE_OF_BIRTH_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_DATE_OF_BIRTH_0003, FieldType.SignedNumeric, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.DOD_DATE_OF_BIRTH_0003XX, FieldType.String, DOD_DATE_OF_BIRTH_0003_local, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SUBMITTING_OFFICE_0003AS, FieldType.String, 1);

                   IField SUBMITTING_OFFICE_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SUBMITTING_OFFICE_0003, FieldType.String, 4);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.SUBMITTING_OFFICE_0003XX, FieldType.String, SUBMITTING_OFFICE_0003_local, 4);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SESA_RESPONDING_STATE_0003AS, FieldType.String, 1);

                   IField SESA_RESPONDING_STATE_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SESA_RESPONDING_STATE_0003, FieldType.String, 2);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.SESA_RESPONDING_STATE_0003XX, FieldType.String, SESA_RESPONDING_STATE_0003_local, 2);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SESA_WAGE_CLAIM_IND_0003AS, FieldType.String, 1);

                   IField SESA_WAGE_CLAIM_IND_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SESA_WAGE_CLAIM_IND_0003, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.SESA_WAGE_CLAIM_IND_0003XX, FieldType.String, SESA_WAGE_CLAIM_IND_0003_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SESA_WAGE_AMOUNT_0003AS, FieldType.String, 1);

                   IField SESA_WAGE_AMOUNT_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SESA_WAGE_AMOUNT_0003, FieldType.SignedNumeric, 6);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.SESA_WAGE_AMOUNT_0003XX, FieldType.String, SESA_WAGE_AMOUNT_0003_local, 6);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.IRS_NAME_CONTROL_0003AS, FieldType.String, 1);

                   IField IRS_NAME_CONTROL_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.IRS_NAME_CONTROL_0003, FieldType.String, 6);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.IRS_NAME_CONTROL_0003XX, FieldType.String, IRS_NAME_CONTROL_0003_local, 6);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.CP_SSN_0003AS, FieldType.String, 1);

                   IField CP_SSN_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.CP_SSN_0003, FieldType.String, 9);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.CP_SSN_0003XX, FieldType.String, CP_SSN_0003_local, 9);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.IRS_TAX_YEAR_0003AS, FieldType.String, 1);

                   IField IRS_TAX_YEAR_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.IRS_TAX_YEAR_0003, FieldType.String, 4);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.IRS_TAX_YEAR_0003XX, FieldType.String, IRS_TAX_YEAR_0003_local, 4);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.NPRC_EMPD_OR_SEPD_0003AS, FieldType.String, 1);

                   IField NPRC_EMPD_OR_SEPD_0003_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.NPRC_EMPD_OR_SEPD_0003, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.NPRC_EMPD_OR_SEPD_0003XX, FieldType.String, NPRC_EMPD_OR_SEPD_0003_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SSA_FEDERAL_OR_MILITARY_0004AS, FieldType.String, 1);

                   IField SSA_FEDERAL_OR_MILITARY_0004_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SSA_FEDERAL_OR_MILITARY_0004, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.SSA_FEDERAL_OR_MILITARY_0004XX, FieldType.String, SSA_FEDERAL_OR_MILITARY_0004_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SSA_CORP_DIVISION_0004AS, FieldType.String, 1);

                   IField SSA_CORP_DIVISION_0004_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SSA_CORP_DIVISION_0004, FieldType.String, 4);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.SSA_CORP_DIVISION_0004XX, FieldType.String, SSA_CORP_DIVISION_0004_local, 4);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.MBR_BENEFIT_AMOUNT_0004AS, FieldType.String, 1);

                   IField MBR_BENEFIT_AMOUNT_0004_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.MBR_BENEFIT_AMOUNT_0004, FieldType.SignedNumeric, 6);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.MBR_BENEFIT_AMOUNT_0004XX, FieldType.String, MBR_BENEFIT_AMOUNT_0004_local, 6);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.MBR_DATE_OF_DEATH_0004AS, FieldType.String, 1);

                   IField MBR_DATE_OF_DEATH_0004_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.MBR_DATE_OF_DEATH_0004, FieldType.SignedNumeric, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.MBR_DATE_OF_DEATH_0004XX, FieldType.String, MBR_DATE_OF_DEATH_0004_local, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_BENEFIT_CODE_0004AS, FieldType.String, 1);

                   IField VA_BENEFIT_CODE_0004_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_BENEFIT_CODE_0004, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.VA_BENEFIT_CODE_0004XX, FieldType.String, VA_BENEFIT_CODE_0004_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_DATE_OF_DEATH_0004AS, FieldType.String, 1);

                   IField VA_DATE_OF_DEATH_0004_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_DATE_OF_DEATH_0004, FieldType.SignedNumeric, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.VA_DATE_OF_DEATH_0004XX, FieldType.String, VA_DATE_OF_DEATH_0004_local, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_AMT_OF_AWARD_EFFECTI_0005AS, FieldType.String, 1);

                   IField VA_AMT_OF_AWARD_EFFECTIVE_0005_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_AMT_OF_AWARD_EFFECTIVE_0005, FieldType.SignedNumeric, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.VA_AMT_OF_AWARD_EFFECTI_0005XX, FieldType.String, VA_AMT_OF_AWARD_EFFECTIVE_0005_local, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_AMOUNT_OF_AWARD_0005AS, FieldType.String, 1);

                   IField VA_AMOUNT_OF_AWARD_0005_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_AMOUNT_OF_AWARD_0005, FieldType.SignedNumeric, 6);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.VA_AMOUNT_OF_AWARD_0005XX, FieldType.String, VA_AMOUNT_OF_AWARD_0005_local, 6);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_SUSPENSE_CODE_0005AS, FieldType.String, 1);

                   IField VA_SUSPENSE_CODE_0005_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_SUSPENSE_CODE_0005, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.VA_SUSPENSE_CODE_0005XX, FieldType.String, VA_SUSPENSE_CODE_0005_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_INCARCERATION_CODE_0005AS, FieldType.String, 1);

                   IField VA_INCARCERATION_CODE_0005_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_INCARCERATION_CODE_0005, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.VA_INCARCERATION_CODE_0005XX, FieldType.String, VA_INCARCERATION_CODE_0005_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_RETIREMENT_PAY_CODE_0005AS, FieldType.String, 1);

                   IField VA_RETIREMENT_PAY_CODE_0005_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.VA_RETIREMENT_PAY_CODE_0005, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.VA_RETIREMENT_PAY_CODE_0005XX, FieldType.String, VA_RETIREMENT_PAY_CODE_0005_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_DATE_OF_DEATH_OR_SE_0006AS, FieldType.String, 1);

                   IField DOD_DATE_OF_DEATH_OR_SEPA_0006_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_DATE_OF_DEATH_OR_SEPA_0006, FieldType.SignedNumeric, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.DOD_DATE_OF_DEATH_OR_SE_0006XX, FieldType.String, DOD_DATE_OF_DEATH_OR_SEPA_0006_local, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_ELIGIBILITY_CODE_0006AS, FieldType.String, 1);

                   IField DOD_ELIGIBILITY_CODE_0006_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DOD_ELIGIBILITY_CODE_0006, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.DOD_ELIGIBILITY_CODE_0006XX, FieldType.String, DOD_ELIGIBILITY_CODE_0006_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.ADDRESS_IND_TYPE_0006AS, FieldType.String, 1);

                   IField ADDRESS_IND_TYPE_0006_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.ADDRESS_IND_TYPE_0006, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.ADDRESS_IND_TYPE_0006XX, FieldType.String, ADDRESS_IND_TYPE_0006_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.HEALTH_INS_BENEFIT_INDI_0007AS, FieldType.String, 1);

                   IField HEALTH_INS_BENEFIT_INDICA_0007_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.HEALTH_INS_BENEFIT_INDICA_0007, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.HEALTH_INS_BENEFIT_INDI_0007XX, FieldType.String, HEALTH_INS_BENEFIT_INDICA_0007_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.EMPLOYMENT_STATUS_0007AS, FieldType.String, 1);

                   IField EMPLOYMENT_STATUS_0007_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.EMPLOYMENT_STATUS_0007, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.EMPLOYMENT_STATUS_0007XX, FieldType.String, EMPLOYMENT_STATUS_0007_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.EMPLOYMENT_IND_0007AS, FieldType.String, 1);

                   IField EMPLOYMENT_IND_0007_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.EMPLOYMENT_IND_0007, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.EMPLOYMENT_IND_0007XX, FieldType.String, EMPLOYMENT_IND_0007_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DATE_OF_HIRE_0007AS, FieldType.String, 1);

                   IField DATE_OF_HIRE_0007_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.DATE_OF_HIRE_0007, FieldType.SignedNumeric, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.DATE_OF_HIRE_0007XX, FieldType.String, DATE_OF_HIRE_0007_local, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.REPORTING_FED_AGENCY_0007AS, FieldType.String, 1);

                   IField REPORTING_FED_AGENCY_0007_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.REPORTING_FED_AGENCY_0007, FieldType.String, 9);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.REPORTING_FED_AGENCY_0007XX, FieldType.String, REPORTING_FED_AGENCY_0007_local, 9);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.FEIN_0007AS, FieldType.String, 1);

                   IField FEIN_0007_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.FEIN_0007, FieldType.String, 9);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.FEIN_0007XX, FieldType.String, FEIN_0007_local, 9);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.CORRECTED_ADDITION_MULT_0008AS, FieldType.String, 1);

                   IField CORRECTED_ADDITION_MULTIP_0008_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.CORRECTED_ADDITION_MULTIP_0008, FieldType.String, 9);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.CORRECTED_ADDITION_MULT_0008XX, FieldType.String, CORRECTED_ADDITION_MULTIP_0008_local, 9);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SSN_MATCH_IND_0008AS, FieldType.String, 1);

                   IField SSN_MATCH_IND_0008_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.SSN_MATCH_IND_0008, FieldType.String, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.SSN_MATCH_IND_0008XX, FieldType.String, SSN_MATCH_IND_0008_local, 1);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.REPORTING_QUARTER_0008AS, FieldType.String, 1);

                   IField REPORTING_QUARTER_0008_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.REPORTING_QUARTER_0008, FieldType.String, 5);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.REPORTING_QUARTER_0008XX, FieldType.String, REPORTING_QUARTER_0008_local, 5);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.STATION_NUMBER_0008AS, FieldType.String, 1);

                   IField STATION_NUMBER_0008_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.STATION_NUMBER_0008, FieldType.String, 2);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.STATION_NUMBER_0008XX, FieldType.String, STATION_NUMBER_0008_local, 2);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.NSA_DATE_OF_DEATH_0008AS, FieldType.String, 1);

                   IField NSA_DATE_OF_DEATH_0008_local = EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewField(Names.NSA_DATE_OF_DEATH_0008, FieldType.SignedNumeric, 8);
                   EXTERNAL_FPLS_RESPONSE_0002ET.CreateNewFieldRedefine(Names.NSA_DATE_OF_DEATH_0008XX, FieldType.String, NSA_DATE_OF_DEATH_0008_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0009EV, (EXPORT_0009EV) =>
           {
               EXPORT_0009EV.CreateNewGroup(Names.EXTERNAL_0009ET, (EXTERNAL_0009ET) =>
               {
                   EXTERNAL_0009ET.CreateNewField(Names.FILE_INSTRUCTION_0009AS, FieldType.String, 1);

                   IField FILE_INSTRUCTION_0009_local = EXTERNAL_0009ET.CreateNewField(Names.FILE_INSTRUCTION_0009, FieldType.String, 10);
                   EXTERNAL_0009ET.CreateNewFieldRedefine(Names.FILE_INSTRUCTION_0009XX, FieldType.String, FILE_INSTRUCTION_0009_local, 10);
                   EXTERNAL_0009ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0009AS, FieldType.String, 1);

                   IField NUMERIC_RETURN_CODE_0009_local = EXTERNAL_0009ET.CreateNewField(Names.NUMERIC_RETURN_CODE_0009, FieldType.SignedNumeric, 2);
                   EXTERNAL_0009ET.CreateNewFieldRedefine(Names.NUMERIC_RETURN_CODE_0009XX, FieldType.String, NUMERIC_RETURN_CODE_0009_local, 2);
                   EXTERNAL_0009ET.CreateNewField(Names.TEXT_RETURN_CODE_0009AS, FieldType.String, 1);

                   IField TEXT_RETURN_CODE_0009_local = EXTERNAL_0009ET.CreateNewField(Names.TEXT_RETURN_CODE_0009, FieldType.String, 2);
                   EXTERNAL_0009ET.CreateNewFieldRedefine(Names.TEXT_RETURN_CODE_0009XX, FieldType.String, TEXT_RETURN_CODE_0009_local, 2);
                   EXTERNAL_0009ET.CreateNewField(Names.TEXT_LINE_80_0009AS, FieldType.String, 1);

                   IField TEXT_LINE_80_0009_local = EXTERNAL_0009ET.CreateNewField(Names.TEXT_LINE_80_0009, FieldType.String, 130);
                   EXTERNAL_0009ET.CreateNewFieldRedefine(Names.TEXT_LINE_80_0009XX, FieldType.String, TEXT_LINE_80_0009_local, 130);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_DATE_OF_DEATH_IN_0010EV, (EXPORT_DATE_OF_DEATH_IN_0010EV) =>
           {
               EXPORT_DATE_OF_DEATH_IN_0010EV.CreateNewGroup(Names.TEXT_WORK_AREA_0010ET, (TEXT_WORK_AREA_0010ET) =>
               {
                   TEXT_WORK_AREA_0010ET.CreateNewField(Names.TEXT_1_0010AS, FieldType.String, 1);

                   IField TEXT_1_0010_local = TEXT_WORK_AREA_0010ET.CreateNewField(Names.TEXT_1_0010, FieldType.String, 1);
                   TEXT_WORK_AREA_0010ET.CreateNewFieldRedefine(Names.TEXT_1_0010XX, FieldType.String, TEXT_1_0010_local, 1);
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(IEF_RUNTIME_PARM1, args, 0);
            SetPassedParm(IEF_RUNTIME_PARM2, args, 1);
            SetPassedParm(GLOBDATA, args, 2);
            SetPassedParm(IMPORT_0001EV, args, 3);
            SetPassedParm(EXPORT_0002EV, args, 4);
            SetPassedParm(EXPORT_0009EV, args, 5);
            SetPassedParm(EXPORT_DATE_OF_DEATH_IN_0010EV, args, 6);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(IEF_RUNTIME_PARM1, args, 0);
            SetReturnParm(IEF_RUNTIME_PARM2, args, 1);
            SetReturnParm(GLOBDATA, args, 2);
            SetReturnParm(IMPORT_0001EV, args, 3);
            SetReturnParm(EXPORT_0002EV, args, 4);
            SetReturnParm(EXPORT_0009EV, args, 5);
            SetReturnParm(EXPORT_DATE_OF_DEATH_IN_0010EV, args, 6);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXEE05 : EABBase
    {

        #region Public Constructors
        public SWEXEE05()
            : base()
        {
            this.ProgramName.SetValue("SWEXEE05");

            WS = new SWEXEE05_ws();
            FD = new SWEXEE05_fd(WS);
            LS = new SWEXEE05_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXEE05_ws WS;

        //==== File Data Class ========================================
        private SWEXEE05_fd FD;

        //==== Linkage Section Data Class ========================================
        private SWEXEE05_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING IEF-RUNTIME-PARM1 , IEF-RUNTIME-PARM2 , GLOBDATA , IMPORT-0001EV , EXPORT-0002EV , EXPORT-0009EV , EXPORT-DATE-OF-DEATH-IN-0010EV.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0967001322(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0967001322
        /// </summary>
        private void M_MAIN_0967001322(string returnMethod = "")
        {
            M_PARA_0967001322_INIT("M_PARA_0967001322_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0967001322-INIT THRU PARA-0967001322-INIT-EXIT
            M_PARA_0967001322("M_PARA_0967001322_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0967001322 THRU PARA-0967001322-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0967001322
        /// </summary>
        private void M_PARA_0967001322(string returnMethod = "")
        {
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            //COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
            //COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
            //COMMENT:     *******************************************
            //COMMENT:     THIS  CODE SWCSZE20 IS A PART OF SWEEXEE05*
            //COMMENT:     *******************************************
            //COMMENT:     IF A NEW STUB IS GENERATED CHANGE
            //COMMENT:     DOD-DATE-OF-DEATH-OR-SEPA-0006 FROM S9(8) TO X(8)
            //COMMENT: ****************************************************************
            LS.TEXT_RETURN_CODE_0009.SetValueWithSpaces();                                                      //COBOL==> MOVE SPACES TO TEXT-RETURN-CODE-0009.
            LS.NUMERIC_RETURN_CODE_0009.SetValue(ZEROES);                                                       //COBOL==> MOVE ZEROES TO NUMERIC-RETURN-CODE-0009.
            LS.FILE_INSTRUCTION_0009.SetValue(LS.FILE_INSTRUCTION_0001);                                        //COBOL==> MOVE FILE-INSTRUCTION-0001 TO FILE-INSTRUCTION-0009.
            if (returnMethod != "" && returnMethod != "M_PARA_0967001322") { M_1000_EAB_CODE_MAIN(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1000_EAB_CODE_MAIN
        /// </summary>
        private void M_1000_EAB_CODE_MAIN(string returnMethod = "")
        {
            if (LS.FILE_INSTRUCTION_0001.IsEqualTo("OPEN"))                                                     //COBOL==> IF FILE-INSTRUCTION-0001 = 'OPEN'
            {
                M_1100_OPEN_FILE("M_1100_EXIT"); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM 1100-OPEN-FILE THRU 1100-EXIT
                M_9999_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 9999-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (LS.FILE_INSTRUCTION_0001.IsEqualTo("READ"))                                                     //COBOL==> IF FILE-INSTRUCTION-0001 = 'READ'
            {
                M_1300_READ_FILE("M_1300_EXIT"); if (Control.ExitProgram) { return; }                                 //COBOL==> PERFORM 1300-READ-FILE THRU 1300-EXIT
                M_9999_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 9999-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (LS.FILE_INSTRUCTION_0001.IsEqualTo("CLOSE"))                                                    //COBOL==> IF FILE-INSTRUCTION-0001 = 'CLOSE'
            {
                M_1400_CLOSE_FILE("M_1400_EXIT"); if (Control.ExitProgram) { return; }                                //COBOL==> PERFORM 1400-CLOSE-FILE THRU 1400-EXIT
                M_9999_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 9999-EXIT
            }                                                                                                   //COBOL==> END-IF.
            LS.TEXT_RETURN_CODE_0009.SetValue("FN");                                                            //COBOL==> MOVE 'FN' TO TEXT-RETURN-CODE-0009.
            LS.TEXT_LINE_80_0009.SetValue("BAD FILE INSTRUCTION SENT");                                         //COBOL==> MOVE 'BAD FILE INSTRUCTION SENT' TO TEXT-LINE-80-0009.
            LS.NUMERIC_RETURN_CODE_0009.SetValue(1);                                                            //COBOL==> MOVE 1 TO NUMERIC-RETURN-CODE-0009.
            M_9999_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 9999-EXIT.
        }
        /// <summary>
        /// Method M_1100_OPEN_FILE
        /// </summary>
        /// <remarks>
        ///COMMENT:     OPEN INPUT FILE
        /// </remarks>
        private void M_1100_OPEN_FILE(string returnMethod = "")
        {
            FD.EXTFILE.OpenFile(FileAccessMode.Read);                                                           //COBOL==> OPEN INPUT EXTFILE.
            if (!(WS.EXTFILE_STAT.IsEqualTo(0)))                                                                //COBOL==> IF EXTFILE-STAT NOT = 0
            {
                LS.TEXT_RETURN_CODE_0009.SetValue("OP");                                                            //COBOL==> MOVE 'OP' TO TEXT-RETURN-CODE-0009
                LS.TEXT_LINE_80_0009.SetValue("AN ERROR OCCURRED ON OPEN ");                                        //COBOL==> MOVE 'AN ERROR OCCURRED ON OPEN ' TO TEXT-LINE-80-0009
                LS.NUMERIC_RETURN_CODE_0009.SetValue(WS.EXTFILE_STAT);                                              //COBOL==> MOVE EXTFILE-STAT TO NUMERIC-RETURN-CODE-0009
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_1100_OPEN_FILE") { M_1100_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1100_EXIT
        /// </summary>
        private void M_1100_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1100_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1100_EXIT") { M_1300_READ_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1300_READ_FILE
        /// </summary>
        /// <remarks>
        ///COMMENT:     READ THE INPUT FPLS RESPONSE FILE
        /// </remarks>
        private void M_1300_READ_FILE(string returnMethod = "")
        {
            WS.WS_FPLS_RECORD.SetValue(FD.EXTFILE.ReadLineInto());                                              //COBOL==> READ EXTFILE INTO WS-FPLS-RECORD.
            if (WS.EXTFILE_STAT.IsEqualTo("10"))                                                                //COBOL==> IF EXTFILE-STAT = '10'
            {
                LS.TEXT_LINE_80_0009.SetValue("REACHED END OF FPLS RESPONSE FILE");                                 //COBOL==> MOVE 'REACHED END OF FPLS RESPONSE FILE' TO TEXT-LINE-80-0009
                LS.TEXT_RETURN_CODE_0009.SetValue("EF");                                                            //COBOL==> MOVE 'EF' TO TEXT-RETURN-CODE-0009
                LS.NUMERIC_RETURN_CODE_0009.SetValue(WS.EXTFILE_STAT);                                              //COBOL==> MOVE EXTFILE-STAT TO NUMERIC-RETURN-CODE-0009
                M_1400_CLOSE_FILE("M_1400_EXIT"); if (Control.ExitProgram) { return; }                                //COBOL==> PERFORM 1400-CLOSE-FILE THRU 1400-EXIT
                M_1300_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1300-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (!(WS.EXTFILE_STAT.IsEqualTo("00")))                                                             //COBOL==> IF EXTFILE-STAT NOT = '00'
            {
                LS.TEXT_LINE_80_0009.SetValue("ERROR IN READING RESPONSE FILE");                                    //COBOL==> MOVE 'ERROR IN READING RESPONSE FILE' TO TEXT-LINE-80-0009
                LS.TEXT_RETURN_CODE_0009.SetValue("XX");                                                            //COBOL==> MOVE 'XX' TO TEXT-RETURN-CODE-0009
                LS.NUMERIC_RETURN_CODE_0009.SetValue(WS.EXTFILE_STAT);                                              //COBOL==> MOVE EXTFILE-STAT TO NUMERIC-RETURN-CODE-0009
                                                                                                                    //COMMENT:        PERFORM 1400-CLOSE-FILE THRU 1400-EXIT
                M_1300_EXIT(CheckGotoReturn(returnMethod)); return;                                                 //COBOL==> GO TO 1300-EXIT
            }                                                                                                   //COBOL==> END-IF.
            if (!(WS.FPLS_REQUEST_IDENTIFIER.IsNumericValue()))                                                //COBOL==> IF FPLS-REQUEST-IDENTIFIER IS NOT NUMERIC
            {
                WS.FPLS_REQUEST_IDENTIFIER.SetValue(ZEROES);                                                        //COBOL==> MOVE ZEROES TO FPLS-REQUEST-IDENTIFIER
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT:     IF IRS-TAX-YEAR       IS NOT NUMERIC
                                                                                                                //COMMENT:        MOVE ZEROES TO IRS-TAX-YEAR
                                                                                                                //COMMENT:     END-IF.
                                                                                                                //COMMENT: *** SINCE WE DON'T HAVE EMPLOYER-NAME ATTRIBUTE IN OUR      *****
                                                                                                                //COMMENT: *** FPLS_RESPONSE TABLE, EMPLOYER NAME IS CONCATENATED WITH *****
                                                                                                                //COMMENT: *** RETURNED ADDRESS.ALSO MOST OF THE TIME WE GET STREET    *****
                                                                                                                //COMMENT: *** ADDRESS 4 IN POSTION 553 TO 592 AS A BLANK SO THIS      *****
                                                                                                                //COMMENT: *** FIELD HAS BEEN ELIMINATED TO ACCOMODATE EMPLOYER NAME.  *****
                                                                                                                //COMMENT:     IF ADDRESS-FORMAT-IND = 'X'
            if (!(WS.EMPLOYER_NAME.IsSpaces()))                                                                 //COBOL==> IF EMPLOYER-NAME NOT = SPACES
            {
                if (WS.NSA_ADDRESS_IND_TYPE.IsEqualTo("2"))                                                         //COBOL==> IF NSA-ADDRESS-IND-TYPE = '2'
                {
                    WS.WS_BREAKAGE_EMPLR.SetValueWithSpaces();                                                          //COBOL==> MOVE SPACES TO WS-BREAKAGE-EMPLR
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    WS.WS_RETURNED_ADDRESS.SetValue(WS.RETURNED_ADDRESS);                                               //COBOL==> MOVE RETURNED-ADDRESS TO WS-RETURNED-ADDRESS
                    WS.WS_BREAKAGE_EMPLR.SetValue(WS.EMPLOYER_NAME);                                                    //COBOL==> MOVE EMPLOYER-NAME TO WS-BREAKAGE-EMPLR
                    WS.WS_BREAKAGE_ST1.SetValue(WS.WS_RET_ST1);                                                         //COBOL==> MOVE WS-RET-ST1 TO WS-BREAKAGE-ST1
                    WS.WS_BREAKAGE_ST2.SetValue(WS.WS_RET_ST2);                                                         //COBOL==> MOVE WS-RET-ST2 TO WS-BREAKAGE-ST2
                    WS.WS_BREAKAGE_ST3.SetValue(WS.WS_RET_ST3);                                                         //COBOL==> MOVE WS-RET-ST3 TO WS-BREAKAGE-ST3
                    WS.WS_BREAKAGE_RET2.SetValue(WS.WS_RET_ADDR2);                                                      //COBOL==> MOVE WS-RET-ADDR2 TO WS-BREAKAGE-RET2
                    WS.RETURNED_ADDRESS.SetValue(WS.WS_BREAKAGE_RET_ADD);                                               //COBOL==> MOVE WS-BREAKAGE-RET-ADD TO RETURNED-ADDRESS
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-IF.
                                                                                                                //COMMENT:     END-IF.
            if (WS.NDNH_RESPONSE.IsEqualTo("FN"))                                                               //COBOL==> IF NDNH-RESPONSE = 'FN'
            {
                LS.NDNH_RESPONSE_0002.SetValue("Y");                                                                //COBOL==> MOVE 'Y' TO NDNH-RESPONSE-0002
                LS.CORRECTED_ADDITION_MULTIP_0008.SetValue(WS.CORRECTED_ADD_MULTI_SSN);                             //COBOL==> MOVE CORRECTED-ADD-MULTI-SSN TO CORRECTED-ADDITION-MULTIP-0008
            }                                                                                                   //COBOL==> END-IF.
            LS.STATE_ABBREVIATION_0002.SetValue(WS.STATE_ABBREVIATION);                                         //COBOL==> MOVE STATE-ABBREVIATION TO STATE-ABBREVIATION-0002.
            LS.AGENCY_CODE_0002.SetValue(WS.AGENCY_CODE);                                                       //COBOL==> MOVE AGENCY-CODE TO AGENCY-CODE-0002.
            LS.NAME_SENT_IND_0002.SetValue(WS.NAME_SENT_IND);                                                   //COBOL==> MOVE NAME-SENT-IND TO NAME-SENT-IND-0002.
            LS.AP_FIRST_NAME_0002.SetValue(WS.AP_FIRST_NAME);                                                   //COBOL==> MOVE AP-FIRST-NAME TO AP-FIRST-NAME-0002.
            LS.AP_MIDDLE_NAME_0002.SetValue(WS.AP_MIDDLE_NAME);                                                 //COBOL==> MOVE AP-MIDDLE-NAME TO AP-MIDDLE-NAME-0002.
            LS.AP_FIRST_LAST_NAME_0002.SetValue(WS.AP_FIRST_LAST_NAME);                                         //COBOL==> MOVE AP-FIRST-LAST-NAME TO AP-FIRST-LAST-NAME-0002.
            LS.AP_SECOND_LAST_NAME_0002.SetValue(WS.AP_SECOND_LAST_NAME);                                       //COBOL==> MOVE AP-SECOND-LAST-NAME TO AP-SECOND-LAST-NAME-0002.
            LS.AP_THIRD_LAST_NAME_0002.SetValue(WS.AP_THIRD_LAST_NAME);                                         //COBOL==> MOVE AP-THIRD-LAST-NAME TO AP-THIRD-LAST-NAME-0002.
            LS.AP_NAME_RETURNED_0002.SetValue(WS.AP_NAME_RETURNED);                                             //COBOL==> MOVE AP-NAME-RETURNED TO AP-NAME-RETURNED-0002.
            LS.SSN_SUBMITTED_0002.SetValue(WS.SSN_SUBMITTED);                                                   //COBOL==> MOVE SSN-SUBMITTED TO SSN-SUBMITTED-0002.
            LS.AP_CSE_PERSON_NUMBER_0002.SetValue(WS.AP_CSE_PERSON_NUMBER);                                     //COBOL==> MOVE AP-CSE-PERSON-NUMBER TO AP-CSE-PERSON-NUMBER-0002.
            LS.FPLS_REQUEST_IDENTIFIER_0003.SetValue(WS.FPLS_REQUEST_IDENTIFIER);                               //COBOL==> MOVE FPLS-REQUEST-IDENTIFIER TO FPLS-REQUEST-IDENTIFIER-0003.
            LS.USERS_FIELD_0003.SetValue(WS.USERS_FIELD);                                                       //COBOL==> MOVE USERS-FIELD TO USERS-FIELD-0003.
            LS.LOCAL_CODE_0003.SetValue(WS.LOCAL_CODE);                                                         //COBOL==> MOVE LOCAL-CODE TO LOCAL-CODE-0003.
            LS.TYPE_OF_CASE_0003.SetValue(WS.TYPE_OF_CASE);                                                     //COBOL==> MOVE TYPE-OF-CASE TO TYPE-OF-CASE-0003.
            LS.ADDR_DATE_FORMAT_IND_0003.SetValue(WS.ADDR_DATE_FORMAT_IND);                                     //COBOL==> MOVE ADDR-DATE-FORMAT-IND TO ADDR-DATE-FORMAT-IND-0003.
            WS.WS_TEST_DATE.SetValue(WS.DATE_OF_ADDRESS);                                                       //COBOL==> MOVE DATE-OF-ADDRESS TO WS-TEST-DATE.
            if (WS.ADDR_DATE_FORMAT_IND.IsEqualTo("1"))                                                         //COBOL==> IF ADDR-DATE-FORMAT-IND = '1'
            {
                WS.WS_TEST_DATE_DD.SetValue("01");                                                                  //COBOL==> MOVE '01' TO WS-TEST-DATE-DD
            }                                                                                                   //COBOL==> ELSE
            else
            {
                if (WS.ADDR_DATE_FORMAT_IND.IsEqualTo("2"))                                                         //COBOL==> IF ADDR-DATE-FORMAT-IND = '2'
                {
                    if (WS.WS_TEST_DATE_QQ.IsEqualTo("01"))                                                             //COBOL==> IF WS-TEST-DATE-QQ = '01'
                    {
                        WS.WS_TEST_DATE_MM.SetValue("01");                                                                  //COBOL==> MOVE '01' TO WS-TEST-DATE-MM
                        WS.WS_TEST_DATE_DD.SetValue("01");                                                                  //COBOL==> MOVE '01' TO WS-TEST-DATE-DD
                    }                                                                                                   //COBOL==> ELSE
                    else
                    {
                        if (WS.WS_TEST_DATE_QQ.IsEqualTo("02"))                                                             //COBOL==> IF WS-TEST-DATE-QQ = '02'
                        {
                            WS.WS_TEST_DATE_MM.SetValue("04");                                                                  //COBOL==> MOVE '04' TO WS-TEST-DATE-MM
                            WS.WS_TEST_DATE_DD.SetValue("01");                                                                  //COBOL==> MOVE '01' TO WS-TEST-DATE-DD
                        }                                                                                                   //COBOL==> ELSE
                        else
                        {
                            if (WS.WS_TEST_DATE_QQ.IsEqualTo("03"))                                                             //COBOL==> IF WS-TEST-DATE-QQ = '03'
                            {
                                WS.WS_TEST_DATE_MM.SetValue("07");                                                                  //COBOL==> MOVE '07' TO WS-TEST-DATE-MM
                                WS.WS_TEST_DATE_DD.SetValue("01");                                                                  //COBOL==> MOVE '01' TO WS-TEST-DATE-DD
                            }                                                                                                   //COBOL==> ELSE
                            else
                            {
                                WS.WS_TEST_DATE_MM.SetValue("10");                                                                  //COBOL==> MOVE '10' TO WS-TEST-DATE-MM
                                WS.WS_TEST_DATE_DD.SetValue("01");                                                                  //COBOL==> MOVE '01' TO WS-TEST-DATE-DD
                            }                                                                                                   //COBOL==> END-IF
                        }                                                                                                   //COBOL==> END-IF
                    }                                                                                                   //COBOL==> END-IF
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    if (WS.ADDR_DATE_FORMAT_IND.IsEqualTo("3"))                                                         //COBOL==> IF ADDR-DATE-FORMAT-IND = '3'
                    {
                        WS.WS_TEST_DATE_MM.SetValue("01");                                                                  //COBOL==> MOVE '01' TO WS-TEST-DATE-MM
                        WS.WS_TEST_DATE_DD.SetValue("01");                                                                  //COBOL==> MOVE '01' TO WS-TEST-DATE-DD
                    }                                                                                                   //COBOL==> END-IF
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-IF.
            Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA.
            if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
            {
                LS.DATE_OF_ADDRESS_0003.SetValue(WS.WS_TEST_DATE);                                                  //COBOL==> MOVE WS-TEST-DATE TO DATE-OF-ADDRESS-0003
            }                                                                                                   //COBOL==> ELSE
            else
            {
                LS.DATE_OF_ADDRESS_0003.SetValue(ZEROES);                                                           //COBOL==> MOVE ZEROES TO DATE-OF-ADDRESS-0003
            }                                                                                                   //COBOL==> END-IF.
            LS.RESPONSE_CODE_0003.SetValue(WS.RESPONSE_CODE);                                                   //COBOL==> MOVE RESPONSE-CODE TO RESPONSE-CODE-0003.
            LS.CORRECTED_ADDITION_MULTIP_0008.SetValue(WS.CORRECTED_ADD_MULTI_SSN);                             //COBOL==> MOVE CORRECTED-ADD-MULTI-SSN TO CORRECTED-ADDITION-MULTIP-0008.
            LS.DOD_ANNUAL_SALARY_0003.SetValue(ZEROES);                                                         //COBOL==> MOVE ZEROES TO DOD-ANNUAL-SALARY-0003.
            LS.SESA_WAGE_AMOUNT_0003.SetValue(ZEROES);                                                          //COBOL==> MOVE ZEROES TO SESA-WAGE-AMOUNT-0003.
                                                                                                                //COMMENT:     MOVE ZEROES     TO IRS-TAX-YEAR-0003.
            LS.MBR_BENEFIT_AMOUNT_0004.SetValue(ZEROES);                                                        //COBOL==> MOVE ZEROES TO MBR-BENEFIT-AMOUNT-0004.
            LS.VA_AMOUNT_OF_AWARD_0005.SetValue(ZEROES);                                                        //COBOL==> MOVE ZEROES TO VA-AMOUNT-OF-AWARD-0005.
            LS.DOD_DATE_OF_DEATH_OR_SEPA_0006.SetValue(ZEROES);                                                 //COBOL==> MOVE ZEROES TO DOD-DATE-OF-DEATH-OR-SEPA-0006.
            LS.RETURNED_ADDRESS_0003.SetValueWithSpaces();                                                      //COBOL==> MOVE SPACES TO RETURNED-ADDRESS-0003.
            LS.ADDRESS_FORMAT_IND_0003.SetValue(WS.ADDRESS_FORMAT_IND);                                         //COBOL==> MOVE ADDRESS-FORMAT-IND TO ADDRESS-FORMAT-IND-0003.
            LS.RETURNED_ADDRESS_0003.SetValue(WS.RETURNED_ADDRESS);                                             //COBOL==> MOVE RETURNED-ADDRESS TO RETURNED-ADDRESS-0003.
            if (LS.AGENCY_CODE_0002XX.IsEqualTo("A01"))                                                         //COBOL==> IF AGENCY-CODE-0002XX = 'A01'
            {
                LS.DOD_STATUS_0003.SetValue(WS.DOD_STATUS);                                                         //COBOL==> MOVE DOD-STATUS TO DOD-STATUS-0003
                LS.DOD_SERVICE_CODE_0003.SetValue(WS.DOD_SERVICE_CODE);                                             //COBOL==> MOVE DOD-SERVICE-CODE TO DOD-SERVICE-CODE-0003
                LS.DOD_PAY_GRADE_CODE_0003.SetValue(WS.DOD_PAY_GRADE_CODE);                                         //COBOL==> MOVE DOD-PAY-GRADE-CODE TO DOD-PAY-GRADE-CODE-0003
                if (!(WS.DOD_ANNUAL_SALARY.IsNumericValue()))                                                      //COBOL==> IF DOD-ANNUAL-SALARY IS NOT NUMERIC
                {
                    WS.DOD_ANNUAL_SALARY.SetValue(ZEROES);                                                              //COBOL==> MOVE ZEROES TO DOD-ANNUAL-SALARY
                }                                                                                                   //COBOL==> END-IF
                LS.DOD_ANNUAL_SALARY_0003.SetValue(WS.DOD_ANNUAL_SALARY);                                           //COBOL==> MOVE DOD-ANNUAL-SALARY TO DOD-ANNUAL-SALARY-0003
                LS.SUBMITTING_OFFICE_0003.SetValue(WS.DOD_SUBMITTING_OFFICE);                                       //COBOL==> MOVE DOD-SUBMITTING-OFFICE TO SUBMITTING-OFFICE-0003
                WS.WS_TEST_DATE.SetValue(WS.DOD_DATE_OF_BIRTH);                                                     //COBOL==> MOVE DOD-DATE-OF-BIRTH TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.DOD_DATE_OF_BIRTH_0003.SetValue(WS.WS_TEST_DATE);                                                //COBOL==> MOVE WS-TEST-DATE TO DOD-DATE-OF-BIRTH-0003
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.DOD_DATE_OF_BIRTH_0003.SetValue(ZEROES);                                                         //COBOL==> MOVE ZEROES TO DOD-DATE-OF-BIRTH-0003
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-IF.
            if (LS.AGENCY_CODE_0002XX.IsEqualTo("A02"))                                                         //COBOL==> IF AGENCY-CODE-0002XX = 'A02'
            {
                LS.ADDRESS_IND_TYPE_0006.SetValue(WS.FBI_ADDRESS_IND_TYPE);                                         //COBOL==> MOVE FBI-ADDRESS-IND-TYPE TO ADDRESS-IND-TYPE-0006
                if (!(WS.FBI_ANNUAL_SALARY.IsNumericValue()))                                                      //COBOL==> IF FBI-ANNUAL-SALARY IS NOT NUMERIC
                {
                    WS.FBI_ANNUAL_SALARY.SetValue(ZEROES);                                                              //COBOL==> MOVE ZEROES TO FBI-ANNUAL-SALARY
                }                                                                                                   //COBOL==> END-IF
                LS.DOD_ANNUAL_SALARY_0003.SetValue(WS.FBI_ANNUAL_SALARY);                                           //COBOL==> MOVE FBI-ANNUAL-SALARY TO DOD-ANNUAL-SALARY-0003
                LS.HEALTH_INS_BENEFIT_INDICA_0007.SetValue(WS.FBI_HEALTH_INS_BENEFIT_IND);                          //COBOL==> MOVE FBI-HEALTH-INS-BENEFIT-IND TO HEALTH-INS-BENEFIT-INDICA-0007
                LS.EMPLOYMENT_STATUS_0007.SetValue(WS.FBI_EMPLOYMENT_STATUS);                                       //COBOL==> MOVE FBI-EMPLOYMENT-STATUS TO EMPLOYMENT-STATUS-0007
                LS.EMPLOYMENT_IND_0007.SetValue(WS.FBI_EMPLOYMENT_IND);                                             //COBOL==> MOVE FBI-EMPLOYMENT-IND TO EMPLOYMENT-IND-0007
                WS.WS_TEST_DATE.SetValue(WS.FBI_DATE_OF_DEATH_OR_SEPRATION);                                        //COBOL==> MOVE FBI-DATE-OF-DEATH-OR-SEPRATION TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.DOD_DATE_OF_DEATH_OR_SEPA_0006.SetValue(WS.WS_TEST_DATE);                                        //COBOL==> MOVE WS-TEST-DATE TO DOD-DATE-OF-DEATH-OR-SEPA-0006
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.DOD_DATE_OF_DEATH_OR_SEPA_0006.SetValue(ZEROES);                                                 //COBOL==> MOVE ZEROES TO DOD-DATE-OF-DEATH-OR-SEPA-0006
                }                                                                                                   //COBOL==> END-IF
                WS.WS_TEST_DATE.SetValue(WS.FBI_DATE_OF_HIRE);                                                      //COBOL==> MOVE FBI-DATE-OF-HIRE TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.DATE_OF_HIRE_0007.SetValue(WS.WS_TEST_DATE);                                                     //COBOL==> MOVE WS-TEST-DATE TO DATE-OF-HIRE-0007
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.DATE_OF_HIRE_0007.SetValue(ZEROES);                                                              //COBOL==> MOVE ZEROES TO DATE-OF-HIRE-0007
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-IF.
            if (LS.AGENCY_CODE_0002XX.IsEqualTo("A03"))                                                         //COBOL==> IF AGENCY-CODE-0002XX = 'A03'
            {
                LS.ADDRESS_IND_TYPE_0006.SetValue(WS.NSA_ADDRESS_IND_TYPE);                                         //COBOL==> MOVE NSA-ADDRESS-IND-TYPE TO ADDRESS-IND-TYPE-0006
                if (!(WS.NSA_ANNUAL_SALARY.IsNumericValue()))                                                      //COBOL==> IF NSA-ANNUAL-SALARY IS NOT NUMERIC
                {
                    WS.NSA_ANNUAL_SALARY.SetValue(ZEROES);                                                              //COBOL==> MOVE ZEROES TO NSA-ANNUAL-SALARY
                }                                                                                                   //COBOL==> END-IF
                LS.DOD_ANNUAL_SALARY_0003.SetValue(WS.NSA_ANNUAL_SALARY);                                           //COBOL==> MOVE NSA-ANNUAL-SALARY TO DOD-ANNUAL-SALARY-0003
                LS.HEALTH_INS_BENEFIT_INDICA_0007.SetValue(WS.NSA_HEALTH_INS_BENEFIT_IND);                          //COBOL==> MOVE NSA-HEALTH-INS-BENEFIT-IND TO HEALTH-INS-BENEFIT-INDICA-0007
                LS.EMPLOYMENT_STATUS_0007.SetValue(WS.NSA_EMPLOYMENT_STATUS);                                       //COBOL==> MOVE NSA-EMPLOYMENT-STATUS TO EMPLOYMENT-STATUS-0007
                LS.EMPLOYMENT_IND_0007.SetValue(WS.NSA_EMPLOYMENT_IND);                                             //COBOL==> MOVE NSA-EMPLOYMENT-IND TO EMPLOYMENT-IND-0007
                WS.WS_TEST_DATE.SetValue(WS.NSA_TERMINATION_DATE);                                                  //COBOL==> MOVE NSA-TERMINATION-DATE TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.DOD_DATE_OF_DEATH_OR_SEPA_0006.SetValue(WS.WS_TEST_DATE);                                        //COBOL==> MOVE WS-TEST-DATE TO DOD-DATE-OF-DEATH-OR-SEPA-0006
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.DOD_DATE_OF_DEATH_OR_SEPA_0006.SetValue(ZEROES);                                                 //COBOL==> MOVE ZEROES TO DOD-DATE-OF-DEATH-OR-SEPA-0006
                }                                                                                                   //COBOL==> END-IF
                                                                                                                    //COMMENT: ******************************************************
                                                                                                                    //COMMENT: *****THIS IS COPIED FROM (SWCSZE32) THE EXTERNAL FOR FCR INCOMING
                                                                                                                    //COMMENT: *****TO DETERMINE HOW THE FLAG IS TO BE SET
                                                                                                                    //COMMENT: *****SET DATE OF DEATH INDICATOR:
                                                                                                                    //COMMENT: ***** Y = VAILD DATE HAS BEEN REPORTED
                                                                                                                    //COMMENT: ***** R = DEATH PREVIOUSLY REPORTED WAS ERRONEOUS
                                                                                                                    //COMMENT: ***** I = INVALID DATE HAS BEEN REPORTED
                                                                                                                    //COMMENT: ******************************************************
                WS.WS_TEST_DATE.SetValue(WS.NSA_DATE_OF_DEATH);                                                     //COBOL==> MOVE NSA-DATE-OF-DEATH TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.TEXT_1_0010.SetValue("Y");                                                                       //COBOL==> MOVE 'Y' TO TEXT-1-0010
                    LS.NSA_DATE_OF_DEATH_0008.SetValue(WS.WS_TEST_DATE);                                                //COBOL==> MOVE WS-TEST-DATE TO NSA-DATE-OF-DEATH-0008
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.NSA_DATE_OF_DEATH_0008.SetValue(ZEROES);                                                         //COBOL==> MOVE ZEROES TO NSA-DATE-OF-DEATH-0008
                    if (WS.NSA_DATE_OF_DEATH.IsEqualTo("99999999"))                                                     //COBOL==> IF NSA-DATE-OF-DEATH = '99999999'
                    {
                        LS.TEXT_1_0010.SetValue("R");                                                                       //COBOL==> MOVE 'R' TO TEXT-1-0010
                    }                                                                                                   //COBOL==> ELSE
                    else
                    {
                        LS.TEXT_1_0010.SetValue("I");                                                                       //COBOL==> MOVE 'I' TO TEXT-1-0010
                    }                                                                                                   //COBOL==> END-IF
                }                                                                                                   //COBOL==> END-IF
                WS.WS_TEST_DATE.SetValue(WS.NSA_DATE_OF_HIRE);                                                      //COBOL==> MOVE NSA-DATE-OF-HIRE TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.DATE_OF_HIRE_0007.SetValue(WS.WS_TEST_DATE);                                                     //COBOL==> MOVE WS-TEST-DATE TO DATE-OF-HIRE-0007
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.DATE_OF_HIRE_0007.SetValue(ZEROES);                                                              //COBOL==> MOVE ZEROES TO DATE-OF-HIRE-0007
                }                                                                                                   //COBOL==> END-IF
                LS.FEIN_0007.SetValue(WS.NSA_FEIN);                                                                 //COBOL==> MOVE NSA-FEIN TO FEIN-0007
            }                                                                                                   //COBOL==> END-IF.
            if (LS.AGENCY_CODE_0002XX.IsEqualTo("B01"))                                                         //COBOL==> IF AGENCY-CODE-0002XX = 'B01'
            {
                LS.ADDRESS_IND_TYPE_0006.SetValue(WS.FED_ADDRESS_IND_TYPE);                                         //COBOL==> MOVE FED-ADDRESS-IND-TYPE TO ADDRESS-IND-TYPE-0006
                if (!(WS.FED_ANNUAL_SALARY.IsNumericValue()))                                                      //COBOL==> IF FED-ANNUAL-SALARY IS NOT NUMERIC
                {
                    WS.FED_ANNUAL_SALARY.SetValue(ZEROES);                                                              //COBOL==> MOVE ZEROES TO FED-ANNUAL-SALARY
                }                                                                                                   //COBOL==> END-IF
                LS.DOD_ANNUAL_SALARY_0003.SetValue(WS.FED_ANNUAL_SALARY);                                           //COBOL==> MOVE FED-ANNUAL-SALARY TO DOD-ANNUAL-SALARY-0003
                LS.HEALTH_INS_BENEFIT_INDICA_0007.SetValue(WS.FED_HEALTH_INS_BENEFIT_IND);                          //COBOL==> MOVE FED-HEALTH-INS-BENEFIT-IND TO HEALTH-INS-BENEFIT-INDICA-0007
                LS.EMPLOYMENT_STATUS_0007.SetValue(WS.FED_EMPLOYMENT_STATUS);                                       //COBOL==> MOVE FED-EMPLOYMENT-STATUS TO EMPLOYMENT-STATUS-0007
                LS.EMPLOYMENT_IND_0007.SetValue(WS.FED_EMPLOYMENT_IND);                                             //COBOL==> MOVE FED-EMPLOYMENT-IND TO EMPLOYMENT-IND-0007
                WS.WS_TEST_DATE.SetValue(WS.FED_DATE_OF_DEATH_OR_SEPRATION);                                        //COBOL==> MOVE FED-DATE-OF-DEATH-OR-SEPRATION TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.DOD_DATE_OF_DEATH_OR_SEPA_0006.SetValue(WS.WS_TEST_DATE);                                        //COBOL==> MOVE WS-TEST-DATE TO DOD-DATE-OF-DEATH-OR-SEPA-0006
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.DOD_DATE_OF_DEATH_OR_SEPA_0006.SetValue(ZEROES);                                                 //COBOL==> MOVE ZEROES TO DOD-DATE-OF-DEATH-OR-SEPA-0006
                }                                                                                                   //COBOL==> END-IF
                WS.WS_TEST_DATE.SetValue(WS.FED_DATE_OF_HIRE);                                                      //COBOL==> MOVE FED-DATE-OF-HIRE TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.DATE_OF_HIRE_0007.SetValue(WS.WS_TEST_DATE);                                                     //COBOL==> MOVE WS-TEST-DATE TO DATE-OF-HIRE-0007
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.DATE_OF_HIRE_0007.SetValue(ZEROES);                                                              //COBOL==> MOVE ZEROES TO DATE-OF-HIRE-0007
                }                                                                                                   //COBOL==> END-IF
                LS.REPORTING_FED_AGENCY_0007.SetValue(WS.FED_REPORTING_FED_AGENCY);                                 //COBOL==> MOVE FED-REPORTING-FED-AGENCY TO REPORTING-FED-AGENCY-0007
                LS.FEIN_0007.SetValue(WS.FED_FEIN);                                                                 //COBOL==> MOVE FED-FEIN TO FEIN-0007
            }                                                                                                   //COBOL==> END-IF.
            if ((LS.AGENCY_CODE_0002XX.IsEqualTo("C01"))
             || (LS.AGENCY_CODE_0002XX.IsEqualTo("C02")))  //COBOL==> IF AGENCY-CODE-0002XX = 'C01' OR AGENCY-CODE-0002XX = 'C02'
            {
                LS.IRS_NAME_CONTROL_0003.SetValue(WS.IRS_NAME_CONTROL);                                             //COBOL==> MOVE IRS-NAME-CONTROL TO IRS-NAME-CONTROL-0003
                LS.CP_SSN_0003.SetValue(WS.CP_SSN);                                                                 //COBOL==> MOVE CP-SSN TO CP-SSN-0003
                LS.IRS_TAX_YEAR_0003.SetValue(WS.IRS_TAX_YEAR);                                                     //COBOL==> MOVE IRS-TAX-YEAR TO IRS-TAX-YEAR-0003
            }                                                                                                   //COBOL==> END-IF.
            if (LS.AGENCY_CODE_0002XX.IsEqualTo("E01"))                                                         //COBOL==> IF AGENCY-CODE-0002XX = 'E01'
            {
                LS.SSA_FEDERAL_OR_MILITARY_0004.SetValue(WS.SSA_FEDERAL_OR_MILITARY);                               //COBOL==> MOVE SSA-FEDERAL-OR-MILITARY TO SSA-FEDERAL-OR-MILITARY-0004
                LS.SSA_CORP_DIVISION_0004.SetValue(WS.SSA_CORP_DIVISION);                                           //COBOL==> MOVE SSA-CORP-DIVISION TO SSA-CORP-DIVISION-0004
            }                                                                                                   //COBOL==> END-IF.
            if (LS.AGENCY_CODE_0002XX.IsEqualTo("E03"))                                                         //COBOL==> IF AGENCY-CODE-0002XX = 'E03'
            {
                if (!(WS.MBR_BENEFIT_AMOUNT.IsNumericValue()))                                                     //COBOL==> IF MBR-BENEFIT-AMOUNT IS NOT NUMERIC
                {
                    WS.MBR_BENEFIT_AMOUNT.SetValue(ZEROES);                                                             //COBOL==> MOVE ZEROES TO MBR-BENEFIT-AMOUNT
                }                                                                                                   //COBOL==> END-IF
                LS.MBR_BENEFIT_AMOUNT_0004.SetValue(WS.MBR_BENEFIT_AMOUNT);                                         //COBOL==> MOVE MBR-BENEFIT-AMOUNT TO MBR-BENEFIT-AMOUNT-0004
                WS.WS_TEST_DATE.SetValue(WS.MBR_DATE_OF_DEATH);                                                     //COBOL==> MOVE MBR-DATE-OF-DEATH TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.MBR_DATE_OF_DEATH_0004.SetValue(WS.WS_TEST_DATE);                                                //COBOL==> MOVE WS-TEST-DATE TO MBR-DATE-OF-DEATH-0004
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.MBR_DATE_OF_DEATH_0004.SetValue(ZEROES);                                                         //COBOL==> MOVE ZEROES TO MBR-DATE-OF-DEATH-0004
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> END-IF.
            if (LS.AGENCY_CODE_0002XX.IsEqualTo("F01"))                                                         //COBOL==> IF AGENCY-CODE-0002XX = 'F01'
            {
                LS.VA_BENEFIT_CODE_0004.SetValue(WS.VA_BENEFIT_CODE);                                               //COBOL==> MOVE VA-BENEFIT-CODE TO VA-BENEFIT-CODE-0004
                WS.WS_TEST_DATE.SetValue(WS.VA_DATE_OF_DEATH);                                                      //COBOL==> MOVE VA-DATE-OF-DEATH TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.VA_DATE_OF_DEATH_0004.SetValue(WS.WS_TEST_DATE);                                                 //COBOL==> MOVE WS-TEST-DATE TO VA-DATE-OF-DEATH-0004
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.VA_DATE_OF_DEATH_0004.SetValue(ZEROES);                                                          //COBOL==> MOVE ZEROES TO VA-DATE-OF-DEATH-0004
                }                                                                                                   //COBOL==> END-IF
                WS.WS_TEST_DATE.SetValue(WS.VA_AMT_OF_AWARD_EFFECTIVE);                                             //COBOL==> MOVE VA-AMT-OF-AWARD-EFFECTIVE TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.VA_AMT_OF_AWARD_EFFECTIVE_0005.SetValue(WS.WS_TEST_DATE);                                        //COBOL==> MOVE WS-TEST-DATE TO VA-AMT-OF-AWARD-EFFECTIVE-0005
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.VA_AMT_OF_AWARD_EFFECTIVE_0005.SetValue(ZEROES);                                                 //COBOL==> MOVE ZEROES TO VA-AMT-OF-AWARD-EFFECTIVE-0005
                }                                                                                                   //COBOL==> END-IF
                if (!(WS.VA_AMOUNT_OF_AWARD.IsNumericValue()))                                                     //COBOL==> IF VA-AMOUNT-OF-AWARD IS NOT NUMERIC
                {
                    WS.VA_AMOUNT_OF_AWARD.SetValue(ZEROES);                                                             //COBOL==> MOVE ZEROES TO VA-AMOUNT-OF-AWARD
                }                                                                                                   //COBOL==> END-IF
                LS.VA_AMOUNT_OF_AWARD_0005.SetValue(WS.VA_AMOUNT_OF_AWARD);                                         //COBOL==> MOVE VA-AMOUNT-OF-AWARD TO VA-AMOUNT-OF-AWARD-0005
                LS.VA_SUSPENSE_CODE_0005.SetValue(WS.VA_SUSPENSE_CODE);                                             //COBOL==> MOVE VA-SUSPENSE-CODE TO VA-SUSPENSE-CODE-0005
                LS.VA_INCARCERATION_CODE_0005.SetValue(WS.VA_INCARCERATION_CODE);                                   //COBOL==> MOVE VA-INCARCERATION-CODE TO VA-INCARCERATION-CODE-0005
                LS.VA_RETIREMENT_PAY_CODE_0005.SetValue(WS.VA_RETIREMENT_PAY_CODE);                                 //COBOL==> MOVE VA-RETIREMENT-PAY-CODE TO VA-RETIREMENT-PAY-CODE-0005
            }                                                                                                   //COBOL==> END-IF.
            if (LS.AGENCY_CODE_0002XX.IsEqualTo("H97"))                                                         //COBOL==> IF AGENCY-CODE-0002XX = 'H97'
            {
                LS.SESA_RESPONDING_STATE_0003.SetValue(WS.UNEI_REPORTING_STATE);                                    //COBOL==> MOVE UNEI-REPORTING-STATE TO SESA-RESPONDING-STATE-0003
                if (!(WS.UNEI_BENEFIT_AMOUNT.IsNumericValue()))                                                    //COBOL==> IF UNEI-BENEFIT-AMOUNT IS NOT NUMERIC
                {
                    WS.UNEI_BENEFIT_AMOUNT.SetValue(ZEROES);                                                            //COBOL==> MOVE ZEROES TO UNEI-BENEFIT-AMOUNT
                }                                                                                                   //COBOL==> END-IF
                LS.SESA_WAGE_AMOUNT_0003.SetValue(WS.UNEI_BENEFIT_AMOUNT);                                          //COBOL==> MOVE UNEI-BENEFIT-AMOUNT TO SESA-WAGE-AMOUNT-0003
                LS.SSN_MATCH_IND_0008.SetValue(WS.UNEI_SSN_MATCH_IND);                                              //COBOL==> MOVE UNEI-SSN-MATCH-IND TO SSN-MATCH-IND-0008
                LS.REPORTING_QUARTER_0008.SetValue(WS.UNEI_REPORTING_QUARTER);                                      //COBOL==> MOVE UNEI-REPORTING-QUARTER TO REPORTING-QUARTER-0008
            }                                                                                                   //COBOL==> END-IF.
            if (LS.AGENCY_CODE_0002XX.IsEqualTo("H98"))                                                         //COBOL==> IF AGENCY-CODE-0002XX = 'H98'
            {
                LS.SESA_RESPONDING_STATE_0003.SetValue(WS.QRWG_REPORTING_STATE);                                    //COBOL==> MOVE QRWG-REPORTING-STATE TO SESA-RESPONDING-STATE-0003
                LS.ADDRESS_IND_TYPE_0006.SetValue(WS.QRWG_ADDRESS_IND_TYPE);                                        //COBOL==> MOVE QRWG-ADDRESS-IND-TYPE TO ADDRESS-IND-TYPE-0006
                if (!(WS.QRWG_BENEFIT_AMOUNT.IsNumericValue()))                                                    //COBOL==> IF QRWG-BENEFIT-AMOUNT IS NOT NUMERIC
                {
                    WS.QRWG_BENEFIT_AMOUNT.SetValue(ZEROES);                                                            //COBOL==> MOVE ZEROES TO QRWG-BENEFIT-AMOUNT
                }                                                                                                   //COBOL==> END-IF
                LS.SESA_WAGE_AMOUNT_0003.SetValue(WS.QRWG_BENEFIT_AMOUNT);                                          //COBOL==> MOVE QRWG-BENEFIT-AMOUNT TO SESA-WAGE-AMOUNT-0003
                LS.FEIN_0007.SetValue(WS.QRWG_FEIN);                                                                //COBOL==> MOVE QRWG-FEIN TO FEIN-0007
                LS.SSN_MATCH_IND_0008.SetValue(WS.QRWG_SSN_MATCH_IND);                                              //COBOL==> MOVE QRWG-SSN-MATCH-IND TO SSN-MATCH-IND-0008
                LS.REPORTING_QUARTER_0008.SetValue(WS.QRWG_REPORTING_QUARTER);                                      //COBOL==> MOVE QRWG-REPORTING-QUARTER TO REPORTING-QUARTER-0008
                LS.REPORTING_FED_AGENCY_0007.SetValue(WS.QRWG_REPORTING_FED_AGENCY);                                //COBOL==> MOVE QRWG-REPORTING-FED-AGENCY TO REPORTING-FED-AGENCY-0007
            }                                                                                                   //COBOL==> END-IF.
            if (LS.AGENCY_CODE_0002XX.IsEqualTo("H99"))                                                         //COBOL==> IF AGENCY-CODE-0002XX = 'H99'
            {
                LS.SESA_RESPONDING_STATE_0003.SetValue(WS.NEWHIRE_REPORTING_STATE);                                 //COBOL==> MOVE NEWHIRE-REPORTING-STATE TO SESA-RESPONDING-STATE-0003
                LS.ADDRESS_IND_TYPE_0006.SetValue(WS.NEWHIRE_ADDRESS_IND_TYPE);                                     //COBOL==> MOVE NEWHIRE-ADDRESS-IND-TYPE TO ADDRESS-IND-TYPE-0006
                WS.WS_TEST_DATE.SetValue(WS.NEWHIRE_DATE_OF_BIRTH);                                                 //COBOL==> MOVE NEWHIRE-DATE-OF-BIRTH TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.DOD_DATE_OF_BIRTH_0003.SetValue(WS.WS_TEST_DATE);                                                //COBOL==> MOVE WS-TEST-DATE TO DOD-DATE-OF-BIRTH-0003
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.DOD_DATE_OF_BIRTH_0003.SetValue(ZEROES);                                                         //COBOL==> MOVE ZEROES TO DOD-DATE-OF-BIRTH-0003
                }                                                                                                   //COBOL==> END-IF
                WS.WS_TEST_DATE.SetValue(WS.NEWHIRE_DATE_OF_HIRE);                                                  //COBOL==> MOVE NEWHIRE-DATE-OF-HIRE TO WS-TEST-DATE
                Control.Call("SWEXGDAT", WS.WS_DATE_AREA); if (Control.ExitProgram) return;                        //COBOL==> CALL 'SWEXGDAT' USING WS-DATE-AREA
                if (WS.WS_DATE_RETURN_CODE.IsSpaces())                                                              //COBOL==> IF WS-DATE-RETURN-CODE = SPACES
                {
                    LS.DATE_OF_HIRE_0007.SetValue(WS.WS_TEST_DATE);                                                     //COBOL==> MOVE WS-TEST-DATE TO DATE-OF-HIRE-0007
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.DATE_OF_HIRE_0007.SetValue(ZEROES);                                                              //COBOL==> MOVE ZEROES TO DATE-OF-HIRE-0007
                }                                                                                                   //COBOL==> END-IF
                LS.REPORTING_FED_AGENCY_0007.SetValue(WS.NEWHIRE_REPORTING_FED_AGENCY);                             //COBOL==> MOVE NEWHIRE-REPORTING-FED-AGENCY TO REPORTING-FED-AGENCY-0007
                LS.FEIN_0007.SetValue(WS.NEWHIRE_FEIN);                                                             //COBOL==> MOVE NEWHIRE-FEIN TO FEIN-0007
                LS.SSN_MATCH_IND_0008.SetValue(WS.NEWHIRE_SSN_MATCH_IND);                                           //COBOL==> MOVE NEWHIRE-SSN-MATCH-IND TO SSN-MATCH-IND-0008
                LS.DOD_STATUS_0003.SetValue(WS.NEWHIRE_DOD_STATUS);                                                 //COBOL==> MOVE NEWHIRE-DOD-STATUS TO DOD-STATUS-0003
            }                                                                                                   //COBOL==> END-IF.
            if (LS.AGENCY_CODE_0002XX.IsEqualTo("D01"))                                                         //COBOL==> IF AGENCY-CODE-0002XX = 'D01'
            {
                LS.NPRC_EMPD_OR_SEPD_0003.SetValue(WS.NPRC_EMPD_OR_SEPD);                                           //COBOL==> MOVE NPRC-EMPD-OR-SEPD TO NPRC-EMPD-OR-SEPD-0003
            }                                                                                                   //COBOL==> END-IF.
            WS.WS_RECORD_COUNT.Add(1);                                                                          //COBOL==> ADD 1 TO WS-RECORD-COUNT.
            if (returnMethod != "" && returnMethod != "M_1300_READ_FILE") { M_1300_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1300_EXIT
        /// </summary>
        private void M_1300_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1300_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1300_EXIT") { M_1400_CLOSE_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1400_CLOSE_FILE
        /// </summary>
        /// <remarks>
        ///COMMENT:     CLOSE THE OUTPUT FILE
        /// </remarks>
        private void M_1400_CLOSE_FILE(string returnMethod = "")
        {
            FD.EXTFILE.CloseFile();                                                                             //COBOL==> CLOSE EXTFILE.
            if (!(WS.EXTFILE_STAT.IsEqualTo(0)))                                                                //COBOL==> IF EXTFILE-STAT NOT = 0
            {
                LS.TEXT_RETURN_CODE_0009.SetValue("CL");                                                            //COBOL==> MOVE 'CL' TO TEXT-RETURN-CODE-0009
                LS.TEXT_LINE_80_0009.SetValue("ERROR IN CLOSING FILE");                                             //COBOL==> MOVE 'ERROR IN CLOSING FILE' TO TEXT-LINE-80-0009
                LS.NUMERIC_RETURN_CODE_0009.SetValue(WS.EXTFILE_STAT);                                              //COBOL==> MOVE EXTFILE-STAT TO NUMERIC-RETURN-CODE-0009
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_1400_CLOSE_FILE") { M_1400_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_1400_EXIT
        /// </summary>
        private void M_1400_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_1400_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_1400_EXIT") { M_9999_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_9999_EXIT
        /// </summary>
        private void M_9999_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_9999_EXIT") { return; }                                                      //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_9999_EXIT") { M_PARA_0967001322_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0967001322_EXIT
        /// </summary>
        private void M_PARA_0967001322_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0967001322_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0967001322_EXIT") { M_PARA_0967001322_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0967001322_INIT
        /// </summary>
        private void M_PARA_0967001322_INIT(string returnMethod = "")
        {
            LS.EXPORT_0002EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0002EV
            LS.EXPORT_0009EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0009EV
            LS.EXPORT_DATE_OF_DEATH_IN_0010EV.ResetToInitialValue();                                            //COBOL==> INITIALIZE EXPORT-DATE-OF-DEATH-IN-0010EV .
            if (returnMethod != "" && returnMethod != "M_PARA_0967001322_INIT") { M_PARA_0967001322_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0967001322_INIT_EXIT
        /// </summary>
        private void M_PARA_0967001322_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0967001322_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
