#region Comments
/* Conversion Comments
   ************************************************************
   **   MODERN SYSTEMS INC.  COPYRIGHT 2000-2022
   **   DB-SHUTTLE COBOL to C# Conversion
   ************************************************************
   ** INIT   *  INITIAL VERSION   *  2022-03-02 04:52:54 PM
   **        *   FROM COBOL PGM   :  SWEXLE09
   **        *   FROM CANISTER    :  SR.CAECSES.PROD.LIBR.SOURCE.PDS
   ************************************************************ */

/* Original Program Identification Comments
   ***************************************************************
                       SOURCE CODE GENERATED BY
                             CA GEN 8.5
      COPYRIGHT (C) 2021 CA TECHNOLOGIES. ALL RIGHTS RESERVED.
       NAME: LE_B605_EAB_WRITE_LEGREF_MOD_EXT DATE: 2021/05/21
       TARGET OS:   MVS                       TIME: 15:48:39
       TARGET DBMS: DB2                       USER: SWCCRXS
       GENERATION OPTIONS:
       DEBUG TRACE OPTION NOT SELECTED
       DATA MODELING CONSTRAINT ENFORCEMENT NOT SELECTED
       OPTIMIZED IMPORT VIEW INITIALIZATION SELECTED
       HIGH PERFORMANCE VIEW PASSING SELECTED
       LAST-STATEMENT-NUM EXECUTION SELECTED
       ENFORCE DEFAULT VALUES WITH DBMS NOT SELECTED
       INIT UNSPECIFIED OPTIONAL FIELDS TO NULL NOT SELECTED
       DYNAMIC LINK (Z/OS) USED BUS SYS DEFAULT OF "Yes"
   ***************************************************************
       LAST-STATEMENT-NUM EXECUTION SELECTED
       ENFORCE DEFAULT VALUES WITH DBMS SELECTED
       INIT UNSPECIFIED OPTIONAL FIELDS TO NULL NOT SELECTED
   **************************************************************
   * DATE     DEVELOPER     CQ TICKET   DESCRIPTION            **
   *-----------------------------------------------------------**
   * 05/20/21 RAJ S         CQ68844     INITIAL CODING.        **
   *                                                           **
   *                                                           **
   **************************************************************
*/
#endregion
#region Using Directives
using System;
using System.Data;
using System.Collections.Generic;
using MDSY.Framework.IO.Common;
using MDSY.Framework.Buffer;
using MDSY.Framework.Buffer.BaseClasses;
using MDSY.Framework.Buffer.Interfaces;
using MDSY.Framework.Buffer.Common;
using MDSY.Framework.Core;
using MDSY.Framework.Data.SQL;
using MDSY.Framework.Interfaces;
using GOV.KS.DCF.CSS.Common.BL;
using MDSY.Framework.IO.Common;
#endregion

namespace GOV.KS.DCF.CSS.Batch.BL
{
    #region File Section Class
    internal class SWEXLE09_fd : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string FileSection = "SWEXLE09_fd_FileSection";
            internal const string OUTPUT_FILE = "OUTPUT_FILE";
            internal const string OUTPUT_RECORD = "OUTPUT_RECORD";
            internal const string CO_OFFICE_NAME = "CO_OFFICE_NAME";
            internal const string DELIMIT_01 = "DELIMIT_01";
            internal const string COUNTY_ABBREVIATION = "COUNTY_ABBREVIATION";
            internal const string DELIMIT_02 = "DELIMIT_02";
            internal const string COURT_CASE_NUMBER = "COURT_CASE_NUMBER";
            internal const string DELIMIT_03 = "DELIMIT_03";
            internal const string CASE_NUMBER = "CASE_NUMBER";
            internal const string DELIMIT_04 = "DELIMIT_04";
            internal const string REFERRAL_DATE = "REFERRAL_DATE";
            internal const string DELIMIT_05 = "DELIMIT_05";
            internal const string REFERRAL_REASON_1 = "REFERRAL_REASON_1";
            internal const string DELIMIT_06 = "DELIMIT_06";
            internal const string REFERRAL_REASON_2 = "REFERRAL_REASON_2";
            internal const string DELIMIT_07 = "DELIMIT_07";
            internal const string REFERRAL_REASON_3 = "REFERRAL_REASON_3";
            internal const string DELIMIT_08 = "DELIMIT_08";
            internal const string REFERRAL_REASON_4 = "REFERRAL_REASON_4";
            internal const string DELIMIT_09 = "DELIMIT_09";
            internal const string REFERRAL_REASON_5 = "REFERRAL_REASON_5";
            internal const string DELIMIT_10 = "DELIMIT_10";
            internal const string REFERRAL_STATUS = "REFERRAL_STATUS";
            internal const string DELIMIT_11 = "DELIMIT_11";
            internal const string STATUS_DATE = "STATUS_DATE";
        }
        #endregion

        #region Direct-access element properties
        public IFileLink OUTPUT_FILE { get; set; }
        public IGroup OUTPUT_RECORD { get { return GetElementByName<IGroup>(Names.OUTPUT_RECORD); } }
        public IField CO_OFFICE_NAME { get { return GetElementByName<IField>(Names.CO_OFFICE_NAME); } }
        public IField DELIMIT_01 { get { return GetElementByName<IField>(Names.DELIMIT_01); } }
        public IField COUNTY_ABBREVIATION { get { return GetElementByName<IField>(Names.COUNTY_ABBREVIATION); } }
        public IField DELIMIT_02 { get { return GetElementByName<IField>(Names.DELIMIT_02); } }
        public IField COURT_CASE_NUMBER { get { return GetElementByName<IField>(Names.COURT_CASE_NUMBER); } }
        public IField DELIMIT_03 { get { return GetElementByName<IField>(Names.DELIMIT_03); } }
        public IField CASE_NUMBER { get { return GetElementByName<IField>(Names.CASE_NUMBER); } }
        public IField DELIMIT_04 { get { return GetElementByName<IField>(Names.DELIMIT_04); } }
        public IField REFERRAL_DATE { get { return GetElementByName<IField>(Names.REFERRAL_DATE); } }
        public IField DELIMIT_05 { get { return GetElementByName<IField>(Names.DELIMIT_05); } }
        public IField REFERRAL_REASON_1 { get { return GetElementByName<IField>(Names.REFERRAL_REASON_1); } }
        public IField DELIMIT_06 { get { return GetElementByName<IField>(Names.DELIMIT_06); } }
        public IField REFERRAL_REASON_2 { get { return GetElementByName<IField>(Names.REFERRAL_REASON_2); } }
        public IField DELIMIT_07 { get { return GetElementByName<IField>(Names.DELIMIT_07); } }
        public IField REFERRAL_REASON_3 { get { return GetElementByName<IField>(Names.REFERRAL_REASON_3); } }
        public IField DELIMIT_08 { get { return GetElementByName<IField>(Names.DELIMIT_08); } }
        public IField REFERRAL_REASON_4 { get { return GetElementByName<IField>(Names.REFERRAL_REASON_4); } }
        public IField DELIMIT_09 { get { return GetElementByName<IField>(Names.DELIMIT_09); } }
        public IField REFERRAL_REASON_5 { get { return GetElementByName<IField>(Names.REFERRAL_REASON_5); } }
        public IField DELIMIT_10 { get { return GetElementByName<IField>(Names.DELIMIT_10); } }
        public IField REFERRAL_STATUS { get { return GetElementByName<IField>(Names.REFERRAL_STATUS); } }
        public IField DELIMIT_11 { get { return GetElementByName<IField>(Names.DELIMIT_11); } }
        public IField STATUS_DATE { get { return GetElementByName<IField>(Names.STATUS_DATE); } }


        internal SWEXLE09_ws WS;
        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the FileSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {

            recordDef.CreateNewGroup(Names.OUTPUT_RECORD, (OUTPUT_RECORD) =>
           {
               OUTPUT_RECORD.CreateNewField(Names.CO_OFFICE_NAME, FieldType.String, 30);
               OUTPUT_RECORD.CreateNewField(Names.DELIMIT_01, FieldType.String, 1, ",");
               OUTPUT_RECORD.CreateNewField(Names.COUNTY_ABBREVIATION, FieldType.String, 11);
               OUTPUT_RECORD.CreateNewField(Names.DELIMIT_02, FieldType.String, 1, ",");
               OUTPUT_RECORD.CreateNewField(Names.COURT_CASE_NUMBER, FieldType.String, 20);
               OUTPUT_RECORD.CreateNewField(Names.DELIMIT_03, FieldType.String, 1, ",");
               OUTPUT_RECORD.CreateNewField(Names.CASE_NUMBER, FieldType.String, 10);
               OUTPUT_RECORD.CreateNewField(Names.DELIMIT_04, FieldType.String, 1, ",");
               OUTPUT_RECORD.CreateNewField(Names.REFERRAL_DATE, FieldType.String, 8);
               OUTPUT_RECORD.CreateNewField(Names.DELIMIT_05, FieldType.String, 1, ",");
               OUTPUT_RECORD.CreateNewField(Names.REFERRAL_REASON_1, FieldType.String, 15);
               OUTPUT_RECORD.CreateNewField(Names.DELIMIT_06, FieldType.String, 1, ",");
               OUTPUT_RECORD.CreateNewField(Names.REFERRAL_REASON_2, FieldType.String, 7);
               OUTPUT_RECORD.CreateNewField(Names.DELIMIT_07, FieldType.String, 1, ",");
               OUTPUT_RECORD.CreateNewField(Names.REFERRAL_REASON_3, FieldType.String, 7);
               OUTPUT_RECORD.CreateNewField(Names.DELIMIT_08, FieldType.String, 1, ",");
               OUTPUT_RECORD.CreateNewField(Names.REFERRAL_REASON_4, FieldType.String, 7);
               OUTPUT_RECORD.CreateNewField(Names.DELIMIT_09, FieldType.String, 1, ",");
               OUTPUT_RECORD.CreateNewField(Names.REFERRAL_REASON_5, FieldType.String, 7);
               OUTPUT_RECORD.CreateNewField(Names.DELIMIT_10, FieldType.String, 1, ",");
               OUTPUT_RECORD.CreateNewField(Names.REFERRAL_STATUS, FieldType.String, 10);
               OUTPUT_RECORD.CreateNewField(Names.DELIMIT_11, FieldType.String, 1, ",");
               OUTPUT_RECORD.CreateNewField(Names.STATUS_DATE, FieldType.String, 9);
           });

        }

        protected override string GetRecordName()
        {
            return Names.FileSection;
        }
        #endregion

        #region Initialize
        public override void Initialize()
        {
            InitializeWithLowValues();
            IFileHandler FileHandler = InversionContainer.GetImplementingObject<IFileHandler>();

            OUTPUT_FILE = FileHandler.GetFile("REFOUT");
            OUTPUT_FILE.StatusField = WS.FILE_STATUS;
            OUTPUT_FILE.AssociatedBuffer = OUTPUT_RECORD;
        }
        #endregion

        #region Constructors
        public SWEXLE09_fd(SWEXLE09_ws ws)
            : base()
        {
            this.WS = ws;
            Initialize();

        }
        #endregion
    }
    #endregion File Section Class
    #region Working Storage Class
    internal class SWEXLE09_ws : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string WorkingStorage = "SWEXLE09_ws_WorkingStorage";
            internal const string FILE_STATUS = "FILE_STATUS";
            internal const string WS_LEG_REQ_REASON_CODES = "WS_LEG_REQ_REASON_CODES";
            internal const string MOD_REASONS = "MOD_REASONS";
            internal const string NON_MOD_REASONS = "NON_MOD_REASONS";
            internal const string WS_CURR_CNT = "WS_CURR_CNT";
            internal const string WS_SKIP_FLAG = "WS_SKIP_FLAG";
            internal const string WS_NUMERIC_FIELDS = "WS_NUMERIC_FIELDS";
            internal const string WS_STATUS_DATE_0002 = "WS_STATUS_DATE_0002";
            internal const string WS_REFERRAL_DATE_0002 = "WS_REFERRAL_DATE_0002";
            internal const string WS_IDENTIFIER_0002 = "WS_IDENTIFIER_0002";
            internal const string WS_TRIBUNAL_ID_0002 = "WS_TRIBUNAL_ID_0002";
            internal const string WS_SYSTEM_GEN_ID_0007 = "WS_SYSTEM_GEN_ID_0007";
            internal const string WS_LOCATION_0010 = "WS_LOCATION_0010";
        }
        #endregion

        #region Direct-access element properties
        public IField FILE_STATUS { get { return GetElementByName<IField>(Names.FILE_STATUS); } }
        public IField WS_LEG_REQ_REASON_CODES { get { return GetElementByName<IField>(Names.WS_LEG_REQ_REASON_CODES); } }
        public ICheckField MOD_REASONS { get { return GetElementByName<ICheckField>(Names.MOD_REASONS); } }
        public ICheckField NON_MOD_REASONS { get { return GetElementByName<ICheckField>(Names.NON_MOD_REASONS); } }
        public IField WS_CURR_CNT { get { return GetElementByName<IField>(Names.WS_CURR_CNT); } }
        public IField WS_SKIP_FLAG { get { return GetElementByName<IField>(Names.WS_SKIP_FLAG); } }
        public IGroup WS_NUMERIC_FIELDS { get { return GetElementByName<IGroup>(Names.WS_NUMERIC_FIELDS); } }
        public IField WS_STATUS_DATE_0002 { get { return GetElementByName<IField>(Names.WS_STATUS_DATE_0002); } }
        public IField WS_REFERRAL_DATE_0002 { get { return GetElementByName<IField>(Names.WS_REFERRAL_DATE_0002); } }
        public IField WS_IDENTIFIER_0002 { get { return GetElementByName<IField>(Names.WS_IDENTIFIER_0002); } }
        public IField WS_TRIBUNAL_ID_0002 { get { return GetElementByName<IField>(Names.WS_TRIBUNAL_ID_0002); } }
        public IField WS_SYSTEM_GEN_ID_0007 { get { return GetElementByName<IField>(Names.WS_SYSTEM_GEN_ID_0007); } }
        public IField WS_LOCATION_0010 { get { return GetElementByName<IField>(Names.WS_LOCATION_0010); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the WorkingStorage IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.FILE_STATUS, FieldType.String, 2);
            recordDef.CreateNewField(Names.WS_LEG_REQ_REASON_CODES, FieldType.String, 4, SPACES)
                .NewCheckField(Names.MOD_REASONS, "MIC ", "MIN ", "MOC ", "MON ", "MOO ")
                .NewCheckField(Names.NON_MOD_REASONS, "ADM ", "CV  ", "ENF ", "EST ", "PAT ")
                ;
            recordDef.CreateNewField(Names.WS_CURR_CNT, FieldType.UnsignedNumeric, 1, ZEROS);
            recordDef.CreateNewField(Names.WS_SKIP_FLAG, FieldType.String, 1, SPACES);

            recordDef.CreateNewGroup(Names.WS_NUMERIC_FIELDS, (WS_NUMERIC_FIELDS) =>
           {
               WS_NUMERIC_FIELDS.CreateNewField(Names.WS_STATUS_DATE_0002, FieldType.UnsignedNumeric, 8);
               WS_NUMERIC_FIELDS.CreateNewField(Names.WS_REFERRAL_DATE_0002, FieldType.UnsignedNumeric, 8);
               WS_NUMERIC_FIELDS.CreateNewField(Names.WS_IDENTIFIER_0002, FieldType.UnsignedNumeric, 3);
               WS_NUMERIC_FIELDS.CreateNewField(Names.WS_TRIBUNAL_ID_0002, FieldType.UnsignedNumeric, 9);
               WS_NUMERIC_FIELDS.CreateNewField(Names.WS_SYSTEM_GEN_ID_0007, FieldType.UnsignedNumeric, 4);
               WS_NUMERIC_FIELDS.CreateNewField(Names.WS_LOCATION_0010, FieldType.UnsignedNumeric, 2);
           });

        }

        protected override string GetRecordName()
        {
            return Names.WorkingStorage;
        }
        #endregion

    }
    #endregion Working Storage Class

    #region Linkage Section Class
    internal class SWEXLE09_ls : PredefinedRecordBase
    {
        #region Name constants
        /// <summary>
        /// Name constants.
        /// </summary>
        internal static class Names
        {
            internal const string LinkageSection = "SWEXLE09_ls_LinkageSection";
            internal const string IEF_RUNTIME_PARM1 = "IEF_RUNTIME_PARM1";
            internal const string IEF_RUNTIME_PARM2 = "IEF_RUNTIME_PARM2";
            internal const string GLOBDATA = "GLOBDATA";
            internal const string PSMGR_IEF_COMMAND = "PSMGR_IEF_COMMAND";
            internal const string PSMGR_IEF_COMMAND_1 = "PSMGR_IEF_COMMAND_1";
            internal const string PSMGR_IEF_COMMAND_2 = "PSMGR_IEF_COMMAND_2";
            internal const string PSMGR_IEF_TRANCODE = "PSMGR_IEF_TRANCODE";
            internal const string PSMGR_EXIT_STATE = "PSMGR_EXIT_STATE";
            internal const string PSMGR_EXIT_INFOMSG = "PSMGR_EXIT_INFOMSG";
            internal const string PSMGR_USER_ID = "PSMGR_USER_ID";
            internal const string PSMGR_TERMINAL_ID = "PSMGR_TERMINAL_ID";
            internal const string PSMGR_PRINTER_ID = "PSMGR_PRINTER_ID";
            internal const string PSMGR_CURRENT_DATE = "PSMGR_CURRENT_DATE";
            internal const string PSMGR_CURRENT_TIME = "PSMGR_CURRENT_TIME";
            internal const string PSMGR_RUNTIME_TYPE = "PSMGR_RUNTIME_TYPE";
            internal const string PSMGR_FUNCTION_DATA = "PSMGR_FUNCTION_DATA";
            internal const string PSMGR_FUNC_ERRMSG = "PSMGR_FUNC_ERRMSG";
            internal const string PSMGR_FUNC_NAME = "PSMGR_FUNC_NAME";
            internal const string PSMGR_FUNC_IN_DATE = "PSMGR_FUNC_IN_DATE";
            internal const string PSMGR_FUNC_IN_DDURA = "PSMGR_FUNC_IN_DDURA";
            internal const string DDURA_YEAR = "DDURA_YEAR";
            internal const string DDURA_Y_MISS = "DDURA_Y_MISS";
            internal const string DDURA_YYYY = "DDURA_YYYY";
            internal const string DDURA_MONTH = "DDURA_MONTH";
            internal const string DDURA_M_MISS = "DDURA_M_MISS";
            internal const string DDURA_MM = "DDURA_MM";
            internal const string DDURA_DAY = "DDURA_DAY";
            internal const string DDURA_D_MISS = "DDURA_D_MISS";
            internal const string DDURA_DD = "DDURA_DD";
            internal const string PSMGR_FUNC_OUT_DATE = "PSMGR_FUNC_OUT_DATE";
            internal const string PSMGR_FUNC_IN_TIME = "PSMGR_FUNC_IN_TIME";
            internal const string PSMGR_FUNC_IN_TDURA = "PSMGR_FUNC_IN_TDURA";
            internal const string TDURA_HOUR = "TDURA_HOUR";
            internal const string TDURA_H_MISS = "TDURA_H_MISS";
            internal const string TDURA_HH = "TDURA_HH";
            internal const string TDURA_MINUTE = "TDURA_MINUTE";
            internal const string TDURA_M_MISS = "TDURA_M_MISS";
            internal const string TDURA_MM = "TDURA_MM";
            internal const string TDURA_SECOND = "TDURA_SECOND";
            internal const string TDURA_S_MISS = "TDURA_S_MISS";
            internal const string TDURA_SS = "TDURA_SS";
            internal const string PSMGR_FUNC_OUT_TIME = "PSMGR_FUNC_OUT_TIME";
            internal const string PSMGR_IEF_NEXTTRAN = "PSMGR_IEF_NEXTTRAN";
            internal const string PSMGR_EXIT_MSGTYPE = "PSMGR_EXIT_MSGTYPE";
            internal const string PSMGR_IEF_DEBUG_FLAGS = "PSMGR_IEF_DEBUG_FLAGS";
            internal const string PSMGR_IEF_DEBUG = "PSMGR_IEF_DEBUG";
            internal const string PSMGR_DEBUG_ON = "PSMGR_DEBUG_ON";
            internal const string PSMGR_ENVIRONMENT_DATA = "PSMGR_ENVIRONMENT_DATA";
            internal const string PSMGR_PCB_CNT = "PSMGR_PCB_CNT";
            internal const string PSMGR_PCB_ENTRY = "PSMGR_PCB_ENTRY";
            internal const string PSMGR_PCB_ADR = "PSMGR_PCB_ADR";
            internal const string PSMGR_EAB_DATA = "PSMGR_EAB_DATA";
            internal const string PSMGR_EABPCB_CNT = "PSMGR_EABPCB_CNT";
            internal const string PSMGR_EABPCB_ENTRY = "PSMGR_EABPCB_ENTRY";
            internal const string PSMGR_EABPCB_ADR = "PSMGR_EABPCB_ADR";
            internal const string PSMGR_ERROR_DATA = "PSMGR_ERROR_DATA";
            internal const string ERROR_ACTION_NAME = "ERROR_ACTION_NAME";
            internal const string ERROR_ENCOUNTERED_SW = "ERROR_ENCOUNTERED_SW";
            internal const string VIEW_OVERFLOW_SW = "VIEW_OVERFLOW_SW";
            internal const string PSMGR_DASG_DATA = "PSMGR_DASG_DATA";
            internal const string ACTION_ID_X = "ACTION_ID_X";
            internal const string ACTION_ID = "ACTION_ID";
            internal const string ATTRIBUTE_ID_X = "ATTRIBUTE_ID_X";
            internal const string ATTRIBUTE_ID = "ATTRIBUTE_ID";
            internal const string STATUS_FLAG = "STATUS_FLAG";
            internal const string WHEN_SUCCESSFUL_SF = "WHEN_SUCCESSFUL_SF";
            internal const string FATAL_ERROR_SF = "FATAL_ERROR_SF";
            internal const string DB_ERROR_SF = "DB_ERROR_SF";
            internal const string ABORT_SHOW_DBMS_MSG_SF = "ABORT_SHOW_DBMS_MSG_SF";
            internal const string ABORT_SHOW_USER_MSG_SF = "ABORT_SHOW_USER_MSG_SF";
            internal const string RETRY_TRAN_REQUESTED_SF = "RETRY_TRAN_REQUESTED_SF";
            internal const string PSTEP_USE_FAILURE = "PSTEP_USE_FAILURE";
            internal const string ASYNC_WHEN_AVAILABLE_SF = "ASYNC_WHEN_AVAILABLE_SF";
            internal const string ASYNC_WHEN_ACCEPTED_SF = "ASYNC_WHEN_ACCEPTED_SF";
            internal const string ASYNC_WHEN_NOT_ACCEPTED_SF = "ASYNC_WHEN_NOT_ACCEPTED_SF";
            internal const string ASYNC_WHEN_INVALID_ID_SF = "ASYNC_WHEN_INVALID_ID_SF";
            internal const string ASYNC_WHEN_PENDING_SF = "ASYNC_WHEN_PENDING_SF";
            internal const string ASYNC_WHEN_SERVER_ERROR_SF = "ASYNC_WHEN_SERVER_ERROR_SF";
            internal const string ASYNC_WHEN_COMM_ERROR_SF = "ASYNC_WHEN_COMM_ERROR_SF";
            internal const string LAST_STATUS = "LAST_STATUS";
            internal const string DB_ERROR_FL_LS = "DB_ERROR_FL_LS";
            internal const string DB_DEADLOCK_TIMOUT_FL_LS = "DB_DEADLOCK_TIMOUT_FL_LS";
            internal const string DUPLICATE_FOUND_FL_LS = "DUPLICATE_FOUND_FL_LS";
            internal const string INVALID_DATAA_FL_LS = "INVALID_DATAA_FL_LS";
            internal const string INVALID_DATAB_TYPE_FL_LS = "INVALID_DATAB_TYPE_FL_LS";
            internal const string INVALID_DATAB_PERM_FL_LS = "INVALID_DATAB_PERM_FL_LS";
            internal const string FATAL_ERROR_FL_LS = "FATAL_ERROR_FL_LS";
            internal const string NOT_FOUND_FL_LS = "NOT_FOUND_FL_LS";
            internal const string NOT_UNIQUE_FL_LS = "NOT_UNIQUE_FL_LS";
            internal const string IEF_FUNCTION_ERROR_FL_LS = "IEF_FUNCTION_ERROR_FL_LS";
            internal const string IEF_DURATION_ERROR_FL_LS = "IEF_DURATION_ERROR_FL_LS";
            internal const string USED_PSTEP_NOT_FOUND = "USED_PSTEP_NOT_FOUND";
            internal const string USED_PSTEP_ROUTING_ERR = "USED_PSTEP_ROUTING_ERR";
            internal const string USED_PSTEP_SND_FMT_ERR = "USED_PSTEP_SND_FMT_ERR";
            internal const string USED_PSTEP_ENCRYPT_ERR = "USED_PSTEP_ENCRYPT_ERR";
            internal const string USED_PSTEP_SND_BFR_ERR = "USED_PSTEP_SND_BFR_ERR";
            internal const string USED_PSTEP_RCV_BFR_ERR = "USED_PSTEP_RCV_BFR_ERR";
            internal const string USED_PSTEP_RCV_FMT_ERR = "USED_PSTEP_RCV_FMT_ERR";
            internal const string USED_PSTEP_TIRSECR_ERR = "USED_PSTEP_TIRSECR_ERR";
            internal const string USED_PSTEP_TOKEN_ERR = "USED_PSTEP_TOKEN_ERR";
            internal const string USED_PSTEP_SEND_MAX_SIZE = "USED_PSTEP_SEND_MAX_SIZE";
            internal const string USED_PSTEP_SECG_ERR = "USED_PSTEP_SECG_ERR";
            internal const string USED_PSTEP_ALLOC_ERR = "USED_PSTEP_ALLOC_ERR";
            internal const string USED_PSTEP_CONNECT_ERR = "USED_PSTEP_CONNECT_ERR";
            internal const string USED_PSTEP_XERR = "USED_PSTEP_XERR";
            internal const string USED_PSTEP_RCV_UA_ERR = "USED_PSTEP_RCV_UA_ERR";
            internal const string USED_PSTEP_RCV_ES_ERR = "USED_PSTEP_RCV_ES_ERR";
            internal const string USED_PSTEP_XFAL = "USED_PSTEP_XFAL";
            internal const string USED_PSTEP_SETOA_ERR = "USED_PSTEP_SETOA_ERR";
            internal const string USED_PSTEP_RCV_VIEW_ERR = "USED_PSTEP_RCV_VIEW_ERR";
            internal const string USED_PSTEP_DECRYPT_ERR = "USED_PSTEP_DECRYPT_ERR";
            internal const string SAVE_SQLCA = "SAVE_SQLCA";
            internal const string PSMGR_DEBUG_DATA = "PSMGR_DEBUG_DATA";
            internal const string PSMGR_TRACE_ADR = "PSMGR_TRACE_ADR";
            internal const string LAST_STATEMENT_X = "LAST_STATEMENT_X";
            internal const string LAST_STATEMENT_NUM = "LAST_STATEMENT_NUM";
            internal const string CUR_AB_ID = "CUR_AB_ID";
            internal const string CUR_AB_NAME = "CUR_AB_NAME";
            internal const string PSMGR_TIRDATE_SAVEAREA = "PSMGR_TIRDATE_SAVEAREA";
            internal const string PSMGR_TIRDATE_CMCB = "PSMGR_TIRDATE_CMCB";
            internal const string PSMGR_TIRDATE_DATE = "PSMGR_TIRDATE_DATE";
            internal const string PSMGR_TIRDATE_TIME = "PSMGR_TIRDATE_TIME";
            internal const string PSMGR_TIRDATE_INC = "PSMGR_TIRDATE_INC";
            internal const string PSMGR_TIRDATE_RC = "PSMGR_TIRDATE_RC";
            internal const string PSMGR_TIRDATE_OK = "PSMGR_TIRDATE_OK";
            internal const string PSMGR_TIRDATE_WARNING = "PSMGR_TIRDATE_WARNING";
            internal const string PSMGR_TIRDATE_ERROR = "PSMGR_TIRDATE_ERROR";
            internal const string PSMGR_TIRDATE_REQ = "PSMGR_TIRDATE_REQ";
            internal const string PSMGR_TIRDATE_DATEF = "PSMGR_TIRDATE_DATEF";
            internal const string PSMGR_TIRDATE_TIMEF = "PSMGR_TIRDATE_TIMEF";
            internal const string PSMGR_TIRDATE_RETMSG = "PSMGR_TIRDATE_RETMSG";
            internal const string PSMGR_TIRDATE_TSTAMP = "PSMGR_TIRDATE_TSTAMP";
            internal const string PSMGR_TIRDATE_DATE_Z = "PSMGR_TIRDATE_DATE_Z";
            internal const string PSMGR_TIRDATE_TIME_Z = "PSMGR_TIRDATE_TIME_Z";
            internal const string PSMGR_TIRDATE_SKIP_VAL = "PSMGR_TIRDATE_SKIP_VAL";
            internal const string PSMGR_ROLLBACK_RQSTED = "PSMGR_ROLLBACK_RQSTED";
            internal const string ROLLBACK_RQSTED = "ROLLBACK_RQSTED";
            internal const string ABEND_RQSTED = "ABEND_RQSTED";
            internal const string TERMINATE_RQSTED = "TERMINATE_RQSTED";
            internal const string TIRTRCE_SAVE_AREA = "TIRTRCE_SAVE_AREA";
            internal const string TOP_INDX = "TOP_INDX";
            internal const string BOTTOM_INDX = "BOTTOM_INDX";
            internal const string END_INDX = "END_INDX";
            internal const string LAST_STMT = "LAST_STMT";
            internal const string TOP_OF_CALL = "TOP_OF_CALL";
            internal const string TRACE_BREAK_POINT = "TRACE_BREAK_POINT";
            internal const string TRACE_BREAK_POINT_STATUS = "TRACE_BREAK_POINT_STATUS";
            internal const string LAST_AB_NAME = "LAST_AB_NAME";
            internal const string COLOR = "COLOR";
            internal const string COLORT = "COLORT";
            internal const string HILITE = "HILITE";
            internal const string TRACE_ON_OFF = "TRACE_ON_OFF";
            internal const string CASCADE_DELETE_FLAGS = "CASCADE_DELETE_FLAGS";
            internal const string V1PRESENT = "V1PRESENT";
            internal const string V2PRESENT = "V2PRESENT";
            internal const string CASCADE1 = "CASCADE1";
            internal const string CASCADE2 = "CASCADE2";
            internal const string PROCESSQ_FLAG = "PROCESSQ_FLAG";
            internal const string PSMGR_ACTIVE_DIALECT = "PSMGR_ACTIVE_DIALECT";
            internal const string DIALECT_NAME = "DIALECT_NAME";
            internal const string MESSAGE_TABLE_NAME = "MESSAGE_TABLE_NAME";
            internal const string TRANSLATE_TABLE_NAME = "TRANSLATE_TABLE_NAME";
            internal const string PSMGR_FUNCTION_DATA_EXT = "PSMGR_FUNCTION_DATA_EXT";
            internal const string PSMGR_FUNC_IN_TIMESTAMP = "PSMGR_FUNC_IN_TIMESTAMP";
            internal const string PSMGR_FUNC_IN_TSDURA = "PSMGR_FUNC_IN_TSDURA";
            internal const string TSDURA_MICROSECOND = "TSDURA_MICROSECOND";
            internal const string TSDURA_M_MISS = "TSDURA_M_MISS";
            internal const string TSDURA_MS = "TSDURA_MS";
            internal const string PSMGR_FUNC_OUT_TIMESTAMP = "PSMGR_FUNC_OUT_TIMESTAMP";
            internal const string PSMGR_CICS_FAIL_SW = "PSMGR_CICS_FAIL_SW";
            internal const string INHIBIT_CICS_RECEIVE = "INHIBIT_CICS_RECEIVE";
            internal const string CLIENT_USERID = "CLIENT_USERID";
            internal const string CLIENT_PASSWORD = "CLIENT_PASSWORD";
            internal const string LOAD_MODULE_NAME = "LOAD_MODULE_NAME";
            internal const string INSTRUMENT_CODE = "INSTRUMENT_CODE";
            internal const string TX_RETRY_LIMIT = "TX_RETRY_LIMIT";
            internal const string TX_TIMEOUT = "TX_TIMEOUT";
            internal const string PSMGR_EXTRA_ERRINFO = "PSMGR_EXTRA_ERRINFO";
            internal const string ERRINFO_BUF_SIZE = "ERRINFO_BUF_SIZE";
            internal const string ERRINFO_MSG_SIZE = "ERRINFO_MSG_SIZE";
            internal const string ERRINFO_BUF_ADDR = "ERRINFO_BUF_ADDR";
            internal const string TX_RETRY_COUNT = "TX_RETRY_COUNT";
            internal const string TX_USER_RETRY_ALLOWED = "TX_USER_RETRY_ALLOWED";
            internal const string PSMGR_PSTEP_USE_PTRS = "PSMGR_PSTEP_USE_PTRS";
            internal const string PSTEP_FAIL_MSG_PTR = "PSTEP_FAIL_MSG_PTR";
            internal const string PSTEP_GURB_REST_PTR = "PSTEP_GURB_REST_PTR";
            internal const string PSTEP_LIPS_PTR = "PSTEP_LIPS_PTR";
            internal const string PSTEP_TBL_PTR = "PSTEP_TBL_PTR";
            internal const string PSTEP_DDF_PTR = "PSTEP_DDF_PTR";
            internal const string PSTEP_COMM_ID = "PSTEP_COMM_ID";
            internal const string PSTEP_APPL_LIST_PTR = "PSTEP_APPL_LIST_PTR";
            internal const string PSTEP_CURR_PST_PTR = "PSTEP_CURR_PST_PTR";
            internal const string PSMGR_PSTEP_USE_SYSFLDS = "PSMGR_PSTEP_USE_SYSFLDS";
            internal const string PSMGR_EIBERRCD = "PSMGR_EIBERRCD";
            internal const string PSMGR_EIBFN = "PSMGR_EIBFN";
            internal const string PSMGR_EIBRESP = "PSMGR_EIBRESP";
            internal const string PSMGR_EIBRESP2 = "PSMGR_EIBRESP2";
            internal const string PSMGR_ASYNC_DATA = "PSMGR_ASYNC_DATA";
            internal const string ASYNC_MODE = "ASYNC_MODE";
            internal const string FLOW_TYPE_SYNC = "FLOW_TYPE_SYNC";
            internal const string FLOW_TYPE_ASYNC = "FLOW_TYPE_ASYNC";
            internal const string FLOW_TYPE_NO_RESPONSE = "FLOW_TYPE_NO_RESPONSE";
            internal const string ASYNC_FLOW_STATUS_TABLE_PTR = "ASYNC_FLOW_STATUS_TABLE_PTR";
            internal const string ASYNC_SERVER_LOC_TABLE_PTR = "ASYNC_SERVER_LOC_TABLE_PTR";
            internal const string PSMGR_HEAP = "PSMGR_HEAP";
            internal const string HEAP_CFB = "HEAP_CFB";
            internal const string HEAP_CFB_ADDR = "HEAP_CFB_ADDR";
            internal const string HEAP_CFB_ADDR_RESV = "HEAP_CFB_ADDR_RESV";
            internal const string HEAP_CFB_ID = "HEAP_CFB_ID";
            internal const string HEAP_CFB_LEN = "HEAP_CFB_LEN";
            internal const string HEAP_WGLOB = "HEAP_WGLOB";
            internal const string HEAP_WGLOB_ADDR = "HEAP_WGLOB_ADDR";
            internal const string HEAP_WGLOB_ADDR_RESV = "HEAP_WGLOB_ADDR_RESV";
            internal const string HEAP_WGLOB_ID = "HEAP_WGLOB_ID";
            internal const string HEAP_WGLOB_LEN = "HEAP_WGLOB_LEN";
            internal const string PSMGR_MMCB = "PSMGR_MMCB";
            internal const string PSMGR_MMCB_ACTIVE = "PSMGR_MMCB_ACTIVE";
            internal const string IMPORT_0001EV = "IMPORT_0001EV";
            internal const string CSE_PERSONS_WORK_SET_0001ET = "CSE_PERSONS_WORK_SET_0001ET";
            internal const string FORMATTED_NAME_0001AS = "FORMATTED_NAME_0001AS";
            internal const string FORMATTED_NAME_0001 = "FORMATTED_NAME_0001";
            internal const string FORMATTED_NAME_0001XX = "FORMATTED_NAME_0001XX";
            internal const string IMPORT_0002EV = "IMPORT_0002EV";
            internal const string LEGAL_REFERRAL_0002ET = "LEGAL_REFERRAL_0002ET";
            internal const string REFERRAL_DATE_0002AS = "REFERRAL_DATE_0002AS";
            internal const string REFERRAL_DATE_0002 = "REFERRAL_DATE_0002";
            internal const string REFERRAL_DATE_0002XX = "REFERRAL_DATE_0002XX";
            internal const string REFERRAL_REASON_1_0002AS = "REFERRAL_REASON_1_0002AS";
            internal const string REFERRAL_REASON_1_0002 = "REFERRAL_REASON_1_0002";
            internal const string REFERRAL_REASON_1_0002XX = "REFERRAL_REASON_1_0002XX";
            internal const string REFERRAL_REASON_2_0002AS = "REFERRAL_REASON_2_0002AS";
            internal const string REFERRAL_REASON_2_0002 = "REFERRAL_REASON_2_0002";
            internal const string REFERRAL_REASON_2_0002XX = "REFERRAL_REASON_2_0002XX";
            internal const string REFERRAL_REASON_3_0002AS = "REFERRAL_REASON_3_0002AS";
            internal const string REFERRAL_REASON_3_0002 = "REFERRAL_REASON_3_0002";
            internal const string REFERRAL_REASON_3_0002XX = "REFERRAL_REASON_3_0002XX";
            internal const string REFERRAL_REASON_5_0002AS = "REFERRAL_REASON_5_0002AS";
            internal const string REFERRAL_REASON_5_0002 = "REFERRAL_REASON_5_0002";
            internal const string REFERRAL_REASON_5_0002XX = "REFERRAL_REASON_5_0002XX";
            internal const string REFERRAL_REASON_4_0002AS = "REFERRAL_REASON_4_0002AS";
            internal const string REFERRAL_REASON_4_0002 = "REFERRAL_REASON_4_0002";
            internal const string REFERRAL_REASON_4_0002XX = "REFERRAL_REASON_4_0002XX";
            internal const string STATUS_0002AS = "STATUS_0002AS";
            internal const string STATUS_0002 = "STATUS_0002";
            internal const string STATUS_0002XX = "STATUS_0002XX";
            internal const string IDENTIFIER_0002AS = "IDENTIFIER_0002AS";
            internal const string IDENTIFIER_0002 = "IDENTIFIER_0002";
            internal const string IDENTIFIER_0002XX = "IDENTIFIER_0002XX";
            internal const string STATUS_DATE_0002AS = "STATUS_DATE_0002AS";
            internal const string STATUS_DATE_0002 = "STATUS_DATE_0002";
            internal const string STATUS_DATE_0002XX = "STATUS_DATE_0002XX";
            internal const string REFERRED_BY_USER_ID_0002AS = "REFERRED_BY_USER_ID_0002AS";
            internal const string REFERRED_BY_USER_ID_0002 = "REFERRED_BY_USER_ID_0002";
            internal const string REFERRED_BY_USER_ID_0002XX = "REFERRED_BY_USER_ID_0002XX";
            internal const string COURT_CASE_NUMBER_0002AS = "COURT_CASE_NUMBER_0002AS";
            internal const string COURT_CASE_NUMBER_0002 = "COURT_CASE_NUMBER_0002";
            internal const string COURT_CASE_NUMBER_0002XX = "COURT_CASE_NUMBER_0002XX";
            internal const string TRIBUNAL_ID_0002AS = "TRIBUNAL_ID_0002AS";
            internal const string TRIBUNAL_ID_0002 = "TRIBUNAL_ID_0002";
            internal const string TRIBUNAL_ID_0002XX = "TRIBUNAL_ID_0002XX";
            internal const string IMPORT_0003EV = "IMPORT_0003EV";
            internal const string CASE_0003ET = "CASE_0003ET";
            internal const string NUMBER_0003AS = "NUMBER_0003AS";
            internal const string NUMBER_0003 = "NUMBER_0003";
            internal const string NUMBER_0003XX = "NUMBER_0003XX";
            internal const string IMPORT_LEGAL_0004EV = "IMPORT_LEGAL_0004EV";
            internal const string SERVICE_PROVIDER_0004ET = "SERVICE_PROVIDER_0004ET";
            internal const string LAST_NAME_0004AS = "LAST_NAME_0004AS";
            internal const string LAST_NAME_0004 = "LAST_NAME_0004";
            internal const string LAST_NAME_0004XX = "LAST_NAME_0004XX";
            internal const string FIRST_NAME_0004AS = "FIRST_NAME_0004AS";
            internal const string FIRST_NAME_0004 = "FIRST_NAME_0004";
            internal const string FIRST_NAME_0004XX = "FIRST_NAME_0004XX";
            internal const string MIDDLE_INITIAL_0004AS = "MIDDLE_INITIAL_0004AS";
            internal const string MIDDLE_INITIAL_0004 = "MIDDLE_INITIAL_0004";
            internal const string MIDDLE_INITIAL_0004XX = "MIDDLE_INITIAL_0004XX";
            internal const string IMPORT_CO_0005EV = "IMPORT_CO_0005EV";
            internal const string SERVICE_PROVIDER_0005ET = "SERVICE_PROVIDER_0005ET";
            internal const string LAST_NAME_0005AS = "LAST_NAME_0005AS";
            internal const string LAST_NAME_0005 = "LAST_NAME_0005";
            internal const string LAST_NAME_0005XX = "LAST_NAME_0005XX";
            internal const string FIRST_NAME_0005AS = "FIRST_NAME_0005AS";
            internal const string FIRST_NAME_0005 = "FIRST_NAME_0005";
            internal const string FIRST_NAME_0005XX = "FIRST_NAME_0005XX";
            internal const string MIDDLE_INITIAL_0005AS = "MIDDLE_INITIAL_0005AS";
            internal const string MIDDLE_INITIAL_0005 = "MIDDLE_INITIAL_0005";
            internal const string MIDDLE_INITIAL_0005XX = "MIDDLE_INITIAL_0005XX";
            internal const string IMPORT_SUPERVISOR_0006EV = "IMPORT_SUPERVISOR_0006EV";
            internal const string SERVICE_PROVIDER_0006ET = "SERVICE_PROVIDER_0006ET";
            internal const string LAST_NAME_0006AS = "LAST_NAME_0006AS";
            internal const string LAST_NAME_0006 = "LAST_NAME_0006";
            internal const string LAST_NAME_0006XX = "LAST_NAME_0006XX";
            internal const string FIRST_NAME_0006AS = "FIRST_NAME_0006AS";
            internal const string FIRST_NAME_0006 = "FIRST_NAME_0006";
            internal const string FIRST_NAME_0006XX = "FIRST_NAME_0006XX";
            internal const string MIDDLE_INITIAL_0006AS = "MIDDLE_INITIAL_0006AS";
            internal const string MIDDLE_INITIAL_0006 = "MIDDLE_INITIAL_0006";
            internal const string MIDDLE_INITIAL_0006XX = "MIDDLE_INITIAL_0006XX";
            internal const string IMPORT_CO_0007EV = "IMPORT_CO_0007EV";
            internal const string OFFICE_0007ET = "OFFICE_0007ET";
            internal const string SYSTEM_GENERATED_ID_0007AS = "SYSTEM_GENERATED_ID_0007AS";
            internal const string SYSTEM_GENERATED_ID_0007 = "SYSTEM_GENERATED_ID_0007";
            internal const string SYSTEM_GENERATED_ID_0007XX = "SYSTEM_GENERATED_ID_0007XX";
            internal const string NAME_0007AS = "NAME_0007AS";
            internal const string NAME_0007 = "NAME_0007";
            internal const string NAME_0007XX = "NAME_0007XX";
            internal const string IMPORT_AREA_0008EV = "IMPORT_AREA_0008EV";
            internal const string OFFICE_0008ET = "OFFICE_0008ET";
            internal const string NAME_0008AS = "NAME_0008AS";
            internal const string NAME_0008 = "NAME_0008";
            internal const string NAME_0008XX = "NAME_0008XX";
            internal const string IMPORT_0009EV = "IMPORT_0009EV";
            internal const string EAB_FILE_HANDLING_0009ET = "EAB_FILE_HANDLING_0009ET";
            internal const string ACTION_0009AS = "ACTION_0009AS";
            internal const string ACTION_0009 = "ACTION_0009";
            internal const string ACTION_0009XX = "ACTION_0009XX";
            internal const string IMPORT_0010EV = "IMPORT_0010EV";
            internal const string FIPS_0010ET = "FIPS_0010ET";
            internal const string STATE_ABBREVIATION_0010AS = "STATE_ABBREVIATION_0010AS";
            internal const string STATE_ABBREVIATION_0010 = "STATE_ABBREVIATION_0010";
            internal const string STATE_ABBREVIATION_0010XX = "STATE_ABBREVIATION_0010XX";
            internal const string STATE_0010AS = "STATE_0010AS";
            internal const string STATE_0010 = "STATE_0010";
            internal const string STATE_0010XX = "STATE_0010XX";
            internal const string COUNTY_ABBREVIATION_0010AS = "COUNTY_ABBREVIATION_0010AS";
            internal const string COUNTY_ABBREVIATION_0010 = "COUNTY_ABBREVIATION_0010";
            internal const string COUNTY_ABBREVIATION_0010XX = "COUNTY_ABBREVIATION_0010XX";
            internal const string COUNTY_0010AS = "COUNTY_0010AS";
            internal const string COUNTY_0010 = "COUNTY_0010";
            internal const string COUNTY_0010XX = "COUNTY_0010XX";
            internal const string LOCATION_0010AS = "LOCATION_0010AS";
            internal const string LOCATION_0010 = "LOCATION_0010";
            internal const string LOCATION_0010XX = "LOCATION_0010XX";
            internal const string STATE_DESCRIPTION_0010AS = "STATE_DESCRIPTION_0010AS";
            internal const string STATE_DESCRIPTION_0010 = "STATE_DESCRIPTION_0010";
            internal const string STATE_DESCRIPTION_0010XX = "STATE_DESCRIPTION_0010XX";
            internal const string COUNTY_DESCRIPTION_0010AS = "COUNTY_DESCRIPTION_0010AS";
            internal const string COUNTY_DESCRIPTION_0010 = "COUNTY_DESCRIPTION_0010";
            internal const string COUNTY_DESCRIPTION_0010XX = "COUNTY_DESCRIPTION_0010XX";
            internal const string LOCATION_DESCRIPTION_0010AS = "LOCATION_DESCRIPTION_0010AS";
            internal const string LOCATION_DESCRIPTION_0010 = "LOCATION_DESCRIPTION_0010";
            internal const string LOCATION_DESCRIPTION_0010DL = "LOCATION_DESCRIPTION_0010DL";
            internal const string LOCATION_DESCRIPTION_0010XL = "LOCATION_DESCRIPTION_0010XL";
            internal const string LOCATION_DESCRIPTION_0010DV = "LOCATION_DESCRIPTION_0010DV";
            internal const string LOCATION_DESCRIPTION_0010XV = "LOCATION_DESCRIPTION_0010XV";
            internal const string LOCATION_DESCRIPTION_0010XX = "LOCATION_DESCRIPTION_0010XX";
            internal const string IMPORT_0011EV = "IMPORT_0011EV";
            internal const string LEGAL_ACTION_0011ET = "LEGAL_ACTION_0011ET";
            internal const string COURT_CASE_NUMBER_0011AS = "COURT_CASE_NUMBER_0011AS";
            internal const string COURT_CASE_NUMBER_0011 = "COURT_CASE_NUMBER_0011";
            internal const string COURT_CASE_NUMBER_0011XX = "COURT_CASE_NUMBER_0011XX";
            internal const string STANDARD_NUMBER_0011AS = "STANDARD_NUMBER_0011AS";
            internal const string STANDARD_NUMBER_0011 = "STANDARD_NUMBER_0011";
            internal const string STANDARD_NUMBER_0011XX = "STANDARD_NUMBER_0011XX";
            internal const string EXPORT_0012EV = "EXPORT_0012EV";
            internal const string EAB_FILE_HANDLING_0012ET = "EAB_FILE_HANDLING_0012ET";
            internal const string STATUS_0012AS = "STATUS_0012AS";
            internal const string STATUS_0012 = "STATUS_0012";
            internal const string STATUS_0012XX = "STATUS_0012XX";
        }
        #endregion

        #region Direct-access element properties
        public IField IEF_RUNTIME_PARM1 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM1); } }
        public IField IEF_RUNTIME_PARM2 { get { return GetElementByName<IField>(Names.IEF_RUNTIME_PARM2); } }
        public IGroup GLOBDATA { get { return GetElementByName<IGroup>(Names.GLOBDATA); } }
        public IGroup PSMGR_IEF_COMMAND { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_COMMAND); } }
        public IField PSMGR_IEF_COMMAND_1 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_1); } }
        public IField PSMGR_IEF_COMMAND_2 { get { return GetElementByName<IField>(Names.PSMGR_IEF_COMMAND_2); } }
        public IField PSMGR_IEF_TRANCODE { get { return GetElementByName<IField>(Names.PSMGR_IEF_TRANCODE); } }
        public IField PSMGR_EXIT_STATE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_STATE); } }
        public IField PSMGR_EXIT_INFOMSG { get { return GetElementByName<IField>(Names.PSMGR_EXIT_INFOMSG); } }
        public IField PSMGR_USER_ID { get { return GetElementByName<IField>(Names.PSMGR_USER_ID); } }
        public IField PSMGR_TERMINAL_ID { get { return GetElementByName<IField>(Names.PSMGR_TERMINAL_ID); } }
        public IField PSMGR_PRINTER_ID { get { return GetElementByName<IField>(Names.PSMGR_PRINTER_ID); } }
        public IField PSMGR_CURRENT_DATE { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_DATE); } }
        public IField PSMGR_CURRENT_TIME { get { return GetElementByName<IField>(Names.PSMGR_CURRENT_TIME); } }
        public IField PSMGR_RUNTIME_TYPE { get { return GetElementByName<IField>(Names.PSMGR_RUNTIME_TYPE); } }
        public IGroup PSMGR_FUNCTION_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA); } }
        public IField PSMGR_FUNC_ERRMSG { get { return GetElementByName<IField>(Names.PSMGR_FUNC_ERRMSG); } }
        public IField PSMGR_FUNC_NAME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_NAME); } }
        public IField PSMGR_FUNC_IN_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_DATE); } }
        public IGroup PSMGR_FUNC_IN_DDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_DDURA); } }
        public IGroup DDURA_YEAR { get { return GetElementByName<IGroup>(Names.DDURA_YEAR); } }
        public IField DDURA_Y_MISS { get { return GetElementByName<IField>(Names.DDURA_Y_MISS); } }
        public IField DDURA_YYYY { get { return GetElementByName<IField>(Names.DDURA_YYYY); } }
        public IGroup DDURA_MONTH { get { return GetElementByName<IGroup>(Names.DDURA_MONTH); } }
        public IField DDURA_M_MISS { get { return GetElementByName<IField>(Names.DDURA_M_MISS); } }
        public IField DDURA_MM { get { return GetElementByName<IField>(Names.DDURA_MM); } }
        public IGroup DDURA_DAY { get { return GetElementByName<IGroup>(Names.DDURA_DAY); } }
        public IField DDURA_D_MISS { get { return GetElementByName<IField>(Names.DDURA_D_MISS); } }
        public IField DDURA_DD { get { return GetElementByName<IField>(Names.DDURA_DD); } }
        public IField PSMGR_FUNC_OUT_DATE { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_DATE); } }
        public IField PSMGR_FUNC_IN_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIME); } }
        public IGroup PSMGR_FUNC_IN_TDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TDURA); } }
        public IGroup TDURA_HOUR { get { return GetElementByName<IGroup>(Names.TDURA_HOUR); } }
        public IField TDURA_H_MISS { get { return GetElementByName<IField>(Names.TDURA_H_MISS); } }
        public IField TDURA_HH { get { return GetElementByName<IField>(Names.TDURA_HH); } }
        public IGroup TDURA_MINUTE { get { return GetElementByName<IGroup>(Names.TDURA_MINUTE); } }
        public IField TDURA_M_MISS { get { return GetElementByName<IField>(Names.TDURA_M_MISS); } }
        public IField TDURA_MM { get { return GetElementByName<IField>(Names.TDURA_MM); } }
        public IGroup TDURA_SECOND { get { return GetElementByName<IGroup>(Names.TDURA_SECOND); } }
        public IField TDURA_S_MISS { get { return GetElementByName<IField>(Names.TDURA_S_MISS); } }
        public IField TDURA_SS { get { return GetElementByName<IField>(Names.TDURA_SS); } }
        public IField PSMGR_FUNC_OUT_TIME { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIME); } }
        public IField PSMGR_IEF_NEXTTRAN { get { return GetElementByName<IField>(Names.PSMGR_IEF_NEXTTRAN); } }
        public IField PSMGR_EXIT_MSGTYPE { get { return GetElementByName<IField>(Names.PSMGR_EXIT_MSGTYPE); } }
        public IGroup PSMGR_IEF_DEBUG_FLAGS { get { return GetElementByName<IGroup>(Names.PSMGR_IEF_DEBUG_FLAGS); } }
        public IField PSMGR_IEF_DEBUG { get { return GetElementByName<IField>(Names.PSMGR_IEF_DEBUG); } }
        public ICheckField PSMGR_DEBUG_ON { get { return GetElementByName<ICheckField>(Names.PSMGR_DEBUG_ON); } }
        public IGroup PSMGR_ENVIRONMENT_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ENVIRONMENT_DATA); } }
        public IField PSMGR_PCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_PCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_PCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_PCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_PCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_PCB_ADR); } }
        public IGroup PSMGR_EAB_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_EAB_DATA); } }
        public IField PSMGR_EABPCB_CNT { get { return GetElementByName<IField>(Names.PSMGR_EABPCB_CNT); } }
        public IArrayElementAccessor<IGroup> PSMGR_EABPCB_ENTRY { get { return GetArrayElementAccessor<IGroup>(Names.PSMGR_EABPCB_ENTRY); } }
        public IArrayElementAccessor<IField> PSMGR_EABPCB_ADR { get { return GetArrayElementAccessor<IField>(Names.PSMGR_EABPCB_ADR); } }
        public IGroup PSMGR_ERROR_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ERROR_DATA); } }
        public IField ERROR_ACTION_NAME { get { return GetElementByName<IField>(Names.ERROR_ACTION_NAME); } }
        public IField ERROR_ENCOUNTERED_SW { get { return GetElementByName<IField>(Names.ERROR_ENCOUNTERED_SW); } }
        public IField VIEW_OVERFLOW_SW { get { return GetElementByName<IField>(Names.VIEW_OVERFLOW_SW); } }
        public IGroup PSMGR_DASG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DASG_DATA); } }
        public IGroup ACTION_ID_X { get { return GetElementByName<IGroup>(Names.ACTION_ID_X); } }
        public IField ACTION_ID { get { return GetElementByName<IField>(Names.ACTION_ID); } }
        public IGroup ATTRIBUTE_ID_X { get { return GetElementByName<IGroup>(Names.ATTRIBUTE_ID_X); } }
        public IField ATTRIBUTE_ID { get { return GetElementByName<IField>(Names.ATTRIBUTE_ID); } }
        public IField STATUS_FLAG { get { return GetElementByName<IField>(Names.STATUS_FLAG); } }
        public ICheckField WHEN_SUCCESSFUL_SF { get { return GetElementByName<ICheckField>(Names.WHEN_SUCCESSFUL_SF); } }
        public ICheckField FATAL_ERROR_SF { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_SF); } }
        public ICheckField DB_ERROR_SF { get { return GetElementByName<ICheckField>(Names.DB_ERROR_SF); } }
        public ICheckField ABORT_SHOW_DBMS_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_DBMS_MSG_SF); } }
        public ICheckField ABORT_SHOW_USER_MSG_SF { get { return GetElementByName<ICheckField>(Names.ABORT_SHOW_USER_MSG_SF); } }
        public ICheckField RETRY_TRAN_REQUESTED_SF { get { return GetElementByName<ICheckField>(Names.RETRY_TRAN_REQUESTED_SF); } }
        public ICheckField PSTEP_USE_FAILURE { get { return GetElementByName<ICheckField>(Names.PSTEP_USE_FAILURE); } }
        public ICheckField ASYNC_WHEN_AVAILABLE_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_AVAILABLE_SF); } }
        public ICheckField ASYNC_WHEN_ACCEPTED_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_ACCEPTED_SF); } }
        public ICheckField ASYNC_WHEN_NOT_ACCEPTED_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_NOT_ACCEPTED_SF); } }
        public ICheckField ASYNC_WHEN_INVALID_ID_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_INVALID_ID_SF); } }
        public ICheckField ASYNC_WHEN_PENDING_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_PENDING_SF); } }
        public ICheckField ASYNC_WHEN_SERVER_ERROR_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_SERVER_ERROR_SF); } }
        public ICheckField ASYNC_WHEN_COMM_ERROR_SF { get { return GetElementByName<ICheckField>(Names.ASYNC_WHEN_COMM_ERROR_SF); } }
        public IField LAST_STATUS { get { return GetElementByName<IField>(Names.LAST_STATUS); } }
        public ICheckField DB_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_ERROR_FL_LS); } }
        public ICheckField DB_DEADLOCK_TIMOUT_FL_LS { get { return GetElementByName<ICheckField>(Names.DB_DEADLOCK_TIMOUT_FL_LS); } }
        public ICheckField DUPLICATE_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.DUPLICATE_FOUND_FL_LS); } }
        public ICheckField INVALID_DATAA_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAA_FL_LS); } }
        public ICheckField INVALID_DATAB_TYPE_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_TYPE_FL_LS); } }
        public ICheckField INVALID_DATAB_PERM_FL_LS { get { return GetElementByName<ICheckField>(Names.INVALID_DATAB_PERM_FL_LS); } }
        public ICheckField FATAL_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.FATAL_ERROR_FL_LS); } }
        public ICheckField NOT_FOUND_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_FOUND_FL_LS); } }
        public ICheckField NOT_UNIQUE_FL_LS { get { return GetElementByName<ICheckField>(Names.NOT_UNIQUE_FL_LS); } }
        public ICheckField IEF_FUNCTION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_FUNCTION_ERROR_FL_LS); } }
        public ICheckField IEF_DURATION_ERROR_FL_LS { get { return GetElementByName<ICheckField>(Names.IEF_DURATION_ERROR_FL_LS); } }
        public ICheckField USED_PSTEP_NOT_FOUND { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_NOT_FOUND); } }
        public ICheckField USED_PSTEP_ROUTING_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ROUTING_ERR); } }
        public ICheckField USED_PSTEP_SND_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_FMT_ERR); } }
        public ICheckField USED_PSTEP_ENCRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ENCRYPT_ERR); } }
        public ICheckField USED_PSTEP_SND_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SND_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_BFR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_BFR_ERR); } }
        public ICheckField USED_PSTEP_RCV_FMT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_FMT_ERR); } }
        public ICheckField USED_PSTEP_TIRSECR_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TIRSECR_ERR); } }
        public ICheckField USED_PSTEP_TOKEN_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_TOKEN_ERR); } }
        public ICheckField USED_PSTEP_SEND_MAX_SIZE { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SEND_MAX_SIZE); } }
        public ICheckField USED_PSTEP_SECG_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SECG_ERR); } }
        public ICheckField USED_PSTEP_ALLOC_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_ALLOC_ERR); } }
        public ICheckField USED_PSTEP_CONNECT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_CONNECT_ERR); } }
        public ICheckField USED_PSTEP_XERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XERR); } }
        public ICheckField USED_PSTEP_RCV_UA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_UA_ERR); } }
        public ICheckField USED_PSTEP_RCV_ES_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_ES_ERR); } }
        public ICheckField USED_PSTEP_XFAL { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_XFAL); } }
        public ICheckField USED_PSTEP_SETOA_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_SETOA_ERR); } }
        public ICheckField USED_PSTEP_RCV_VIEW_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_RCV_VIEW_ERR); } }
        public ICheckField USED_PSTEP_DECRYPT_ERR { get { return GetElementByName<ICheckField>(Names.USED_PSTEP_DECRYPT_ERR); } }
        public IField SAVE_SQLCA { get { return GetElementByName<IField>(Names.SAVE_SQLCA); } }
        public IGroup PSMGR_DEBUG_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_DEBUG_DATA); } }
        public IField PSMGR_TRACE_ADR { get { return GetElementByName<IField>(Names.PSMGR_TRACE_ADR); } }
        public IGroup LAST_STATEMENT_X { get { return GetElementByName<IGroup>(Names.LAST_STATEMENT_X); } }
        public IField LAST_STATEMENT_NUM { get { return GetElementByName<IField>(Names.LAST_STATEMENT_NUM); } }
        public IField CUR_AB_ID { get { return GetElementByName<IField>(Names.CUR_AB_ID); } }
        public IField CUR_AB_NAME { get { return GetElementByName<IField>(Names.CUR_AB_NAME); } }
        public IField PSMGR_TIRDATE_SAVEAREA { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SAVEAREA); } }
        public IGroup PSMGR_TIRDATE_CMCB { get { return GetElementByName<IGroup>(Names.PSMGR_TIRDATE_CMCB); } }
        public IField PSMGR_TIRDATE_DATE { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE); } }
        public IField PSMGR_TIRDATE_TIME { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME); } }
        public IField PSMGR_TIRDATE_INC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_INC); } }
        public IField PSMGR_TIRDATE_RC { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RC); } }
        public ICheckField PSMGR_TIRDATE_OK { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_OK); } }
        public ICheckField PSMGR_TIRDATE_WARNING { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_WARNING); } }
        public ICheckField PSMGR_TIRDATE_ERROR { get { return GetElementByName<ICheckField>(Names.PSMGR_TIRDATE_ERROR); } }
        public IField PSMGR_TIRDATE_REQ { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_REQ); } }
        public IField PSMGR_TIRDATE_DATEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATEF); } }
        public IField PSMGR_TIRDATE_TIMEF { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIMEF); } }
        public IField PSMGR_TIRDATE_RETMSG { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_RETMSG); } }
        public IField PSMGR_TIRDATE_TSTAMP { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TSTAMP); } }
        public IField PSMGR_TIRDATE_DATE_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_DATE_Z); } }
        public IField PSMGR_TIRDATE_TIME_Z { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_TIME_Z); } }
        public IField PSMGR_TIRDATE_SKIP_VAL { get { return GetElementByName<IField>(Names.PSMGR_TIRDATE_SKIP_VAL); } }
        public IField PSMGR_ROLLBACK_RQSTED { get { return GetElementByName<IField>(Names.PSMGR_ROLLBACK_RQSTED); } }
        public ICheckField ROLLBACK_RQSTED { get { return GetElementByName<ICheckField>(Names.ROLLBACK_RQSTED); } }
        public ICheckField ABEND_RQSTED { get { return GetElementByName<ICheckField>(Names.ABEND_RQSTED); } }
        public ICheckField TERMINATE_RQSTED { get { return GetElementByName<ICheckField>(Names.TERMINATE_RQSTED); } }
        public IGroup TIRTRCE_SAVE_AREA { get { return GetElementByName<IGroup>(Names.TIRTRCE_SAVE_AREA); } }
        public IField TOP_INDX { get { return GetElementByName<IField>(Names.TOP_INDX); } }
        public IField BOTTOM_INDX { get { return GetElementByName<IField>(Names.BOTTOM_INDX); } }
        public IField END_INDX { get { return GetElementByName<IField>(Names.END_INDX); } }
        public IField LAST_STMT { get { return GetElementByName<IField>(Names.LAST_STMT); } }
        public IField TOP_OF_CALL { get { return GetElementByName<IField>(Names.TOP_OF_CALL); } }
        public IField TRACE_BREAK_POINT { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT); } }
        public IField TRACE_BREAK_POINT_STATUS { get { return GetElementByName<IField>(Names.TRACE_BREAK_POINT_STATUS); } }
        public IField LAST_AB_NAME { get { return GetElementByName<IField>(Names.LAST_AB_NAME); } }
        public IField COLOR { get { return GetElementByName<IField>(Names.COLOR); } }
        public IField COLORT { get { return GetElementByName<IField>(Names.COLORT); } }
        public IField HILITE { get { return GetElementByName<IField>(Names.HILITE); } }
        public IField TRACE_ON_OFF { get { return GetElementByName<IField>(Names.TRACE_ON_OFF); } }
        public IGroup CASCADE_DELETE_FLAGS { get { return GetElementByName<IGroup>(Names.CASCADE_DELETE_FLAGS); } }
        public IField V1PRESENT { get { return GetElementByName<IField>(Names.V1PRESENT); } }
        public IField V2PRESENT { get { return GetElementByName<IField>(Names.V2PRESENT); } }
        public IField CASCADE1 { get { return GetElementByName<IField>(Names.CASCADE1); } }
        public IField CASCADE2 { get { return GetElementByName<IField>(Names.CASCADE2); } }
        public IField PROCESSQ_FLAG { get { return GetElementByName<IField>(Names.PROCESSQ_FLAG); } }
        public IGroup PSMGR_ACTIVE_DIALECT { get { return GetElementByName<IGroup>(Names.PSMGR_ACTIVE_DIALECT); } }
        public IField DIALECT_NAME { get { return GetElementByName<IField>(Names.DIALECT_NAME); } }
        public IField MESSAGE_TABLE_NAME { get { return GetElementByName<IField>(Names.MESSAGE_TABLE_NAME); } }
        public IField TRANSLATE_TABLE_NAME { get { return GetElementByName<IField>(Names.TRANSLATE_TABLE_NAME); } }
        public IGroup PSMGR_FUNCTION_DATA_EXT { get { return GetElementByName<IGroup>(Names.PSMGR_FUNCTION_DATA_EXT); } }
        public IField PSMGR_FUNC_IN_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_IN_TIMESTAMP); } }
        public IGroup PSMGR_FUNC_IN_TSDURA { get { return GetElementByName<IGroup>(Names.PSMGR_FUNC_IN_TSDURA); } }
        public IGroup TSDURA_MICROSECOND { get { return GetElementByName<IGroup>(Names.TSDURA_MICROSECOND); } }
        public IField TSDURA_M_MISS { get { return GetElementByName<IField>(Names.TSDURA_M_MISS); } }
        public IField TSDURA_MS { get { return GetElementByName<IField>(Names.TSDURA_MS); } }
        public IField PSMGR_FUNC_OUT_TIMESTAMP { get { return GetElementByName<IField>(Names.PSMGR_FUNC_OUT_TIMESTAMP); } }
        public IField PSMGR_CICS_FAIL_SW { get { return GetElementByName<IField>(Names.PSMGR_CICS_FAIL_SW); } }
        public ICheckField INHIBIT_CICS_RECEIVE { get { return GetElementByName<ICheckField>(Names.INHIBIT_CICS_RECEIVE); } }
        public IField CLIENT_USERID { get { return GetElementByName<IField>(Names.CLIENT_USERID); } }
        public IField CLIENT_PASSWORD { get { return GetElementByName<IField>(Names.CLIENT_PASSWORD); } }
        public IField LOAD_MODULE_NAME { get { return GetElementByName<IField>(Names.LOAD_MODULE_NAME); } }
        public IField INSTRUMENT_CODE { get { return GetElementByName<IField>(Names.INSTRUMENT_CODE); } }
        public IField TX_RETRY_LIMIT { get { return GetElementByName<IField>(Names.TX_RETRY_LIMIT); } }
        public IField TX_TIMEOUT { get { return GetElementByName<IField>(Names.TX_TIMEOUT); } }
        public IGroup PSMGR_EXTRA_ERRINFO { get { return GetElementByName<IGroup>(Names.PSMGR_EXTRA_ERRINFO); } }
        public IField ERRINFO_BUF_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_BUF_SIZE); } }
        public IField ERRINFO_MSG_SIZE { get { return GetElementByName<IField>(Names.ERRINFO_MSG_SIZE); } }
        public IField ERRINFO_BUF_ADDR { get { return GetElementByName<IField>(Names.ERRINFO_BUF_ADDR); } }
        public IField TX_RETRY_COUNT { get { return GetElementByName<IField>(Names.TX_RETRY_COUNT); } }
        public IField TX_USER_RETRY_ALLOWED { get { return GetElementByName<IField>(Names.TX_USER_RETRY_ALLOWED); } }
        public IGroup PSMGR_PSTEP_USE_PTRS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_PTRS); } }
        public IField PSTEP_FAIL_MSG_PTR { get { return GetElementByName<IField>(Names.PSTEP_FAIL_MSG_PTR); } }
        public IField PSTEP_GURB_REST_PTR { get { return GetElementByName<IField>(Names.PSTEP_GURB_REST_PTR); } }
        public IField PSTEP_LIPS_PTR { get { return GetElementByName<IField>(Names.PSTEP_LIPS_PTR); } }
        public IField PSTEP_TBL_PTR { get { return GetElementByName<IField>(Names.PSTEP_TBL_PTR); } }
        public IField PSTEP_DDF_PTR { get { return GetElementByName<IField>(Names.PSTEP_DDF_PTR); } }
        public IField PSTEP_COMM_ID { get { return GetElementByName<IField>(Names.PSTEP_COMM_ID); } }
        public IField PSTEP_APPL_LIST_PTR { get { return GetElementByName<IField>(Names.PSTEP_APPL_LIST_PTR); } }
        public IField PSTEP_CURR_PST_PTR { get { return GetElementByName<IField>(Names.PSTEP_CURR_PST_PTR); } }
        public IGroup PSMGR_PSTEP_USE_SYSFLDS { get { return GetElementByName<IGroup>(Names.PSMGR_PSTEP_USE_SYSFLDS); } }
        public IField PSMGR_EIBERRCD { get { return GetElementByName<IField>(Names.PSMGR_EIBERRCD); } }
        public IField PSMGR_EIBFN { get { return GetElementByName<IField>(Names.PSMGR_EIBFN); } }
        public IField PSMGR_EIBRESP { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP); } }
        public IField PSMGR_EIBRESP2 { get { return GetElementByName<IField>(Names.PSMGR_EIBRESP2); } }
        public IGroup PSMGR_ASYNC_DATA { get { return GetElementByName<IGroup>(Names.PSMGR_ASYNC_DATA); } }
        public IField ASYNC_MODE { get { return GetElementByName<IField>(Names.ASYNC_MODE); } }
        public ICheckField FLOW_TYPE_SYNC { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_SYNC); } }
        public ICheckField FLOW_TYPE_ASYNC { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_ASYNC); } }
        public ICheckField FLOW_TYPE_NO_RESPONSE { get { return GetElementByName<ICheckField>(Names.FLOW_TYPE_NO_RESPONSE); } }
        public IField ASYNC_FLOW_STATUS_TABLE_PTR { get { return GetElementByName<IField>(Names.ASYNC_FLOW_STATUS_TABLE_PTR); } }
        public IField ASYNC_SERVER_LOC_TABLE_PTR { get { return GetElementByName<IField>(Names.ASYNC_SERVER_LOC_TABLE_PTR); } }
        public IGroup PSMGR_HEAP { get { return GetElementByName<IGroup>(Names.PSMGR_HEAP); } }
        public IGroup HEAP_CFB { get { return GetElementByName<IGroup>(Names.HEAP_CFB); } }
        public IField HEAP_CFB_ADDR { get { return GetElementByName<IField>(Names.HEAP_CFB_ADDR); } }
        public IField HEAP_CFB_ADDR_RESV { get { return GetElementByName<IField>(Names.HEAP_CFB_ADDR_RESV); } }
        public IField HEAP_CFB_ID { get { return GetElementByName<IField>(Names.HEAP_CFB_ID); } }
        public IField HEAP_CFB_LEN { get { return GetElementByName<IField>(Names.HEAP_CFB_LEN); } }
        public IGroup HEAP_WGLOB { get { return GetElementByName<IGroup>(Names.HEAP_WGLOB); } }
        public IField HEAP_WGLOB_ADDR { get { return GetElementByName<IField>(Names.HEAP_WGLOB_ADDR); } }
        public IField HEAP_WGLOB_ADDR_RESV { get { return GetElementByName<IField>(Names.HEAP_WGLOB_ADDR_RESV); } }
        public IField HEAP_WGLOB_ID { get { return GetElementByName<IField>(Names.HEAP_WGLOB_ID); } }
        public IField HEAP_WGLOB_LEN { get { return GetElementByName<IField>(Names.HEAP_WGLOB_LEN); } }
        public IField PSMGR_MMCB { get { return GetElementByName<IField>(Names.PSMGR_MMCB); } }
        public IField PSMGR_MMCB_ACTIVE { get { return GetElementByName<IField>(Names.PSMGR_MMCB_ACTIVE); } }
        public IGroup IMPORT_0001EV { get { return GetElementByName<IGroup>(Names.IMPORT_0001EV); } }
        public IGroup CSE_PERSONS_WORK_SET_0001ET { get { return GetElementByName<IGroup>(Names.CSE_PERSONS_WORK_SET_0001ET); } }
        public IField FORMATTED_NAME_0001AS { get { return GetElementByName<IField>(Names.FORMATTED_NAME_0001AS); } }
        public IField FORMATTED_NAME_0001 { get { return GetElementByName<IField>(Names.FORMATTED_NAME_0001); } }
        public IField FORMATTED_NAME_0001XX { get { return GetElementByName<IField>(Names.FORMATTED_NAME_0001XX); } }
        public IGroup IMPORT_0002EV { get { return GetElementByName<IGroup>(Names.IMPORT_0002EV); } }
        public IGroup LEGAL_REFERRAL_0002ET { get { return GetElementByName<IGroup>(Names.LEGAL_REFERRAL_0002ET); } }
        public IField REFERRAL_DATE_0002AS { get { return GetElementByName<IField>(Names.REFERRAL_DATE_0002AS); } }
        public IField REFERRAL_DATE_0002 { get { return GetElementByName<IField>(Names.REFERRAL_DATE_0002); } }
        public IField REFERRAL_DATE_0002XX { get { return GetElementByName<IField>(Names.REFERRAL_DATE_0002XX); } }
        public IField REFERRAL_REASON_1_0002AS { get { return GetElementByName<IField>(Names.REFERRAL_REASON_1_0002AS); } }
        public IField REFERRAL_REASON_1_0002 { get { return GetElementByName<IField>(Names.REFERRAL_REASON_1_0002); } }
        public IField REFERRAL_REASON_1_0002XX { get { return GetElementByName<IField>(Names.REFERRAL_REASON_1_0002XX); } }
        public IField REFERRAL_REASON_2_0002AS { get { return GetElementByName<IField>(Names.REFERRAL_REASON_2_0002AS); } }
        public IField REFERRAL_REASON_2_0002 { get { return GetElementByName<IField>(Names.REFERRAL_REASON_2_0002); } }
        public IField REFERRAL_REASON_2_0002XX { get { return GetElementByName<IField>(Names.REFERRAL_REASON_2_0002XX); } }
        public IField REFERRAL_REASON_3_0002AS { get { return GetElementByName<IField>(Names.REFERRAL_REASON_3_0002AS); } }
        public IField REFERRAL_REASON_3_0002 { get { return GetElementByName<IField>(Names.REFERRAL_REASON_3_0002); } }
        public IField REFERRAL_REASON_3_0002XX { get { return GetElementByName<IField>(Names.REFERRAL_REASON_3_0002XX); } }
        public IField REFERRAL_REASON_5_0002AS { get { return GetElementByName<IField>(Names.REFERRAL_REASON_5_0002AS); } }
        public IField REFERRAL_REASON_5_0002 { get { return GetElementByName<IField>(Names.REFERRAL_REASON_5_0002); } }
        public IField REFERRAL_REASON_5_0002XX { get { return GetElementByName<IField>(Names.REFERRAL_REASON_5_0002XX); } }
        public IField REFERRAL_REASON_4_0002AS { get { return GetElementByName<IField>(Names.REFERRAL_REASON_4_0002AS); } }
        public IField REFERRAL_REASON_4_0002 { get { return GetElementByName<IField>(Names.REFERRAL_REASON_4_0002); } }
        public IField REFERRAL_REASON_4_0002XX { get { return GetElementByName<IField>(Names.REFERRAL_REASON_4_0002XX); } }
        public IField STATUS_0002AS { get { return GetElementByName<IField>(Names.STATUS_0002AS); } }
        public IField STATUS_0002 { get { return GetElementByName<IField>(Names.STATUS_0002); } }
        public IField STATUS_0002XX { get { return GetElementByName<IField>(Names.STATUS_0002XX); } }
        public IField IDENTIFIER_0002AS { get { return GetElementByName<IField>(Names.IDENTIFIER_0002AS); } }
        public IField IDENTIFIER_0002 { get { return GetElementByName<IField>(Names.IDENTIFIER_0002); } }
        public IField IDENTIFIER_0002XX { get { return GetElementByName<IField>(Names.IDENTIFIER_0002XX); } }
        public IField STATUS_DATE_0002AS { get { return GetElementByName<IField>(Names.STATUS_DATE_0002AS); } }
        public IField STATUS_DATE_0002 { get { return GetElementByName<IField>(Names.STATUS_DATE_0002); } }
        public IField STATUS_DATE_0002XX { get { return GetElementByName<IField>(Names.STATUS_DATE_0002XX); } }
        public IField REFERRED_BY_USER_ID_0002AS { get { return GetElementByName<IField>(Names.REFERRED_BY_USER_ID_0002AS); } }
        public IField REFERRED_BY_USER_ID_0002 { get { return GetElementByName<IField>(Names.REFERRED_BY_USER_ID_0002); } }
        public IField REFERRED_BY_USER_ID_0002XX { get { return GetElementByName<IField>(Names.REFERRED_BY_USER_ID_0002XX); } }
        public IField COURT_CASE_NUMBER_0002AS { get { return GetElementByName<IField>(Names.COURT_CASE_NUMBER_0002AS); } }
        public IField COURT_CASE_NUMBER_0002 { get { return GetElementByName<IField>(Names.COURT_CASE_NUMBER_0002); } }
        public IField COURT_CASE_NUMBER_0002XX { get { return GetElementByName<IField>(Names.COURT_CASE_NUMBER_0002XX); } }
        public IField TRIBUNAL_ID_0002AS { get { return GetElementByName<IField>(Names.TRIBUNAL_ID_0002AS); } }
        public IField TRIBUNAL_ID_0002 { get { return GetElementByName<IField>(Names.TRIBUNAL_ID_0002); } }
        public IField TRIBUNAL_ID_0002XX { get { return GetElementByName<IField>(Names.TRIBUNAL_ID_0002XX); } }
        public IGroup IMPORT_0003EV { get { return GetElementByName<IGroup>(Names.IMPORT_0003EV); } }
        public IGroup CASE_0003ET { get { return GetElementByName<IGroup>(Names.CASE_0003ET); } }
        public IField NUMBER_0003AS { get { return GetElementByName<IField>(Names.NUMBER_0003AS); } }
        public IField NUMBER_0003 { get { return GetElementByName<IField>(Names.NUMBER_0003); } }
        public IField NUMBER_0003XX { get { return GetElementByName<IField>(Names.NUMBER_0003XX); } }
        public IGroup IMPORT_LEGAL_0004EV { get { return GetElementByName<IGroup>(Names.IMPORT_LEGAL_0004EV); } }
        public IGroup SERVICE_PROVIDER_0004ET { get { return GetElementByName<IGroup>(Names.SERVICE_PROVIDER_0004ET); } }
        public IField LAST_NAME_0004AS { get { return GetElementByName<IField>(Names.LAST_NAME_0004AS); } }
        public IField LAST_NAME_0004 { get { return GetElementByName<IField>(Names.LAST_NAME_0004); } }
        public IField LAST_NAME_0004XX { get { return GetElementByName<IField>(Names.LAST_NAME_0004XX); } }
        public IField FIRST_NAME_0004AS { get { return GetElementByName<IField>(Names.FIRST_NAME_0004AS); } }
        public IField FIRST_NAME_0004 { get { return GetElementByName<IField>(Names.FIRST_NAME_0004); } }
        public IField FIRST_NAME_0004XX { get { return GetElementByName<IField>(Names.FIRST_NAME_0004XX); } }
        public IField MIDDLE_INITIAL_0004AS { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0004AS); } }
        public IField MIDDLE_INITIAL_0004 { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0004); } }
        public IField MIDDLE_INITIAL_0004XX { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0004XX); } }
        public IGroup IMPORT_CO_0005EV { get { return GetElementByName<IGroup>(Names.IMPORT_CO_0005EV); } }
        public IGroup SERVICE_PROVIDER_0005ET { get { return GetElementByName<IGroup>(Names.SERVICE_PROVIDER_0005ET); } }
        public IField LAST_NAME_0005AS { get { return GetElementByName<IField>(Names.LAST_NAME_0005AS); } }
        public IField LAST_NAME_0005 { get { return GetElementByName<IField>(Names.LAST_NAME_0005); } }
        public IField LAST_NAME_0005XX { get { return GetElementByName<IField>(Names.LAST_NAME_0005XX); } }
        public IField FIRST_NAME_0005AS { get { return GetElementByName<IField>(Names.FIRST_NAME_0005AS); } }
        public IField FIRST_NAME_0005 { get { return GetElementByName<IField>(Names.FIRST_NAME_0005); } }
        public IField FIRST_NAME_0005XX { get { return GetElementByName<IField>(Names.FIRST_NAME_0005XX); } }
        public IField MIDDLE_INITIAL_0005AS { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0005AS); } }
        public IField MIDDLE_INITIAL_0005 { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0005); } }
        public IField MIDDLE_INITIAL_0005XX { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0005XX); } }
        public IGroup IMPORT_SUPERVISOR_0006EV { get { return GetElementByName<IGroup>(Names.IMPORT_SUPERVISOR_0006EV); } }
        public IGroup SERVICE_PROVIDER_0006ET { get { return GetElementByName<IGroup>(Names.SERVICE_PROVIDER_0006ET); } }
        public IField LAST_NAME_0006AS { get { return GetElementByName<IField>(Names.LAST_NAME_0006AS); } }
        public IField LAST_NAME_0006 { get { return GetElementByName<IField>(Names.LAST_NAME_0006); } }
        public IField LAST_NAME_0006XX { get { return GetElementByName<IField>(Names.LAST_NAME_0006XX); } }
        public IField FIRST_NAME_0006AS { get { return GetElementByName<IField>(Names.FIRST_NAME_0006AS); } }
        public IField FIRST_NAME_0006 { get { return GetElementByName<IField>(Names.FIRST_NAME_0006); } }
        public IField FIRST_NAME_0006XX { get { return GetElementByName<IField>(Names.FIRST_NAME_0006XX); } }
        public IField MIDDLE_INITIAL_0006AS { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0006AS); } }
        public IField MIDDLE_INITIAL_0006 { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0006); } }
        public IField MIDDLE_INITIAL_0006XX { get { return GetElementByName<IField>(Names.MIDDLE_INITIAL_0006XX); } }
        public IGroup IMPORT_CO_0007EV { get { return GetElementByName<IGroup>(Names.IMPORT_CO_0007EV); } }
        public IGroup OFFICE_0007ET { get { return GetElementByName<IGroup>(Names.OFFICE_0007ET); } }
        public IField SYSTEM_GENERATED_ID_0007AS { get { return GetElementByName<IField>(Names.SYSTEM_GENERATED_ID_0007AS); } }
        public IField SYSTEM_GENERATED_ID_0007 { get { return GetElementByName<IField>(Names.SYSTEM_GENERATED_ID_0007); } }
        public IField SYSTEM_GENERATED_ID_0007XX { get { return GetElementByName<IField>(Names.SYSTEM_GENERATED_ID_0007XX); } }
        public IField NAME_0007AS { get { return GetElementByName<IField>(Names.NAME_0007AS); } }
        public IField NAME_0007 { get { return GetElementByName<IField>(Names.NAME_0007); } }
        public IField NAME_0007XX { get { return GetElementByName<IField>(Names.NAME_0007XX); } }
        public IGroup IMPORT_AREA_0008EV { get { return GetElementByName<IGroup>(Names.IMPORT_AREA_0008EV); } }
        public IGroup OFFICE_0008ET { get { return GetElementByName<IGroup>(Names.OFFICE_0008ET); } }
        public IField NAME_0008AS { get { return GetElementByName<IField>(Names.NAME_0008AS); } }
        public IField NAME_0008 { get { return GetElementByName<IField>(Names.NAME_0008); } }
        public IField NAME_0008XX { get { return GetElementByName<IField>(Names.NAME_0008XX); } }
        public IGroup IMPORT_0009EV { get { return GetElementByName<IGroup>(Names.IMPORT_0009EV); } }
        public IGroup EAB_FILE_HANDLING_0009ET { get { return GetElementByName<IGroup>(Names.EAB_FILE_HANDLING_0009ET); } }
        public IField ACTION_0009AS { get { return GetElementByName<IField>(Names.ACTION_0009AS); } }
        public IField ACTION_0009 { get { return GetElementByName<IField>(Names.ACTION_0009); } }
        public IField ACTION_0009XX { get { return GetElementByName<IField>(Names.ACTION_0009XX); } }
        public IGroup IMPORT_0010EV { get { return GetElementByName<IGroup>(Names.IMPORT_0010EV); } }
        public IGroup FIPS_0010ET { get { return GetElementByName<IGroup>(Names.FIPS_0010ET); } }
        public IField STATE_ABBREVIATION_0010AS { get { return GetElementByName<IField>(Names.STATE_ABBREVIATION_0010AS); } }
        public IField STATE_ABBREVIATION_0010 { get { return GetElementByName<IField>(Names.STATE_ABBREVIATION_0010); } }
        public IField STATE_ABBREVIATION_0010XX { get { return GetElementByName<IField>(Names.STATE_ABBREVIATION_0010XX); } }
        public IField STATE_0010AS { get { return GetElementByName<IField>(Names.STATE_0010AS); } }
        public IField STATE_0010 { get { return GetElementByName<IField>(Names.STATE_0010); } }
        public IField STATE_0010XX { get { return GetElementByName<IField>(Names.STATE_0010XX); } }
        public IField COUNTY_ABBREVIATION_0010AS { get { return GetElementByName<IField>(Names.COUNTY_ABBREVIATION_0010AS); } }
        public IField COUNTY_ABBREVIATION_0010 { get { return GetElementByName<IField>(Names.COUNTY_ABBREVIATION_0010); } }
        public IField COUNTY_ABBREVIATION_0010XX { get { return GetElementByName<IField>(Names.COUNTY_ABBREVIATION_0010XX); } }
        public IField COUNTY_0010AS { get { return GetElementByName<IField>(Names.COUNTY_0010AS); } }
        public IField COUNTY_0010 { get { return GetElementByName<IField>(Names.COUNTY_0010); } }
        public IField COUNTY_0010XX { get { return GetElementByName<IField>(Names.COUNTY_0010XX); } }
        public IField LOCATION_0010AS { get { return GetElementByName<IField>(Names.LOCATION_0010AS); } }
        public IField LOCATION_0010 { get { return GetElementByName<IField>(Names.LOCATION_0010); } }
        public IField LOCATION_0010XX { get { return GetElementByName<IField>(Names.LOCATION_0010XX); } }
        public IField STATE_DESCRIPTION_0010AS { get { return GetElementByName<IField>(Names.STATE_DESCRIPTION_0010AS); } }
        public IField STATE_DESCRIPTION_0010 { get { return GetElementByName<IField>(Names.STATE_DESCRIPTION_0010); } }
        public IField STATE_DESCRIPTION_0010XX { get { return GetElementByName<IField>(Names.STATE_DESCRIPTION_0010XX); } }
        public IField COUNTY_DESCRIPTION_0010AS { get { return GetElementByName<IField>(Names.COUNTY_DESCRIPTION_0010AS); } }
        public IField COUNTY_DESCRIPTION_0010 { get { return GetElementByName<IField>(Names.COUNTY_DESCRIPTION_0010); } }
        public IField COUNTY_DESCRIPTION_0010XX { get { return GetElementByName<IField>(Names.COUNTY_DESCRIPTION_0010XX); } }
        public IField LOCATION_DESCRIPTION_0010AS { get { return GetElementByName<IField>(Names.LOCATION_DESCRIPTION_0010AS); } }
        public IGroup LOCATION_DESCRIPTION_0010 { get { return GetElementByName<IGroup>(Names.LOCATION_DESCRIPTION_0010); } }
        public IField LOCATION_DESCRIPTION_0010DL { get { return GetElementByName<IField>(Names.LOCATION_DESCRIPTION_0010DL); } }
        public IField LOCATION_DESCRIPTION_0010XL { get { return GetElementByName<IField>(Names.LOCATION_DESCRIPTION_0010XL); } }
        public IField LOCATION_DESCRIPTION_0010DV { get { return GetElementByName<IField>(Names.LOCATION_DESCRIPTION_0010DV); } }
        public IField LOCATION_DESCRIPTION_0010XV { get { return GetElementByName<IField>(Names.LOCATION_DESCRIPTION_0010XV); } }
        public IField LOCATION_DESCRIPTION_0010XX { get { return GetElementByName<IField>(Names.LOCATION_DESCRIPTION_0010XX); } }
        public IGroup IMPORT_0011EV { get { return GetElementByName<IGroup>(Names.IMPORT_0011EV); } }
        public IGroup LEGAL_ACTION_0011ET { get { return GetElementByName<IGroup>(Names.LEGAL_ACTION_0011ET); } }
        public IField COURT_CASE_NUMBER_0011AS { get { return GetElementByName<IField>(Names.COURT_CASE_NUMBER_0011AS); } }
        public IField COURT_CASE_NUMBER_0011 { get { return GetElementByName<IField>(Names.COURT_CASE_NUMBER_0011); } }
        public IField COURT_CASE_NUMBER_0011XX { get { return GetElementByName<IField>(Names.COURT_CASE_NUMBER_0011XX); } }
        public IField STANDARD_NUMBER_0011AS { get { return GetElementByName<IField>(Names.STANDARD_NUMBER_0011AS); } }
        public IField STANDARD_NUMBER_0011 { get { return GetElementByName<IField>(Names.STANDARD_NUMBER_0011); } }
        public IField STANDARD_NUMBER_0011XX { get { return GetElementByName<IField>(Names.STANDARD_NUMBER_0011XX); } }
        public IGroup EXPORT_0012EV { get { return GetElementByName<IGroup>(Names.EXPORT_0012EV); } }
        public IGroup EAB_FILE_HANDLING_0012ET { get { return GetElementByName<IGroup>(Names.EAB_FILE_HANDLING_0012ET); } }
        public IField STATUS_0012AS { get { return GetElementByName<IField>(Names.STATUS_0012AS); } }
        public IField STATUS_0012 { get { return GetElementByName<IField>(Names.STATUS_0012); } }
        public IField STATUS_0012XX { get { return GetElementByName<IField>(Names.STATUS_0012XX); } }

        #endregion

        #region Data structure definition
        /// <summary>
        /// Defines the entirety of the LinkageSection IRecord structure as described by the Ateras.Framework.Buffer API.
        /// </summary>
        /// <param name="recordDef">The IStructureDefinition object to be used in defining the record structure.</param>
        protected override void DefineRecordStructure(IStructureDefinition recordDef)
        {
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM1, FieldType.String, 1);
            recordDef.CreateNewField(Names.IEF_RUNTIME_PARM2, FieldType.String, 1);

            recordDef.CreateNewGroup(Names.GLOBDATA, (GLOBDATA) =>
           {
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_COMMAND, (PSMGR_IEF_COMMAND) =>
               {
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_1, FieldType.String, 8);
                   PSMGR_IEF_COMMAND.CreateNewField(Names.PSMGR_IEF_COMMAND_2, FieldType.String, 72);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_TRANCODE, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_STATE, FieldType.PackedDecimal, 11);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_INFOMSG, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_USER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_TERMINAL_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_PRINTER_ID, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_DATE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_CURRENT_TIME, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.PSMGR_RUNTIME_TYPE, FieldType.String, 4);
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA, (PSMGR_FUNCTION_DATA) =>
               {
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_ERRMSG, FieldType.String, 4);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_NAME, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_DDURA, (PSMGR_FUNC_IN_DDURA) =>
                   {
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_YEAR, (DDURA_YEAR) =>
                       {
                           DDURA_YEAR.CreateNewField(Names.DDURA_Y_MISS, FieldType.String, 1);
                           DDURA_YEAR.CreateNewField(Names.DDURA_YYYY, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_MONTH, (DDURA_MONTH) =>
                       {
                           DDURA_MONTH.CreateNewField(Names.DDURA_M_MISS, FieldType.String, 1);
                           DDURA_MONTH.CreateNewField(Names.DDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_DDURA.CreateNewGroup(Names.DDURA_DAY, (DDURA_DAY) =>
                       {
                           DDURA_DAY.CreateNewField(Names.DDURA_D_MISS, FieldType.String, 1);
                           DDURA_DAY.CreateNewField(Names.DDURA_DD, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_DATE, FieldType.String, 8);
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_IN_TIME, FieldType.String, 6);
                   PSMGR_FUNCTION_DATA.CreateNewGroup(Names.PSMGR_FUNC_IN_TDURA, (PSMGR_FUNC_IN_TDURA) =>
                   {
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_HOUR, (TDURA_HOUR) =>
                       {
                           TDURA_HOUR.CreateNewField(Names.TDURA_H_MISS, FieldType.String, 1);
                           TDURA_HOUR.CreateNewField(Names.TDURA_HH, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_MINUTE, (TDURA_MINUTE) =>
                       {
                           TDURA_MINUTE.CreateNewField(Names.TDURA_M_MISS, FieldType.String, 1);
                           TDURA_MINUTE.CreateNewField(Names.TDURA_MM, FieldType.CompInt, 9);
                       });
                       PSMGR_FUNC_IN_TDURA.CreateNewGroup(Names.TDURA_SECOND, (TDURA_SECOND) =>
                       {
                           TDURA_SECOND.CreateNewField(Names.TDURA_S_MISS, FieldType.String, 1);
                           TDURA_SECOND.CreateNewField(Names.TDURA_SS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA.CreateNewField(Names.PSMGR_FUNC_OUT_TIME, FieldType.String, 6);
               });
               GLOBDATA.CreateNewFillerField(2, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_IEF_NEXTTRAN, FieldType.String, 80);
               GLOBDATA.CreateNewField(Names.PSMGR_EXIT_MSGTYPE, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(11, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_IEF_DEBUG_FLAGS, (PSMGR_IEF_DEBUG_FLAGS) =>
               {
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewField(Names.PSMGR_IEF_DEBUG, FieldType.String, 1)
                       .NewCheckField(Names.PSMGR_DEBUG_ON, "Y")
                       ;
                   PSMGR_IEF_DEBUG_FLAGS.CreateNewFillerField(15, FillWith.Hashes);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ENVIRONMENT_DATA, (PSMGR_ENVIRONMENT_DATA) =>
               {
                   PSMGR_ENVIRONMENT_DATA.CreateNewField(Names.PSMGR_PCB_CNT, FieldType.CompInt, 9);
                   PSMGR_ENVIRONMENT_DATA.CreateNewGroupArray(Names.PSMGR_PCB_ENTRY, 255, (PSMGR_PCB_ENTRY) =>
                   {
                       PSMGR_PCB_ENTRY.CreateNewField(Names.PSMGR_PCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_EAB_DATA, (PSMGR_EAB_DATA) =>
               {
                   PSMGR_EAB_DATA.CreateNewField(Names.PSMGR_EABPCB_CNT, FieldType.CompInt, 9);
                   PSMGR_EAB_DATA.CreateNewGroupArray(Names.PSMGR_EABPCB_ENTRY, 255, (PSMGR_EABPCB_ENTRY) =>
                   {
                       PSMGR_EABPCB_ENTRY.CreateNewField(Names.PSMGR_EABPCB_ADR, FieldType.CompInt, 9);
                   });
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ERROR_DATA, (PSMGR_ERROR_DATA) =>
               {
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ACTION_NAME, FieldType.String, 32);
                   PSMGR_ERROR_DATA.CreateNewField(Names.ERROR_ENCOUNTERED_SW, FieldType.String, 1);
                   PSMGR_ERROR_DATA.CreateNewField(Names.VIEW_OVERFLOW_SW, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DASG_DATA, (PSMGR_DASG_DATA) =>
               {
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ACTION_ID_X, (ACTION_ID_X) =>
                   {
                       ACTION_ID_X.CreateNewField(Names.ACTION_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewGroup(Names.ATTRIBUTE_ID_X, (ATTRIBUTE_ID_X) =>
                   {
                       ATTRIBUTE_ID_X.CreateNewField(Names.ATTRIBUTE_ID, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DASG_DATA.CreateNewField(Names.STATUS_FLAG, FieldType.String, 2)
                       .NewCheckField(Names.WHEN_SUCCESSFUL_SF, SPACES)
                       .NewCheckField(Names.FATAL_ERROR_SF, "FE")
                       .NewCheckField(Names.DB_ERROR_SF, "DB")
                       .NewCheckField(Names.ABORT_SHOW_DBMS_MSG_SF, "AB")
                       .NewCheckField(Names.ABORT_SHOW_USER_MSG_SF, "AM")
                       .NewCheckField(Names.RETRY_TRAN_REQUESTED_SF, "RT")
                       .NewCheckField(Names.PSTEP_USE_FAILURE, "PU")
                       .NewCheckField(Names.ASYNC_WHEN_AVAILABLE_SF, SPACES)
                       .NewCheckField(Names.ASYNC_WHEN_ACCEPTED_SF, SPACES)
                       .NewCheckField(Names.ASYNC_WHEN_NOT_ACCEPTED_SF, "NA")
                       .NewCheckField(Names.ASYNC_WHEN_INVALID_ID_SF, "II")
                       .NewCheckField(Names.ASYNC_WHEN_PENDING_SF, "PE")
                       .NewCheckField(Names.ASYNC_WHEN_SERVER_ERROR_SF, "SS")
                       .NewCheckField(Names.ASYNC_WHEN_COMM_ERROR_SF, "CE")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.LAST_STATUS, FieldType.String, 2)
                       .NewCheckField(Names.DB_ERROR_FL_LS, "DB")
                       .NewCheckField(Names.DB_DEADLOCK_TIMOUT_FL_LS, "DT")
                       .NewCheckField(Names.DUPLICATE_FOUND_FL_LS, "DF")
                       .NewCheckField(Names.INVALID_DATAA_FL_LS, "IA")
                       .NewCheckField(Names.INVALID_DATAB_TYPE_FL_LS, "BT")
                       .NewCheckField(Names.INVALID_DATAB_PERM_FL_LS, "BP")
                       .NewCheckField(Names.FATAL_ERROR_FL_LS, "FE")
                       .NewCheckField(Names.NOT_FOUND_FL_LS, "NF")
                       .NewCheckField(Names.NOT_UNIQUE_FL_LS, "NU")
                       .NewCheckField(Names.IEF_FUNCTION_ERROR_FL_LS, "IE")
                       .NewCheckField(Names.IEF_DURATION_ERROR_FL_LS, "DE")
                       .NewCheckField(Names.USED_PSTEP_NOT_FOUND, "PO")
                       .NewCheckField(Names.USED_PSTEP_ROUTING_ERR, "PX")
                       .NewCheckField(Names.USED_PSTEP_SND_FMT_ERR, "PF")
                       .NewCheckField(Names.USED_PSTEP_ENCRYPT_ERR, "PN")
                       .NewCheckField(Names.USED_PSTEP_SND_BFR_ERR, "PS")
                       .NewCheckField(Names.USED_PSTEP_RCV_BFR_ERR, "PR")
                       .NewCheckField(Names.USED_PSTEP_RCV_FMT_ERR, "PU")
                       .NewCheckField(Names.USED_PSTEP_TIRSECR_ERR, "PE")
                       .NewCheckField(Names.USED_PSTEP_TOKEN_ERR, "PT")
                       .NewCheckField(Names.USED_PSTEP_SEND_MAX_SIZE, "PM")
                       .NewCheckField(Names.USED_PSTEP_SECG_ERR, "PB")
                       .NewCheckField(Names.USED_PSTEP_ALLOC_ERR, "PA")
                       .NewCheckField(Names.USED_PSTEP_CONNECT_ERR, "PC")
                       .NewCheckField(Names.USED_PSTEP_XERR, "PD")
                       .NewCheckField(Names.USED_PSTEP_RCV_UA_ERR, "PH")
                       .NewCheckField(Names.USED_PSTEP_RCV_ES_ERR, "PI")
                       .NewCheckField(Names.USED_PSTEP_XFAL, "PJ")
                       .NewCheckField(Names.USED_PSTEP_SETOA_ERR, "PK")
                       .NewCheckField(Names.USED_PSTEP_RCV_VIEW_ERR, "PL")
                       .NewCheckField(Names.USED_PSTEP_DECRYPT_ERR, "PP")
                       ;
                   PSMGR_DASG_DATA.CreateNewField(Names.SAVE_SQLCA, FieldType.String, 255);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_DEBUG_DATA, (PSMGR_DEBUG_DATA) =>
               {
                   PSMGR_DEBUG_DATA.CreateNewField(Names.PSMGR_TRACE_ADR, FieldType.CompInt, 9);
                   PSMGR_DEBUG_DATA.CreateNewGroup(Names.LAST_STATEMENT_X, (LAST_STATEMENT_X) =>
                   {
                       LAST_STATEMENT_X.CreateNewField(Names.LAST_STATEMENT_NUM, FieldType.UnsignedNumeric, 10);
                   });
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_ID, FieldType.String, 10);
                   PSMGR_DEBUG_DATA.CreateNewField(Names.CUR_AB_NAME, FieldType.String, 32);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_TIRDATE_SAVEAREA, FieldType.String, 12);
               GLOBDATA.CreateNewGroup(Names.PSMGR_TIRDATE_CMCB, (PSMGR_TIRDATE_CMCB) =>
               {
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATE, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIME, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(8, FillWith.Hashes);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_INC, FieldType.CompInt, 9);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RC, FieldType.CompShort, 4)
                       .NewCheckField(Names.PSMGR_TIRDATE_OK, +0)
                       .NewCheckField(Names.PSMGR_TIRDATE_WARNING, +4)
                       .NewCheckField(Names.PSMGR_TIRDATE_ERROR, +8)
                       ;
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_REQ, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_DATEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TIMEF, FieldType.UnsignedNumeric, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_RETMSG, FieldType.String, 60);

                   IField PSMGR_TIRDATE_TSTAMP_local = PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_TSTAMP, FieldType.String, 20);
                   PSMGR_TIRDATE_CMCB.CreateNewGroupRedefine("FILLER_d5", PSMGR_TIRDATE_TSTAMP_local, (FILLER_d5) =>
                   {
                       FILLER_d5.CreateNewField(Names.PSMGR_TIRDATE_DATE_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d5.CreateNewField(Names.PSMGR_TIRDATE_TIME_Z, FieldType.UnsignedNumeric, 8);
                       FILLER_d5.CreateNewFillerField(4, FillWith.Hashes);
                   });
                   PSMGR_TIRDATE_CMCB.CreateNewField(Names.PSMGR_TIRDATE_SKIP_VAL, FieldType.String, 1);
                   PSMGR_TIRDATE_CMCB.CreateNewFillerField(95, FillWith.Hashes);
               });
               GLOBDATA.CreateNewField(Names.PSMGR_ROLLBACK_RQSTED, FieldType.String, 1)
                   .NewCheckField(Names.ROLLBACK_RQSTED, "R")
                   .NewCheckField(Names.ABEND_RQSTED, "A")
                   .NewCheckField(Names.TERMINATE_RQSTED, "T")
                   ;
               GLOBDATA.CreateNewGroup(Names.TIRTRCE_SAVE_AREA, (TIRTRCE_SAVE_AREA) =>
               {
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.BOTTOM_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.END_INDX, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_STMT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TOP_OF_CALL, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT, FieldType.CompInt, 9);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_BREAK_POINT_STATUS, FieldType.String, 3);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.LAST_AB_NAME, FieldType.String, 32);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLOR, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.COLORT, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.HILITE, FieldType.String, 15);
                   TIRTRCE_SAVE_AREA.CreateNewField(Names.TRACE_ON_OFF, FieldType.String, 3);
               });
               GLOBDATA.CreateNewGroup(Names.CASCADE_DELETE_FLAGS, (CASCADE_DELETE_FLAGS) =>
               {
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V1PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.V2PRESENT, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE1, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.CASCADE2, FieldType.String, 1);
                   CASCADE_DELETE_FLAGS.CreateNewField(Names.PROCESSQ_FLAG, FieldType.String, 1);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ACTIVE_DIALECT, (PSMGR_ACTIVE_DIALECT) =>
               {
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.DIALECT_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.MESSAGE_TABLE_NAME, FieldType.String, 8);
                   PSMGR_ACTIVE_DIALECT.CreateNewField(Names.TRANSLATE_TABLE_NAME, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_FUNCTION_DATA_EXT, (PSMGR_FUNCTION_DATA_EXT) =>
               {
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_IN_TIMESTAMP, FieldType.String, 20);
                   PSMGR_FUNCTION_DATA_EXT.CreateNewGroup(Names.PSMGR_FUNC_IN_TSDURA, (PSMGR_FUNC_IN_TSDURA) =>
                   {
                       PSMGR_FUNC_IN_TSDURA.CreateNewGroup(Names.TSDURA_MICROSECOND, (TSDURA_MICROSECOND) =>
                       {
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_M_MISS, FieldType.String, 1);
                           TSDURA_MICROSECOND.CreateNewField(Names.TSDURA_MS, FieldType.CompInt, 9);
                       });
                   });
                   PSMGR_FUNCTION_DATA_EXT.CreateNewField(Names.PSMGR_FUNC_OUT_TIMESTAMP, FieldType.String, 20);
               });
               GLOBDATA.CreateNewFillerField(8, FillWith.Hashes);
               GLOBDATA.CreateNewField(Names.PSMGR_CICS_FAIL_SW, FieldType.String, 1)
                   .NewCheckField(Names.INHIBIT_CICS_RECEIVE, "I")
                   ;
               GLOBDATA.CreateNewField(Names.CLIENT_USERID, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.CLIENT_PASSWORD, FieldType.String, 64);
               GLOBDATA.CreateNewField(Names.LOAD_MODULE_NAME, FieldType.String, 8);
               GLOBDATA.CreateNewField(Names.INSTRUMENT_CODE, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_RETRY_LIMIT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_TIMEOUT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewGroup(Names.PSMGR_EXTRA_ERRINFO, (PSMGR_EXTRA_ERRINFO) =>
               {
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_MSG_SIZE, FieldType.CompInt, 9);
                   PSMGR_EXTRA_ERRINFO.CreateNewField(Names.ERRINFO_BUF_ADDR, FieldType.String, 8);
               });
               GLOBDATA.CreateNewField(Names.TX_RETRY_COUNT, FieldType.CompInt, 9);
               GLOBDATA.CreateNewField(Names.TX_USER_RETRY_ALLOWED, FieldType.String, 1);
               GLOBDATA.CreateNewFillerField(3, FillWith.Hashes);
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_PTRS, (PSMGR_PSTEP_USE_PTRS) =>
               {
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_FAIL_MSG_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_GURB_REST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_LIPS_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_TBL_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_DDF_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_COMM_ID, FieldType.String, 8);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_APPL_LIST_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_PSTEP_USE_PTRS.CreateNewField(Names.PSTEP_CURR_PST_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_PSTEP_USE_SYSFLDS, (PSMGR_PSTEP_USE_SYSFLDS) =>
               {
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBERRCD, FieldType.String, 4);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBFN, FieldType.String, 2);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP, FieldType.String, 8);
                   PSMGR_PSTEP_USE_SYSFLDS.CreateNewField(Names.PSMGR_EIBRESP2, FieldType.String, 8);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_ASYNC_DATA, (PSMGR_ASYNC_DATA) =>
               {
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_MODE, FieldType.String, 1)
                       .NewCheckField(Names.FLOW_TYPE_SYNC, SPACE)
                       .NewCheckField(Names.FLOW_TYPE_ASYNC, "A")
                       .NewCheckField(Names.FLOW_TYPE_NO_RESPONSE, "N")
                       ;
                   PSMGR_ASYNC_DATA.CreateNewFillerField(1, FillWith.Hashes);
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_FLOW_STATUS_TABLE_PTR, FieldType.ReferencePointer, 4);
                   PSMGR_ASYNC_DATA.CreateNewField(Names.ASYNC_SERVER_LOC_TABLE_PTR, FieldType.ReferencePointer, 4);
               });
               GLOBDATA.CreateNewGroup(Names.PSMGR_HEAP, (PSMGR_HEAP) =>
               {
                   PSMGR_HEAP.CreateNewGroup(Names.HEAP_CFB, (HEAP_CFB) =>
                   {
                       HEAP_CFB.CreateNewField(Names.HEAP_CFB_ADDR, FieldType.ReferencePointer, 4);
                       HEAP_CFB.CreateNewField(Names.HEAP_CFB_ADDR_RESV, FieldType.SignedNumeric, 9);
                       HEAP_CFB.CreateNewField(Names.HEAP_CFB_ID, FieldType.SignedNumeric, 9);
                       HEAP_CFB.CreateNewField(Names.HEAP_CFB_LEN, FieldType.SignedNumeric, 9);
                   });
                   PSMGR_HEAP.CreateNewGroup(Names.HEAP_WGLOB, (HEAP_WGLOB) =>
                   {
                       HEAP_WGLOB.CreateNewField(Names.HEAP_WGLOB_ADDR, FieldType.ReferencePointer, 4);
                       HEAP_WGLOB.CreateNewField(Names.HEAP_WGLOB_ADDR_RESV, FieldType.SignedNumeric, 9);
                       HEAP_WGLOB.CreateNewField(Names.HEAP_WGLOB_ID, FieldType.SignedNumeric, 9);
                       HEAP_WGLOB.CreateNewField(Names.HEAP_WGLOB_LEN, FieldType.SignedNumeric, 9);
                   });
               });
               GLOBDATA.CreateNewField(Names.PSMGR_MMCB, FieldType.CompInt, 8);
               GLOBDATA.CreateNewField(Names.PSMGR_MMCB_ACTIVE, FieldType.String, 4);
               GLOBDATA.CreateNewFillerField(149, FillWith.Hashes);
           });

            recordDef.CreateNewGroup(Names.IMPORT_0001EV, (IMPORT_0001EV) =>
           {
               IMPORT_0001EV.CreateNewGroup(Names.CSE_PERSONS_WORK_SET_0001ET, (CSE_PERSONS_WORK_SET_0001ET) =>
               {
                   CSE_PERSONS_WORK_SET_0001ET.CreateNewField(Names.FORMATTED_NAME_0001AS, FieldType.String, 1);

                   IField FORMATTED_NAME_0001_local = CSE_PERSONS_WORK_SET_0001ET.CreateNewField(Names.FORMATTED_NAME_0001, FieldType.String, 33);
                   CSE_PERSONS_WORK_SET_0001ET.CreateNewFieldRedefine(Names.FORMATTED_NAME_0001XX, FieldType.String, FORMATTED_NAME_0001_local, 33);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0002EV, (IMPORT_0002EV) =>
           {
               IMPORT_0002EV.CreateNewGroup(Names.LEGAL_REFERRAL_0002ET, (LEGAL_REFERRAL_0002ET) =>
               {
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_DATE_0002AS, FieldType.String, 1);

                   IField REFERRAL_DATE_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_DATE_0002, FieldType.SignedNumeric, 8);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.REFERRAL_DATE_0002XX, FieldType.String, REFERRAL_DATE_0002_local, 8);
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_REASON_1_0002AS, FieldType.String, 1);

                   IField REFERRAL_REASON_1_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_REASON_1_0002, FieldType.String, 4);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.REFERRAL_REASON_1_0002XX, FieldType.String, REFERRAL_REASON_1_0002_local, 4);
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_REASON_2_0002AS, FieldType.String, 1);

                   IField REFERRAL_REASON_2_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_REASON_2_0002, FieldType.String, 4);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.REFERRAL_REASON_2_0002XX, FieldType.String, REFERRAL_REASON_2_0002_local, 4);
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_REASON_3_0002AS, FieldType.String, 1);

                   IField REFERRAL_REASON_3_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_REASON_3_0002, FieldType.String, 4);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.REFERRAL_REASON_3_0002XX, FieldType.String, REFERRAL_REASON_3_0002_local, 4);
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_REASON_5_0002AS, FieldType.String, 1);

                   IField REFERRAL_REASON_5_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_REASON_5_0002, FieldType.String, 4);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.REFERRAL_REASON_5_0002XX, FieldType.String, REFERRAL_REASON_5_0002_local, 4);
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_REASON_4_0002AS, FieldType.String, 1);

                   IField REFERRAL_REASON_4_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRAL_REASON_4_0002, FieldType.String, 4);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.REFERRAL_REASON_4_0002XX, FieldType.String, REFERRAL_REASON_4_0002_local, 4);
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.STATUS_0002AS, FieldType.String, 1);

                   IField STATUS_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.STATUS_0002, FieldType.String, 1);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.STATUS_0002XX, FieldType.String, STATUS_0002_local, 1);
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.IDENTIFIER_0002AS, FieldType.String, 1);

                   IField IDENTIFIER_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.IDENTIFIER_0002, FieldType.SignedNumeric, 3);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.IDENTIFIER_0002XX, FieldType.String, IDENTIFIER_0002_local, 3);
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.STATUS_DATE_0002AS, FieldType.String, 1);

                   IField STATUS_DATE_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.STATUS_DATE_0002, FieldType.SignedNumeric, 8);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.STATUS_DATE_0002XX, FieldType.String, STATUS_DATE_0002_local, 8);
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRED_BY_USER_ID_0002AS, FieldType.String, 1);

                   IField REFERRED_BY_USER_ID_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.REFERRED_BY_USER_ID_0002, FieldType.String, 8);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.REFERRED_BY_USER_ID_0002XX, FieldType.String, REFERRED_BY_USER_ID_0002_local, 8);
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.COURT_CASE_NUMBER_0002AS, FieldType.String, 1);

                   IField COURT_CASE_NUMBER_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.COURT_CASE_NUMBER_0002, FieldType.String, 17);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.COURT_CASE_NUMBER_0002XX, FieldType.String, COURT_CASE_NUMBER_0002_local, 17);
                   LEGAL_REFERRAL_0002ET.CreateNewField(Names.TRIBUNAL_ID_0002AS, FieldType.String, 1);

                   IField TRIBUNAL_ID_0002_local = LEGAL_REFERRAL_0002ET.CreateNewField(Names.TRIBUNAL_ID_0002, FieldType.SignedNumeric, 9);
                   LEGAL_REFERRAL_0002ET.CreateNewFieldRedefine(Names.TRIBUNAL_ID_0002XX, FieldType.String, TRIBUNAL_ID_0002_local, 9);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0003EV, (IMPORT_0003EV) =>
           {
               IMPORT_0003EV.CreateNewGroup(Names.CASE_0003ET, (CASE_0003ET) =>
               {
                   CASE_0003ET.CreateNewField(Names.NUMBER_0003AS, FieldType.String, 1);

                   IField NUMBER_0003_local = CASE_0003ET.CreateNewField(Names.NUMBER_0003, FieldType.String, 10);
                   CASE_0003ET.CreateNewFieldRedefine(Names.NUMBER_0003XX, FieldType.String, NUMBER_0003_local, 10);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_LEGAL_0004EV, (IMPORT_LEGAL_0004EV) =>
           {
               IMPORT_LEGAL_0004EV.CreateNewGroup(Names.SERVICE_PROVIDER_0004ET, (SERVICE_PROVIDER_0004ET) =>
               {
                   SERVICE_PROVIDER_0004ET.CreateNewField(Names.LAST_NAME_0004AS, FieldType.String, 1);

                   IField LAST_NAME_0004_local = SERVICE_PROVIDER_0004ET.CreateNewField(Names.LAST_NAME_0004, FieldType.String, 17);
                   SERVICE_PROVIDER_0004ET.CreateNewFieldRedefine(Names.LAST_NAME_0004XX, FieldType.String, LAST_NAME_0004_local, 17);
                   SERVICE_PROVIDER_0004ET.CreateNewField(Names.FIRST_NAME_0004AS, FieldType.String, 1);

                   IField FIRST_NAME_0004_local = SERVICE_PROVIDER_0004ET.CreateNewField(Names.FIRST_NAME_0004, FieldType.String, 12);
                   SERVICE_PROVIDER_0004ET.CreateNewFieldRedefine(Names.FIRST_NAME_0004XX, FieldType.String, FIRST_NAME_0004_local, 12);
                   SERVICE_PROVIDER_0004ET.CreateNewField(Names.MIDDLE_INITIAL_0004AS, FieldType.String, 1);

                   IField MIDDLE_INITIAL_0004_local = SERVICE_PROVIDER_0004ET.CreateNewField(Names.MIDDLE_INITIAL_0004, FieldType.String, 1);
                   SERVICE_PROVIDER_0004ET.CreateNewFieldRedefine(Names.MIDDLE_INITIAL_0004XX, FieldType.String, MIDDLE_INITIAL_0004_local, 1);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_CO_0005EV, (IMPORT_CO_0005EV) =>
           {
               IMPORT_CO_0005EV.CreateNewGroup(Names.SERVICE_PROVIDER_0005ET, (SERVICE_PROVIDER_0005ET) =>
               {
                   SERVICE_PROVIDER_0005ET.CreateNewField(Names.LAST_NAME_0005AS, FieldType.String, 1);

                   IField LAST_NAME_0005_local = SERVICE_PROVIDER_0005ET.CreateNewField(Names.LAST_NAME_0005, FieldType.String, 17);
                   SERVICE_PROVIDER_0005ET.CreateNewFieldRedefine(Names.LAST_NAME_0005XX, FieldType.String, LAST_NAME_0005_local, 17);
                   SERVICE_PROVIDER_0005ET.CreateNewField(Names.FIRST_NAME_0005AS, FieldType.String, 1);

                   IField FIRST_NAME_0005_local = SERVICE_PROVIDER_0005ET.CreateNewField(Names.FIRST_NAME_0005, FieldType.String, 12);
                   SERVICE_PROVIDER_0005ET.CreateNewFieldRedefine(Names.FIRST_NAME_0005XX, FieldType.String, FIRST_NAME_0005_local, 12);
                   SERVICE_PROVIDER_0005ET.CreateNewField(Names.MIDDLE_INITIAL_0005AS, FieldType.String, 1);

                   IField MIDDLE_INITIAL_0005_local = SERVICE_PROVIDER_0005ET.CreateNewField(Names.MIDDLE_INITIAL_0005, FieldType.String, 1);
                   SERVICE_PROVIDER_0005ET.CreateNewFieldRedefine(Names.MIDDLE_INITIAL_0005XX, FieldType.String, MIDDLE_INITIAL_0005_local, 1);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_SUPERVISOR_0006EV, (IMPORT_SUPERVISOR_0006EV) =>
           {
               IMPORT_SUPERVISOR_0006EV.CreateNewGroup(Names.SERVICE_PROVIDER_0006ET, (SERVICE_PROVIDER_0006ET) =>
               {
                   SERVICE_PROVIDER_0006ET.CreateNewField(Names.LAST_NAME_0006AS, FieldType.String, 1);

                   IField LAST_NAME_0006_local = SERVICE_PROVIDER_0006ET.CreateNewField(Names.LAST_NAME_0006, FieldType.String, 17);
                   SERVICE_PROVIDER_0006ET.CreateNewFieldRedefine(Names.LAST_NAME_0006XX, FieldType.String, LAST_NAME_0006_local, 17);
                   SERVICE_PROVIDER_0006ET.CreateNewField(Names.FIRST_NAME_0006AS, FieldType.String, 1);

                   IField FIRST_NAME_0006_local = SERVICE_PROVIDER_0006ET.CreateNewField(Names.FIRST_NAME_0006, FieldType.String, 12);
                   SERVICE_PROVIDER_0006ET.CreateNewFieldRedefine(Names.FIRST_NAME_0006XX, FieldType.String, FIRST_NAME_0006_local, 12);
                   SERVICE_PROVIDER_0006ET.CreateNewField(Names.MIDDLE_INITIAL_0006AS, FieldType.String, 1);

                   IField MIDDLE_INITIAL_0006_local = SERVICE_PROVIDER_0006ET.CreateNewField(Names.MIDDLE_INITIAL_0006, FieldType.String, 1);
                   SERVICE_PROVIDER_0006ET.CreateNewFieldRedefine(Names.MIDDLE_INITIAL_0006XX, FieldType.String, MIDDLE_INITIAL_0006_local, 1);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_CO_0007EV, (IMPORT_CO_0007EV) =>
           {
               IMPORT_CO_0007EV.CreateNewGroup(Names.OFFICE_0007ET, (OFFICE_0007ET) =>
               {
                   OFFICE_0007ET.CreateNewField(Names.SYSTEM_GENERATED_ID_0007AS, FieldType.String, 1);

                   IField SYSTEM_GENERATED_ID_0007_local = OFFICE_0007ET.CreateNewField(Names.SYSTEM_GENERATED_ID_0007, FieldType.SignedNumeric, 4);
                   OFFICE_0007ET.CreateNewFieldRedefine(Names.SYSTEM_GENERATED_ID_0007XX, FieldType.String, SYSTEM_GENERATED_ID_0007_local, 4);
                   OFFICE_0007ET.CreateNewField(Names.NAME_0007AS, FieldType.String, 1);

                   IField NAME_0007_local = OFFICE_0007ET.CreateNewField(Names.NAME_0007, FieldType.String, 30);
                   OFFICE_0007ET.CreateNewFieldRedefine(Names.NAME_0007XX, FieldType.String, NAME_0007_local, 30);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_AREA_0008EV, (IMPORT_AREA_0008EV) =>
           {
               IMPORT_AREA_0008EV.CreateNewGroup(Names.OFFICE_0008ET, (OFFICE_0008ET) =>
               {
                   OFFICE_0008ET.CreateNewField(Names.NAME_0008AS, FieldType.String, 1);

                   IField NAME_0008_local = OFFICE_0008ET.CreateNewField(Names.NAME_0008, FieldType.String, 30);
                   OFFICE_0008ET.CreateNewFieldRedefine(Names.NAME_0008XX, FieldType.String, NAME_0008_local, 30);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0009EV, (IMPORT_0009EV) =>
           {
               IMPORT_0009EV.CreateNewGroup(Names.EAB_FILE_HANDLING_0009ET, (EAB_FILE_HANDLING_0009ET) =>
               {
                   EAB_FILE_HANDLING_0009ET.CreateNewField(Names.ACTION_0009AS, FieldType.String, 1);

                   IField ACTION_0009_local = EAB_FILE_HANDLING_0009ET.CreateNewField(Names.ACTION_0009, FieldType.String, 8);
                   EAB_FILE_HANDLING_0009ET.CreateNewFieldRedefine(Names.ACTION_0009XX, FieldType.String, ACTION_0009_local, 8);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0010EV, (IMPORT_0010EV) =>
           {
               IMPORT_0010EV.CreateNewGroup(Names.FIPS_0010ET, (FIPS_0010ET) =>
               {
                   FIPS_0010ET.CreateNewField(Names.STATE_ABBREVIATION_0010AS, FieldType.String, 1);

                   IField STATE_ABBREVIATION_0010_local = FIPS_0010ET.CreateNewField(Names.STATE_ABBREVIATION_0010, FieldType.String, 2);
                   FIPS_0010ET.CreateNewFieldRedefine(Names.STATE_ABBREVIATION_0010XX, FieldType.String, STATE_ABBREVIATION_0010_local, 2);
                   FIPS_0010ET.CreateNewField(Names.STATE_0010AS, FieldType.String, 1);

                   IField STATE_0010_local = FIPS_0010ET.CreateNewField(Names.STATE_0010, FieldType.SignedNumeric, 2);
                   FIPS_0010ET.CreateNewFieldRedefine(Names.STATE_0010XX, FieldType.String, STATE_0010_local, 2);
                   FIPS_0010ET.CreateNewField(Names.COUNTY_ABBREVIATION_0010AS, FieldType.String, 1);

                   IField COUNTY_ABBREVIATION_0010_local = FIPS_0010ET.CreateNewField(Names.COUNTY_ABBREVIATION_0010, FieldType.String, 2);
                   FIPS_0010ET.CreateNewFieldRedefine(Names.COUNTY_ABBREVIATION_0010XX, FieldType.String, COUNTY_ABBREVIATION_0010_local, 2);
                   FIPS_0010ET.CreateNewField(Names.COUNTY_0010AS, FieldType.String, 1);

                   IField COUNTY_0010_local = FIPS_0010ET.CreateNewField(Names.COUNTY_0010, FieldType.SignedNumeric, 3);
                   FIPS_0010ET.CreateNewFieldRedefine(Names.COUNTY_0010XX, FieldType.String, COUNTY_0010_local, 3);
                   FIPS_0010ET.CreateNewField(Names.LOCATION_0010AS, FieldType.String, 1);

                   IField LOCATION_0010_local = FIPS_0010ET.CreateNewField(Names.LOCATION_0010, FieldType.SignedNumeric, 2);
                   FIPS_0010ET.CreateNewFieldRedefine(Names.LOCATION_0010XX, FieldType.String, LOCATION_0010_local, 2);
                   FIPS_0010ET.CreateNewField(Names.STATE_DESCRIPTION_0010AS, FieldType.String, 1);

                   IField STATE_DESCRIPTION_0010_local = FIPS_0010ET.CreateNewField(Names.STATE_DESCRIPTION_0010, FieldType.String, 20);
                   FIPS_0010ET.CreateNewFieldRedefine(Names.STATE_DESCRIPTION_0010XX, FieldType.String, STATE_DESCRIPTION_0010_local, 20);
                   FIPS_0010ET.CreateNewField(Names.COUNTY_DESCRIPTION_0010AS, FieldType.String, 1);

                   IField COUNTY_DESCRIPTION_0010_local = FIPS_0010ET.CreateNewField(Names.COUNTY_DESCRIPTION_0010, FieldType.String, 20);
                   FIPS_0010ET.CreateNewFieldRedefine(Names.COUNTY_DESCRIPTION_0010XX, FieldType.String, COUNTY_DESCRIPTION_0010_local, 20);
                   FIPS_0010ET.CreateNewField(Names.LOCATION_DESCRIPTION_0010AS, FieldType.String, 1);
                   IGroup LOCATION_DESCRIPTION_0010_local = (IGroup)FIPS_0010ET.CreateNewGroup(Names.LOCATION_DESCRIPTION_0010, (LOCATION_DESCRIPTION_0010) =>
                   {

                       IField LOCATION_DESCRIPTION_0010DL_local = LOCATION_DESCRIPTION_0010.CreateNewField(Names.LOCATION_DESCRIPTION_0010DL, FieldType.CompShort, 4);
                       LOCATION_DESCRIPTION_0010.CreateNewFieldRedefine(Names.LOCATION_DESCRIPTION_0010XL, FieldType.String, LOCATION_DESCRIPTION_0010DL_local, 2);

                       IField LOCATION_DESCRIPTION_0010DV_local = LOCATION_DESCRIPTION_0010.CreateNewField(Names.LOCATION_DESCRIPTION_0010DV, FieldType.String, 40);
                       LOCATION_DESCRIPTION_0010.CreateNewFieldRedefine(Names.LOCATION_DESCRIPTION_0010XV, FieldType.String, LOCATION_DESCRIPTION_0010DV_local, 40);
                   });
                   FIPS_0010ET.CreateNewFieldRedefine(Names.LOCATION_DESCRIPTION_0010XX, FieldType.String, LOCATION_DESCRIPTION_0010_local, 42);
               });
           });

            recordDef.CreateNewGroup(Names.IMPORT_0011EV, (IMPORT_0011EV) =>
           {
               IMPORT_0011EV.CreateNewGroup(Names.LEGAL_ACTION_0011ET, (LEGAL_ACTION_0011ET) =>
               {
                   LEGAL_ACTION_0011ET.CreateNewField(Names.COURT_CASE_NUMBER_0011AS, FieldType.String, 1);

                   IField COURT_CASE_NUMBER_0011_local = LEGAL_ACTION_0011ET.CreateNewField(Names.COURT_CASE_NUMBER_0011, FieldType.String, 17);
                   LEGAL_ACTION_0011ET.CreateNewFieldRedefine(Names.COURT_CASE_NUMBER_0011XX, FieldType.String, COURT_CASE_NUMBER_0011_local, 17);
                   LEGAL_ACTION_0011ET.CreateNewField(Names.STANDARD_NUMBER_0011AS, FieldType.String, 1);

                   IField STANDARD_NUMBER_0011_local = LEGAL_ACTION_0011ET.CreateNewField(Names.STANDARD_NUMBER_0011, FieldType.String, 20);
                   LEGAL_ACTION_0011ET.CreateNewFieldRedefine(Names.STANDARD_NUMBER_0011XX, FieldType.String, STANDARD_NUMBER_0011_local, 20);
               });
           });

            recordDef.CreateNewGroup(Names.EXPORT_0012EV, (EXPORT_0012EV) =>
           {
               EXPORT_0012EV.CreateNewGroup(Names.EAB_FILE_HANDLING_0012ET, (EAB_FILE_HANDLING_0012ET) =>
               {
                   EAB_FILE_HANDLING_0012ET.CreateNewField(Names.STATUS_0012AS, FieldType.String, 1);

                   IField STATUS_0012_local = EAB_FILE_HANDLING_0012ET.CreateNewField(Names.STATUS_0012, FieldType.String, 8);
                   EAB_FILE_HANDLING_0012ET.CreateNewFieldRedefine(Names.STATUS_0012XX, FieldType.String, STATUS_0012_local, 8);
               });
           });

        }

        protected override string GetRecordName()
        {
            return Names.LinkageSection;
        }
        #endregion

        public void SetPassedParameters(object[] args)
        {
            SetPassedParm(IEF_RUNTIME_PARM1, args, 0);
            SetPassedParm(IEF_RUNTIME_PARM2, args, 1);
            SetPassedParm(GLOBDATA, args, 2);
            SetPassedParm(IMPORT_0001EV, args, 3);
            SetPassedParm(IMPORT_0002EV, args, 4);
            SetPassedParm(IMPORT_0003EV, args, 5);
            SetPassedParm(IMPORT_LEGAL_0004EV, args, 6);
            SetPassedParm(IMPORT_CO_0005EV, args, 7);
            SetPassedParm(IMPORT_SUPERVISOR_0006EV, args, 8);
            SetPassedParm(IMPORT_CO_0007EV, args, 9);
            SetPassedParm(IMPORT_AREA_0008EV, args, 10);
            SetPassedParm(IMPORT_0009EV, args, 11);
            SetPassedParm(IMPORT_0010EV, args, 12);
            SetPassedParm(IMPORT_0011EV, args, 13);
            SetPassedParm(EXPORT_0012EV, args, 14);
        }


        public void UpdateReturnParameters(object[] args)
        {
            SetReturnParm(IEF_RUNTIME_PARM1, args, 0);
            SetReturnParm(IEF_RUNTIME_PARM2, args, 1);
            SetReturnParm(GLOBDATA, args, 2);
            SetReturnParm(IMPORT_0001EV, args, 3);
            SetReturnParm(IMPORT_0002EV, args, 4);
            SetReturnParm(IMPORT_0003EV, args, 5);
            SetReturnParm(IMPORT_LEGAL_0004EV, args, 6);
            SetReturnParm(IMPORT_CO_0005EV, args, 7);
            SetReturnParm(IMPORT_SUPERVISOR_0006EV, args, 8);
            SetReturnParm(IMPORT_CO_0007EV, args, 9);
            SetReturnParm(IMPORT_AREA_0008EV, args, 10);
            SetReturnParm(IMPORT_0009EV, args, 11);
            SetReturnParm(IMPORT_0010EV, args, 12);
            SetReturnParm(IMPORT_0011EV, args, 13);
            SetReturnParm(EXPORT_0012EV, args, 14);
        }
    }
    #endregion Linkage Section Class

    #region Business Logic Class
    public class SWEXLE09 : EABBase
    {

        #region Public Constructors
        public SWEXLE09()
            : base()
        {
            this.ProgramName.SetValue("SWEXLE09");

            WS = new SWEXLE09_ws();
            FD = new SWEXLE09_fd(WS);
            LS = new SWEXLE09_ls();
        }

        #endregion

        #region Private Fields


        //==== Working Storage Data Class ========================================
        private SWEXLE09_ws WS;

        //==== File Data Class ========================================
        private SWEXLE09_fd FD;

        //==== Linkage Section Data Class ========================================
        private SWEXLE09_ls LS;
        #endregion

        #region Public Methods
        //========================================================================
        //==== RunMain Entry Point Method ========================================
        //========================================================================
        public override int ExecuteMain(params object[] args)                                              //COBOL==> PROCEDURE DIVISION USING IEF-RUNTIME-PARM1 , IEF-RUNTIME-PARM2 , GLOBDATA , IMPORT-0001EV , IMPORT-0002EV , IMPORT-0003EV , IMPORT-LEGAL-0004EV , IMPORT-CO-0005EV , IMPORT-SUPERVISOR-0006EV , IMPORT-CO-0007EV , IMPORT-AREA-0008EV , IMPORT-0009EV , IMPORT-0010EV , IMPORT-0011EV , EXPORT-0012EV.
        {
            try
            {
                WS.Initialize();
                LS.SetPassedParameters(args);
                RunMain();
                LS.UpdateReturnParameters(args);
                return Return_Code.AsInt();
            }
            catch (Exception ex)
            {
                Control.ReturnException(ex);
                return 12;
            }
        }
        #endregion

        #region Private Methods

        private void RunMain()
        {
            string returnMethod = "Main";
            // Execute Procedure Division Logic
            M_MAIN_0285214037(returnMethod);
        }
        /// <summary>
        /// Method M_MAIN_0285214037
        /// </summary>
        private void M_MAIN_0285214037(string returnMethod = "")
        {
            M_PARA_0285214037_INIT("M_PARA_0285214037_INIT_EXIT"); if (Control.ExitProgram) { return; }           //COBOL==> PERFORM PARA-0285214037-INIT THRU PARA-0285214037-INIT-EXIT
            M_PARA_0285214037("M_PARA_0285214037_EXIT"); if (Control.ExitProgram) { return; }                     //COBOL==> PERFORM PARA-0285214037 THRU PARA-0285214037-EXIT
            Control.ExitProgram = true; return;                                                                 //COBOL==> GOBACK.
        }
        /// <summary>
        /// Method M_PARA_0285214037
        /// </summary>
        private void M_PARA_0285214037(string returnMethod = "")
        {
            if (returnMethod != "" && returnMethod != "M_PARA_0285214037") { M_0000_MAINLINE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_0000_MAINLINE
        /// </summary>
        /// <remarks>
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT:    USER-WRITTEN CODE SHOULD BE INSERTED HERE
        ///COMMENT:  * * * * * * * * * * * * * * * * * * * * * *
        ///COMMENT: ******************
        /// </remarks>
        private void M_0000_MAINLINE(string returnMethod = "")
        {
            //COMMENT: ******************
            LS.STATUS_0012.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0012
            DisplayToLog(LS.ACTION_0009.AsString());                                                            //COBOL==> DISPLAY ACTION-0009
                                                                                                                // EvaluateList !LS.ACTION_0009!                                                                    //COBOL==> EVALUATE ACTION-0009
            if ((LS.ACTION_0009.IsEqualTo("OPEN")))                                                             //COBOL==> WHEN 'OPEN'
            {
                M_1000_OPEN_FILE(); if (Control.ExitProgram) { return; }                                              //COBOL==> PERFORM 1000-OPEN-FILE
            }                                                                                                //COBOL==> WHEN 'WRITE'
            else
            if ((LS.ACTION_0009.IsEqualTo("WRITE")))
            {
                M_2000_WRITE_FILE(); if (Control.ExitProgram) { return; }                                             //COBOL==> PERFORM 2000-WRITE-FILE
            }                                                                                                //COBOL==> WHEN 'CLOSE'
            else
            if ((LS.ACTION_0009.IsEqualTo("CLOSE")))
            {
                M_3000_CLOSE_FILE(); if (Control.ExitProgram) { return; }                                             //COBOL==> PERFORM 3000-CLOSE-FILE
            }                                                                                                //COBOL==> WHEN OTHER
            else
            {
                LS.STATUS_0012.SetValue("BI");                                                                      //COBOL==> MOVE 'BI' TO STATUS-0012
            }                                                                                                   //COBOL==> END-EVALUATE
            M_9999_FINISHED(CheckGotoReturn(returnMethod)); return;                                             //COBOL==> GO TO 9999-FINISHED.
        }
        /// <summary>
        /// Method M_1000_OPEN_FILE
        /// </summary>
        /// <remarks>
        ///COMMENT: ******************
        /// </remarks>
        private void M_1000_OPEN_FILE(string returnMethod = "")
        {
            //COMMENT: ******************
            FD.OUTPUT_FILE.OpenFile(FileAccessMode.Write);                                                      //COBOL==> OPEN OUTPUT OUTPUT-FILE
            if (WS.FILE_STATUS.IsEqualTo("00"))                                                                 //COBOL==> IF FILE-STATUS = '00'
            {
                LS.STATUS_0012.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0012
                FD.CO_OFFICE_NAME.SetValue("COLLECTION OFFICE NAME");                                               //COBOL==> MOVE 'COLLECTION OFFICE NAME' TO CO-OFFICE-NAME
                FD.COUNTY_ABBREVIATION.SetValue("COUNTY CODE");                                                     //COBOL==> MOVE 'COUNTY CODE' TO COUNTY-ABBREVIATION
                FD.COURT_CASE_NUMBER.SetValue("COURT ORDER#");                                                      //COBOL==> MOVE 'COURT ORDER#' TO COURT-CASE-NUMBER
                FD.CASE_NUMBER.SetValue("CSS CASE#");                                                               //COBOL==> MOVE 'CSS CASE#' TO CASE-NUMBER
                FD.REFERRAL_DATE.SetValue("REFRL DT");                                                              //COBOL==> MOVE 'REFRL DT' TO REFERRAL-DATE
                FD.REFERRAL_REASON_1.SetValue("REFERRAL REASON");                                                   //COBOL==> MOVE 'REFERRAL REASON' TO REFERRAL-REASON-1
                FD.REFERRAL_REASON_2.SetValue("REASON2");                                                           //COBOL==> MOVE 'REASON2' TO REFERRAL-REASON-2
                FD.REFERRAL_REASON_3.SetValue("REASON3");                                                           //COBOL==> MOVE 'REASON3' TO REFERRAL-REASON-3
                FD.REFERRAL_REASON_4.SetValue("REASON4");                                                           //COBOL==> MOVE 'REASON4' TO REFERRAL-REASON-4
                FD.REFERRAL_REASON_5.SetValue("REASON5");                                                           //COBOL==> MOVE 'REASON5' TO REFERRAL-REASON-5
                FD.REFERRAL_STATUS.SetValue("STATUS");                                                              //COBOL==> MOVE 'STATUS' TO REFERRAL-STATUS
                FD.STATUS_DATE.SetValue("STATUS DT");                                                               //COBOL==> MOVE 'STATUS DT' TO STATUS-DATE
                                                                                                                    //COMMENT:         MOVE 'AREA OFFICE NAME' TO
                                                                                                                    //COMMENT:         AREA-OFFICE-NAME
                                                                                                                    //COMMENT:         CO-OFFICE-ID
                                                                                                                    //COMMENT:         MOVE 'SUP LAST NM' TO
                                                                                                                    //COMMENT:         SUPERVISOR-LAST-NAME
                                                                                                                    //COMMENT:         MOVE 'SUP FIRST' TO
                                                                                                                    //COMMENT:         SUPERVISOR-FIRST-NAME
                                                                                                                    //COMMENT:         MOVE 'MI' TO
                                                                                                                    //COMMENT:         SUPERVISOR-MIDDLE-IN
                                                                                                                    //COMMENT:         MOVE 'CO LAST NAME' TO
                                                                                                                    //COMMENT:         CO-LAST-NAME
                                                                                                                    //COMMENT:         MOVE 'CO FIRST NM' TO
                                                                                                                    //COMMENT:         CO-FIRST-NAME
                                                                                                                    //COMMENT:         MOVE 'MI' TO
                                                                                                                    //COMMENT:         CO-MIDDLE-INITIAL
                                                                                                                    //COMMENT:         MOVE 'ATTY LAST NM' TO
                                                                                                                    //COMMENT:         ATTORNEY-LAST-NAME
                                                                                                                    //COMMENT:         MOVE 'ATTY FIRST NM' TO
                                                                                                                    //COMMENT:         ATTORNEY-FIRST-NAME
                                                                                                                    //COMMENT:         MOVE 'MI' TO
                                                                                                                    //COMMENT:         ATTORNEY-MIDDLE-INITIAL
                                                                                                                    //COMMENT:         MOVE 'AP NAME' TO
                                                                                                                    //COMMENT:         AP-FORMATTED-NAME
                                                                                                                    //COMMENT:         MOVE 'ST' TO
                                                                                                                    //COMMENT:         STATE-ABBREVIATION
                                                                                                                    //COMMENT:         MOVE 'COUNTY NAME' TO
                                                                                                                    //COMMENT:         COUNTY-DESCRIPTION
                                                                                                                    //COMMENT:         MOVE 'USER ID' TO
                                                                                                                    //COMMENT:         REFERRED-BY-USER-ID
                                                                                                                    //COMMENT:         MOVE 'TRIBUNAL' TO
                                                                                                                    //COMMENT:         TRIBUNAL-ID
                                                                                                                    //COMMENT:         MOVE 'RID' TO
                                                                                                                    //COMMENT:         REFERRAL-IDENTIFIER
                FD.DELIMIT_01.SetValue(",");                                                                        //COBOL==> MOVE "," TO DELIMIT-01 , DELIMIT-02 , DELIMIT-03 DELIMIT-04 , DELIMIT-05 , DELIMIT-06 DELIMIT-07 , DELIMIT-08 , DELIMIT-09 DELIMIT-10 , DELIMIT-11
                FD.DELIMIT_02.SetValue(",");
                FD.DELIMIT_03.SetValue(",");
                FD.DELIMIT_04.SetValue(",");
                FD.DELIMIT_05.SetValue(",");
                FD.DELIMIT_06.SetValue(",");
                FD.DELIMIT_07.SetValue(",");
                FD.DELIMIT_08.SetValue(",");
                FD.DELIMIT_09.SetValue(",");
                FD.DELIMIT_10.SetValue(",");
                FD.DELIMIT_11.SetValue(",");
                //COMMENT:                      DELIMIT-12, DELIMIT-13, DELIMIT-14
                //COMMENT:                      DELIMIT-15, DELIMIT-16, DELIMIT-18
                //COMMENT:                      DELIMIT-19, DELIMIT-20, DELIMIT-21
                //COMMENT:                      DELIMIT-22, DELIMIT-23, DELIMIT-24
                //COMMENT:                      DELIMIT-25, DELIMIT-26, DELIMIT-27
                //COMMENT:                      DELIMIT-28, DELIMIT-29
                FD.OUTPUT_FILE.WriteLine(FD.OUTPUT_RECORD.AsBytes);                                                 //COBOL==> WRITE OUTPUT-RECORD
            }                                                                                                   //COBOL==> ELSE
            else
            {
                LS.STATUS_0012.SetValue("PE");                                                                      //COBOL==> MOVE 'PE' TO STATUS-0012
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_1000_OPEN_FILE") { M_2000_WRITE_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_2000_WRITE_FILE
        /// </summary>
        /// <remarks>
        ///COMMENT: ******************
        /// </remarks>
        private void M_2000_WRITE_FILE(string returnMethod = "")
        {
            //COMMENT: ******************
            WS.WS_NUMERIC_FIELDS.ResetToInitialValue();                                                         //COBOL==> INITIALIZE WS-NUMERIC-FIELDS.
            FD.CO_OFFICE_NAME.SetValue(LS.NAME_0007);                                                           //COBOL==> MOVE NAME-0007 TO CO-OFFICE-NAME
            FD.COUNTY_ABBREVIATION.SetValue(LS.COUNTY_ABBREVIATION_0010);                                       //COBOL==> MOVE COUNTY-ABBREVIATION-0010 TO COUNTY-ABBREVIATION
            FD.COURT_CASE_NUMBER.SetValue(LS.STANDARD_NUMBER_0011);                                             //COBOL==> MOVE STANDARD-NUMBER-0011 TO COURT-CASE-NUMBER
            FD.CASE_NUMBER.SetValue(LS.NUMBER_0003);                                                            //COBOL==> MOVE NUMBER-0003 TO CASE-NUMBER
            FD.REFERRAL_DATE.SetValue(LS.REFERRAL_DATE_0002);                                                   //COBOL==> MOVE REFERRAL-DATE-0002 TO REFERRAL-DATE
            FD.REFERRAL_REASON_1.SetValueWithSpaces();                                                          //COBOL==> MOVE SPACES TO REFERRAL-REASON-1 REFERRAL-REASON-2 REFERRAL-REASON-3 REFERRAL-REASON-4 REFERRAL-REASON-5
            FD.REFERRAL_REASON_2.SetValueWithSpaces();
            FD.REFERRAL_REASON_3.SetValueWithSpaces();
            FD.REFERRAL_REASON_4.SetValueWithSpaces();
            FD.REFERRAL_REASON_5.SetValueWithSpaces();
            WS.WS_CURR_CNT.SetValueWithZeroes();                                                                //COBOL==> MOVE ZEROS TO WS-CURR-CNT
            WS.WS_SKIP_FLAG.SetValue("Y");                                                                      //COBOL==> MOVE 'Y' TO WS-SKIP-FLAG
            WS.WS_LEG_REQ_REASON_CODES.SetValue(LS.REFERRAL_REASON_1_0002);                                     //COBOL==> MOVE REFERRAL-REASON-1-0002 TO WS-LEG-REQ-REASON-CODES
            if (WS.MOD_REASONS.Value)                                                                           //COBOL==> IF MOD-REASONS
            {
                M_2100_MOVE_REASON_CODE(); if (Control.ExitProgram) { return; }                                       //COBOL==> PERFORM 2100-MOVE-REASON-CODE
                WS.WS_CURR_CNT.Add(1);                                                                              //COBOL==> ADD 1 TO WS-CURR-CNT
                WS.WS_SKIP_FLAG.SetValue("N");                                                                      //COBOL==> MOVE 'N' TO WS-SKIP-FLAG
            }                                                                                                   //COBOL==> END-IF
            WS.WS_LEG_REQ_REASON_CODES.SetValue(LS.REFERRAL_REASON_2_0002);                                     //COBOL==> MOVE REFERRAL-REASON-2-0002 TO WS-LEG-REQ-REASON-CODES
            if (WS.MOD_REASONS.Value)                                                                           //COBOL==> IF MOD-REASONS
            {
                M_2100_MOVE_REASON_CODE(); if (Control.ExitProgram) { return; }                                       //COBOL==> PERFORM 2100-MOVE-REASON-CODE
                WS.WS_CURR_CNT.Add(1);                                                                              //COBOL==> ADD 1 TO WS-CURR-CNT
                WS.WS_SKIP_FLAG.SetValue("N");                                                                      //COBOL==> MOVE 'N' TO WS-SKIP-FLAG
            }                                                                                                   //COBOL==> END-IF
            WS.WS_LEG_REQ_REASON_CODES.SetValue(LS.REFERRAL_REASON_3_0002);                                     //COBOL==> MOVE REFERRAL-REASON-3-0002 TO WS-LEG-REQ-REASON-CODES
            if (WS.MOD_REASONS.Value)                                                                           //COBOL==> IF MOD-REASONS
            {
                M_2100_MOVE_REASON_CODE(); if (Control.ExitProgram) { return; }                                       //COBOL==> PERFORM 2100-MOVE-REASON-CODE
                WS.WS_CURR_CNT.Add(1);                                                                              //COBOL==> ADD 1 TO WS-CURR-CNT
                WS.WS_SKIP_FLAG.SetValue("N");                                                                      //COBOL==> MOVE 'N' TO WS-SKIP-FLAG
            }                                                                                                   //COBOL==> END-IF
            WS.WS_LEG_REQ_REASON_CODES.SetValue(LS.REFERRAL_REASON_4_0002);                                     //COBOL==> MOVE REFERRAL-REASON-4-0002 TO WS-LEG-REQ-REASON-CODES
            if (WS.MOD_REASONS.Value)                                                                           //COBOL==> IF MOD-REASONS
            {
                M_2100_MOVE_REASON_CODE(); if (Control.ExitProgram) { return; }                                       //COBOL==> PERFORM 2100-MOVE-REASON-CODE
                WS.WS_CURR_CNT.Add(1);                                                                              //COBOL==> ADD 1 TO WS-CURR-CNT
                WS.WS_SKIP_FLAG.SetValue("N");                                                                      //COBOL==> MOVE 'N' TO WS-SKIP-FLAG
            }                                                                                                   //COBOL==> END-IF
            WS.WS_LEG_REQ_REASON_CODES.SetValue(LS.REFERRAL_REASON_5_0002);                                     //COBOL==> MOVE REFERRAL-REASON-5-0002 TO WS-LEG-REQ-REASON-CODES
            if (WS.MOD_REASONS.Value)                                                                           //COBOL==> IF MOD-REASONS
            {
                M_2100_MOVE_REASON_CODE(); if (Control.ExitProgram) { return; }                                       //COBOL==> PERFORM 2100-MOVE-REASON-CODE
                WS.WS_CURR_CNT.Add(1);                                                                              //COBOL==> ADD 1 TO WS-CURR-CNT
                WS.WS_SKIP_FLAG.SetValue("N");                                                                      //COBOL==> MOVE 'N' TO WS-SKIP-FLAG
            }                                                                                                   //COBOL==> END-IF
                                                                                                                //COMMENT:      MOVE STATUS-0002
                                                                                                                //COMMENT:        TO REFERRAL-STATUS
            if (LS.STATUS_0002.IsEqualTo("C"))                                                                  //COBOL==> IF STATUS-0002 = 'C'
            {
                FD.REFERRAL_STATUS.SetValue("CLOSED");                                                              //COBOL==> MOVE 'CLOSED' TO REFERRAL-STATUS
            }                                                                                                   //COBOL==> ELSE
            else
            {
                if (LS.STATUS_0002.IsEqualTo("O"))                                                                  //COBOL==> IF STATUS-0002 = 'O'
                {
                    FD.REFERRAL_STATUS.SetValue("OPEN");                                                                //COBOL==> MOVE 'OPEN' TO REFERRAL-STATUS
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    if (LS.STATUS_0002.IsEqualTo("S"))                                                                  //COBOL==> IF STATUS-0002 = 'S'
                    {
                        FD.REFERRAL_STATUS.SetValue("SENT");                                                                //COBOL==> MOVE 'SENT' TO REFERRAL-STATUS
                    }                                                                                                   //COBOL==> ELSE
                    else
                    {
                        if (LS.STATUS_0002.IsEqualTo("W"))                                                                  //COBOL==> IF STATUS-0002 = 'W'
                        {
                            FD.REFERRAL_STATUS.SetValue("WITHDRAWN");                                                           //COBOL==> MOVE 'WITHDRAWN' TO REFERRAL-STATUS
                        }                                                                                                   //COBOL==> ELSE
                        else
                        {
                            FD.REFERRAL_STATUS.SetValue("REJECT");                                                              //COBOL==> MOVE 'REJECT' TO REFERRAL-STATUS
                        }                                                                                                   //COBOL==> END-IF.
                    }
                }
            }
            WS.WS_STATUS_DATE_0002.SetValue(LS.STATUS_DATE_0002);                                               //COBOL==> MOVE STATUS-DATE-0002 TO WS-STATUS-DATE-0002
            FD.STATUS_DATE.SetValue(WS.WS_STATUS_DATE_0002);                                                    //COBOL==> MOVE WS-STATUS-DATE-0002 TO STATUS-DATE
            FD.DELIMIT_01.SetValue(",");                                                                        //COBOL==> MOVE "," TO DELIMIT-01 , DELIMIT-02 , DELIMIT-03 DELIMIT-04 , DELIMIT-05 , DELIMIT-06 DELIMIT-07 , DELIMIT-08 , DELIMIT-09 DELIMIT-10 , DELIMIT-11
            FD.DELIMIT_02.SetValue(",");
            FD.DELIMIT_03.SetValue(",");
            FD.DELIMIT_04.SetValue(",");
            FD.DELIMIT_05.SetValue(",");
            FD.DELIMIT_06.SetValue(",");
            FD.DELIMIT_07.SetValue(",");
            FD.DELIMIT_08.SetValue(",");
            FD.DELIMIT_09.SetValue(",");
            FD.DELIMIT_10.SetValue(",");
            FD.DELIMIT_11.SetValue(",");
            DisplayToLog("OUTPUT-RECORD:");                                                                     //COBOL==> DISPLAY 'OUTPUT-RECORD:'
            DisplayToLog(FD.OUTPUT_RECORD.AsString());                                                          //COBOL==> DISPLAY OUTPUT-RECORD
            if (WS.WS_SKIP_FLAG.IsEqualTo("N"))                                                                 //COBOL==> IF WS-SKIP-FLAG = 'N'
            {
                FD.OUTPUT_FILE.WriteLine(FD.OUTPUT_RECORD.AsBytes);                                                 //COBOL==> WRITE OUTPUT-RECORD
                if (WS.FILE_STATUS.IsEqualTo("00"))                                                                 //COBOL==> IF FILE-STATUS = '00'
                {
                    LS.STATUS_0012.SetValue("OK");                                                                      //COBOL==> MOVE 'OK' TO STATUS-0012
                }                                                                                                   //COBOL==> ELSE
                else
                {
                    LS.STATUS_0012.SetValue("BW");                                                                      //COBOL==> MOVE 'BW' TO STATUS-0012
                }                                                                                                   //COBOL==> END-IF
            }                                                                                                   //COBOL==> ELSE
            else
            {
                DisplayToLog("CASE#:" + FD.CASE_NUMBER.AsString() + " SKIPPED FOR MOD REASON");                     //COBOL==> DISPLAY 'CASE#:' CASE-NUMBER ' SKIPPED FOR MOD REASON'
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_2000_WRITE_FILE") { M_2100_MOVE_REASON_CODE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_2100_MOVE_REASON_CODE
        /// </summary>
        /// <remarks>
        ///COMMENT: **********************
        /// </remarks>
        private void M_2100_MOVE_REASON_CODE(string returnMethod = "")
        {
            //COMMENT: **********************
            if (WS.WS_CURR_CNT.IsEqualTo(0))                                                                    //COBOL==> IF WS-CURR-CNT = ZEROS
            {
                FD.REFERRAL_REASON_1.SetValue(WS.WS_LEG_REQ_REASON_CODES);                                          //COBOL==> MOVE WS-LEG-REQ-REASON-CODES TO REFERRAL-REASON-1
            }                                                                                                   //COBOL==> END-IF
            if (WS.WS_CURR_CNT.IsEqualTo(1))                                                                    //COBOL==> IF WS-CURR-CNT = 1
            {
                FD.REFERRAL_REASON_2.SetValue(WS.WS_LEG_REQ_REASON_CODES);                                          //COBOL==> MOVE WS-LEG-REQ-REASON-CODES TO REFERRAL-REASON-2
            }                                                                                                   //COBOL==> END-IF
            if (WS.WS_CURR_CNT.IsEqualTo(2))                                                                    //COBOL==> IF WS-CURR-CNT = 2
            {
                FD.REFERRAL_REASON_3.SetValue(WS.WS_LEG_REQ_REASON_CODES);                                          //COBOL==> MOVE WS-LEG-REQ-REASON-CODES TO REFERRAL-REASON-3
            }                                                                                                   //COBOL==> END-IF
            if (WS.WS_CURR_CNT.IsEqualTo(3))                                                                    //COBOL==> IF WS-CURR-CNT = 3
            {
                FD.REFERRAL_REASON_4.SetValue(WS.WS_LEG_REQ_REASON_CODES);                                          //COBOL==> MOVE WS-LEG-REQ-REASON-CODES TO REFERRAL-REASON-4
            }                                                                                                   //COBOL==> END-IF
            if (WS.WS_CURR_CNT.IsEqualTo(4))                                                                    //COBOL==> IF WS-CURR-CNT = 4
            {
                FD.REFERRAL_REASON_5.SetValue(WS.WS_LEG_REQ_REASON_CODES);                                          //COBOL==> MOVE WS-LEG-REQ-REASON-CODES TO REFERRAL-REASON-5
            }                                                                                                   //COBOL==> END-IF.
            if (returnMethod != "" && returnMethod != "M_2100_MOVE_REASON_CODE") { M_3000_CLOSE_FILE(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_3000_CLOSE_FILE
        /// </summary>
        /// <remarks>
        ///COMMENT: ******************
        /// </remarks>
        private void M_3000_CLOSE_FILE(string returnMethod = "")
        {
            //COMMENT: ******************
            FD.OUTPUT_FILE.CloseFile();                                                                         //COBOL==> CLOSE OUTPUT-FILE.
            if (returnMethod != "" && returnMethod != "M_3000_CLOSE_FILE") { M_9999_FINISHED(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_9999_FINISHED
        /// </summary>
        /// <remarks>
        ///COMMENT: ******************
        /// </remarks>
        private void M_9999_FINISHED(string returnMethod = "")
        {
            //COMMENT: ******************
            if (returnMethod == "M_9999_FINISHED") { return; }                                                  //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_9999_FINISHED") { M_PARA_0285214037_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0285214037_EXIT
        /// </summary>
        private void M_PARA_0285214037_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0285214037_EXIT") { return; }                                           //COBOL==> EXIT.
            if (returnMethod != "" && returnMethod != "M_PARA_0285214037_EXIT") { M_PARA_0285214037_INIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0285214037_INIT
        /// </summary>
        private void M_PARA_0285214037_INIT(string returnMethod = "")
        {
            LS.EXPORT_0012EV.ResetToInitialValue();                                                             //COBOL==> INITIALIZE EXPORT-0012EV.
            if (returnMethod != "" && returnMethod != "M_PARA_0285214037_INIT") { M_PARA_0285214037_INIT_EXIT(returnMethod); }  //Check for pass through to next method
        }
        /// <summary>
        /// Method M_PARA_0285214037_INIT_EXIT
        /// </summary>
        private void M_PARA_0285214037_INIT_EXIT(string returnMethod = "")
        {
            if (returnMethod == "M_PARA_0285214037_INIT_EXIT") { return; }                                      //COBOL==> EXIT.
        }
        #endregion
    }
    #endregion
}
